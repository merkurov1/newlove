{"id":"e4b593db499fb3eead496def8f909b9b","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/NeutralHeart.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\n\ncontract NeutralHeart is ERC721, Ownable {\n\n    uint256 public currentId;\n    uint256 public maxPublicSupply;\n    uint256 public publicMinted;\n    uint256 public priceWei;\n\n    // Signer address used by backend to sign subscriber vouchers\n    address public trustedSigner;\n\n    // Track claims on-chain as a safety net\n    mapping(address => bool) public hasClaimedOnChain;\n\n    // token variant: 0 = neutral, 1 = angel, 2 = devil\n    mapping(uint256 => uint8) public tokenVariant;\n\n    string private _baseTokenURI;\n\n    event PublicMint(address indexed to, uint256 indexed tokenId);\n    event SubscriberClaim(address indexed to, uint256 indexed tokenId);\n    event Transform(address indexed owner, uint256 indexed burnedId, uint256 indexed newId, uint8 variant);\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint256 maxPublicSupply_,\n        uint256 priceWei_\n    ) ERC721(name_, symbol_) Ownable(msg.sender) {\n        maxPublicSupply = maxPublicSupply_;\n        priceWei = priceWei_;\n        currentId = 1; // start token ids at 1\n    }\n\n    // OWNER\n    function setTrustedSigner(address s) external onlyOwner {\n        trustedSigner = s;\n    }\n\n    function setBaseURI(string memory b) external onlyOwner {\n        _baseTokenURI = b;\n    }\n\n    function _baseURI() internal view override returns (string memory) {\n        return _baseTokenURI;\n    }\n\n    // Override tokenURI to return one of three JSON filenames (neutral.json / angel.json / devil.json)\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\n        // Ensure token exists using OpenZeppelin's internal check\n        _requireOwned(tokenId);\n        string memory base = _baseURI();\n        uint8 v = tokenVariant[tokenId];\n        string memory namePart = \"neutral.json\";\n        if (v == 1) {\n            namePart = \"angel.json\";\n        } else if (v == 2) {\n            namePart = \"devil.json\";\n        }\n        return string(abi.encodePacked(base, namePart));\n    }\n\n    // PUBLIC MINT (paid)\n    function publicMint(uint256 qty) external payable {\n        require(qty > 0 && qty <= 10, \"invalid qty\");\n        require(publicMinted + qty <= maxPublicSupply, \"public sold out\");\n        require(msg.value == priceWei * qty, \"incorrect payment\");\n\n        for (uint256 i = 0; i < qty; i++) {\n            uint256 tokenId = currentId++;\n            _safeMint(msg.sender, tokenId);\n            // default variant is neutral\n            tokenVariant[tokenId] = 0;\n            emit PublicMint(msg.sender, tokenId);\n        }\n        publicMinted += qty;\n    }\n\n    // Subscriber free claim using backend signature\n    // signature signs the abi-encoded packed address and contract chain id\n    function claimForSubscriber(bytes calldata signature) external {\n        require(trustedSigner != address(0), \"trusted signer not set\");\n        require(!hasClaimedOnChain[msg.sender], \"already claimed on-chain\");\n\n    bytes32 digest = keccak256(abi.encodePacked(address(this), block.chainid, msg.sender));\n    // Use MessageHashUtils to compute the prefixed digest, then recover\n    bytes32 prefixed = MessageHashUtils.toEthSignedMessageHash(digest);\n    address signer = ECDSA.recover(prefixed, signature);\n        require(signer == trustedSigner, \"invalid signature\");\n\n        hasClaimedOnChain[msg.sender] = true;\n        uint256 tokenId = currentId++;\n        _safeMint(msg.sender, tokenId);\n        // default to neutral\n        tokenVariant[tokenId] = 0;\n        emit SubscriberClaim(msg.sender, tokenId);\n    }\n\n    // Transform a neutral token into a variant (1 = angel, 2 = devil)\n    // Burns the neutral token and mints a new token with the variant set.\n    function transform(uint256 tokenId, uint8 variant) external {\n        require(variant == 1 || variant == 2, \"invalid variant\");\n        require(ownerOf(tokenId) == msg.sender, \"not owner\");\n        require(tokenVariant[tokenId] == 0, \"only neutral tokens can be transformed\");\n\n        // burn the neutral token\n        _burn(tokenId);\n\n        // mint new token and set variant\n        uint256 newId = currentId++;\n        _safeMint(msg.sender, newId);\n        tokenVariant[newId] = variant;\n\n        emit Transform(msg.sender, tokenId, newId, variant);\n    }\n\n    // Withdraw funds collected from public sale\n    function withdraw(address payable to) external onlyOwner {\n        require(to != address(0), \"invalid address\");\n        uint256 bal = address(this).balance;\n        require(bal > 0, \"no funds\");\n        to.transfer(bal);\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1511],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1512,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1511,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1511],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1511],"ERC165":[3423],"ERC721":[1241],"ERC721Utils":[1481],"IERC165":[3435],"IERC721":[1358],"IERC721Errors":[237],"IERC721Metadata":[1404],"Strings":[2965]},"id":1242,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1359,"src":"133:38:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1405,"src":"172:65:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"180:15:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1482,"src":"238:52:2","symbolAliases":[{"foreign":{"id":291,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"246:11:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1512,"src":"291:48:2","symbolAliases":[{"foreign":{"id":293,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"299:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":296,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":2966,"src":"340:48:2","symbolAliases":[{"foreign":{"id":295,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"348:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":3424,"src":"389:69:2","symbolAliases":[{"foreign":{"id":297,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"397:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":298,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"406:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":285,"src":"459:66:2","symbolAliases":[{"foreign":{"id":300,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"467:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":303,"name":"Context","nameLocations":["803:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1511,"src":"803:7:2"},"id":304,"nodeType":"InheritanceSpecifier","src":"803:7:2"},{"baseName":{"id":305,"name":"ERC165","nameLocations":["812:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":3423,"src":"812:6:2"},"id":306,"nodeType":"InheritanceSpecifier","src":"812:6:2"},{"baseName":{"id":307,"name":"IERC721","nameLocations":["820:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"820:7:2"},"id":308,"nodeType":"InheritanceSpecifier","src":"820:7:2"},{"baseName":{"id":309,"name":"IERC721Metadata","nameLocations":["829:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":1404,"src":"829:15:2"},"id":310,"nodeType":"InheritanceSpecifier","src":"829:15:2"},{"baseName":{"id":311,"name":"IERC721Errors","nameLocations":["846:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":237,"src":"846:13:2"},"id":312,"nodeType":"InheritanceSpecifier","src":"846:13:2"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"527:247:2","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1241,"linearizedBaseContracts":[1241,237,1404,1358,3423,3435,1511],"name":"ERC721","nameLocation":"793:6:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":315,"libraryName":{"id":313,"name":"Strings","nameLocations":["872:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2965,"src":"872:7:2"},"nodeType":"UsingForDirective","src":"866:26:2","typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"931:5:2","nodeType":"VariableDeclaration","scope":1241,"src":"916:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:2","nodeType":"VariableDeclaration","scope":1241,"src":"963:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":323,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:2","nodeType":"VariableDeclaration","scope":1241,"src":"992:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":322,"keyName":"tokenId","keyNameLocation":"1008:7:2","keyType":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":327,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:2","nodeType":"VariableDeclaration","scope":1241,"src":"1050:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":326,"keyName":"owner","keyNameLocation":"1066:5:2","keyType":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":331,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:2","nodeType":"VariableDeclaration","scope":1241,"src":"1108:59:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":330,"keyName":"tokenId","keyNameLocation":"1124:7:2","keyType":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":337,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:2","nodeType":"VariableDeclaration","scope":1241,"src":"1174:86:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":336,"keyName":"owner","keyNameLocation":"1190:5:2","keyType":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":335,"keyName":"operator","keyNameLocation":"1215:8:2","keyType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":334,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":353,"nodeType":"Block","src":"1436:57:2","statements":[{"expression":{"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":345,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1446:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":346,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"1454:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":348,"nodeType":"ExpressionStatement","src":"1446:13:2"},{"expression":{"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":349,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1469:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":350,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1479:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":352,"nodeType":"ExpressionStatement","src":"1469:17:2"}]},"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"1267:108:2","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":354,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"name_","nameLocation":"1406:5:2","nodeType":"VariableDeclaration","scope":354,"src":"1392:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:2","nodeType":"VariableDeclaration","scope":354,"src":"1413:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:2"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"1436:0:2"},"scope":1241,"src":"1380:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3422,3434],"body":{"id":384,"nodeType":"Block","src":"1635:192:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":365,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1664:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":367,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"1684:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1358_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1358_$","typeString":"type(contract IERC721)"}],"id":366,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1679:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1358","typeString":"type(contract IERC721)"}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1693:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1679:25:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1664:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":371,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1720:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":373,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"1740:15:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1404_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1404_$","typeString":"type(contract IERC721Metadata)"}],"id":372,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1735:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1404","typeString":"type(contract IERC721Metadata)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1757:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1735:33:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1720:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:104:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":380,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1808:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":378,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"1784:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1241_$","typeString":"type(contract super ERC721)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3422,"src":"1784:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:156:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":364,"id":383,"nodeType":"Return","src":"1645:175:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"1499:23:2","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1536:17:2","nodeType":"FunctionDefinition","overrides":{"id":361,"nodeType":"OverrideSpecifier","overrides":[{"id":359,"name":"ERC165","nameLocations":["1603:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":3423,"src":"1603:6:2"},{"id":360,"name":"IERC165","nameLocations":["1611:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":3435,"src":"1611:7:2"}],"src":"1594:25:2"},"parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"interfaceId","nameLocation":"1561:11:2","nodeType":"VariableDeclaration","scope":385,"src":"1554:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":356,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:20:2"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"1629:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":362,"name":"bool","nodeType":"ElementaryTypeName","src":"1629:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1628:6:2"},"scope":1241,"src":"1527:300:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1283],"body":{"id":412,"nodeType":"Block","src":"1933:136:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"1947:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1964:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:2","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1947:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":407,"nodeType":"IfStatement","src":"1943:87:2","trueBody":{"id":406,"nodeType":"Block","src":"1968:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:2","typeDescriptions":{}}},"id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":399,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"1989:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"RevertStatement","src":"1982:37:2"}]}},{"expression":{"baseExpression":{"id":408,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2046:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":410,"indexExpression":{"id":409,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2056:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2046:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":392,"id":411,"nodeType":"Return","src":"2039:23:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"1833:23:2","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":413,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1870:9:2","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"owner","nameLocation":"1888:5:2","nodeType":"VariableDeclaration","scope":413,"src":"1880:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:15:2"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"1924:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:9:2"},"scope":1241,"src":"1861:208:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1291],"body":{"id":425,"nodeType":"Block","src":"2175:46:2","statements":[{"expression":{"arguments":[{"id":422,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"2206:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":421,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"2192:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":420,"id":424,"nodeType":"Return","src":"2185:29:2"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"2075:23:2","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2112:7:2","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"tokenId","nameLocation":"2128:7:2","nodeType":"VariableDeclaration","scope":426,"src":"2120:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:17:2"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"2166:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2165:9:2"},"scope":1241,"src":"2103:118:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1389],"body":{"id":434,"nodeType":"Block","src":"2323:29:2","statements":[{"expression":{"id":432,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2340:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":431,"id":433,"nodeType":"Return","src":"2333:12:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"2227:31:2","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":435,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2272:4:2","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"2276:2:2"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"2308:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":429,"name":"string","nodeType":"ElementaryTypeName","src":"2308:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2307:15:2"},"scope":1241,"src":"2263:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1395],"body":{"id":443,"nodeType":"Block","src":"2456:31:2","statements":[{"expression":{"id":441,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2473:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":440,"id":442,"nodeType":"Return","src":"2466:14:2"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"2358:31:2","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":444,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2403:6:2","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"2409:2:2"},"returnParameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"2441:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":438,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2440:15:2"},"scope":1241,"src":"2394:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1403],"body":{"id":479,"nodeType":"Block","src":"2608:176:2","statements":[{"expression":{"arguments":[{"id":453,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2632:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":452,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"2618:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":455,"nodeType":"ExpressionStatement","src":"2618:22:2"},{"assignments":[457],"declarations":[{"constant":false,"id":457,"mutability":"mutable","name":"baseURI","nameLocation":"2665:7:2","nodeType":"VariableDeclaration","scope":479,"src":"2651:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":456,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":460,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":458,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2675:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2651:34:2"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":463,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2708:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":461,"name":"bytes","nodeType":"ElementaryTypeName","src":"2702:5:2","typeDescriptions":{}}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:2","memberName":"length","nodeType":"MemberAccess","src":"2702:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2702:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2702:75:2","trueExpression":{"arguments":[{"id":471,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2744:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":472,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2753:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1677,"src":"2753:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":468,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:2","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:2","memberName":"concat","nodeType":"MemberAccess","src":"2730:13:2","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":451,"id":478,"nodeType":"Return","src":"2695:82:2"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"2493:31:2","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":480,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2538:8:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:2","nodeType":"VariableDeclaration","scope":480,"src":"2547:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:17:2"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":480,"src":"2593:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":449,"name":"string","nodeType":"ElementaryTypeName","src":"2593:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2592:15:2"},"scope":1241,"src":"2529:255:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":488,"nodeType":"Block","src":"3092:26:2","statements":[{"expression":{"hexValue":"","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":485,"id":487,"nodeType":"Return","src":"3102:9:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2790:231:2","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":489,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3035:8:2","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"3043:2:2"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":489,"src":"3077:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":483,"name":"string","nodeType":"ElementaryTypeName","src":"3077:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3076:15:2"},"scope":1241,"src":"3026:92:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1331],"body":{"id":504,"nodeType":"Block","src":"3213:52:2","statements":[{"expression":{"arguments":[{"id":498,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"3232:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":499,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"3236:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":500,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"3245:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":497,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1108,1174],"referencedDeclaration":1108,"src":"3223:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"3223:35:2"}]},"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"3124:23:2","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":505,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3161:7:2","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"to","nameLocation":"3177:2:2","nodeType":"VariableDeclaration","scope":505,"src":"3169:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"3169:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"tokenId","nameLocation":"3189:7:2","nodeType":"VariableDeclaration","scope":505,"src":"3181:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:29:2"},"returnParameters":{"id":496,"nodeType":"ParameterList","parameters":[],"src":"3213:0:2"},"scope":1241,"src":"3152:113:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1347],"body":{"id":521,"nodeType":"Block","src":"3375:78:2","statements":[{"expression":{"arguments":[{"id":514,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3399:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":513,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3385:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":516,"nodeType":"ExpressionStatement","src":"3385:22:2"},{"expression":{"arguments":[{"id":518,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3438:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":517,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"3425:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":512,"id":520,"nodeType":"Return","src":"3418:28:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"3271:23:2","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":522,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3308:11:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"tokenId","nameLocation":"3328:7:2","nodeType":"VariableDeclaration","scope":522,"src":"3320:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:17:2"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":522,"src":"3366:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3365:9:2"},"scope":1241,"src":"3299:154:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1339],"body":{"id":537,"nodeType":"Block","src":"3562:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":531,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"3591:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3605:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3615:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":530,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"3572:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"ExpressionStatement","src":"3572:52:2"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"3459:23:2","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":538,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3496:17:2","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"operator","nameLocation":"3522:8:2","nodeType":"VariableDeclaration","scope":538,"src":"3514:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"approved","nameLocation":"3537:8:2","nodeType":"VariableDeclaration","scope":538,"src":"3532:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":526,"name":"bool","nodeType":"ElementaryTypeName","src":"3532:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3513:33:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"3562:0:2"},"scope":1241,"src":"3487:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1357],"body":{"id":554,"nodeType":"Block","src":"3759:59:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":548,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"3776:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":550,"indexExpression":{"id":549,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"3795:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":552,"indexExpression":{"id":551,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"3802:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":547,"id":553,"nodeType":"Return","src":"3769:42:2"}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"3637:23:2","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":555,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3674:16:2","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"owner","nameLocation":"3699:5:2","nodeType":"VariableDeclaration","scope":555,"src":"3691:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"operator","nameLocation":"3714:8:2","nodeType":"VariableDeclaration","scope":555,"src":"3706:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"3706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3690:33:2"},"returnParameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"3753:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":545,"name":"bool","nodeType":"ElementaryTypeName","src":"3753:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3752:6:2"},"scope":1241,"src":"3665:153:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1323],"body":{"id":600,"nodeType":"Block","src":"3932:498:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"3946:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3952:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":579,"nodeType":"IfStatement","src":"3942:87:2","trueBody":{"id":578,"nodeType":"Block","src":"3964:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:2","typeDescriptions":{}}},"id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":571,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3985:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"RevertStatement","src":"3978:40:2"}]}},{"assignments":[581],"declarations":[{"constant":false,"id":581,"mutability":"mutable","name":"previousOwner","nameLocation":"4255:13:2","nodeType":"VariableDeclaration","scope":600,"src":"4247:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":588,"initialValue":{"arguments":[{"id":583,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4279:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4283:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":585,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"4292:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":582,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"4271:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4247:58:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":589,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4319:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":590,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4336:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":599,"nodeType":"IfStatement","src":"4315:109:2","trueBody":{"id":598,"nodeType":"Block","src":"4342:82:2","statements":[{"errorCall":{"arguments":[{"id":593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4384:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":594,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4390:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":595,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4399:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"4363:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":597,"nodeType":"RevertStatement","src":"4356:57:2"}]}}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"3824:23:2","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":601,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3861:12:2","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"from","nameLocation":"3882:4:2","nodeType":"VariableDeclaration","scope":601,"src":"3874:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"3874:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"to","nameLocation":"3896:2:2","nodeType":"VariableDeclaration","scope":601,"src":"3888:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"tokenId","nameLocation":"3908:7:2","nodeType":"VariableDeclaration","scope":601,"src":"3900:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:43:2"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"3932:0:2"},"scope":1241,"src":"3852:578:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1313],"body":{"id":618,"nodeType":"Block","src":"4540:56:2","statements":[{"expression":{"arguments":[{"id":612,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4567:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":613,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"4573:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"4577:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":611,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[619,649],"referencedDeclaration":649,"src":"4550:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"4550:39:2"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"4436:23:2","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":619,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4473:16:2","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"from","nameLocation":"4498:4:2","nodeType":"VariableDeclaration","scope":619,"src":"4490:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"to","nameLocation":"4512:2:2","nodeType":"VariableDeclaration","scope":619,"src":"4504:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"tokenId","nameLocation":"4524:7:2","nodeType":"VariableDeclaration","scope":619,"src":"4516:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:43:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"4540:0:2"},"scope":1241,"src":"4464:132:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1303],"body":{"id":648,"nodeType":"Block","src":"4733:130:2","statements":[{"expression":{"arguments":[{"id":632,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"4756:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"4762:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"4766:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":631,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"4743:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":636,"nodeType":"ExpressionStatement","src":"4743:31:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":640,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"4818:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":642,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"4832:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":643,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"4838:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":644,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"4842:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":645,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"4851:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":637,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"4784:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1481_$","typeString":"type(library ERC721Utils)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4796:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"4784:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":647,"nodeType":"ExpressionStatement","src":"4784:72:2"}]},"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"4602:23:2","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":649,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4639:16:2","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"from","nameLocation":"4664:4:2","nodeType":"VariableDeclaration","scope":649,"src":"4656:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"4678:2:2","nodeType":"VariableDeclaration","scope":649,"src":"4670:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"tokenId","nameLocation":"4690:7:2","nodeType":"VariableDeclaration","scope":649,"src":"4682:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"data","nameLocation":"4712:4:2","nodeType":"VariableDeclaration","scope":649,"src":"4699:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":627,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4655:62:2"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"4733:0:2"},"scope":1241,"src":"4630:233:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":661,"nodeType":"Block","src":"5453:40:2","statements":[{"expression":{"baseExpression":{"id":657,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"5470:7:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":659,"indexExpression":{"id":658,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"5478:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":656,"id":660,"nodeType":"Return","src":"5463:23:2"}]},"documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"4869:504:2","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":662,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5387:8:2","nodeType":"FunctionDefinition","parameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:2","nodeType":"VariableDeclaration","scope":662,"src":"5396:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:2"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":662,"src":"5444:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:9:2"},"scope":1241,"src":"5378:115:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"5688:48:2","statements":[{"expression":{"baseExpression":{"id":670,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"5705:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":672,"indexExpression":{"id":671,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"5721:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:24:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":669,"id":673,"nodeType":"Return","src":"5698:31:2"}]},"documentation":{"id":663,"nodeType":"StructuredDocumentation","src":"5499:105:2","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5618:12:2","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"mutability":"mutable","name":"tokenId","nameLocation":"5639:7:2","nodeType":"VariableDeclaration","scope":675,"src":"5631:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5630:17:2"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"5679:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:9:2"},"scope":1241,"src":"5609:127:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":710,"nodeType":"Block","src":"6156:163:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":687,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6185:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6196:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:2","typeDescriptions":{}}},"id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":693,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6223:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":694,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6232:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6223:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":697,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6260:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":698,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6267:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":696,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"6243:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":702,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6292:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":701,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"6279:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":704,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6304:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:32:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:88:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6222:90:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:127:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":686,"id":709,"nodeType":"Return","src":"6166:146:2"}]},"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"5742:300:2","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":711,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6056:13:2","nodeType":"FunctionDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"owner","nameLocation":"6078:5:2","nodeType":"VariableDeclaration","scope":711,"src":"6070:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"spender","nameLocation":"6093:7:2","nodeType":"VariableDeclaration","scope":711,"src":"6085:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"tokenId","nameLocation":"6110:7:2","nodeType":"VariableDeclaration","scope":711,"src":"6102:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6069:49:2"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":711,"src":"6150:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":684,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:2"},"scope":1241,"src":"6047:272:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"6848:271:2","statements":[{"condition":{"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6862:39:2","subExpression":{"arguments":[{"id":722,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"6877:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":723,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"6884:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"6893:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":721,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"6863:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":746,"nodeType":"IfStatement","src":"6858:255:2","trueBody":{"id":745,"nodeType":"Block","src":"6903:210:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"6921:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6938:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6930:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:2","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6921:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":743,"nodeType":"Block","src":"7019:84:2","statements":[{"errorCall":{"arguments":[{"id":739,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"7071:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":740,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"7080:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":738,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7044:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":742,"nodeType":"RevertStatement","src":"7037:51:2"}]},"id":744,"nodeType":"IfStatement","src":"6917:186:2","trueBody":{"id":737,"nodeType":"Block","src":"6942:71:2","statements":[{"errorCall":{"arguments":[{"id":734,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"6990:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":733,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"6967:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":736,"nodeType":"RevertStatement","src":"6960:38:2"}]}}]}}]},"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"6325:421:2","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"6760:16:2","nodeType":"FunctionDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"owner","nameLocation":"6785:5:2","nodeType":"VariableDeclaration","scope":748,"src":"6777:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"spender","nameLocation":"6800:7:2","nodeType":"VariableDeclaration","scope":748,"src":"6792:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"6792:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"tokenId","nameLocation":"6817:7:2","nodeType":"VariableDeclaration","scope":748,"src":"6809:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6776:49:2"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"6848:0:2"},"scope":1241,"src":"6751:368:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":763,"nodeType":"Block","src":"7836:78:2","statements":[{"id":762,"nodeType":"UncheckedBlock","src":"7846:62:2","statements":[{"expression":{"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":756,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7870:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":758,"indexExpression":{"id":757,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"7880:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7870:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7892:5:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7870:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":761,"nodeType":"ExpressionStatement","src":"7870:27:2"}]}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"7125:631:2","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":764,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7770:16:2","nodeType":"FunctionDefinition","parameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"account","nameLocation":"7795:7:2","nodeType":"VariableDeclaration","scope":764,"src":"7787:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"7787:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"value","nameLocation":"7812:5:2","nodeType":"VariableDeclaration","scope":764,"src":"7804:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":752,"name":"uint128","nodeType":"ElementaryTypeName","src":"7804:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7786:32:2"},"returnParameters":{"id":755,"nodeType":"ParameterList","parameters":[],"src":"7836:0:2"},"scope":1241,"src":"7761:153:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":853,"nodeType":"Block","src":"8602:700:2","statements":[{"assignments":[777],"declarations":[{"constant":false,"id":777,"mutability":"mutable","name":"from","nameLocation":"8620:4:2","nodeType":"VariableDeclaration","scope":853,"src":"8612:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":781,"initialValue":{"arguments":[{"id":779,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"8636:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":778,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"8627:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8627:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8612:32:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":782,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"8704:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8720:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:2","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8712:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8704:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":795,"nodeType":"IfStatement","src":"8700:86:2","trueBody":{"id":794,"nodeType":"Block","src":"8724:62:2","statements":[{"expression":{"arguments":[{"id":789,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"8755:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":790,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"8761:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":791,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"8767:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":788,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"8738:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"8738:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":796,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"8830:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8846:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8838:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:2","typeDescriptions":{}}},"id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8830:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":823,"nodeType":"IfStatement","src":"8826:256:2","trueBody":{"id":822,"nodeType":"Block","src":"8850:232:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8955:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:2","typeDescriptions":{}}},"id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"8967:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8984:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:2","typeDescriptions":{}}},"id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":802,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1108,1174],"referencedDeclaration":1174,"src":"8946:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"ExpressionStatement","src":"8946:48:2"},{"id":821,"nodeType":"UncheckedBlock","src":"9009:63:2","statements":[{"expression":{"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":815,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9037:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":817,"indexExpression":{"id":816,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9047:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9037:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":820,"nodeType":"ExpressionStatement","src":"9037:20:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":824,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9096:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:2","typeDescriptions":{}}},"id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9102:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9096:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":838,"nodeType":"IfStatement","src":"9092:107:2","trueBody":{"id":837,"nodeType":"Block","src":"9114:85:2","statements":[{"id":836,"nodeType":"UncheckedBlock","src":"9128:61:2","statements":[{"expression":{"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":830,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9156:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":832,"indexExpression":{"id":831,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9166:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9156:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9156:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":835,"nodeType":"ExpressionStatement","src":"9156:18:2"}]}]}},{"expression":{"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":839,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"9209:7:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":841,"indexExpression":{"id":840,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9217:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9209:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":842,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9228:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9209:21:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":844,"nodeType":"ExpressionStatement","src":"9209:21:2"},{"eventCall":{"arguments":[{"id":846,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9255:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":847,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9261:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":848,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9265:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":845,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9246:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":850,"nodeType":"EmitStatement","src":"9241:32:2"},{"expression":{"id":851,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9291:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":775,"id":852,"nodeType":"Return","src":"9284:11:2"}]},"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"7920:582:2","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":854,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8516:7:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"to","nameLocation":"8532:2:2","nodeType":"VariableDeclaration","scope":854,"src":"8524:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"8524:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"tokenId","nameLocation":"8544:7:2","nodeType":"VariableDeclaration","scope":854,"src":"8536:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"8536:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"auth","nameLocation":"8561:4:2","nodeType":"VariableDeclaration","scope":854,"src":"8553:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"8553:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8523:43:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"8593:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:2"},"scope":1241,"src":"8507:795:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":903,"nodeType":"Block","src":"9677:274:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":862,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"9691:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9705:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9697:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"9697:7:2","typeDescriptions":{}}},"id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":876,"nodeType":"IfStatement","src":"9687:87:2","trueBody":{"id":875,"nodeType":"Block","src":"9709:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9752:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"9752:7:2","typeDescriptions":{}}},"id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":868,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"9730:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":874,"nodeType":"RevertStatement","src":"9723:40:2"}]}},{"assignments":[878],"declarations":[{"constant":false,"id":878,"mutability":"mutable","name":"previousOwner","nameLocation":"9791:13:2","nodeType":"VariableDeclaration","scope":903,"src":"9783:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"9783:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":887,"initialValue":{"arguments":[{"id":880,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"9815:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"9819:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9828:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"9828:7:2","typeDescriptions":{}}},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9828:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":879,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"9807:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9783:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":888,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"9853:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9878:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9870:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:2","typeDescriptions":{}}},"id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9870:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9853:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":902,"nodeType":"IfStatement","src":"9849:96:2","trueBody":{"id":901,"nodeType":"Block","src":"9882:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9931:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9923:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:2","typeDescriptions":{}}},"id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":894,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"9903:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":900,"nodeType":"RevertStatement","src":"9896:38:2"}]}}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"9308:311:2","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":904,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9633:5:2","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"to","nameLocation":"9647:2:2","nodeType":"VariableDeclaration","scope":904,"src":"9639:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"9639:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"tokenId","nameLocation":"9659:7:2","nodeType":"VariableDeclaration","scope":904,"src":"9651:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:29:2"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[],"src":"9677:0:2"},"scope":1241,"src":"9624:327:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":918,"nodeType":"Block","src":"10359:43:2","statements":[{"expression":{"arguments":[{"id":913,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"10379:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":914,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"10383:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10392:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":912,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[919,949],"referencedDeclaration":949,"src":"10369:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":917,"nodeType":"ExpressionStatement","src":"10369:26:2"}]},"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"9957:340:2","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":919,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10311:9:2","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"to","nameLocation":"10329:2:2","nodeType":"VariableDeclaration","scope":919,"src":"10321:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"10321:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"tokenId","nameLocation":"10341:7:2","nodeType":"VariableDeclaration","scope":919,"src":"10333:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:29:2"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"10359:0:2"},"scope":1241,"src":"10302:100:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":948,"nodeType":"Block","src":"10707:123:2","statements":[{"expression":{"arguments":[{"id":930,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"10723:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":931,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"10727:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":929,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"10717:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"ExpressionStatement","src":"10717:18:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":937,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"10779:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10801:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"10793:7:2","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":943,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"10805:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"10809:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":945,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"10818:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":934,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"10745:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1481_$","typeString":"type(library ERC721Utils)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10757:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"10745:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":947,"nodeType":"ExpressionStatement","src":"10745:78:2"}]},"documentation":{"id":920,"nodeType":"StructuredDocumentation","src":"10408:210:2","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":949,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10632:9:2","nodeType":"FunctionDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"to","nameLocation":"10650:2:2","nodeType":"VariableDeclaration","scope":949,"src":"10642:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:2","nodeType":"VariableDeclaration","scope":949,"src":"10654:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"data","nameLocation":"10684:4:2","nodeType":"VariableDeclaration","scope":949,"src":"10671:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":925,"name":"bytes","nodeType":"ElementaryTypeName","src":"10671:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10641:48:2"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"10707:0:2"},"scope":1241,"src":"10623:207:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":981,"nodeType":"Block","src":"11197:186:2","statements":[{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"previousOwner","nameLocation":"11215:13:2","nodeType":"VariableDeclaration","scope":981,"src":"11207:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":968,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11239:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:2","typeDescriptions":{}}},"id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":962,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"11251:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11268:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11260:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"11260:7:2","typeDescriptions":{}}},"id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11260:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":957,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"11231:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11207:64:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":969,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11285:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11310:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11302:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":970,"name":"address","nodeType":"ElementaryTypeName","src":"11302:7:2","typeDescriptions":{}}},"id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11302:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11285:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":980,"nodeType":"IfStatement","src":"11281:96:2","trueBody":{"id":979,"nodeType":"Block","src":"11314:63:2","statements":[{"errorCall":{"arguments":[{"id":976,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"11358:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":975,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"11335:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"RevertStatement","src":"11328:38:2"}]}}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"10836:315:2","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11165:5:2","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"tokenId","nameLocation":"11179:7:2","nodeType":"VariableDeclaration","scope":982,"src":"11171:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11170:17:2"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[],"src":"11197:0:2"},"scope":1241,"src":"11156:227:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1041,"nodeType":"Block","src":"11778:389:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":992,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"11792:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11806:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11798:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"11798:7:2","typeDescriptions":{}}},"id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11798:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11792:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1006,"nodeType":"IfStatement","src":"11788:87:2","trueBody":{"id":1005,"nodeType":"Block","src":"11810:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11861:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11853:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"11853:7:2","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":998,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"11831:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11831:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"RevertStatement","src":"11824:40:2"}]}},{"assignments":[1008],"declarations":[{"constant":false,"id":1008,"mutability":"mutable","name":"previousOwner","nameLocation":"11892:13:2","nodeType":"VariableDeclaration","scope":1041,"src":"11884:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"11884:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1017,"initialValue":{"arguments":[{"id":1010,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"11916:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1011,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"11920:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11937:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11929:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"11929:7:2","typeDescriptions":{}}},"id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1009,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"11908:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11908:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11884:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1018,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"11954:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:2","typeDescriptions":{}}},"id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11954:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1029,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12056:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1030,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"12073:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12056:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1039,"nodeType":"IfStatement","src":"12052:109:2","trueBody":{"id":1038,"nodeType":"Block","src":"12079:82:2","statements":[{"errorCall":{"arguments":[{"id":1033,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"12121:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1034,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"12127:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1035,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12136:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1032,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"12100:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1037,"nodeType":"RevertStatement","src":"12093:57:2"}]}},"id":1040,"nodeType":"IfStatement","src":"11950:211:2","trueBody":{"id":1028,"nodeType":"Block","src":"11983:63:2","statements":[{"errorCall":{"arguments":[{"id":1025,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"12027:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1024,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"12004:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1027,"nodeType":"RevertStatement","src":"11997:38:2"}]}}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"11389:313:2","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1042,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11716:9:2","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"from","nameLocation":"11734:4:2","nodeType":"VariableDeclaration","scope":1042,"src":"11726:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"11726:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"to","nameLocation":"11748:2:2","nodeType":"VariableDeclaration","scope":1042,"src":"11740:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"tokenId","nameLocation":"11760:7:2","nodeType":"VariableDeclaration","scope":1042,"src":"11752:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11725:43:2"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[],"src":"11778:0:2"},"scope":1241,"src":"11707:460:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1059,"nodeType":"Block","src":"13176:53:2","statements":[{"expression":{"arguments":[{"id":1053,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"13200:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1054,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"13206:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1055,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"13210:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13219:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1052,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1060,1090],"referencedDeclaration":1090,"src":"13186:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1058,"nodeType":"ExpressionStatement","src":"13186:36:2"}]},"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"12173:923:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1060,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13110:13:2","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"from","nameLocation":"13132:4:2","nodeType":"VariableDeclaration","scope":1060,"src":"13124:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"to","nameLocation":"13146:2:2","nodeType":"VariableDeclaration","scope":1060,"src":"13138:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"13138:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"tokenId","nameLocation":"13158:7:2","nodeType":"VariableDeclaration","scope":1060,"src":"13150:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"13150:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:43:2"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"13176:0:2"},"scope":1241,"src":"13101:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1089,"nodeType":"Block","src":"13568:127:2","statements":[{"expression":{"arguments":[{"id":1073,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"13588:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"13594:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"13598:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1072,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"13578:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"ExpressionStatement","src":"13578:28:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1081,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"13650:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1083,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"13664:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1084,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"13670:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1085,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"13674:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1086,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"13683:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1078,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"13616:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1481_$","typeString":"type(library ERC721Utils)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"13616:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13616:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"ExpressionStatement","src":"13616:72:2"}]},"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"13235:226:2","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1090,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13475:13:2","nodeType":"FunctionDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"from","nameLocation":"13497:4:2","nodeType":"VariableDeclaration","scope":1090,"src":"13489:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"13489:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"to","nameLocation":"13511:2:2","nodeType":"VariableDeclaration","scope":1090,"src":"13503:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"13503:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"tokenId","nameLocation":"13523:7:2","nodeType":"VariableDeclaration","scope":1090,"src":"13515:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"data","nameLocation":"13545:4:2","nodeType":"VariableDeclaration","scope":1090,"src":"13532:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1068,"name":"bytes","nodeType":"ElementaryTypeName","src":"13532:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13488:62:2"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"13568:0:2"},"scope":1241,"src":"13466:229:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1107,"nodeType":"Block","src":"14208:50:2","statements":[{"expression":{"arguments":[{"id":1101,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"14227:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1102,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"14231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1103,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"14240:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1100,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1108,1174],"referencedDeclaration":1174,"src":"14218:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1106,"nodeType":"ExpressionStatement","src":"14218:33:2"}]},"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"13701:432:2","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14147:8:2","nodeType":"FunctionDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"to","nameLocation":"14164:2:2","nodeType":"VariableDeclaration","scope":1108,"src":"14156:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"tokenId","nameLocation":"14176:7:2","nodeType":"VariableDeclaration","scope":1108,"src":"14168:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"auth","nameLocation":"14193:4:2","nodeType":"VariableDeclaration","scope":1108,"src":"14185:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14155:43:2"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[],"src":"14208:0:2"},"scope":1241,"src":"14138:120:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1173,"nodeType":"Block","src":"14534:568:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"14600:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"14613:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:2","typeDescriptions":{}}},"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14613:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14600:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1166,"nodeType":"IfStatement","src":"14596:460:2","trueBody":{"id":1165,"nodeType":"Block","src":"14633:423:2","statements":[{"assignments":[1129],"declarations":[{"constant":false,"id":1129,"mutability":"mutable","name":"owner","nameLocation":"14655:5:2","nodeType":"VariableDeclaration","scope":1165,"src":"14647:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"14647:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1133,"initialValue":{"arguments":[{"id":1131,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"14677:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1130,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"14663:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14663:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14647:38:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1134,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"14813:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14821:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"14821:7:2","typeDescriptions":{}}},"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14813:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1140,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"14835:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1141,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"14844:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14835:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14852:30:2","subExpression":{"arguments":[{"id":1145,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"14870:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1146,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"14877:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1144,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"14853:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:69:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1155,"nodeType":"IfStatement","src":"14809:142:2","trueBody":{"id":1154,"nodeType":"Block","src":"14884:67:2","statements":[{"errorCall":{"arguments":[{"id":1151,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"14931:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1150,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"14909:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1153,"nodeType":"RevertStatement","src":"14902:34:2"}]}},{"condition":{"id":1156,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"14969:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1164,"nodeType":"IfStatement","src":"14965:81:2","trueBody":{"id":1163,"nodeType":"Block","src":"14980:66:2","statements":[{"eventCall":{"arguments":[{"id":1158,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"15012:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1159,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"15019:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1160,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"15023:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1157,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"15003:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1162,"nodeType":"EmitStatement","src":"14998:33:2"}]}}]}},{"expression":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1167,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"15066:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1169,"indexExpression":{"id":1168,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"15082:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15066:24:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1170,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"15093:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15066:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1172,"nodeType":"ExpressionStatement","src":"15066:29:2"}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"14264:171:2","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1174,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14449:8:2","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"to","nameLocation":"14466:2:2","nodeType":"VariableDeclaration","scope":1174,"src":"14458:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"tokenId","nameLocation":"14478:7:2","nodeType":"VariableDeclaration","scope":1174,"src":"14470:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"auth","nameLocation":"14495:4:2","nodeType":"VariableDeclaration","scope":1174,"src":"14487:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"14487:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"emitEvent","nameLocation":"14506:9:2","nodeType":"VariableDeclaration","scope":1174,"src":"14501:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1116,"name":"bool","nodeType":"ElementaryTypeName","src":"14501:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14457:59:2"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[],"src":"14534:0:2"},"scope":1241,"src":"14440:662:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1210,"nodeType":"Block","src":"15404:219:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1184,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15418:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15438:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15430:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"15430:7:2","typeDescriptions":{}}},"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15430:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15418:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1195,"nodeType":"IfStatement","src":"15414:91:2","trueBody":{"id":1194,"nodeType":"Block","src":"15442:63:2","statements":[{"errorCall":{"arguments":[{"id":1191,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15485:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1190,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"15463:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1193,"nodeType":"RevertStatement","src":"15456:38:2"}]}},{"expression":{"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1196,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"15514:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1199,"indexExpression":{"id":1197,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"15533:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15514:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1200,"indexExpression":{"id":1198,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15540:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15514:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1201,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"15552:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15514:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1203,"nodeType":"ExpressionStatement","src":"15514:46:2"},{"eventCall":{"arguments":[{"id":1205,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"15590:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1206,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15597:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1207,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"15607:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1204,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"15575:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"EmitStatement","src":"15570:46:2"}]},"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"15108:198:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1211,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15320:18:2","nodeType":"FunctionDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"owner","nameLocation":"15347:5:2","nodeType":"VariableDeclaration","scope":1211,"src":"15339:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"operator","nameLocation":"15362:8:2","nodeType":"VariableDeclaration","scope":1211,"src":"15354:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"approved","nameLocation":"15377:8:2","nodeType":"VariableDeclaration","scope":1211,"src":"15372:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1180,"name":"bool","nodeType":"ElementaryTypeName","src":"15372:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15338:48:2"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[],"src":"15404:0:2"},"scope":1241,"src":"15311:312:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1239,"nodeType":"Block","src":"15930:169:2","statements":[{"assignments":[1220],"declarations":[{"constant":false,"id":1220,"mutability":"mutable","name":"owner","nameLocation":"15948:5:2","nodeType":"VariableDeclaration","scope":1239,"src":"15940:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1224,"initialValue":{"arguments":[{"id":1222,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"15965:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1221,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"15956:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15956:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15940:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1225,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"15987:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16004:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:2","typeDescriptions":{}}},"id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15987:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1236,"nodeType":"IfStatement","src":"15983:88:2","trueBody":{"id":1235,"nodeType":"Block","src":"16008:63:2","statements":[{"errorCall":{"arguments":[{"id":1232,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"16052:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1231,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"16029:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1234,"nodeType":"RevertStatement","src":"16022:38:2"}]}},{"expression":{"id":1237,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"16087:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1218,"id":1238,"nodeType":"Return","src":"16080:12:2"}]},"documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"15629:224:2","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1240,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"15867:13:2","nodeType":"FunctionDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"tokenId","nameLocation":"15889:7:2","nodeType":"VariableDeclaration","scope":1240,"src":"15881:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"15881:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15880:17:2"},"returnParameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1240,"src":"15921:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"15921:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15920:9:2"},"scope":1241,"src":"15858:241:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1242,"src":"775:15326:2","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[1257,1266,1275]}],"src":"107:15995:2"},"id":2},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3435],"IERC721":[1358]},"id":1359,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1243,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1245,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1359,"sourceUnit":3436,"src":"134:62:3","symbolAliases":[{"foreign":{"id":1244,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"142:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1247,"name":"IERC165","nameLocations":["288:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":3435,"src":"288:7:3"},"id":1248,"nodeType":"InheritanceSpecifier","src":"288:7:3"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"198:68:3","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1358,"linearizedBaseContracts":[1358,3435],"name":"IERC721","nameLocation":"277:7:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"302:88:3","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1257,"name":"Transfer","nameLocation":"401:8:3","nodeType":"EventDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:3","nodeType":"VariableDeclaration","scope":1257,"src":"410:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1253,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:3","nodeType":"VariableDeclaration","scope":1257,"src":"432:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1255,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:3","nodeType":"VariableDeclaration","scope":1257,"src":"452:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:3"},"src":"395:82:3"},{"anonymous":false,"documentation":{"id":1258,"nodeType":"StructuredDocumentation","src":"483:94:3","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1266,"name":"Approval","nameLocation":"588:8:3","nodeType":"EventDefinition","parameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:3","nodeType":"VariableDeclaration","scope":1266,"src":"597:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1262,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:3","nodeType":"VariableDeclaration","scope":1266,"src":"620:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1264,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:3","nodeType":"VariableDeclaration","scope":1266,"src":"646:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1263,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:3"},"src":"582:89:3"},{"anonymous":false,"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"677:117:3","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1275,"name":"ApprovalForAll","nameLocation":"805:14:3","nodeType":"EventDefinition","parameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:3","nodeType":"VariableDeclaration","scope":1275,"src":"820:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:3","nodeType":"VariableDeclaration","scope":1275,"src":"843:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1273,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:3","nodeType":"VariableDeclaration","scope":1275,"src":"869:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1272,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:3"},"src":"799:85:3"},{"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"890:76:3","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1283,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:3","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"owner","nameLocation":"998:5:3","nodeType":"VariableDeclaration","scope":1283,"src":"990:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:3"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"balance","nameLocation":"1036:7:3","nodeType":"VariableDeclaration","scope":1283,"src":"1028:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:3"},"scope":1358,"src":"971:74:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"1051:131:3","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1291,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:3","nodeType":"FunctionDefinition","parameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:3","nodeType":"VariableDeclaration","scope":1291,"src":"1204:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:3"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"owner","nameLocation":"1252:5:3","nodeType":"VariableDeclaration","scope":1291,"src":"1244:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:3"},"scope":1358,"src":"1187:72:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"1265:565:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1303,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:3","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"from","nameLocation":"1869:4:3","nodeType":"VariableDeclaration","scope":1303,"src":"1861:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"to","nameLocation":"1883:2:3","nodeType":"VariableDeclaration","scope":1303,"src":"1875:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:3","nodeType":"VariableDeclaration","scope":1303,"src":"1887:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"data","nameLocation":"1919:4:3","nodeType":"VariableDeclaration","scope":1303,"src":"1904:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1299,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:3"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"1933:0:3"},"scope":1358,"src":"1835:99:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"1940:706:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1313,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:3","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"from","nameLocation":"2685:4:3","nodeType":"VariableDeclaration","scope":1313,"src":"2677:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"to","nameLocation":"2699:2:3","nodeType":"VariableDeclaration","scope":1313,"src":"2691:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:3","nodeType":"VariableDeclaration","scope":1313,"src":"2703:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:3"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[],"src":"2728:0:3"},"scope":1358,"src":"2651:78:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"2735:733:3","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1323,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:3","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"from","nameLocation":"3503:4:3","nodeType":"VariableDeclaration","scope":1323,"src":"3495:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"to","nameLocation":"3517:2:3","nodeType":"VariableDeclaration","scope":1323,"src":"3509:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:3","nodeType":"VariableDeclaration","scope":1323,"src":"3521:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:3"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"3546:0:3"},"scope":1358,"src":"3473:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"3553:452:3","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1331,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:3","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"to","nameLocation":"4035:2:3","nodeType":"VariableDeclaration","scope":1331,"src":"4027:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:3","nodeType":"VariableDeclaration","scope":1331,"src":"4039:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:3"},"returnParameters":{"id":1330,"nodeType":"ParameterList","parameters":[],"src":"4064:0:3"},"scope":1358,"src":"4010:55:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"4071:315:3","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1339,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:3","nodeType":"FunctionDefinition","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"operator","nameLocation":"4426:8:3","nodeType":"VariableDeclaration","scope":1339,"src":"4418:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"approved","nameLocation":"4441:8:3","nodeType":"VariableDeclaration","scope":1339,"src":"4436:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1335,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:3"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[],"src":"4459:0:3"},"scope":1358,"src":"4391:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"4466:139:3","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1347,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:3","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:3","nodeType":"VariableDeclaration","scope":1347,"src":"4631:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:3"},"returnParameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"operator","nameLocation":"4679:8:3","nodeType":"VariableDeclaration","scope":1347,"src":"4671:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:3"},"scope":1358,"src":"4610:79:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"4695:138:3","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1357,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:3","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"owner","nameLocation":"4872:5:3","nodeType":"VariableDeclaration","scope":1357,"src":"4864:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"operator","nameLocation":"4887:8:3","nodeType":"VariableDeclaration","scope":1357,"src":"4879:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:3"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1357,"src":"4920:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1354,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:3"},"scope":1358,"src":"4838:88:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1359,"src":"267:4661:3","usedErrors":[],"usedEvents":[1257,1266,1275]}],"src":"108:4821:3"},"id":3},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1376]},"id":1377,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1360,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"142:154:4","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1376,"linearizedBaseContracts":[1376],"name":"IERC721Receiver","nameLocation":"307:15:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"329:500:4","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1375,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:4","nodeType":"FunctionDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"operator","nameLocation":"877:8:4","nodeType":"VariableDeclaration","scope":1375,"src":"869:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"from","nameLocation":"903:4:4","nodeType":"VariableDeclaration","scope":1375,"src":"895:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:4","nodeType":"VariableDeclaration","scope":1375,"src":"917:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1367,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"data","nameLocation":"957:4:4","nodeType":"VariableDeclaration","scope":1375,"src":"942:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1369,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:4"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1375,"src":"986:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1372,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:4"},"scope":1376,"src":"834:160:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1377,"src":"297:699:4","usedErrors":[],"usedEvents":[]}],"src":"116:881:4"},"id":4},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1358],"IERC721Metadata":[1404]},"id":1405,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1378,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1380,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1405,"sourceUnit":1359,"src":"153:39:5","symbolAliases":[{"foreign":{"id":1379,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"161:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1382,"name":"IERC721","nameLocations":["357:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"357:7:5"},"id":1383,"nodeType":"InheritanceSpecifier","src":"357:7:5"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"194:133:5","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1404,"linearizedBaseContracts":[1404,1358,3435],"name":"IERC721Metadata","nameLocation":"338:15:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1384,"nodeType":"StructuredDocumentation","src":"371:58:5","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1389,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:5","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[],"src":"447:2:5"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1389,"src":"473:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1386,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:5"},"scope":1404,"src":"434:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"494:60:5","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1395,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:5","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[],"src":"574:2:5"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"600:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1392,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:5"},"scope":1404,"src":"559:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"621:90:5","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1403,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:5","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:5","nodeType":"VariableDeclaration","scope":1403,"src":"734:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:5"},"returnParameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1403,"src":"774:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1400,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:5"},"scope":1404,"src":"716:73:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1405,"src":"328:463:5","usedErrors":[],"usedEvents":[1257,1266,1275]}],"src":"127:665:5"},"id":5},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[1481],"IERC721Errors":[237],"IERC721Receiver":[1376]},"id":1482,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1406,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1482,"sourceUnit":1377,"src":"144:55:6","symbolAliases":[{"foreign":{"id":1407,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"152:15:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1410,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1482,"sourceUnit":285,"src":"200:69:6","symbolAliases":[{"foreign":{"id":1409,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"208:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1411,"nodeType":"StructuredDocumentation","src":"271:159:6","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":1481,"linearizedBaseContracts":[1481],"name":"ERC721Utils","nameLocation":"439:11:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1479,"nodeType":"Block","src":"1159:760:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1425,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1173:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:6","memberName":"code","nodeType":"MemberAccess","src":"1173:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:6","memberName":"length","nodeType":"MemberAccess","src":"1173:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1478,"nodeType":"IfStatement","src":"1169:744:6","trueBody":{"id":1477,"nodeType":"Block","src":"1193:720:6","statements":[{"clauses":[{"block":{"id":1455,"nodeType":"Block","src":"1303:214:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1442,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"1325:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1443,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"1335:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1376_$","typeString":"type(contract IERC721Receiver)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:6","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1375,"src":"1335:32:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:6","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1454,"nodeType":"IfStatement","src":"1321:182:6","trueBody":{"id":1453,"nodeType":"Block","src":"1378:125:6","statements":[{"errorCall":{"arguments":[{"id":1450,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1481:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1447,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1445:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:6","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1445:35:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1452,"nodeType":"RevertStatement","src":"1438:46:6"}]}}]},"errorName":"","id":1456,"nodeType":"TryCatchClause","parameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"retval","nameLocation":"1295:6:6","nodeType":"VariableDeclaration","scope":1456,"src":"1288:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1439,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:6"},"src":"1279:238:6"},{"block":{"id":1474,"nodeType":"Block","src":"1546:357:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1460,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"1568:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:6","memberName":"length","nodeType":"MemberAccess","src":"1568:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1472,"nodeType":"Block","src":"1736:153:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1783:88:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1820:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1828:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1816:3:6"},"nodeType":"YulFunctionCall","src":"1816:17:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1841:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1835:5:6"},"nodeType":"YulFunctionCall","src":"1835:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1809:6:6"},"nodeType":"YulFunctionCall","src":"1809:40:6"},"nodeType":"YulExpressionStatement","src":"1809:40:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1458,"isOffset":false,"isSlot":false,"src":"1820:6:6","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"1841:6:6","valueSize":1}],"flags":["memory-safe"],"id":1471,"nodeType":"InlineAssembly","src":"1758:113:6"}]},"id":1473,"nodeType":"IfStatement","src":"1564:325:6","trueBody":{"id":1470,"nodeType":"Block","src":"1588:142:6","statements":[{"errorCall":{"arguments":[{"id":1467,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1708:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1464,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1672:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:6","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1672:35:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1469,"nodeType":"RevertStatement","src":"1665:46:6"}]}}]},"errorName":"","id":1475,"nodeType":"TryCatchClause","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"reason","nameLocation":"1538:6:6","nodeType":"VariableDeclaration","scope":1475,"src":"1525:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1457,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:6"},"src":"1518:385:6"}],"externalCall":{"arguments":[{"id":1434,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"1248:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1435,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"1258:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1436,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"1264:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1437,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"1273:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1227:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1430,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"1211:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1376_$","typeString":"type(contract IERC721Receiver)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1376","typeString":"contract IERC721Receiver"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:6","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1375,"src":"1211:36:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1476,"nodeType":"TryStatement","src":"1207:696:6"}]}}]},"documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"457:531:6","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":1480,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:6","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"operator","nameLocation":"1041:8:6","nodeType":"VariableDeclaration","scope":1480,"src":"1033:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"from","nameLocation":"1067:4:6","nodeType":"VariableDeclaration","scope":1480,"src":"1059:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"to","nameLocation":"1089:2:6","nodeType":"VariableDeclaration","scope":1480,"src":"1081:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:6","nodeType":"VariableDeclaration","scope":1480,"src":"1101:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"data","nameLocation":"1139:4:6","nodeType":"VariableDeclaration","scope":1480,"src":"1126:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1421,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:6"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[],"src":"1159:0:6"},"scope":1481,"src":"993:926:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1482,"src":"431:1490:6","usedErrors":[],"usedEvents":[]}],"src":"118:1804:6"},"id":6},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1511]},"id":1512,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1483,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"127:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1511,"linearizedBaseContracts":[1511],"name":"Context","nameLocation":"642:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1492,"nodeType":"Block","src":"718:34:7","statements":[{"expression":{"expression":{"id":1489,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"735:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:7","memberName":"sender","nodeType":"MemberAccess","src":"735:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1488,"id":1491,"nodeType":"Return","src":"728:17:7"}]},"id":1493,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:7","nodeType":"FunctionDefinition","parameters":{"id":1485,"nodeType":"ParameterList","parameters":[],"src":"675:2:7"},"returnParameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1493,"src":"709:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1486,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:7"},"scope":1511,"src":"656:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1501,"nodeType":"Block","src":"825:32:7","statements":[{"expression":{"expression":{"id":1498,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"842:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:7","memberName":"data","nodeType":"MemberAccess","src":"842:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1497,"id":1500,"nodeType":"Return","src":"835:15:7"}]},"id":1502,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:7","nodeType":"FunctionDefinition","parameters":{"id":1494,"nodeType":"ParameterList","parameters":[],"src":"775:2:7"},"returnParameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1502,"src":"809:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1495,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:7"},"scope":1511,"src":"758:99:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1509,"nodeType":"Block","src":"935:25:7","statements":[{"expression":{"hexValue":"30","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1506,"id":1508,"nodeType":"Return","src":"945:8:7"}]},"id":1510,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:7","nodeType":"FunctionDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[],"src":"892:2:7"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1510,"src":"926:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:7"},"scope":1511,"src":"863:97:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1512,"src":"624:338:7","usedErrors":[],"usedEvents":[]}],"src":"101:862:7"},"id":7},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1563]},"id":1564,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1513,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1514,"nodeType":"StructuredDocumentation","src":"125:489:8","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1563,"linearizedBaseContracts":[1563],"name":"Panic","nameLocation":"665:5:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"677:36:8","text":"@dev generic / unspecified error"},"id":1518,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:8","nodeType":"VariableDeclaration","scope":1563,"src":"718:40:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1519,"nodeType":"StructuredDocumentation","src":"764:37:8","text":"@dev used by the assert() builtin"},"id":1522,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:8","nodeType":"VariableDeclaration","scope":1563,"src":"806:39:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"851:41:8","text":"@dev arithmetic underflow or overflow"},"id":1526,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:8","nodeType":"VariableDeclaration","scope":1563,"src":"897:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:8","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"950:35:8","text":"@dev division or modulo by zero"},"id":1530,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:8","nodeType":"VariableDeclaration","scope":1563,"src":"990:49:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"1045:30:8","text":"@dev enum conversion error"},"id":1534,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:8","nodeType":"VariableDeclaration","scope":1563,"src":"1080:54:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:8","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"1140:36:8","text":"@dev invalid encoding in storage"},"id":1538,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:8","nodeType":"VariableDeclaration","scope":1563,"src":"1181:55:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:8","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"1242:24:8","text":"@dev empty array pop"},"id":1542,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:8","nodeType":"VariableDeclaration","scope":1563,"src":"1271:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1540,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:8","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"1325:35:8","text":"@dev array out of bounds access"},"id":1546,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:8","nodeType":"VariableDeclaration","scope":1563,"src":"1365:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:8","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"1423:65:8","text":"@dev resource error (too large allocation or too large array)"},"id":1550,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:8","nodeType":"VariableDeclaration","scope":1563,"src":"1493:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:8","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"1546:42:8","text":"@dev calling invalid internal function"},"id":1554,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:8","nodeType":"VariableDeclaration","scope":1563,"src":"1593:58:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:8","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1561,"nodeType":"Block","src":"1819:151:8","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:8","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:8"},"nodeType":"YulFunctionCall","src":"1868:24:8"},"nodeType":"YulExpressionStatement","src":"1868:24:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:8","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:8"},"nodeType":"YulFunctionCall","src":"1905:18:8"},"nodeType":"YulExpressionStatement","src":"1905:18:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:8","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:8"},"nodeType":"YulFunctionCall","src":"1936:18:8"},"nodeType":"YulExpressionStatement","src":"1936:18:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1557,"isOffset":false,"isSlot":false,"src":"1918:4:8","valueSize":1}],"flags":["memory-safe"],"id":1560,"nodeType":"InlineAssembly","src":"1829:135:8"}]},"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"1658:113:8","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1562,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:8","nodeType":"FunctionDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"code","nameLocation":"1799:4:8","nodeType":"VariableDeclaration","scope":1562,"src":"1791:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:8"},"returnParameters":{"id":1559,"nodeType":"ParameterList","parameters":[],"src":"1819:0:8"},"scope":1563,"src":"1776:194:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1564,"src":"657:1315:8","usedErrors":[],"usedEvents":[]}],"src":"99:1874:8"},"id":8},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5056],"SafeCast":[6821],"SignedMath":[6965],"Strings":[2965]},"id":2966,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1565,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1567,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2966,"sourceUnit":5057,"src":"127:37:9","symbolAliases":[{"foreign":{"id":1566,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"135:4:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1569,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2966,"sourceUnit":6822,"src":"165:45:9","symbolAliases":[{"foreign":{"id":1568,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"173:8:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1571,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2966,"sourceUnit":6966,"src":"211:49:9","symbolAliases":[{"foreign":{"id":1570,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"219:10:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"262:34:9","text":" @dev String operations."},"fullyImplemented":true,"id":2965,"linearizedBaseContracts":[2965],"name":"Strings","nameLocation":"305:7:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1574,"libraryName":{"id":1573,"name":"SafeCast","nameLocations":["325:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":6821,"src":"325:8:9"},"nodeType":"UsingForDirective","src":"319:21:9"},{"constant":true,"id":1577,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:9","nodeType":"VariableDeclaration","scope":2965,"src":"346:56:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1575,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:9","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1580,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:9","nodeType":"VariableDeclaration","scope":2965,"src":"408:42:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1578,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:9","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1616,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:9","nodeType":"VariableDeclaration","scope":2965,"src":"456:302:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:9","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1585,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:9","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:9","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:9","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:9","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:9","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:9","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1594,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:9","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:9","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:9","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:9","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1599,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:9","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:9","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:9","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:9","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:9","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:9","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:9","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:9","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1609,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:9","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:9","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:9","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:9","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1614,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:9","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:9","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"778:81:9","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1623,"name":"StringsInsufficientHexLength","nameLocation":"870:28:9","nodeType":"ErrorDefinition","parameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"value","nameLocation":"907:5:9","nodeType":"VariableDeclaration","scope":1623,"src":"899:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1618,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1621,"mutability":"mutable","name":"length","nameLocation":"922:6:9","nodeType":"VariableDeclaration","scope":1623,"src":"914:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:9"},"src":"864:66:9"},{"documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"936:108:9","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1626,"name":"StringsInvalidChar","nameLocation":"1055:18:9","nodeType":"ErrorDefinition","parameters":{"id":1625,"nodeType":"ParameterList","parameters":[],"src":"1073:2:9"},"src":"1049:27:9"},{"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"1082:84:9","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1629,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:9","nodeType":"ErrorDefinition","parameters":{"id":1628,"nodeType":"ParameterList","parameters":[],"src":"1204:2:9"},"src":"1171:36:9"},{"body":{"id":1676,"nodeType":"Block","src":"1379:563:9","statements":[{"id":1675,"nodeType":"UncheckedBlock","src":"1389:547:9","statements":[{"assignments":[1638],"declarations":[{"constant":false,"id":1638,"mutability":"mutable","name":"length","nameLocation":"1421:6:9","nodeType":"VariableDeclaration","scope":1675,"src":"1413:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1637,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1645,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"1441:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1639,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"1430:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5056_$","typeString":"type(library Math)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:9","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4888,"src":"1430:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:9"},{"assignments":[1647],"declarations":[{"constant":false,"id":1647,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:9","nodeType":"VariableDeclaration","scope":1675,"src":"1465:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1646,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1652,"initialValue":{"arguments":[{"id":1650,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"1499:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1648,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:9"},{"assignments":[1654],"declarations":[{"constant":false,"id":1654,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:9","nodeType":"VariableDeclaration","scope":1675,"src":"1520:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1655,"nodeType":"VariableDeclarationStatement","src":"1520:11:9"},{"AST":{"nodeType":"YulBlock","src":"1570:69:9","statements":[{"nodeType":"YulAssignment","src":"1588:37:9","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1603:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"1611:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:9"},"nodeType":"YulFunctionCall","src":"1599:17:9"},{"name":"length","nodeType":"YulIdentifier","src":"1618:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:9"},"nodeType":"YulFunctionCall","src":"1595:30:9"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1647,"isOffset":false,"isSlot":false,"src":"1603:6:9","valueSize":1},{"declaration":1638,"isOffset":false,"isSlot":false,"src":"1618:6:9","valueSize":1},{"declaration":1654,"isOffset":false,"isSlot":false,"src":"1588:3:9","valueSize":1}],"flags":["memory-safe"],"id":1656,"nodeType":"InlineAssembly","src":"1545:94:9"},{"body":{"id":1671,"nodeType":"Block","src":"1665:234:9","statements":[{"expression":{"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:9","subExpression":{"id":1658,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"1683:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1660,"nodeType":"ExpressionStatement","src":"1683:5:9"},{"AST":{"nodeType":"YulBlock","src":"1731:86:9","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1761:3:9"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1775:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"1782:2:9","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1771:3:9"},"nodeType":"YulFunctionCall","src":"1771:14:9"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1787:10:9"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1766:4:9"},"nodeType":"YulFunctionCall","src":"1766:32:9"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1753:7:9"},"nodeType":"YulFunctionCall","src":"1753:46:9"},"nodeType":"YulExpressionStatement","src":"1753:46:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1577,"isOffset":false,"isSlot":false,"src":"1787:10:9","valueSize":1},{"declaration":1654,"isOffset":false,"isSlot":false,"src":"1761:3:9","valueSize":1},{"declaration":1632,"isOffset":false,"isSlot":false,"src":"1775:5:9","valueSize":1}],"flags":["memory-safe"],"id":1661,"nodeType":"InlineAssembly","src":"1706:111:9"},{"expression":{"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"1834:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1665,"nodeType":"ExpressionStatement","src":"1834:11:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"1867:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1670,"nodeType":"IfStatement","src":"1863:21:9","trueBody":{"id":1669,"nodeType":"Break","src":"1879:5:9"}}]},"condition":{"hexValue":"74727565","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1672,"nodeType":"WhileStatement","src":"1652:247:9"},{"expression":{"id":1673,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"1919:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1636,"id":1674,"nodeType":"Return","src":"1912:13:9"}]}]},"documentation":{"id":1630,"nodeType":"StructuredDocumentation","src":"1213:90:9","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1677,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:9","nodeType":"FunctionDefinition","parameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1632,"mutability":"mutable","name":"value","nameLocation":"1334:5:9","nodeType":"VariableDeclaration","scope":1677,"src":"1326:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:9"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1677,"src":"1364:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1634,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:9"},"scope":2965,"src":"1308:634:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1702,"nodeType":"Block","src":"2118:92:9","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"2149:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:9","trueExpression":{"hexValue":"2d","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"2195:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1695,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"2180:10:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6965_$","typeString":"type(library SignedMath)"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:9","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6964,"src":"2180:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1694,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"2171:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1685,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:9","typeDescriptions":{}}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:9","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:9","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1684,"id":1701,"nodeType":"Return","src":"2128:75:9"}]},"documentation":{"id":1678,"nodeType":"StructuredDocumentation","src":"1948:89:9","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1703,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:9","nodeType":"FunctionDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1680,"mutability":"mutable","name":"value","nameLocation":"2073:5:9","nodeType":"VariableDeclaration","scope":1703,"src":"2066:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1679,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:9"},"returnParameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1703,"src":"2103:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1682,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:9"},"scope":2965,"src":"2042:168:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1722,"nodeType":"Block","src":"2389:100:9","statements":[{"id":1721,"nodeType":"UncheckedBlock","src":"2399:84:9","statements":[{"expression":{"arguments":[{"id":1712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"2442:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"2461:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1713,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"2449:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5056_$","typeString":"type(library Math)"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:9","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4999,"src":"2449:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1711,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1723,1806,1826],"referencedDeclaration":1806,"src":"2430:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1710,"id":1720,"nodeType":"Return","src":"2423:49:9"}]}]},"documentation":{"id":1704,"nodeType":"StructuredDocumentation","src":"2216:94:9","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1723,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:9","nodeType":"FunctionDefinition","parameters":{"id":1707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"value","nameLocation":"2344:5:9","nodeType":"VariableDeclaration","scope":1723,"src":"2336:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:9"},"returnParameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1723,"src":"2374:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1708,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:9"},"scope":2965,"src":"2315:174:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1805,"nodeType":"Block","src":"2702:435:9","statements":[{"assignments":[1734],"declarations":[{"constant":false,"id":1734,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:9","nodeType":"VariableDeclaration","scope":1805,"src":"2712:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1736,"initialValue":{"id":1735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"2733:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:9"},{"assignments":[1738],"declarations":[{"constant":false,"id":1738,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:9","nodeType":"VariableDeclaration","scope":1805,"src":"2748:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1737,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1747,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1742,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"2784:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1739,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:9"},{"expression":{"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1748,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2805:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1750,"indexExpression":{"hexValue":"30","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1753,"nodeType":"ExpressionStatement","src":"2805:15:9"},{"expression":{"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1754,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2830:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1756,"indexExpression":{"hexValue":"31","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1759,"nodeType":"ExpressionStatement","src":"2830:15:9"},{"body":{"id":1788,"nodeType":"Block","src":"2900:95:9","statements":[{"expression":{"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1774,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2914:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1776,"indexExpression":{"id":1775,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"2921:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1777,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"2926:10:9","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1781,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"2937:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1783,"nodeType":"ExpressionStatement","src":"2914:40:9"},{"expression":{"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1784,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"2968:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1787,"nodeType":"ExpressionStatement","src":"2968:16:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1768,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"2888:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1789,"initializationExpression":{"assignments":[1761],"declarations":[{"constant":false,"id":1761,"mutability":"mutable","name":"i","nameLocation":"2868:1:9","nodeType":"VariableDeclaration","scope":1789,"src":"2860:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1767,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1763,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"2876:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:9"},"loopExpression":{"expression":{"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:9","subExpression":{"id":1771,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"2897:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1773,"nodeType":"ExpressionStatement","src":"2895:3:9"},"nodeType":"ForStatement","src":"2855:140:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1790,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"3008:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1799,"nodeType":"IfStatement","src":"3004:96:9","trueBody":{"id":1798,"nodeType":"Block","src":"3025:75:9","statements":[{"errorCall":{"arguments":[{"id":1794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"3075:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1795,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"3082:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1793,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"3046:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1797,"nodeType":"RevertStatement","src":"3039:50:9"}]}},{"expression":{"arguments":[{"id":1802,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"3123:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1800,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:9","typeDescriptions":{}}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1732,"id":1804,"nodeType":"Return","src":"3109:21:9"}]},"documentation":{"id":1724,"nodeType":"StructuredDocumentation","src":"2495:112:9","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1806,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:9","nodeType":"FunctionDefinition","parameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"value","nameLocation":"2641:5:9","nodeType":"VariableDeclaration","scope":1806,"src":"2633:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1728,"mutability":"mutable","name":"length","nameLocation":"2656:6:9","nodeType":"VariableDeclaration","scope":1806,"src":"2648:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:9"},"returnParameters":{"id":1732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1806,"src":"2687:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1730,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:9"},"scope":2965,"src":"2612:525:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1825,"nodeType":"Block","src":"3369:75:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1819,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3414:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1817,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:9","typeDescriptions":{}}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:9","typeDescriptions":{}}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1822,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"3422:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1814,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1723,1806,1826],"referencedDeclaration":1806,"src":"3386:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1813,"id":1824,"nodeType":"Return","src":"3379:58:9"}]},"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"3143:148:9","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1826,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:9","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"addr","nameLocation":"3325:4:9","nodeType":"VariableDeclaration","scope":1826,"src":"3317:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1808,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:9"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1826,"src":"3354:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1811,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:9"},"scope":2965,"src":"3296:148:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1890,"nodeType":"Block","src":"3701:642:9","statements":[{"assignments":[1835],"declarations":[{"constant":false,"id":1835,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:9","nodeType":"VariableDeclaration","scope":1890,"src":"3711:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1834,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1842,"initialValue":{"arguments":[{"arguments":[{"id":1839,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"3751:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1838,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1723,1806,1826],"referencedDeclaration":1826,"src":"3739:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1836,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:9","typeDescriptions":{}}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:9"},{"assignments":[1844],"declarations":[{"constant":false,"id":1844,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:9","nodeType":"VariableDeclaration","scope":1890,"src":"3842:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1843,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1845,"nodeType":"VariableDeclarationStatement","src":"3842:17:9"},{"AST":{"nodeType":"YulBlock","src":"3894:78:9","statements":[{"nodeType":"YulAssignment","src":"3908:54:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3925:2:9","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3943:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"3951:4:9","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:9"},"nodeType":"YulFunctionCall","src":"3939:17:9"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:9","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:9"},"nodeType":"YulFunctionCall","src":"3929:32:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3921:3:9"},"nodeType":"YulFunctionCall","src":"3921:41:9"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3908:9:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1835,"isOffset":false,"isSlot":false,"src":"3943:6:9","valueSize":1},{"declaration":1844,"isOffset":false,"isSlot":false,"src":"3908:9:9","valueSize":1}],"flags":["memory-safe"],"id":1846,"nodeType":"InlineAssembly","src":"3869:103:9"},{"body":{"id":1883,"nodeType":"Block","src":"4015:291:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1857,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"4121:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:9","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1864,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"4150:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1866,"indexExpression":{"id":1865,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"4157:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1862,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:9","typeDescriptions":{}}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1878,"nodeType":"IfStatement","src":"4117:150:9","trueBody":{"id":1877,"nodeType":"Block","src":"4167:100:9","statements":[{"expression":{"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1871,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"4235:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1873,"indexExpression":{"id":1872,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"4242:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1876,"nodeType":"ExpressionStatement","src":"4235:17:9"}]}},{"expression":{"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1879,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"4280:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1882,"nodeType":"ExpressionStatement","src":"4280:15:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1851,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"4003:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1884,"initializationExpression":{"assignments":[1848],"declarations":[{"constant":false,"id":1848,"mutability":"mutable","name":"i","nameLocation":"3995:1:9","nodeType":"VariableDeclaration","scope":1884,"src":"3987:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1850,"initialValue":{"hexValue":"3431","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:9","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:9"},"loopExpression":{"expression":{"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:9","subExpression":{"id":1854,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"4012:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1856,"nodeType":"ExpressionStatement","src":"4010:3:9"},"nodeType":"ForStatement","src":"3982:324:9"},{"expression":{"arguments":[{"id":1887,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"4329:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1885,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:9","typeDescriptions":{}}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1833,"id":1889,"nodeType":"Return","src":"4315:21:9"}]},"documentation":{"id":1827,"nodeType":"StructuredDocumentation","src":"3450:165:9","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1891,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:9","nodeType":"FunctionDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"addr","nameLocation":"3657:4:9","nodeType":"VariableDeclaration","scope":1891,"src":"3649:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1828,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:9"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1891,"src":"3686:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1831,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:9"},"scope":2965,"src":"3620:723:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1927,"nodeType":"Block","src":"4498:104:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1903,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"4521:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1901,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:9","typeDescriptions":{}}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:9","memberName":"length","nodeType":"MemberAccess","src":"4515:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1908,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"4540:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1906,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:9","typeDescriptions":{}}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:9","memberName":"length","nodeType":"MemberAccess","src":"4534:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1915,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"4569:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1913,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:9","typeDescriptions":{}}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1912,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"4553:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1921,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"4592:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1919,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:9","typeDescriptions":{}}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1918,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"4576:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1900,"id":1926,"nodeType":"Return","src":"4508:87:9"}]},"documentation":{"id":1892,"nodeType":"StructuredDocumentation","src":"4349:66:9","text":" @dev Returns true if the two strings are equal."},"id":1928,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:9","nodeType":"FunctionDefinition","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"mutability":"mutable","name":"a","nameLocation":"4449:1:9","nodeType":"VariableDeclaration","scope":1928,"src":"4435:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1893,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"b","nameLocation":"4466:1:9","nodeType":"VariableDeclaration","scope":1928,"src":"4452:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1895,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:9"},"returnParameters":{"id":1900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1928,"src":"4492:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1898,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:9"},"scope":2965,"src":"4420:182:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1946,"nodeType":"Block","src":"4899:64:9","statements":[{"expression":{"arguments":[{"id":1937,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"4926:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1941,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"4942:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1939,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:9","typeDescriptions":{}}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:9","memberName":"length","nodeType":"MemberAccess","src":"4936:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1936,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1947,1978],"referencedDeclaration":1978,"src":"4916:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1935,"id":1945,"nodeType":"Return","src":"4909:47:9"}]},"documentation":{"id":1929,"nodeType":"StructuredDocumentation","src":"4608:214:9","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1947,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:9","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"input","nameLocation":"4860:5:9","nodeType":"VariableDeclaration","scope":1947,"src":"4846:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1930,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:9"},"returnParameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1947,"src":"4890:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:9"},"scope":2965,"src":"4827:136:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1977,"nodeType":"Block","src":"5368:153:9","statements":[{"assignments":[1960,1962],"declarations":[{"constant":false,"id":1960,"mutability":"mutable","name":"success","nameLocation":"5384:7:9","nodeType":"VariableDeclaration","scope":1977,"src":"5379:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1959,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"value","nameLocation":"5401:5:9","nodeType":"VariableDeclaration","scope":1977,"src":"5393:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1968,"initialValue":{"arguments":[{"id":1964,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"5423:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1965,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"5430:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1966,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"5437:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1963,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1999,2036],"referencedDeclaration":2036,"src":"5410:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:9"},{"condition":{"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:9","subExpression":{"id":1969,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"5456:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1974,"nodeType":"IfStatement","src":"5451:41:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1971,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"5472:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1973,"nodeType":"RevertStatement","src":"5465:27:9"}},{"expression":{"id":1975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"5509:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1958,"id":1976,"nodeType":"Return","src":"5502:12:9"}]},"documentation":{"id":1948,"nodeType":"StructuredDocumentation","src":"4969:294:9","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1978,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:9","nodeType":"FunctionDefinition","parameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"input","nameLocation":"5301:5:9","nodeType":"VariableDeclaration","scope":1978,"src":"5287:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1949,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1952,"mutability":"mutable","name":"begin","nameLocation":"5316:5:9","nodeType":"VariableDeclaration","scope":1978,"src":"5308:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1951,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1954,"mutability":"mutable","name":"end","nameLocation":"5331:3:9","nodeType":"VariableDeclaration","scope":1978,"src":"5323:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1953,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:9"},"returnParameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1978,"src":"5359:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1956,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:9"},"scope":2965,"src":"5268:253:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1998,"nodeType":"Block","src":"5842:83:9","statements":[{"expression":{"arguments":[{"id":1989,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"5888:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1993,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"5904:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1991,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:9","typeDescriptions":{}}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:9","memberName":"length","nodeType":"MemberAccess","src":"5898:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1988,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"5859:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1987,"id":1997,"nodeType":"Return","src":"5852:66:9"}]},"documentation":{"id":1979,"nodeType":"StructuredDocumentation","src":"5527:215:9","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1999,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:9","nodeType":"FunctionDefinition","parameters":{"id":1982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"mutability":"mutable","name":"input","nameLocation":"5783:5:9","nodeType":"VariableDeclaration","scope":1999,"src":"5769:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1980,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:9"},"returnParameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1984,"mutability":"mutable","name":"success","nameLocation":"5818:7:9","nodeType":"VariableDeclaration","scope":1999,"src":"5813:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1983,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1986,"mutability":"mutable","name":"value","nameLocation":"5835:5:9","nodeType":"VariableDeclaration","scope":1999,"src":"5827:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1985,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:9"},"scope":2965,"src":"5747:178:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2035,"nodeType":"Block","src":"6327:144:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2013,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"6341:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2016,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"6353:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2014,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:9","typeDescriptions":{}}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:9","memberName":"length","nodeType":"MemberAccess","src":"6347:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2020,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"6370:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2021,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"6378:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2028,"nodeType":"IfStatement","src":"6337:63:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2012,"id":2027,"nodeType":"Return","src":"6383:17:9"}},{"expression":{"arguments":[{"id":2030,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"6446:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2031,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"6453:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2032,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"6460:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2029,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"6417:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2012,"id":2034,"nodeType":"Return","src":"6410:54:9"}]},"documentation":{"id":2000,"nodeType":"StructuredDocumentation","src":"5931:238:9","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2036,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:9","nodeType":"FunctionDefinition","parameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"input","nameLocation":"6219:5:9","nodeType":"VariableDeclaration","scope":2036,"src":"6205:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2001,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2004,"mutability":"mutable","name":"begin","nameLocation":"6242:5:9","nodeType":"VariableDeclaration","scope":2036,"src":"6234:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2006,"mutability":"mutable","name":"end","nameLocation":"6265:3:9","nodeType":"VariableDeclaration","scope":2036,"src":"6257:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2005,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:9"},"returnParameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2009,"mutability":"mutable","name":"success","nameLocation":"6303:7:9","nodeType":"VariableDeclaration","scope":2036,"src":"6298:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2008,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2011,"mutability":"mutable","name":"value","nameLocation":"6320:5:9","nodeType":"VariableDeclaration","scope":2036,"src":"6312:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2010,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:9"},"scope":2965,"src":"6174:297:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2105,"nodeType":"Block","src":"6874:347:9","statements":[{"assignments":[2051],"declarations":[{"constant":false,"id":2051,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:9","nodeType":"VariableDeclaration","scope":2105,"src":"6884:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2050,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2056,"initialValue":{"arguments":[{"id":2054,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"6912:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2052,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:9","typeDescriptions":{}}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:9"},{"assignments":[2058],"declarations":[{"constant":false,"id":2058,"mutability":"mutable","name":"result","nameLocation":"6937:6:9","nodeType":"VariableDeclaration","scope":2105,"src":"6929:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2057,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2060,"initialValue":{"hexValue":"30","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:9"},{"body":{"id":2099,"nodeType":"Block","src":"6995:189:9","statements":[{"assignments":[2072],"declarations":[{"constant":false,"id":2072,"mutability":"mutable","name":"chr","nameLocation":"7015:3:9","nodeType":"VariableDeclaration","scope":2099,"src":"7009:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2071,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2082,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2077,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7064:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2078,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"7072:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2076,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"7041:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2074,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:9","typeDescriptions":{}}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2073,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"7021:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2083,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"7094:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:9","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2090,"nodeType":"IfStatement","src":"7090:30:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2049,"id":2089,"nodeType":"Return","src":"7103:17:9"}},{"expression":{"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2091,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"7134:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2094,"nodeType":"ExpressionStatement","src":"7134:12:9"},{"expression":{"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"7160:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2096,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"7170:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2098,"nodeType":"ExpressionStatement","src":"7160:13:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2065,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"6981:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2066,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"6985:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2100,"initializationExpression":{"assignments":[2062],"declarations":[{"constant":false,"id":2062,"mutability":"mutable","name":"i","nameLocation":"6970:1:9","nodeType":"VariableDeclaration","scope":2100,"src":"6962:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2064,"initialValue":{"id":2063,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"6974:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:9"},"loopExpression":{"expression":{"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:9","subExpression":{"id":2068,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"6992:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2070,"nodeType":"ExpressionStatement","src":"6990:3:9"},"nodeType":"ForStatement","src":"6957:227:9"},{"expression":{"components":[{"hexValue":"74727565","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2102,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"7207:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2049,"id":2104,"nodeType":"Return","src":"7193:21:9"}]},"documentation":{"id":2037,"nodeType":"StructuredDocumentation","src":"6477:224:9","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:9","nodeType":"FunctionDefinition","parameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"input","nameLocation":"6767:5:9","nodeType":"VariableDeclaration","scope":2106,"src":"6753:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2038,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2041,"mutability":"mutable","name":"begin","nameLocation":"6790:5:9","nodeType":"VariableDeclaration","scope":2106,"src":"6782:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2043,"mutability":"mutable","name":"end","nameLocation":"6813:3:9","nodeType":"VariableDeclaration","scope":2106,"src":"6805:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:9"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"success","nameLocation":"6850:7:9","nodeType":"VariableDeclaration","scope":2106,"src":"6845:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2045,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"value","nameLocation":"6867:5:9","nodeType":"VariableDeclaration","scope":2106,"src":"6859:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2047,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:9"},"scope":2965,"src":"6706:515:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2124,"nodeType":"Block","src":"7518:63:9","statements":[{"expression":{"arguments":[{"id":2115,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"7544:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2119,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"7560:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2117,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:9","typeDescriptions":{}}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:9","memberName":"length","nodeType":"MemberAccess","src":"7554:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2114,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2125,2156],"referencedDeclaration":2156,"src":"7535:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2113,"id":2123,"nodeType":"Return","src":"7528:46:9"}]},"documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"7227:216:9","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2125,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:9","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"input","nameLocation":"7480:5:9","nodeType":"VariableDeclaration","scope":2125,"src":"7466:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2108,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:9"},"returnParameters":{"id":2113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2125,"src":"7510:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2111,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:9"},"scope":2965,"src":"7448:133:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2155,"nodeType":"Block","src":"7986:151:9","statements":[{"assignments":[2138,2140],"declarations":[{"constant":false,"id":2138,"mutability":"mutable","name":"success","nameLocation":"8002:7:9","nodeType":"VariableDeclaration","scope":2155,"src":"7997:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2137,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2140,"mutability":"mutable","name":"value","nameLocation":"8018:5:9","nodeType":"VariableDeclaration","scope":2155,"src":"8011:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2139,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2146,"initialValue":{"arguments":[{"id":2142,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"8039:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2143,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"8046:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2144,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"8053:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2141,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2177,2219],"referencedDeclaration":2219,"src":"8027:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:9"},{"condition":{"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:9","subExpression":{"id":2147,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"8072:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2152,"nodeType":"IfStatement","src":"8067:41:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2149,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"8088:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2151,"nodeType":"RevertStatement","src":"8081:27:9"}},{"expression":{"id":2153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"8125:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2136,"id":2154,"nodeType":"Return","src":"8118:12:9"}]},"documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"7587:296:9","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2156,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:9","nodeType":"FunctionDefinition","parameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"input","nameLocation":"7920:5:9","nodeType":"VariableDeclaration","scope":2156,"src":"7906:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2127,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2130,"mutability":"mutable","name":"begin","nameLocation":"7935:5:9","nodeType":"VariableDeclaration","scope":2156,"src":"7927:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"end","nameLocation":"7950:3:9","nodeType":"VariableDeclaration","scope":2156,"src":"7942:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:9"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2156,"src":"7978:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2134,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:9"},"scope":2965,"src":"7888:249:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2176,"nodeType":"Block","src":"8528:82:9","statements":[{"expression":{"arguments":[{"id":2167,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"8573:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2171,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"8589:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2169,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:9","typeDescriptions":{}}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:9","memberName":"length","nodeType":"MemberAccess","src":"8583:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2166,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"8545:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2165,"id":2175,"nodeType":"Return","src":"8538:65:9"}]},"documentation":{"id":2157,"nodeType":"StructuredDocumentation","src":"8143:287:9","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2177,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:9","nodeType":"FunctionDefinition","parameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"input","nameLocation":"8470:5:9","nodeType":"VariableDeclaration","scope":2177,"src":"8456:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2158,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:9"},"returnParameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"success","nameLocation":"8505:7:9","nodeType":"VariableDeclaration","scope":2177,"src":"8500:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2161,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"value","nameLocation":"8521:5:9","nodeType":"VariableDeclaration","scope":2177,"src":"8514:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2163,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:9"},"scope":2965,"src":"8435:175:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2182,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:9","nodeType":"VariableDeclaration","scope":2965,"src":"8616:50:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2178,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:9","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2218,"nodeType":"Block","src":"9132:143:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2196,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"9146:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2199,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"9158:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2197,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:9","typeDescriptions":{}}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:9","memberName":"length","nodeType":"MemberAccess","src":"9152:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2203,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"9175:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2204,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"9183:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2211,"nodeType":"IfStatement","src":"9142:63:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2195,"id":2210,"nodeType":"Return","src":"9188:17:9"}},{"expression":{"arguments":[{"id":2213,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"9250:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2214,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"9257:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2215,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"9264:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2212,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"9222:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2195,"id":2217,"nodeType":"Return","src":"9215:53:9"}]},"documentation":{"id":2183,"nodeType":"StructuredDocumentation","src":"8673:303:9","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2219,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:9","nodeType":"FunctionDefinition","parameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2185,"mutability":"mutable","name":"input","nameLocation":"9025:5:9","nodeType":"VariableDeclaration","scope":2219,"src":"9011:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2184,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2187,"mutability":"mutable","name":"begin","nameLocation":"9048:5:9","nodeType":"VariableDeclaration","scope":2219,"src":"9040:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2186,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2189,"mutability":"mutable","name":"end","nameLocation":"9071:3:9","nodeType":"VariableDeclaration","scope":2219,"src":"9063:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:9"},"returnParameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"success","nameLocation":"9109:7:9","nodeType":"VariableDeclaration","scope":2219,"src":"9104:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2191,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2194,"mutability":"mutable","name":"value","nameLocation":"9125:5:9","nodeType":"VariableDeclaration","scope":2219,"src":"9118:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2193,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:9"},"scope":2965,"src":"8981:294:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2339,"nodeType":"Block","src":"9675:812:9","statements":[{"assignments":[2234],"declarations":[{"constant":false,"id":2234,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:9","nodeType":"VariableDeclaration","scope":2339,"src":"9685:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2233,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2239,"initialValue":{"arguments":[{"id":2237,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"9713:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2235,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:9","typeDescriptions":{}}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:9"},{"assignments":[2241],"declarations":[{"constant":false,"id":2241,"mutability":"mutable","name":"sign","nameLocation":"9783:4:9","nodeType":"VariableDeclaration","scope":2339,"src":"9776:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2240,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2257,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2242,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"9790:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2243,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"9799:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2252,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"9847:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2253,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"9855:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2251,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"9824:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2249,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:9","typeDescriptions":{}}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:9","trueExpression":{"arguments":[{"hexValue":"30","id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2245,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:9","typeDescriptions":{}}},"id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:9"},{"assignments":[2259],"declarations":[{"constant":false,"id":2259,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:9","nodeType":"VariableDeclaration","scope":2339,"src":"9943:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2258,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2266,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2260,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"9963:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2261,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:9","typeDescriptions":{}}},"id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:9"},{"assignments":[2268],"declarations":[{"constant":false,"id":2268,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:9","nodeType":"VariableDeclaration","scope":2339,"src":"9992:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2267,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2275,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2269,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"10012:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2270,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:9","typeDescriptions":{}}},"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:9"},{"assignments":[2277],"declarations":[{"constant":false,"id":2277,"mutability":"mutable","name":"offset","nameLocation":"10049:6:9","nodeType":"VariableDeclaration","scope":2339,"src":"10041:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2284,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2278,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"10059:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2279,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"10075:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:9","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"10058:37:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:9"},{"assignments":[2286,2288],"declarations":[{"constant":false,"id":2286,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:9","nodeType":"VariableDeclaration","scope":2339,"src":"10109:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2285,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2288,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:9","nodeType":"VariableDeclaration","scope":2339,"src":"10126:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2296,"initialValue":{"arguments":[{"id":2290,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"10159:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2291,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"10166:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2292,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"10174:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2294,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"10182:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2289,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1999,2036],"referencedDeclaration":2036,"src":"10146:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2297,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"10201:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2298,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"10215:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2299,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"10226:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2317,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"10343:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2318,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"10357:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2320,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"10373:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2321,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"10385:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2232,"id":2336,"nodeType":"Return","src":"10463:17:9"},"id":2337,"nodeType":"IfStatement","src":"10339:141:9","trueBody":{"id":2332,"nodeType":"Block","src":"10401:56:9","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2326,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2325,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10429:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:9","memberName":"min","nodeType":"MemberAccess","src":"10429:16:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2232,"id":2331,"nodeType":"Return","src":"10415:31:9"}]}},"id":2338,"nodeType":"IfStatement","src":"10197:283:9","trueBody":{"id":2316,"nodeType":"Block","src":"10242:91:9","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2303,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"10270:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2311,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"10312:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2309,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:9","typeDescriptions":{}}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:9","trueExpression":{"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:9","subExpression":{"arguments":[{"id":2306,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"10293:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2304,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:9","typeDescriptions":{}}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2232,"id":2315,"nodeType":"Return","src":"10256:66:9"}]}}]},"documentation":{"id":2220,"nodeType":"StructuredDocumentation","src":"9281:223:9","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2340,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:9","nodeType":"FunctionDefinition","parameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"mutability":"mutable","name":"input","nameLocation":"9569:5:9","nodeType":"VariableDeclaration","scope":2340,"src":"9555:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2221,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2224,"mutability":"mutable","name":"begin","nameLocation":"9592:5:9","nodeType":"VariableDeclaration","scope":2340,"src":"9584:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2223,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2226,"mutability":"mutable","name":"end","nameLocation":"9615:3:9","nodeType":"VariableDeclaration","scope":2340,"src":"9607:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2225,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:9"},"returnParameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"mutability":"mutable","name":"success","nameLocation":"9652:7:9","nodeType":"VariableDeclaration","scope":2340,"src":"9647:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2228,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"value","nameLocation":"9668:5:9","nodeType":"VariableDeclaration","scope":2340,"src":"9661:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2230,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:9"},"scope":2965,"src":"9509:978:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2358,"nodeType":"Block","src":"10832:67:9","statements":[{"expression":{"arguments":[{"id":2349,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"10862:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2353,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"10878:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2351,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:9","typeDescriptions":{}}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:9","memberName":"length","nodeType":"MemberAccess","src":"10872:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2348,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2359,2390],"referencedDeclaration":2390,"src":"10849:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2347,"id":2357,"nodeType":"Return","src":"10842:50:9"}]},"documentation":{"id":2341,"nodeType":"StructuredDocumentation","src":"10493:259:9","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2359,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:9","nodeType":"FunctionDefinition","parameters":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2343,"mutability":"mutable","name":"input","nameLocation":"10793:5:9","nodeType":"VariableDeclaration","scope":2359,"src":"10779:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2342,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:9"},"returnParameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2359,"src":"10823:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:9"},"scope":2965,"src":"10757:142:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2389,"nodeType":"Block","src":"11320:156:9","statements":[{"assignments":[2372,2374],"declarations":[{"constant":false,"id":2372,"mutability":"mutable","name":"success","nameLocation":"11336:7:9","nodeType":"VariableDeclaration","scope":2389,"src":"11331:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2371,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2374,"mutability":"mutable","name":"value","nameLocation":"11353:5:9","nodeType":"VariableDeclaration","scope":2389,"src":"11345:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2373,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2380,"initialValue":{"arguments":[{"id":2376,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"11378:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2377,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"11385:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2378,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"11392:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2375,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2411,2448],"referencedDeclaration":2448,"src":"11362:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:9"},{"condition":{"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:9","subExpression":{"id":2381,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"11411:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2386,"nodeType":"IfStatement","src":"11406:41:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2383,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"11427:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2385,"nodeType":"RevertStatement","src":"11420:27:9"}},{"expression":{"id":2387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"11464:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2370,"id":2388,"nodeType":"Return","src":"11457:12:9"}]},"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"10905:307:9","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2390,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:9","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"input","nameLocation":"11253:5:9","nodeType":"VariableDeclaration","scope":2390,"src":"11239:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2361,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"begin","nameLocation":"11268:5:9","nodeType":"VariableDeclaration","scope":2390,"src":"11260:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2363,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"end","nameLocation":"11283:3:9","nodeType":"VariableDeclaration","scope":2390,"src":"11275:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:9"},"returnParameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2390,"src":"11311:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2368,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:9"},"scope":2965,"src":"11217:259:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2410,"nodeType":"Block","src":"11803:86:9","statements":[{"expression":{"arguments":[{"id":2401,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"11852:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2405,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"11868:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2403,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:9","typeDescriptions":{}}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:9","memberName":"length","nodeType":"MemberAccess","src":"11862:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2400,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"11820:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2399,"id":2409,"nodeType":"Return","src":"11813:69:9"}]},"documentation":{"id":2391,"nodeType":"StructuredDocumentation","src":"11482:218:9","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2411,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:9","nodeType":"FunctionDefinition","parameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"input","nameLocation":"11744:5:9","nodeType":"VariableDeclaration","scope":2411,"src":"11730:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2392,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:9"},"returnParameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"success","nameLocation":"11779:7:9","nodeType":"VariableDeclaration","scope":2411,"src":"11774:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2395,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"value","nameLocation":"11796:5:9","nodeType":"VariableDeclaration","scope":2411,"src":"11788:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:9"},"scope":2965,"src":"11705:184:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2447,"nodeType":"Block","src":"12297:147:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"12311:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2428,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"12323:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2426,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:9","typeDescriptions":{}}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:9","memberName":"length","nodeType":"MemberAccess","src":"12317:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2432,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"12340:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2433,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"12348:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2440,"nodeType":"IfStatement","src":"12307:63:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2424,"id":2439,"nodeType":"Return","src":"12353:17:9"}},{"expression":{"arguments":[{"id":2442,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"12419:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2443,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"12426:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2444,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"12433:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2441,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"12387:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2424,"id":2446,"nodeType":"Return","src":"12380:57:9"}]},"documentation":{"id":2412,"nodeType":"StructuredDocumentation","src":"11895:241:9","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2448,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:9","nodeType":"FunctionDefinition","parameters":{"id":2419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"input","nameLocation":"12189:5:9","nodeType":"VariableDeclaration","scope":2448,"src":"12175:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2413,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2416,"mutability":"mutable","name":"begin","nameLocation":"12212:5:9","nodeType":"VariableDeclaration","scope":2448,"src":"12204:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2415,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2418,"mutability":"mutable","name":"end","nameLocation":"12235:3:9","nodeType":"VariableDeclaration","scope":2448,"src":"12227:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2417,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:9"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"success","nameLocation":"12273:7:9","nodeType":"VariableDeclaration","scope":2448,"src":"12268:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2420,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"value","nameLocation":"12290:5:9","nodeType":"VariableDeclaration","scope":2448,"src":"12282:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:9"},"scope":2965,"src":"12141:303:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2550,"nodeType":"Block","src":"12853:881:9","statements":[{"assignments":[2463],"declarations":[{"constant":false,"id":2463,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:9","nodeType":"VariableDeclaration","scope":2550,"src":"12863:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2462,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2468,"initialValue":{"arguments":[{"id":2466,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"12891:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2464,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:9","typeDescriptions":{}}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:9"},{"assignments":[2470],"declarations":[{"constant":false,"id":2470,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:9","nodeType":"VariableDeclaration","scope":2550,"src":"12945:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2469,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2490,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2471,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"12963:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2472,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"12969:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2480,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"13013:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2481,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"13021:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2479,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"12990:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2477,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:9","typeDescriptions":{}}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2484,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:9","typeDescriptions":{}}},"id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:9"},{"assignments":[2492],"declarations":[{"constant":false,"id":2492,"mutability":"mutable","name":"offset","nameLocation":"13133:6:9","nodeType":"VariableDeclaration","scope":2550,"src":"13125:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2498,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2493,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"13142:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:9","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"13142:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:9"},{"assignments":[2500],"declarations":[{"constant":false,"id":2500,"mutability":"mutable","name":"result","nameLocation":"13183:6:9","nodeType":"VariableDeclaration","scope":2550,"src":"13175:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2502,"initialValue":{"hexValue":"30","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:9"},{"body":{"id":2544,"nodeType":"Block","src":"13250:447:9","statements":[{"assignments":[2516],"declarations":[{"constant":false,"id":2516,"mutability":"mutable","name":"chr","nameLocation":"13270:3:9","nodeType":"VariableDeclaration","scope":2544,"src":"13264:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2515,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2526,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2521,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"13319:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2522,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"13327:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2520,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"13296:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2518,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:9","typeDescriptions":{}}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2517,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"13276:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2527,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"13349:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"nodeType":"IfStatement","src":"13345:31:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2461,"id":2533,"nodeType":"Return","src":"13359:17:9"}},{"expression":{"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"13390:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2538,"nodeType":"ExpressionStatement","src":"13390:12:9"},{"id":2543,"nodeType":"UncheckedBlock","src":"13416:271:9","statements":[{"expression":{"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2539,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"13659:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2540,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"13669:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2542,"nodeType":"ExpressionStatement","src":"13659:13:9"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2509,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"13236:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2510,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"13240:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2545,"initializationExpression":{"assignments":[2504],"declarations":[{"constant":false,"id":2504,"mutability":"mutable","name":"i","nameLocation":"13216:1:9","nodeType":"VariableDeclaration","scope":2545,"src":"13208:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2508,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2505,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"13220:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2506,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"13228:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:9"},"loopExpression":{"expression":{"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:9","subExpression":{"id":2512,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"13247:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2514,"nodeType":"ExpressionStatement","src":"13245:3:9"},"nodeType":"ForStatement","src":"13203:494:9"},{"expression":{"components":[{"hexValue":"74727565","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2547,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"13720:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2461,"id":2549,"nodeType":"Return","src":"13706:21:9"}]},"documentation":{"id":2449,"nodeType":"StructuredDocumentation","src":"12450:227:9","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2551,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:9","nodeType":"FunctionDefinition","parameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"mutability":"mutable","name":"input","nameLocation":"12746:5:9","nodeType":"VariableDeclaration","scope":2551,"src":"12732:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2450,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2453,"mutability":"mutable","name":"begin","nameLocation":"12769:5:9","nodeType":"VariableDeclaration","scope":2551,"src":"12761:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2455,"mutability":"mutable","name":"end","nameLocation":"12792:3:9","nodeType":"VariableDeclaration","scope":2551,"src":"12784:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:9"},"returnParameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"success","nameLocation":"12829:7:9","nodeType":"VariableDeclaration","scope":2551,"src":"12824:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2457,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2460,"mutability":"mutable","name":"value","nameLocation":"12846:5:9","nodeType":"VariableDeclaration","scope":2551,"src":"12838:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2459,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:9"},"scope":2965,"src":"12682:1052:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2569,"nodeType":"Block","src":"14032:67:9","statements":[{"expression":{"arguments":[{"id":2560,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"14062:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2564,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"14078:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2562,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:9","typeDescriptions":{}}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:9","memberName":"length","nodeType":"MemberAccess","src":"14072:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2559,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2570,2601],"referencedDeclaration":2601,"src":"14049:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2558,"id":2568,"nodeType":"Return","src":"14042:50:9"}]},"documentation":{"id":2552,"nodeType":"StructuredDocumentation","src":"13740:212:9","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2570,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:9","nodeType":"FunctionDefinition","parameters":{"id":2555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"mutability":"mutable","name":"input","nameLocation":"13993:5:9","nodeType":"VariableDeclaration","scope":2570,"src":"13979:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2553,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:9"},"returnParameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2570,"src":"14023:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2556,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:9"},"scope":2965,"src":"13957:142:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2600,"nodeType":"Block","src":"14472:165:9","statements":[{"assignments":[2583,2585],"declarations":[{"constant":false,"id":2583,"mutability":"mutable","name":"success","nameLocation":"14488:7:9","nodeType":"VariableDeclaration","scope":2600,"src":"14483:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2582,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2585,"mutability":"mutable","name":"value","nameLocation":"14505:5:9","nodeType":"VariableDeclaration","scope":2600,"src":"14497:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2584,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2591,"initialValue":{"arguments":[{"id":2587,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"14530:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2588,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"14537:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2589,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"14544:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2586,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2622,2726],"referencedDeclaration":2726,"src":"14514:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:9"},{"condition":{"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:9","subExpression":{"id":2592,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"14563:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2597,"nodeType":"IfStatement","src":"14558:50:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2594,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"14579:27:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2596,"nodeType":"RevertStatement","src":"14572:36:9"}},{"expression":{"id":2598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"14625:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2581,"id":2599,"nodeType":"Return","src":"14618:12:9"}]},"documentation":{"id":2571,"nodeType":"StructuredDocumentation","src":"14105:259:9","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2601,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:9","nodeType":"FunctionDefinition","parameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"input","nameLocation":"14405:5:9","nodeType":"VariableDeclaration","scope":2601,"src":"14391:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2572,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"begin","nameLocation":"14420:5:9","nodeType":"VariableDeclaration","scope":2601,"src":"14412:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2574,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2577,"mutability":"mutable","name":"end","nameLocation":"14435:3:9","nodeType":"VariableDeclaration","scope":2601,"src":"14427:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:9"},"returnParameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2601,"src":"14463:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2579,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:9"},"scope":2965,"src":"14369:268:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2621,"nodeType":"Block","src":"14944:70:9","statements":[{"expression":{"arguments":[{"id":2612,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"14977:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2616,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"14993:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2614,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:9","typeDescriptions":{}}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:9","memberName":"length","nodeType":"MemberAccess","src":"14987:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2611,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2622,2726],"referencedDeclaration":2726,"src":"14961:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2610,"id":2620,"nodeType":"Return","src":"14954:53:9"}]},"documentation":{"id":2602,"nodeType":"StructuredDocumentation","src":"14643:198:9","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2622,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:9","nodeType":"FunctionDefinition","parameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"mutability":"mutable","name":"input","nameLocation":"14885:5:9","nodeType":"VariableDeclaration","scope":2622,"src":"14871:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2603,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:9"},"returnParameters":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"success","nameLocation":"14920:7:9","nodeType":"VariableDeclaration","scope":2622,"src":"14915:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2606,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2609,"mutability":"mutable","name":"value","nameLocation":"14937:5:9","nodeType":"VariableDeclaration","scope":2622,"src":"14929:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2608,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:9"},"scope":2965,"src":"14846:168:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2725,"nodeType":"Block","src":"15407:733:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2636,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"15421:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2639,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"15433:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2637,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:9","typeDescriptions":{}}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:9","memberName":"length","nodeType":"MemberAccess","src":"15427:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2643,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"15450:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2644,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"15458:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2654,"nodeType":"IfStatement","src":"15417:72:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2648,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:9","typeDescriptions":{}}},"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2652,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2635,"id":2653,"nodeType":"Return","src":"15463:26:9"}},{"assignments":[2656],"declarations":[{"constant":false,"id":2656,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:9","nodeType":"VariableDeclaration","scope":2725,"src":"15500:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2655,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2679,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2657,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"15518:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2658,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"15524:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2668,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"15574:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2666,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:9","typeDescriptions":{}}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2670,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"15582:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2665,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"15545:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2663,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:9","typeDescriptions":{}}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2673,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:9","typeDescriptions":{}}},"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:9"},{"assignments":[2681],"declarations":[{"constant":false,"id":2681,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:9","nodeType":"VariableDeclaration","scope":2725,"src":"15686:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2680,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2689,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:9","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2683,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"15716:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:9","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"15716:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2690,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"15803:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2691,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"15809:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2693,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"15818:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2723,"nodeType":"Block","src":"16083:51:9","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2717,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:9","typeDescriptions":{}}},"id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2635,"id":2722,"nodeType":"Return","src":"16097:26:9"}]},"id":2724,"nodeType":"IfStatement","src":"15799:335:9","trueBody":{"id":2715,"nodeType":"Block","src":"15834:243:9","statements":[{"assignments":[2696,2698],"declarations":[{"constant":false,"id":2696,"mutability":"mutable","name":"s","nameLocation":"15955:1:9","nodeType":"VariableDeclaration","scope":2715,"src":"15950:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2695,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2698,"mutability":"mutable","name":"v","nameLocation":"15966:1:9","nodeType":"VariableDeclaration","scope":2715,"src":"15958:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2704,"initialValue":{"arguments":[{"id":2700,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"16003:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2701,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"16010:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2702,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"16017:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2699,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"15971:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:9"},{"expression":{"components":[{"id":2705,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"16043:1:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2710,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"16062:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2708,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:9","typeDescriptions":{}}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2706,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:9","typeDescriptions":{}}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2635,"id":2714,"nodeType":"Return","src":"16035:31:9"}]}}]},"documentation":{"id":2623,"nodeType":"StructuredDocumentation","src":"15020:226:9","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2726,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:9","nodeType":"FunctionDefinition","parameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"input","nameLocation":"15299:5:9","nodeType":"VariableDeclaration","scope":2726,"src":"15285:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2624,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"begin","nameLocation":"15322:5:9","nodeType":"VariableDeclaration","scope":2726,"src":"15314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2626,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2629,"mutability":"mutable","name":"end","nameLocation":"15345:3:9","nodeType":"VariableDeclaration","scope":2726,"src":"15337:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2628,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:9"},"returnParameters":{"id":2635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"success","nameLocation":"15383:7:9","nodeType":"VariableDeclaration","scope":2726,"src":"15378:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2631,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2634,"mutability":"mutable","name":"value","nameLocation":"15400:5:9","nodeType":"VariableDeclaration","scope":2726,"src":"15392:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2633,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:9"},"scope":2965,"src":"15251:889:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2785,"nodeType":"Block","src":"16209:461:9","statements":[{"assignments":[2734],"declarations":[{"constant":false,"id":2734,"mutability":"mutable","name":"value","nameLocation":"16225:5:9","nodeType":"VariableDeclaration","scope":2785,"src":"16219:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2733,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2739,"initialValue":{"arguments":[{"id":2737,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"16239:3:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2735,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:9","typeDescriptions":{}}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:9"},{"id":2782,"nodeType":"UncheckedBlock","src":"16403:238:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16431:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:9","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16445:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:9","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16491:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16505:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:9","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16552:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16566:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:9","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2774,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2773,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"16615:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:9","memberName":"max","nodeType":"MemberAccess","src":"16615:15:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2732,"id":2778,"nodeType":"Return","src":"16608:22:9"},"id":2779,"nodeType":"IfStatement","src":"16548:82:9","trueBody":{"expression":{"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16578:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:9","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2772,"nodeType":"ExpressionStatement","src":"16578:11:9"}},"id":2780,"nodeType":"IfStatement","src":"16487:143:9","trueBody":{"expression":{"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16518:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:9","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2761,"nodeType":"ExpressionStatement","src":"16518:11:9"}},"id":2781,"nodeType":"IfStatement","src":"16427:203:9","trueBody":{"expression":{"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16457:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:9","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2750,"nodeType":"ExpressionStatement","src":"16457:11:9"}}]},{"expression":{"id":2783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16658:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2732,"id":2784,"nodeType":"Return","src":"16651:12:9"}]},"id":2786,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:9","nodeType":"FunctionDefinition","parameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"chr","nameLocation":"16175:3:9","nodeType":"VariableDeclaration","scope":2786,"src":"16168:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2727,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:9"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2786,"src":"16202:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2730,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:9"},"scope":2965,"src":"16146:524:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2951,"nodeType":"Block","src":"17336:1331:9","statements":[{"assignments":[2795],"declarations":[{"constant":false,"id":2795,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:9","nodeType":"VariableDeclaration","scope":2951,"src":"17346:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2794,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2800,"initialValue":{"arguments":[{"id":2798,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"17374:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2796,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:9","typeDescriptions":{}}},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:9"},{"assignments":[2802],"declarations":[{"constant":false,"id":2802,"mutability":"mutable","name":"output","nameLocation":"17403:6:9","nodeType":"VariableDeclaration","scope":2951,"src":"17390:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2801,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2810,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2806,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"17426:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:9","memberName":"length","nodeType":"MemberAccess","src":"17426:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2803,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:9"},{"assignments":[2812],"declarations":[{"constant":false,"id":2812,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:9","nodeType":"VariableDeclaration","scope":2951,"src":"17473:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2811,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2814,"initialValue":{"hexValue":"30","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:9"},{"body":{"id":2943,"nodeType":"Block","src":"17548:854:9","statements":[{"assignments":[2826],"declarations":[{"constant":false,"id":2826,"mutability":"mutable","name":"char","nameLocation":"17569:4:9","nodeType":"VariableDeclaration","scope":2943,"src":"17562:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2825,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2834,"initialValue":{"arguments":[{"arguments":[{"id":2830,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"17606:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2831,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"17614:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2829,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"17583:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2827,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:9","typeDescriptions":{}}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:9"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2835,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"17637:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":2839,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"17672:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2837,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:9","typeDescriptions":{}}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2842,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2847,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2941,"nodeType":"Block","src":"18330:62:9","statements":[{"expression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2934,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"18348:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2937,"indexExpression":{"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:9","subExpression":{"id":2935,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"18355:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2938,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"18373:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2940,"nodeType":"ExpressionStatement","src":"18348:29:9"}]},"id":2942,"nodeType":"IfStatement","src":"17631:761:9","trueBody":{"id":2933,"nodeType":"Block","src":"17687:637:9","statements":[{"expression":{"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2848,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"17705:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2851,"indexExpression":{"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:9","subExpression":{"id":2849,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"17712:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2854,"nodeType":"ExpressionStatement","src":"17705:29:9"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2855,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"17756:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2865,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"17825:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:9","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2875,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"17894:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2885,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"17963:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:9","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2895,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"18032:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:9","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"18101:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:9","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2915,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"18171:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:9","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2926,"nodeType":"IfStatement","src":"18167:143:9","trueBody":{"id":2925,"nodeType":"Block","src":"18185:125:9","statements":[{"expression":{"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2918,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"18263:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2921,"indexExpression":{"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:9","subExpression":{"id":2919,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"18270:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2924,"nodeType":"ExpressionStatement","src":"18263:28:9"}]}},"id":2927,"nodeType":"IfStatement","src":"18097:213:9","trueBody":{"expression":{"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2908,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"18115:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2911,"indexExpression":{"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:9","subExpression":{"id":2909,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"18122:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2914,"nodeType":"ExpressionStatement","src":"18115:29:9"}},"id":2928,"nodeType":"IfStatement","src":"18028:282:9","trueBody":{"expression":{"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2898,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"18046:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2901,"indexExpression":{"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:9","subExpression":{"id":2899,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"18053:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2904,"nodeType":"ExpressionStatement","src":"18046:28:9"}},"id":2929,"nodeType":"IfStatement","src":"17959:351:9","trueBody":{"expression":{"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2888,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"17977:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2891,"indexExpression":{"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:9","subExpression":{"id":2889,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"17984:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2894,"nodeType":"ExpressionStatement","src":"17977:28:9"}},"id":2930,"nodeType":"IfStatement","src":"17890:420:9","trueBody":{"expression":{"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2878,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"17908:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2881,"indexExpression":{"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:9","subExpression":{"id":2879,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"17915:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2884,"nodeType":"ExpressionStatement","src":"17908:28:9"}},"id":2931,"nodeType":"IfStatement","src":"17821:489:9","trueBody":{"expression":{"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2868,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"17839:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2871,"indexExpression":{"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:9","subExpression":{"id":2869,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"17846:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2874,"nodeType":"ExpressionStatement","src":"17839:28:9"}},"id":2932,"nodeType":"IfStatement","src":"17752:558:9","trueBody":{"expression":{"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2858,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"17770:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2861,"indexExpression":{"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:9","subExpression":{"id":2859,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"17777:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2864,"nodeType":"ExpressionStatement","src":"17770:28:9"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2818,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"17524:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2819,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"17528:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:9","memberName":"length","nodeType":"MemberAccess","src":"17528:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2944,"initializationExpression":{"assignments":[2816],"declarations":[{"constant":false,"id":2816,"mutability":"mutable","name":"i","nameLocation":"17521:1:9","nodeType":"VariableDeclaration","scope":2944,"src":"17513:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2817,"nodeType":"VariableDeclarationStatement","src":"17513:9:9"},"loopExpression":{"expression":{"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:9","subExpression":{"id":2822,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"17545:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2824,"nodeType":"ExpressionStatement","src":"17543:3:9"},"nodeType":"ForStatement","src":"17508:894:9"},{"AST":{"nodeType":"YulBlock","src":"18500:129:9","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18521:6:9"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18529:12:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18514:6:9"},"nodeType":"YulFunctionCall","src":"18514:28:9"},"nodeType":"YulExpressionStatement","src":"18514:28:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18562:4:9","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18572:6:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18584:1:9","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18591:1:9","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18598:12:9"},{"kind":"number","nodeType":"YulLiteral","src":"18612:2:9","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:9"},"nodeType":"YulFunctionCall","src":"18594:21:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18587:3:9"},"nodeType":"YulFunctionCall","src":"18587:29:9"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18580:3:9"},"nodeType":"YulFunctionCall","src":"18580:37:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18568:3:9"},"nodeType":"YulFunctionCall","src":"18568:50:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18555:6:9"},"nodeType":"YulFunctionCall","src":"18555:64:9"},"nodeType":"YulExpressionStatement","src":"18555:64:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":2802,"isOffset":false,"isSlot":false,"src":"18521:6:9","valueSize":1},{"declaration":2802,"isOffset":false,"isSlot":false,"src":"18572:6:9","valueSize":1},{"declaration":2812,"isOffset":false,"isSlot":false,"src":"18529:12:9","valueSize":1},{"declaration":2812,"isOffset":false,"isSlot":false,"src":"18598:12:9","valueSize":1}],"flags":["memory-safe"],"id":2945,"nodeType":"InlineAssembly","src":"18475:154:9"},{"expression":{"arguments":[{"id":2948,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"18653:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2946,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:9","typeDescriptions":{}}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2793,"id":2950,"nodeType":"Return","src":"18639:21:9"}]},"documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"16676:576:9","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":2952,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:9","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"input","nameLocation":"17291:5:9","nodeType":"VariableDeclaration","scope":2952,"src":"17277:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2788,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:9"},"returnParameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2952,"src":"17321:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2791,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:9"},"scope":2965,"src":"17257:1410:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2963,"nodeType":"Block","src":"19052:225:9","statements":[{"AST":{"nodeType":"YulBlock","src":"19201:70:9","statements":[{"nodeType":"YulAssignment","src":"19215:46:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19238:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"19246:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19234:3:9"},"nodeType":"YulFunctionCall","src":"19234:17:9"},{"name":"offset","nodeType":"YulIdentifier","src":"19253:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19230:3:9"},"nodeType":"YulFunctionCall","src":"19230:30:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19224:5:9"},"nodeType":"YulFunctionCall","src":"19224:37:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19215:5:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2955,"isOffset":false,"isSlot":false,"src":"19238:6:9","valueSize":1},{"declaration":2957,"isOffset":false,"isSlot":false,"src":"19253:6:9","valueSize":1},{"declaration":2960,"isOffset":false,"isSlot":false,"src":"19215:5:9","valueSize":1}],"flags":["memory-safe"],"id":2962,"nodeType":"InlineAssembly","src":"19176:95:9"}]},"documentation":{"id":2953,"nodeType":"StructuredDocumentation","src":"18673:268:9","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2964,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:9","nodeType":"FunctionDefinition","parameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:9","nodeType":"VariableDeclaration","scope":2964,"src":"18978:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2954,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2957,"mutability":"mutable","name":"offset","nameLocation":"19007:6:9","nodeType":"VariableDeclaration","scope":2964,"src":"18999:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:9"},"returnParameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"value","nameLocation":"19045:5:9","nodeType":"VariableDeclaration","scope":2964,"src":"19037:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:9"},"scope":2965,"src":"18946:331:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2966,"src":"297:18982:9","usedErrors":[1623,1626,1629],"usedEvents":[]}],"src":"101:19179:9"},"id":9},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3313]},"id":3314,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2967,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2968,"nodeType":"StructuredDocumentation","src":"138:205:10","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3313,"linearizedBaseContracts":[3313],"name":"ECDSA","nameLocation":"352:5:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2973,"members":[{"id":2969,"name":"NoError","nameLocation":"392:7:10","nodeType":"EnumValue","src":"392:7:10"},{"id":2970,"name":"InvalidSignature","nameLocation":"409:16:10","nodeType":"EnumValue","src":"409:16:10"},{"id":2971,"name":"InvalidSignatureLength","nameLocation":"435:22:10","nodeType":"EnumValue","src":"435:22:10"},{"id":2972,"name":"InvalidSignatureS","nameLocation":"467:17:10","nodeType":"EnumValue","src":"467:17:10"}],"name":"RecoverError","nameLocation":"369:12:10","nodeType":"EnumDefinition","src":"364:126:10"},{"documentation":{"id":2974,"nodeType":"StructuredDocumentation","src":"496:63:10","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2976,"name":"ECDSAInvalidSignature","nameLocation":"570:21:10","nodeType":"ErrorDefinition","parameters":{"id":2975,"nodeType":"ParameterList","parameters":[],"src":"591:2:10"},"src":"564:30:10"},{"documentation":{"id":2977,"nodeType":"StructuredDocumentation","src":"600:60:10","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2981,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:10","nodeType":"ErrorDefinition","parameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"length","nameLocation":"707:6:10","nodeType":"VariableDeclaration","scope":2981,"src":"699:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:10"},"src":"665:50:10"},{"documentation":{"id":2982,"nodeType":"StructuredDocumentation","src":"721:85:10","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2986,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:10","nodeType":"ErrorDefinition","parameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2984,"mutability":"mutable","name":"s","nameLocation":"848:1:10","nodeType":"VariableDeclaration","scope":2986,"src":"840:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:10"},"src":"811:40:10"},{"body":{"id":3038,"nodeType":"Block","src":"2285:622:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3001,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"2299:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:10","memberName":"length","nodeType":"MemberAccess","src":"2299:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:10","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3036,"nodeType":"Block","src":"2793:108:10","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3023,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:10","typeDescriptions":{}}},"id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3027,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"2827:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2973_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:10","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2971,"src":"2827:35:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3031,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"2872:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:10","memberName":"length","nodeType":"MemberAccess","src":"2872:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:10","typeDescriptions":{}}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3034,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2973_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3000,"id":3035,"nodeType":"Return","src":"2807:83:10"}]},"id":3037,"nodeType":"IfStatement","src":"2295:606:10","trueBody":{"id":3022,"nodeType":"Block","src":"2323:464:10","statements":[{"assignments":[3006],"declarations":[{"constant":false,"id":3006,"mutability":"mutable","name":"r","nameLocation":"2345:1:10","nodeType":"VariableDeclaration","scope":3022,"src":"2337:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3007,"nodeType":"VariableDeclarationStatement","src":"2337:9:10"},{"assignments":[3009],"declarations":[{"constant":false,"id":3009,"mutability":"mutable","name":"s","nameLocation":"2368:1:10","nodeType":"VariableDeclaration","scope":3022,"src":"2360:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3010,"nodeType":"VariableDeclarationStatement","src":"2360:9:10"},{"assignments":[3012],"declarations":[{"constant":false,"id":3012,"mutability":"mutable","name":"v","nameLocation":"2389:1:10","nodeType":"VariableDeclaration","scope":3022,"src":"2383:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3011,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3013,"nodeType":"VariableDeclarationStatement","src":"2383:7:10"},{"AST":{"nodeType":"YulBlock","src":"2560:171:10","statements":[{"nodeType":"YulAssignment","src":"2578:32:10","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:10"},"nodeType":"YulFunctionCall","src":"2589:20:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:10"},"nodeType":"YulFunctionCall","src":"2583:27:10"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:10"}]},{"nodeType":"YulAssignment","src":"2627:32:10","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:10"},"nodeType":"YulFunctionCall","src":"2638:20:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:10"},"nodeType":"YulFunctionCall","src":"2632:27:10"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:10"}]},{"nodeType":"YulAssignment","src":"2676:41:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:10","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:10"},"nodeType":"YulFunctionCall","src":"2695:20:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:10"},"nodeType":"YulFunctionCall","src":"2689:27:10"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:10"},"nodeType":"YulFunctionCall","src":"2681:36:10"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3006,"isOffset":false,"isSlot":false,"src":"2578:1:10","valueSize":1},{"declaration":3009,"isOffset":false,"isSlot":false,"src":"2627:1:10","valueSize":1},{"declaration":2991,"isOffset":false,"isSlot":false,"src":"2593:9:10","valueSize":1},{"declaration":2991,"isOffset":false,"isSlot":false,"src":"2642:9:10","valueSize":1},{"declaration":2991,"isOffset":false,"isSlot":false,"src":"2699:9:10","valueSize":1},{"declaration":3012,"isOffset":false,"isSlot":false,"src":"2676:1:10","valueSize":1}],"flags":["memory-safe"],"id":3014,"nodeType":"InlineAssembly","src":"2535:196:10"},{"expression":{"arguments":[{"id":3016,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"2762:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3017,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"2768:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3018,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"2771:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3019,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"2774:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3015,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3039,3119,3227],"referencedDeclaration":3227,"src":"2751:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2973_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2973_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3000,"id":3021,"nodeType":"Return","src":"2744:32:10"}]}}]},"documentation":{"id":2987,"nodeType":"StructuredDocumentation","src":"857:1267:10","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3039,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:10","nodeType":"FunctionDefinition","parameters":{"id":2992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2989,"mutability":"mutable","name":"hash","nameLocation":"2166:4:10","nodeType":"VariableDeclaration","scope":3039,"src":"2158:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2991,"mutability":"mutable","name":"signature","nameLocation":"2193:9:10","nodeType":"VariableDeclaration","scope":3039,"src":"2180:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2990,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:10"},"returnParameters":{"id":3000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2994,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:10","nodeType":"VariableDeclaration","scope":3039,"src":"2232:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2993,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2997,"mutability":"mutable","name":"err","nameLocation":"2264:3:10","nodeType":"VariableDeclaration","scope":3039,"src":"2251:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2996,"nodeType":"UserDefinedTypeName","pathNode":{"id":2995,"name":"RecoverError","nameLocations":["2251:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2973,"src":"2251:12:10"},"referencedDeclaration":2973,"src":"2251:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2999,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:10","nodeType":"VariableDeclaration","scope":3039,"src":"2269:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:10"},"scope":3313,"src":"2129:778:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3068,"nodeType":"Block","src":"3801:168:10","statements":[{"assignments":[3050,3053,3055],"declarations":[{"constant":false,"id":3050,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:10","nodeType":"VariableDeclaration","scope":3068,"src":"3812:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3049,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3053,"mutability":"mutable","name":"error","nameLocation":"3844:5:10","nodeType":"VariableDeclaration","scope":3068,"src":"3831:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3052,"nodeType":"UserDefinedTypeName","pathNode":{"id":3051,"name":"RecoverError","nameLocations":["3831:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2973,"src":"3831:12:10"},"referencedDeclaration":2973,"src":"3831:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3055,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:10","nodeType":"VariableDeclaration","scope":3068,"src":"3851:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3060,"initialValue":{"arguments":[{"id":3057,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"3882:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3058,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"3888:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3056,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3039,3119,3227],"referencedDeclaration":3039,"src":"3871:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2973_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2973_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:10"},{"expression":{"arguments":[{"id":3062,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"3920:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},{"id":3063,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"3927:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3061,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"3908:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2973_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3065,"nodeType":"ExpressionStatement","src":"3908:28:10"},{"expression":{"id":3066,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"3953:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3048,"id":3067,"nodeType":"Return","src":"3946:16:10"}]},"documentation":{"id":3040,"nodeType":"StructuredDocumentation","src":"2913:796:10","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3069,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:10","nodeType":"FunctionDefinition","parameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"hash","nameLocation":"3739:4:10","nodeType":"VariableDeclaration","scope":3069,"src":"3731:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3044,"mutability":"mutable","name":"signature","nameLocation":"3758:9:10","nodeType":"VariableDeclaration","scope":3069,"src":"3745:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3043,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:10"},"returnParameters":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3069,"src":"3792:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3046,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:10"},"scope":3313,"src":"3714:255:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3118,"nodeType":"Block","src":"4348:342:10","statements":[{"id":3117,"nodeType":"UncheckedBlock","src":"4358:326:10","statements":[{"assignments":[3087],"declarations":[{"constant":false,"id":3087,"mutability":"mutable","name":"s","nameLocation":"4390:1:10","nodeType":"VariableDeclaration","scope":3117,"src":"4382:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3094,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3088,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"4394:2:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:10","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:10","typeDescriptions":{}}},"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:10"},{"assignments":[3096],"declarations":[{"constant":false,"id":3096,"mutability":"mutable","name":"v","nameLocation":"4591:1:10","nodeType":"VariableDeclaration","scope":3117,"src":"4585:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3095,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3109,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3101,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"4610:2:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3099,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:10","typeDescriptions":{}}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:10","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3097,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:10","typeDescriptions":{}}},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:10"},{"expression":{"arguments":[{"id":3111,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"4659:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3112,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"4665:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3113,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"4668:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3114,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"4671:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3110,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3039,3119,3227],"referencedDeclaration":3227,"src":"4648:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2973_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2973_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3085,"id":3116,"nodeType":"Return","src":"4641:32:10"}]}]},"documentation":{"id":3070,"nodeType":"StructuredDocumentation","src":"3975:205:10","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3119,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:10","nodeType":"FunctionDefinition","parameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"hash","nameLocation":"4222:4:10","nodeType":"VariableDeclaration","scope":3119,"src":"4214:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3074,"mutability":"mutable","name":"r","nameLocation":"4244:1:10","nodeType":"VariableDeclaration","scope":3119,"src":"4236:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3073,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3076,"mutability":"mutable","name":"vs","nameLocation":"4263:2:10","nodeType":"VariableDeclaration","scope":3119,"src":"4255:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:10"},"returnParameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3079,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:10","nodeType":"VariableDeclaration","scope":3119,"src":"4295:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3078,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3082,"mutability":"mutable","name":"err","nameLocation":"4327:3:10","nodeType":"VariableDeclaration","scope":3119,"src":"4314:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3081,"nodeType":"UserDefinedTypeName","pathNode":{"id":3080,"name":"RecoverError","nameLocations":["4314:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2973,"src":"4314:12:10"},"referencedDeclaration":2973,"src":"4314:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3084,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:10","nodeType":"VariableDeclaration","scope":3119,"src":"4332:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:10"},"scope":3313,"src":"4185:505:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3151,"nodeType":"Block","src":"4903:164:10","statements":[{"assignments":[3132,3135,3137],"declarations":[{"constant":false,"id":3132,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:10","nodeType":"VariableDeclaration","scope":3151,"src":"4914:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3131,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3135,"mutability":"mutable","name":"error","nameLocation":"4946:5:10","nodeType":"VariableDeclaration","scope":3151,"src":"4933:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3134,"nodeType":"UserDefinedTypeName","pathNode":{"id":3133,"name":"RecoverError","nameLocations":["4933:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2973,"src":"4933:12:10"},"referencedDeclaration":2973,"src":"4933:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3137,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:10","nodeType":"VariableDeclaration","scope":3151,"src":"4953:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3143,"initialValue":{"arguments":[{"id":3139,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"4984:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3140,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"4990:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3141,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"4993:2:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3138,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3039,3119,3227],"referencedDeclaration":3119,"src":"4973:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2973_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2973_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:10"},{"expression":{"arguments":[{"id":3145,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"5018:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},{"id":3146,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"5025:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3144,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"5006:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2973_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3148,"nodeType":"ExpressionStatement","src":"5006:28:10"},{"expression":{"id":3149,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"5051:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3130,"id":3150,"nodeType":"Return","src":"5044:16:10"}]},"documentation":{"id":3120,"nodeType":"StructuredDocumentation","src":"4696:116:10","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3152,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:10","nodeType":"FunctionDefinition","parameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3122,"mutability":"mutable","name":"hash","nameLocation":"4842:4:10","nodeType":"VariableDeclaration","scope":3152,"src":"4834:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3124,"mutability":"mutable","name":"r","nameLocation":"4856:1:10","nodeType":"VariableDeclaration","scope":3152,"src":"4848:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3126,"mutability":"mutable","name":"vs","nameLocation":"4867:2:10","nodeType":"VariableDeclaration","scope":3152,"src":"4859:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:10"},"returnParameters":{"id":3130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3152,"src":"4894:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3128,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:10"},"scope":3313,"src":"4817:250:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3226,"nodeType":"Block","src":"5382:1372:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3173,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"6278:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:10","typeDescriptions":{}}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:10","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3187,"nodeType":"IfStatement","src":"6266:164:10","trueBody":{"id":3186,"nodeType":"Block","src":"6351:79:10","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3177,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:10","typeDescriptions":{}}},"id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3181,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"6385:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2973_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:10","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2972,"src":"6385:30:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},{"id":3183,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"6417:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3184,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2973_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3170,"id":3185,"nodeType":"Return","src":"6365:54:10"}]}},{"assignments":[3189],"declarations":[{"constant":false,"id":3189,"mutability":"mutable","name":"signer","nameLocation":"6532:6:10","nodeType":"VariableDeclaration","scope":3226,"src":"6524:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3188,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3196,"initialValue":{"arguments":[{"id":3191,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"6551:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3192,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"6557:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3193,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"6560:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3194,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"6563:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3190,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967290,"src":"6541:9:10","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3197,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"6579:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3198,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:10","typeDescriptions":{}}},"id":3201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3216,"nodeType":"IfStatement","src":"6575:113:10","trueBody":{"id":3215,"nodeType":"Block","src":"6601:87:10","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3203,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:10","typeDescriptions":{}}},"id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3207,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"6635:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2973_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:10","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2970,"src":"6635:29:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:10","typeDescriptions":{}}},"id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2973_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3170,"id":3214,"nodeType":"Return","src":"6615:62:10"}]}},{"expression":{"components":[{"id":3217,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"6706:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3218,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"6714:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2973_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:10","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2969,"src":"6714:20:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:10","typeDescriptions":{}}},"id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2973_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3170,"id":3225,"nodeType":"Return","src":"6698:49:10"}]},"documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"5073:125:10","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3227,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:10","nodeType":"FunctionDefinition","parameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"hash","nameLocation":"5240:4:10","nodeType":"VariableDeclaration","scope":3227,"src":"5232:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3157,"mutability":"mutable","name":"v","nameLocation":"5260:1:10","nodeType":"VariableDeclaration","scope":3227,"src":"5254:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3156,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"r","nameLocation":"5279:1:10","nodeType":"VariableDeclaration","scope":3227,"src":"5271:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3161,"mutability":"mutable","name":"s","nameLocation":"5298:1:10","nodeType":"VariableDeclaration","scope":3227,"src":"5290:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:10"},"returnParameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3164,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:10","nodeType":"VariableDeclaration","scope":3227,"src":"5329:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3163,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"err","nameLocation":"5361:3:10","nodeType":"VariableDeclaration","scope":3227,"src":"5348:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3166,"nodeType":"UserDefinedTypeName","pathNode":{"id":3165,"name":"RecoverError","nameLocations":["5348:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2973,"src":"5348:12:10"},"referencedDeclaration":2973,"src":"5348:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3169,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:10","nodeType":"VariableDeclaration","scope":3227,"src":"5366:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:10"},"scope":3313,"src":"5203:1551:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3262,"nodeType":"Block","src":"6981:166:10","statements":[{"assignments":[3242,3245,3247],"declarations":[{"constant":false,"id":3242,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:10","nodeType":"VariableDeclaration","scope":3262,"src":"6992:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3241,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3245,"mutability":"mutable","name":"error","nameLocation":"7024:5:10","nodeType":"VariableDeclaration","scope":3262,"src":"7011:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3244,"nodeType":"UserDefinedTypeName","pathNode":{"id":3243,"name":"RecoverError","nameLocations":["7011:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2973,"src":"7011:12:10"},"referencedDeclaration":2973,"src":"7011:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3247,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:10","nodeType":"VariableDeclaration","scope":3262,"src":"7031:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3254,"initialValue":{"arguments":[{"id":3249,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"7062:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3250,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"7068:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3251,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"7071:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3252,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"7074:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3248,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3039,3119,3227],"referencedDeclaration":3227,"src":"7051:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2973_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2973_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:10"},{"expression":{"arguments":[{"id":3256,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"7098:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},{"id":3257,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"7105:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3255,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"7086:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2973_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3259,"nodeType":"ExpressionStatement","src":"7086:28:10"},{"expression":{"id":3260,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"7131:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3240,"id":3261,"nodeType":"Return","src":"7124:16:10"}]},"documentation":{"id":3228,"nodeType":"StructuredDocumentation","src":"6760:122:10","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3263,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:10","nodeType":"FunctionDefinition","parameters":{"id":3237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"hash","nameLocation":"6912:4:10","nodeType":"VariableDeclaration","scope":3263,"src":"6904:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3232,"mutability":"mutable","name":"v","nameLocation":"6924:1:10","nodeType":"VariableDeclaration","scope":3263,"src":"6918:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3231,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3234,"mutability":"mutable","name":"r","nameLocation":"6935:1:10","nodeType":"VariableDeclaration","scope":3263,"src":"6927:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3236,"mutability":"mutable","name":"s","nameLocation":"6946:1:10","nodeType":"VariableDeclaration","scope":3263,"src":"6938:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:10"},"returnParameters":{"id":3240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3263,"src":"6972:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3238,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:10"},"scope":3313,"src":"6887:260:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3311,"nodeType":"Block","src":"7352:460:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3272,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"7366:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3273,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"7375:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2973_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:10","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2969,"src":"7375:20:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3278,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"7462:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3279,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"7471:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2973_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:10","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2970,"src":"7471:29:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3286,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"7567:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3287,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"7576:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2973_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:10","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2971,"src":"7576:35:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3298,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"7701:5:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3299,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"7710:12:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2973_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:10","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2972,"src":"7710:30:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3307,"nodeType":"IfStatement","src":"7697:109:10","trueBody":{"id":3306,"nodeType":"Block","src":"7742:64:10","statements":[{"errorCall":{"arguments":[{"id":3303,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"7786:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3302,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"7763:22:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3305,"nodeType":"RevertStatement","src":"7756:39:10"}]}},"id":3308,"nodeType":"IfStatement","src":"7563:243:10","trueBody":{"id":3297,"nodeType":"Block","src":"7613:78:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3293,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"7670:8:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3291,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:10","typeDescriptions":{}}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3290,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"7634:27:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3296,"nodeType":"RevertStatement","src":"7627:53:10"}]}},"id":3309,"nodeType":"IfStatement","src":"7458:348:10","trueBody":{"id":3285,"nodeType":"Block","src":"7502:55:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3282,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"7523:21:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3284,"nodeType":"RevertStatement","src":"7516:30:10"}]}},"id":3310,"nodeType":"IfStatement","src":"7362:444:10","trueBody":{"id":3277,"nodeType":"Block","src":"7397:55:10","statements":[{"functionReturnParameters":3271,"id":3276,"nodeType":"Return","src":"7411:7:10"}]}}]},"documentation":{"id":3264,"nodeType":"StructuredDocumentation","src":"7153:122:10","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3312,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:10","nodeType":"FunctionDefinition","parameters":{"id":3270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"mutability":"mutable","name":"error","nameLocation":"7314:5:10","nodeType":"VariableDeclaration","scope":3312,"src":"7301:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3266,"nodeType":"UserDefinedTypeName","pathNode":{"id":3265,"name":"RecoverError","nameLocations":["7301:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2973,"src":"7301:12:10"},"referencedDeclaration":2973,"src":"7301:12:10","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2973","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3269,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:10","nodeType":"VariableDeclaration","scope":3312,"src":"7321:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3268,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:10"},"returnParameters":{"id":3271,"nodeType":"ParameterList","parameters":[],"src":"7352:0:10"},"scope":3313,"src":"7280:532:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3314,"src":"344:7470:10","usedErrors":[2976,2981,2986],"usedEvents":[]}],"src":"112:7703:10"},"id":10},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3399],"Strings":[2965]},"id":3400,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3315,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3400,"sourceUnit":2966,"src":"149:39:11","symbolAliases":[{"foreign":{"id":3316,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"157:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3318,"nodeType":"StructuredDocumentation","src":"190:330:11","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3399,"linearizedBaseContracts":[3399],"name":"MessageHashUtils","nameLocation":"529:16:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":3327,"nodeType":"Block","src":"1339:341:11","statements":[{"AST":{"nodeType":"YulBlock","src":"1374:300:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1395:4:11","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1401:34:11","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:11"},"nodeType":"YulFunctionCall","src":"1388:48:11"},"nodeType":"YulExpressionStatement","src":"1388:48:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:4:11","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1503:11:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1490:6:11"},"nodeType":"YulFunctionCall","src":"1490:25:11"},"nodeType":"YulExpressionStatement","src":"1490:25:11"},{"nodeType":"YulAssignment","src":"1569:31:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1589:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1595:4:11","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1579:9:11"},"nodeType":"YulFunctionCall","src":"1579:21:11"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1569:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3324,"isOffset":false,"isSlot":false,"src":"1569:6:11","valueSize":1},{"declaration":3321,"isOffset":false,"isSlot":false,"src":"1503:11:11","valueSize":1}],"flags":["memory-safe"],"id":3326,"nodeType":"InlineAssembly","src":"1349:325:11"}]},"documentation":{"id":3319,"nodeType":"StructuredDocumentation","src":"552:690:11","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3328,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:11","nodeType":"FunctionDefinition","parameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:11","nodeType":"VariableDeclaration","scope":3328,"src":"1279:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:11"},"returnParameters":{"id":3325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3324,"mutability":"mutable","name":"digest","nameLocation":"1331:6:11","nodeType":"VariableDeclaration","scope":3328,"src":"1323:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:11"},"scope":3399,"src":"1247:433:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3353,"nodeType":"Block","src":"2257:143:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3345,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"2366:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:11","memberName":"length","nodeType":"MemberAccess","src":"2366:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3343,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"2349:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2965_$","typeString":"type(library Strings)"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:11","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1677,"src":"2349:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3341,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:11","typeDescriptions":{}}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3349,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"2384:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3337,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:11","typeDescriptions":{}}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:11","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:11","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3336,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"2286:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3335,"id":3352,"nodeType":"Return","src":"2267:126:11"}]},"documentation":{"id":3329,"nodeType":"StructuredDocumentation","src":"1686:480:11","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3354,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:11","nodeType":"FunctionDefinition","parameters":{"id":3332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3331,"mutability":"mutable","name":"message","nameLocation":"2216:7:11","nodeType":"VariableDeclaration","scope":3354,"src":"2203:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3330,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:11"},"returnParameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3354,"src":"2248:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:11"},"scope":3399,"src":"2171:229:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3373,"nodeType":"Block","src":"2854:80:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3368,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"2910:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3369,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"2921:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3365,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"2881:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3364,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"2871:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3363,"id":3372,"nodeType":"Return","src":"2864:63:11"}]},"documentation":{"id":3355,"nodeType":"StructuredDocumentation","src":"2406:332:11","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3374,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:11","nodeType":"FunctionDefinition","parameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"mutability":"mutable","name":"validator","nameLocation":"2792:9:11","nodeType":"VariableDeclaration","scope":3374,"src":"2784:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3356,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3359,"mutability":"mutable","name":"data","nameLocation":"2816:4:11","nodeType":"VariableDeclaration","scope":3374,"src":"2803:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3358,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:11"},"returnParameters":{"id":3363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3374,"src":"2845:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:11"},"scope":3399,"src":"2743:191:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3385,"nodeType":"Block","src":"3216:216:11","statements":[{"AST":{"nodeType":"YulBlock","src":"3251:175:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:4:11","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nodeType":"YulLiteral","src":"3278:10:11","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:11"},"nodeType":"YulFunctionCall","src":"3265:24:11"},"nodeType":"YulExpressionStatement","src":"3265:24:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3309:4:11","type":"","value":"0x02"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:11","type":"","value":"96"},{"name":"validator","nodeType":"YulIdentifier","src":"3323:9:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3315:3:11"},"nodeType":"YulFunctionCall","src":"3315:18:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:11"},"nodeType":"YulFunctionCall","src":"3302:32:11"},"nodeType":"YulExpressionStatement","src":"3302:32:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3354:4:11","type":"","value":"0x16"},{"name":"messageHash","nodeType":"YulIdentifier","src":"3360:11:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3347:6:11"},"nodeType":"YulFunctionCall","src":"3347:25:11"},"nodeType":"YulExpressionStatement","src":"3347:25:11"},{"nodeType":"YulAssignment","src":"3385:31:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3405:4:11","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:11","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3395:9:11"},"nodeType":"YulFunctionCall","src":"3395:21:11"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3385:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3382,"isOffset":false,"isSlot":false,"src":"3385:6:11","valueSize":1},{"declaration":3379,"isOffset":false,"isSlot":false,"src":"3360:11:11","valueSize":1},{"declaration":3377,"isOffset":false,"isSlot":false,"src":"3323:9:11","valueSize":1}],"flags":["memory-safe"],"id":3384,"nodeType":"InlineAssembly","src":"3226:200:11"}]},"documentation":{"id":3375,"nodeType":"StructuredDocumentation","src":"2940:129:11","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":3386,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:11","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"validator","nameLocation":"3132:9:11","nodeType":"VariableDeclaration","scope":3386,"src":"3124:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3376,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3379,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:11","nodeType":"VariableDeclaration","scope":3386,"src":"3151:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:11"},"returnParameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"digest","nameLocation":"3208:6:11","nodeType":"VariableDeclaration","scope":3386,"src":"3200:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:11"},"scope":3399,"src":"3074:358:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3397,"nodeType":"Block","src":"3983:265:11","statements":[{"AST":{"nodeType":"YulBlock","src":"4018:224:11","statements":[{"nodeType":"YulVariableDeclaration","src":"4032:22:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4049:4:11","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4043:5:11"},"nodeType":"YulFunctionCall","src":"4043:11:11"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"4036:3:11","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4074:3:11"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"4079:10:11","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:11"},"nodeType":"YulFunctionCall","src":"4067:23:11"},"nodeType":"YulExpressionStatement","src":"4067:23:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4114:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4119:4:11","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:11"},"nodeType":"YulFunctionCall","src":"4110:14:11"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"4126:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:11"},"nodeType":"YulFunctionCall","src":"4103:39:11"},"nodeType":"YulExpressionStatement","src":"4103:39:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4166:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4171:4:11","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:11"},"nodeType":"YulFunctionCall","src":"4162:14:11"},{"name":"structHash","nodeType":"YulIdentifier","src":"4178:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:11"},"nodeType":"YulFunctionCall","src":"4155:34:11"},"nodeType":"YulExpressionStatement","src":"4155:34:11"},{"nodeType":"YulAssignment","src":"4202:30:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4222:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"4227:4:11","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4212:9:11"},"nodeType":"YulFunctionCall","src":"4212:20:11"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"4202:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3394,"isOffset":false,"isSlot":false,"src":"4202:6:11","valueSize":1},{"declaration":3389,"isOffset":false,"isSlot":false,"src":"4126:15:11","valueSize":1},{"declaration":3391,"isOffset":false,"isSlot":false,"src":"4178:10:11","valueSize":1}],"flags":["memory-safe"],"id":3396,"nodeType":"InlineAssembly","src":"3993:249:11"}]},"documentation":{"id":3387,"nodeType":"StructuredDocumentation","src":"3438:431:11","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3398,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:11","nodeType":"FunctionDefinition","parameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3389,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:11","nodeType":"VariableDeclaration","scope":3398,"src":"3899:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3391,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:11","nodeType":"VariableDeclaration","scope":3398,"src":"3924:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:11"},"returnParameters":{"id":3395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3394,"mutability":"mutable","name":"digest","nameLocation":"3975:6:11","nodeType":"VariableDeclaration","scope":3398,"src":"3967:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:11"},"scope":3399,"src":"3874:374:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3400,"src":"521:3729:11","usedErrors":[],"usedEvents":[]}],"src":"123:4128:11"},"id":11},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3423],"IERC165":[3435]},"id":3424,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3401,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3424,"sourceUnit":3436,"src":"140:38:12","symbolAliases":[{"foreign":{"id":3402,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"148:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3405,"name":"IERC165","nameLocations":["688:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3435,"src":"688:7:12"},"id":3406,"nodeType":"InheritanceSpecifier","src":"688:7:12"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3404,"nodeType":"StructuredDocumentation","src":"180:479:12","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3423,"linearizedBaseContracts":[3423,3435],"name":"ERC165","nameLocation":"678:6:12","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3434],"body":{"id":3421,"nodeType":"Block","src":"812:64:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3414,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"829:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3416,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"849:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3435_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3435_$","typeString":"type(contract IERC165)"}],"id":3415,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"844:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3435","typeString":"type(contract IERC165)"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:12","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3413,"id":3420,"nodeType":"Return","src":"822:47:12"}]},"documentation":{"id":3407,"nodeType":"StructuredDocumentation","src":"702:23:12","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":3422,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:12","nodeType":"FunctionDefinition","parameters":{"id":3410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3409,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:12","nodeType":"VariableDeclaration","scope":3422,"src":"757:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3408,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:12"},"returnParameters":{"id":3413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3422,"src":"806:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3411,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:12"},"scope":3423,"src":"730:146:12","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3424,"src":"660:218:12","usedErrors":[],"usedEvents":[]}],"src":"114:765:12"},"id":12},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3435]},"id":3436,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3425,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3426,"nodeType":"StructuredDocumentation","src":"142:280:13","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3435,"linearizedBaseContracts":[3435],"name":"IERC165","nameLocation":"433:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3427,"nodeType":"StructuredDocumentation","src":"447:340:13","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3434,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:13","nodeType":"FunctionDefinition","parameters":{"id":3430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3429,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:13","nodeType":"VariableDeclaration","scope":3434,"src":"819:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3428,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:13"},"returnParameters":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3434,"src":"862:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3431,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:13"},"scope":3435,"src":"792:76:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3436,"src":"423:447:13","usedErrors":[],"usedEvents":[]}],"src":"115:756:13"},"id":13},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5056],"Panic":[1563],"SafeCast":[6821]},"id":5057,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3437,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5057,"sourceUnit":1564,"src":"129:35:14","symbolAliases":[{"foreign":{"id":3438,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"137:5:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3441,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5057,"sourceUnit":6822,"src":"165:40:14","symbolAliases":[{"foreign":{"id":3440,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"173:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3442,"nodeType":"StructuredDocumentation","src":"207:73:14","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5056,"linearizedBaseContracts":[5056],"name":"Math","nameLocation":"289:4:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3447,"members":[{"id":3443,"name":"Floor","nameLocation":"324:5:14","nodeType":"EnumValue","src":"324:5:14"},{"id":3444,"name":"Ceil","nameLocation":"367:4:14","nodeType":"EnumValue","src":"367:4:14"},{"id":3445,"name":"Trunc","nameLocation":"409:5:14","nodeType":"EnumValue","src":"409:5:14"},{"id":3446,"name":"Expand","nameLocation":"439:6:14","nodeType":"EnumValue","src":"439:6:14"}],"name":"Rounding","nameLocation":"305:8:14","nodeType":"EnumDefinition","src":"300:169:14"},{"body":{"id":3460,"nodeType":"Block","src":"731:112:14","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:14","statements":[{"nodeType":"YulAssignment","src":"780:16:14","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:14"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:14"},"nodeType":"YulFunctionCall","src":"787:9:14"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:14"}]},{"nodeType":"YulAssignment","src":"809:18:14","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:14"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:14"},"nodeType":"YulFunctionCall","src":"817:10:14"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3450,"isOffset":false,"isSlot":false,"src":"791:1:14","valueSize":1},{"declaration":3450,"isOffset":false,"isSlot":false,"src":"825:1:14","valueSize":1},{"declaration":3452,"isOffset":false,"isSlot":false,"src":"794:1:14","valueSize":1},{"declaration":3455,"isOffset":false,"isSlot":false,"src":"809:4:14","valueSize":1},{"declaration":3457,"isOffset":false,"isSlot":false,"src":"780:3:14","valueSize":1},{"declaration":3457,"isOffset":false,"isSlot":false,"src":"820:3:14","valueSize":1}],"flags":["memory-safe"],"id":3459,"nodeType":"InlineAssembly","src":"741:96:14"}]},"documentation":{"id":3448,"nodeType":"StructuredDocumentation","src":"475:163:14","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3461,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:14","nodeType":"FunctionDefinition","parameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"a","nameLocation":"667:1:14","nodeType":"VariableDeclaration","scope":3461,"src":"659:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3449,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3452,"mutability":"mutable","name":"b","nameLocation":"678:1:14","nodeType":"VariableDeclaration","scope":3461,"src":"670:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:14"},"returnParameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3455,"mutability":"mutable","name":"high","nameLocation":"712:4:14","nodeType":"VariableDeclaration","scope":3461,"src":"704:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3457,"mutability":"mutable","name":"low","nameLocation":"726:3:14","nodeType":"VariableDeclaration","scope":3461,"src":"718:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3456,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:14"},"scope":5056,"src":"643:200:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3474,"nodeType":"Block","src":"1115:462:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:14","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:14"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:14"},"nodeType":"YulFunctionCall","src":"1474:6:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:14"},"nodeType":"YulFunctionCall","src":"1461:20:14"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:14","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:14","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:14"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:14"},"nodeType":"YulFunctionCall","src":"1501:9:14"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:14"}]},{"nodeType":"YulAssignment","src":"1523:38:14","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:14"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:14"},"nodeType":"YulFunctionCall","src":"1535:12:14"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:14"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:14"},"nodeType":"YulFunctionCall","src":"1549:11:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:14"},"nodeType":"YulFunctionCall","src":"1531:30:14"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3464,"isOffset":false,"isSlot":false,"src":"1468:1:14","valueSize":1},{"declaration":3464,"isOffset":false,"isSlot":false,"src":"1505:1:14","valueSize":1},{"declaration":3466,"isOffset":false,"isSlot":false,"src":"1471:1:14","valueSize":1},{"declaration":3466,"isOffset":false,"isSlot":false,"src":"1508:1:14","valueSize":1},{"declaration":3469,"isOffset":false,"isSlot":false,"src":"1523:4:14","valueSize":1},{"declaration":3471,"isOffset":false,"isSlot":false,"src":"1494:3:14","valueSize":1},{"declaration":3471,"isOffset":false,"isSlot":false,"src":"1543:3:14","valueSize":1},{"declaration":3471,"isOffset":false,"isSlot":false,"src":"1556:3:14","valueSize":1}],"flags":["memory-safe"],"id":3473,"nodeType":"InlineAssembly","src":"1412:159:14"}]},"documentation":{"id":3462,"nodeType":"StructuredDocumentation","src":"849:173:14","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3475,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:14","nodeType":"FunctionDefinition","parameters":{"id":3467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"a","nameLocation":"1051:1:14","nodeType":"VariableDeclaration","scope":3475,"src":"1043:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3466,"mutability":"mutable","name":"b","nameLocation":"1062:1:14","nodeType":"VariableDeclaration","scope":3475,"src":"1054:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:14"},"returnParameters":{"id":3472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3469,"mutability":"mutable","name":"high","nameLocation":"1096:4:14","nodeType":"VariableDeclaration","scope":3475,"src":"1088:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3471,"mutability":"mutable","name":"low","nameLocation":"1110:3:14","nodeType":"VariableDeclaration","scope":3475,"src":"1102:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:14"},"scope":5056,"src":"1027:550:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3509,"nodeType":"Block","src":"1784:149:14","statements":[{"id":3508,"nodeType":"UncheckedBlock","src":"1794:133:14","statements":[{"assignments":[3488],"declarations":[{"constant":false,"id":3488,"mutability":"mutable","name":"c","nameLocation":"1826:1:14","nodeType":"VariableDeclaration","scope":3508,"src":"1818:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3492,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3489,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"1830:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3490,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"1834:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:14"},{"expression":{"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3493,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"1849:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3494,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"1859:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3495,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"1864:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3498,"nodeType":"ExpressionStatement","src":"1849:16:14"},{"expression":{"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3499,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"1879:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3500,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"1888:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3503,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"1908:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3501,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"1892:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"1892:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3507,"nodeType":"ExpressionStatement","src":"1879:37:14"}]}]},"documentation":{"id":3476,"nodeType":"StructuredDocumentation","src":"1583:105:14","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3510,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:14","nodeType":"FunctionDefinition","parameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"a","nameLocation":"1717:1:14","nodeType":"VariableDeclaration","scope":3510,"src":"1709:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"b","nameLocation":"1728:1:14","nodeType":"VariableDeclaration","scope":3510,"src":"1720:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:14"},"returnParameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"success","nameLocation":"1759:7:14","nodeType":"VariableDeclaration","scope":3510,"src":"1754:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3482,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3485,"mutability":"mutable","name":"result","nameLocation":"1776:6:14","nodeType":"VariableDeclaration","scope":3510,"src":"1768:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:14"},"scope":5056,"src":"1693:240:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3544,"nodeType":"Block","src":"2143:149:14","statements":[{"id":3543,"nodeType":"UncheckedBlock","src":"2153:133:14","statements":[{"assignments":[3523],"declarations":[{"constant":false,"id":3523,"mutability":"mutable","name":"c","nameLocation":"2185:1:14","nodeType":"VariableDeclaration","scope":3543,"src":"2177:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3527,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"2189:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3525,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"2193:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:14"},{"expression":{"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3528,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"2208:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3529,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"2218:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3530,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"2223:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3533,"nodeType":"ExpressionStatement","src":"2208:16:14"},{"expression":{"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2238:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3535,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"2247:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3538,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"2267:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3536,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"2251:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"2251:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3542,"nodeType":"ExpressionStatement","src":"2238:37:14"}]}]},"documentation":{"id":3511,"nodeType":"StructuredDocumentation","src":"1939:108:14","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3545,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:14","nodeType":"FunctionDefinition","parameters":{"id":3516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"a","nameLocation":"2076:1:14","nodeType":"VariableDeclaration","scope":3545,"src":"2068:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3515,"mutability":"mutable","name":"b","nameLocation":"2087:1:14","nodeType":"VariableDeclaration","scope":3545,"src":"2079:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3514,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:14"},"returnParameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3518,"mutability":"mutable","name":"success","nameLocation":"2118:7:14","nodeType":"VariableDeclaration","scope":3545,"src":"2113:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3517,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3520,"mutability":"mutable","name":"result","nameLocation":"2135:6:14","nodeType":"VariableDeclaration","scope":3545,"src":"2127:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:14"},"scope":5056,"src":"2052:240:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3574,"nodeType":"Block","src":"2505:391:14","statements":[{"id":3573,"nodeType":"UncheckedBlock","src":"2515:375:14","statements":[{"assignments":[3558],"declarations":[{"constant":false,"id":3558,"mutability":"mutable","name":"c","nameLocation":"2547:1:14","nodeType":"VariableDeclaration","scope":3573,"src":"2539:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3557,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3562,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3559,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"2551:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3560,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"2555:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:14"},{"AST":{"nodeType":"YulBlock","src":"2595:188:14","statements":[{"nodeType":"YulAssignment","src":"2727:42:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:14"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:14"},"nodeType":"YulFunctionCall","src":"2744:9:14"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:14"},"nodeType":"YulFunctionCall","src":"2741:16:14"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:14"},"nodeType":"YulFunctionCall","src":"2759:9:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:14"},"nodeType":"YulFunctionCall","src":"2738:31:14"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3548,"isOffset":false,"isSlot":false,"src":"2751:1:14","valueSize":1},{"declaration":3548,"isOffset":false,"isSlot":false,"src":"2766:1:14","valueSize":1},{"declaration":3550,"isOffset":false,"isSlot":false,"src":"2755:1:14","valueSize":1},{"declaration":3558,"isOffset":false,"isSlot":false,"src":"2748:1:14","valueSize":1},{"declaration":3553,"isOffset":false,"isSlot":false,"src":"2727:7:14","valueSize":1}],"flags":["memory-safe"],"id":3563,"nodeType":"InlineAssembly","src":"2570:213:14"},{"expression":{"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"2842:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3565,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"2851:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3568,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"2871:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3566,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"2855:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"2855:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3572,"nodeType":"ExpressionStatement","src":"2842:37:14"}]}]},"documentation":{"id":3546,"nodeType":"StructuredDocumentation","src":"2298:111:14","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3575,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:14","nodeType":"FunctionDefinition","parameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"a","nameLocation":"2438:1:14","nodeType":"VariableDeclaration","scope":3575,"src":"2430:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3550,"mutability":"mutable","name":"b","nameLocation":"2449:1:14","nodeType":"VariableDeclaration","scope":3575,"src":"2441:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:14"},"returnParameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"success","nameLocation":"2480:7:14","nodeType":"VariableDeclaration","scope":3575,"src":"2475:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3552,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3555,"mutability":"mutable","name":"result","nameLocation":"2497:6:14","nodeType":"VariableDeclaration","scope":3575,"src":"2489:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:14"},"scope":5056,"src":"2414:482:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3595,"nodeType":"Block","src":"3111:231:14","statements":[{"id":3594,"nodeType":"UncheckedBlock","src":"3121:215:14","statements":[{"expression":{"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3587,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"3145:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3588,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"3155:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3592,"nodeType":"ExpressionStatement","src":"3145:15:14"},{"AST":{"nodeType":"YulBlock","src":"3199:127:14","statements":[{"nodeType":"YulAssignment","src":"3293:19:14","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:14"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:14"},"nodeType":"YulFunctionCall","src":"3303:9:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3578,"isOffset":false,"isSlot":false,"src":"3307:1:14","valueSize":1},{"declaration":3580,"isOffset":false,"isSlot":false,"src":"3310:1:14","valueSize":1},{"declaration":3585,"isOffset":false,"isSlot":false,"src":"3293:6:14","valueSize":1}],"flags":["memory-safe"],"id":3593,"nodeType":"InlineAssembly","src":"3174:152:14"}]}]},"documentation":{"id":3576,"nodeType":"StructuredDocumentation","src":"2902:113:14","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3596,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:14","nodeType":"FunctionDefinition","parameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3578,"mutability":"mutable","name":"a","nameLocation":"3044:1:14","nodeType":"VariableDeclaration","scope":3596,"src":"3036:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3580,"mutability":"mutable","name":"b","nameLocation":"3055:1:14","nodeType":"VariableDeclaration","scope":3596,"src":"3047:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:14"},"returnParameters":{"id":3586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"success","nameLocation":"3086:7:14","nodeType":"VariableDeclaration","scope":3596,"src":"3081:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3582,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3585,"mutability":"mutable","name":"result","nameLocation":"3103:6:14","nodeType":"VariableDeclaration","scope":3596,"src":"3095:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:14"},"scope":5056,"src":"3020:322:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3616,"nodeType":"Block","src":"3567:231:14","statements":[{"id":3615,"nodeType":"UncheckedBlock","src":"3577:215:14","statements":[{"expression":{"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3608,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"3601:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3609,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"3611:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3613,"nodeType":"ExpressionStatement","src":"3601:15:14"},{"AST":{"nodeType":"YulBlock","src":"3655:127:14","statements":[{"nodeType":"YulAssignment","src":"3749:19:14","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:14"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:14"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:14"},"nodeType":"YulFunctionCall","src":"3759:9:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3599,"isOffset":false,"isSlot":false,"src":"3763:1:14","valueSize":1},{"declaration":3601,"isOffset":false,"isSlot":false,"src":"3766:1:14","valueSize":1},{"declaration":3606,"isOffset":false,"isSlot":false,"src":"3749:6:14","valueSize":1}],"flags":["memory-safe"],"id":3614,"nodeType":"InlineAssembly","src":"3630:152:14"}]}]},"documentation":{"id":3597,"nodeType":"StructuredDocumentation","src":"3348:123:14","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3617,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:14","nodeType":"FunctionDefinition","parameters":{"id":3602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3599,"mutability":"mutable","name":"a","nameLocation":"3500:1:14","nodeType":"VariableDeclaration","scope":3617,"src":"3492:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"b","nameLocation":"3511:1:14","nodeType":"VariableDeclaration","scope":3617,"src":"3503:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3600,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:14"},"returnParameters":{"id":3607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"success","nameLocation":"3542:7:14","nodeType":"VariableDeclaration","scope":3617,"src":"3537:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3603,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3606,"mutability":"mutable","name":"result","nameLocation":"3559:6:14","nodeType":"VariableDeclaration","scope":3617,"src":"3551:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3605,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:14"},"scope":5056,"src":"3476:322:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3646,"nodeType":"Block","src":"3989:122:14","statements":[{"assignments":[3628,3630],"declarations":[{"constant":false,"id":3628,"mutability":"mutable","name":"success","nameLocation":"4005:7:14","nodeType":"VariableDeclaration","scope":3646,"src":"4000:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3627,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"result","nameLocation":"4022:6:14","nodeType":"VariableDeclaration","scope":3646,"src":"4014:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3635,"initialValue":{"arguments":[{"id":3632,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"4039:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3633,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"4042:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3631,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"4032:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:14"},{"expression":{"arguments":[{"id":3637,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"4069:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3638,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"4078:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3640,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3639,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"4086:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:14","memberName":"max","nodeType":"MemberAccess","src":"4086:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3636,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"4061:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3626,"id":3645,"nodeType":"Return","src":"4054:50:14"}]},"documentation":{"id":3618,"nodeType":"StructuredDocumentation","src":"3804:103:14","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3647,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:14","nodeType":"FunctionDefinition","parameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3620,"mutability":"mutable","name":"a","nameLocation":"3943:1:14","nodeType":"VariableDeclaration","scope":3647,"src":"3935:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3619,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3622,"mutability":"mutable","name":"b","nameLocation":"3954:1:14","nodeType":"VariableDeclaration","scope":3647,"src":"3946:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3621,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:14"},"returnParameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3647,"src":"3980:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:14"},"scope":5056,"src":"3912:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3666,"nodeType":"Block","src":"4294:73:14","statements":[{"assignments":[null,3658],"declarations":[null,{"constant":false,"id":3658,"mutability":"mutable","name":"result","nameLocation":"4315:6:14","nodeType":"VariableDeclaration","scope":3666,"src":"4307:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3657,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3663,"initialValue":{"arguments":[{"id":3660,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"4332:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3661,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"4335:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3659,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"4325:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:14"},{"expression":{"id":3664,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"4354:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3656,"id":3665,"nodeType":"Return","src":"4347:13:14"}]},"documentation":{"id":3648,"nodeType":"StructuredDocumentation","src":"4117:95:14","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3667,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:14","nodeType":"FunctionDefinition","parameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3650,"mutability":"mutable","name":"a","nameLocation":"4248:1:14","nodeType":"VariableDeclaration","scope":3667,"src":"4240:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3649,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3652,"mutability":"mutable","name":"b","nameLocation":"4259:1:14","nodeType":"VariableDeclaration","scope":3667,"src":"4251:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:14"},"returnParameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3667,"src":"4285:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3654,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:14"},"scope":5056,"src":"4217:150:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3696,"nodeType":"Block","src":"4564:122:14","statements":[{"assignments":[3678,3680],"declarations":[{"constant":false,"id":3678,"mutability":"mutable","name":"success","nameLocation":"4580:7:14","nodeType":"VariableDeclaration","scope":3696,"src":"4575:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3677,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3680,"mutability":"mutable","name":"result","nameLocation":"4597:6:14","nodeType":"VariableDeclaration","scope":3696,"src":"4589:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3679,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3685,"initialValue":{"arguments":[{"id":3682,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"4614:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3683,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"4617:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3681,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"4607:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:14"},{"expression":{"arguments":[{"id":3687,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"4644:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3688,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"4653:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3690,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3689,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"4661:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:14","memberName":"max","nodeType":"MemberAccess","src":"4661:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3686,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"4636:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3676,"id":3695,"nodeType":"Return","src":"4629:50:14"}]},"documentation":{"id":3668,"nodeType":"StructuredDocumentation","src":"4373:109:14","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3697,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:14","nodeType":"FunctionDefinition","parameters":{"id":3673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3670,"mutability":"mutable","name":"a","nameLocation":"4518:1:14","nodeType":"VariableDeclaration","scope":3697,"src":"4510:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3672,"mutability":"mutable","name":"b","nameLocation":"4529:1:14","nodeType":"VariableDeclaration","scope":3697,"src":"4521:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:14"},"returnParameters":{"id":3676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3697,"src":"4555:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:14"},"scope":5056,"src":"4487:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3723,"nodeType":"Block","src":"5158:207:14","statements":[{"id":3722,"nodeType":"UncheckedBlock","src":"5168:191:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3709,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5306:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3710,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"5312:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3711,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"5316:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3716,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"5337:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3714,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"5321:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"5321:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3708,"id":3721,"nodeType":"Return","src":"5299:49:14"}]}]},"documentation":{"id":3698,"nodeType":"StructuredDocumentation","src":"4692:374:14","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3724,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:14","nodeType":"FunctionDefinition","parameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"condition","nameLocation":"5093:9:14","nodeType":"VariableDeclaration","scope":3724,"src":"5088:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3699,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3702,"mutability":"mutable","name":"a","nameLocation":"5112:1:14","nodeType":"VariableDeclaration","scope":3724,"src":"5104:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3704,"mutability":"mutable","name":"b","nameLocation":"5123:1:14","nodeType":"VariableDeclaration","scope":3724,"src":"5115:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:14"},"returnParameters":{"id":3708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3724,"src":"5149:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3706,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:14"},"scope":5056,"src":"5071:294:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3742,"nodeType":"Block","src":"5502:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3735,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"5527:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3736,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"5531:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3738,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"5534:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3739,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"5537:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3734,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"5519:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3733,"id":3741,"nodeType":"Return","src":"5512:27:14"}]},"documentation":{"id":3725,"nodeType":"StructuredDocumentation","src":"5371:59:14","text":" @dev Returns the largest of two numbers."},"id":3743,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:14","nodeType":"FunctionDefinition","parameters":{"id":3730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3727,"mutability":"mutable","name":"a","nameLocation":"5456:1:14","nodeType":"VariableDeclaration","scope":3743,"src":"5448:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3729,"mutability":"mutable","name":"b","nameLocation":"5467:1:14","nodeType":"VariableDeclaration","scope":3743,"src":"5459:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3728,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:14"},"returnParameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3743,"src":"5493:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:14"},"scope":5056,"src":"5435:111:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3761,"nodeType":"Block","src":"5684:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3754,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"5709:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3755,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"5713:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3757,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"5716:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3758,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"5719:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3753,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"5701:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3752,"id":3760,"nodeType":"Return","src":"5694:27:14"}]},"documentation":{"id":3744,"nodeType":"StructuredDocumentation","src":"5552:60:14","text":" @dev Returns the smallest of two numbers."},"id":3762,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:14","nodeType":"FunctionDefinition","parameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"a","nameLocation":"5638:1:14","nodeType":"VariableDeclaration","scope":3762,"src":"5630:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3745,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3748,"mutability":"mutable","name":"b","nameLocation":"5649:1:14","nodeType":"VariableDeclaration","scope":3762,"src":"5641:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:14"},"returnParameters":{"id":3752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3762,"src":"5675:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:14"},"scope":5056,"src":"5617:111:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3784,"nodeType":"Block","src":"5912:82:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3772,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"5967:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3773,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"5971:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3776,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"5977:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3777,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"5981:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3771,"id":3783,"nodeType":"Return","src":"5959:28:14"}]},"documentation":{"id":3763,"nodeType":"StructuredDocumentation","src":"5734:102:14","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3785,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:14","nodeType":"FunctionDefinition","parameters":{"id":3768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"a","nameLocation":"5866:1:14","nodeType":"VariableDeclaration","scope":3785,"src":"5858:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3764,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3767,"mutability":"mutable","name":"b","nameLocation":"5877:1:14","nodeType":"VariableDeclaration","scope":3785,"src":"5869:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3766,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:14"},"returnParameters":{"id":3771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3785,"src":"5903:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3769,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:14"},"scope":5056,"src":"5841:153:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3825,"nodeType":"Block","src":"6286:633:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3795,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"6300:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3806,"nodeType":"IfStatement","src":"6296:150:14","trueBody":{"id":3805,"nodeType":"Block","src":"6308:138:14","statements":[{"expression":{"arguments":[{"expression":{"id":3801,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"6412:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"6412:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3798,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"6400:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"6400:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3804,"nodeType":"ExpressionStatement","src":"6400:35:14"}]}},{"id":3824,"nodeType":"UncheckedBlock","src":"6829:84:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3809,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"6876:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3807,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"6860:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"6860:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3813,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"6887:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3816,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3817,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"6896:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3821,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3794,"id":3823,"nodeType":"Return","src":"6853:49:14"}]}]},"documentation":{"id":3786,"nodeType":"StructuredDocumentation","src":"6000:210:14","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3826,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:14","nodeType":"FunctionDefinition","parameters":{"id":3791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3788,"mutability":"mutable","name":"a","nameLocation":"6240:1:14","nodeType":"VariableDeclaration","scope":3826,"src":"6232:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3787,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3790,"mutability":"mutable","name":"b","nameLocation":"6251:1:14","nodeType":"VariableDeclaration","scope":3826,"src":"6243:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3789,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:14"},"returnParameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3826,"src":"6277:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3792,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:14"},"scope":5056,"src":"6215:704:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3961,"nodeType":"Block","src":"7340:3585:14","statements":[{"id":3960,"nodeType":"UncheckedBlock","src":"7350:3569:14","statements":[{"assignments":[3839,3841],"declarations":[{"constant":false,"id":3839,"mutability":"mutable","name":"high","nameLocation":"7383:4:14","nodeType":"VariableDeclaration","scope":3960,"src":"7375:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3841,"mutability":"mutable","name":"low","nameLocation":"7397:3:14","nodeType":"VariableDeclaration","scope":3960,"src":"7389:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3840,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3846,"initialValue":{"arguments":[{"id":3843,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"7411:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3844,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"7414:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3842,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"7404:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3847,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"7498:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3855,"nodeType":"IfStatement","src":"7494:365:14","trueBody":{"id":3854,"nodeType":"Block","src":"7509:350:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3850,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"7827:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3851,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"7833:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3837,"id":3853,"nodeType":"Return","src":"7820:24:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3856,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"7969:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3857,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"7984:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3874,"nodeType":"IfStatement","src":"7965:142:14","trueBody":{"id":3873,"nodeType":"Block","src":"7990:117:14","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3863,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"8028:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3866,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"8046:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"8046:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3868,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"8070:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:14","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1526,"src":"8070:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3862,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"8020:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3859,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"8008:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"8008:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3872,"nodeType":"ExpressionStatement","src":"8008:84:14"}]}},{"assignments":[3876],"declarations":[{"constant":false,"id":3876,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:14","nodeType":"VariableDeclaration","scope":3960,"src":"8359:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3877,"nodeType":"VariableDeclarationStatement","src":"8359:17:14"},{"AST":{"nodeType":"YulBlock","src":"8415:283:14","statements":[{"nodeType":"YulAssignment","src":"8484:38:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:14"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:14"},"nodeType":"YulFunctionCall","src":"8497:25:14"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:14"}]},{"nodeType":"YulAssignment","src":"8604:37:14","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:14"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:14"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:14"},"nodeType":"YulFunctionCall","src":"8622:18:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:14"},"nodeType":"YulFunctionCall","src":"8612:29:14"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:14"}]},{"nodeType":"YulAssignment","src":"8658:26:14","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:14"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:14"},"nodeType":"YulFunctionCall","src":"8665:19:14"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3833,"isOffset":false,"isSlot":false,"src":"8510:11:14","valueSize":1},{"declaration":3839,"isOffset":false,"isSlot":false,"src":"8604:4:14","valueSize":1},{"declaration":3839,"isOffset":false,"isSlot":false,"src":"8616:4:14","valueSize":1},{"declaration":3841,"isOffset":false,"isSlot":false,"src":"8636:3:14","valueSize":1},{"declaration":3841,"isOffset":false,"isSlot":false,"src":"8658:3:14","valueSize":1},{"declaration":3841,"isOffset":false,"isSlot":false,"src":"8669:3:14","valueSize":1},{"declaration":3876,"isOffset":false,"isSlot":false,"src":"8484:9:14","valueSize":1},{"declaration":3876,"isOffset":false,"isSlot":false,"src":"8625:9:14","valueSize":1},{"declaration":3876,"isOffset":false,"isSlot":false,"src":"8674:9:14","valueSize":1},{"declaration":3829,"isOffset":false,"isSlot":false,"src":"8504:1:14","valueSize":1},{"declaration":3831,"isOffset":false,"isSlot":false,"src":"8507:1:14","valueSize":1}],"flags":["memory-safe"],"id":3878,"nodeType":"InlineAssembly","src":"8390:308:14"},{"assignments":[3880],"declarations":[{"constant":false,"id":3880,"mutability":"mutable","name":"twos","nameLocation":"8910:4:14","nodeType":"VariableDeclaration","scope":3960,"src":"8902:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3887,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3881,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"8917:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3883,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"8936:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3885,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:14"},{"AST":{"nodeType":"YulBlock","src":"8987:359:14","statements":[{"nodeType":"YulAssignment","src":"9052:37:14","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:14"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:14"},"nodeType":"YulFunctionCall","src":"9067:22:14"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:14"}]},{"nodeType":"YulAssignment","src":"9153:21:14","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:14"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:14"},"nodeType":"YulFunctionCall","src":"9160:14:14"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:14"}]},{"nodeType":"YulAssignment","src":"9293:39:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:14","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:14"},"nodeType":"YulFunctionCall","src":"9309:12:14"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:14"},"nodeType":"YulFunctionCall","src":"9305:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:14"},"nodeType":"YulFunctionCall","src":"9301:31:14"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3833,"isOffset":false,"isSlot":false,"src":"9052:11:14","valueSize":1},{"declaration":3833,"isOffset":false,"isSlot":false,"src":"9071:11:14","valueSize":1},{"declaration":3841,"isOffset":false,"isSlot":false,"src":"9153:3:14","valueSize":1},{"declaration":3841,"isOffset":false,"isSlot":false,"src":"9164:3:14","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"9084:4:14","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"9169:4:14","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"9293:4:14","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"9316:4:14","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"9323:4:14","valueSize":1}],"flags":["memory-safe"],"id":3888,"nodeType":"InlineAssembly","src":"8962:384:14"},{"expression":{"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3889,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"9409:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3890,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"9416:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3891,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"9423:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3894,"nodeType":"ExpressionStatement","src":"9409:18:14"},{"assignments":[3896],"declarations":[{"constant":false,"id":3896,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:14","nodeType":"VariableDeclaration","scope":3960,"src":"9762:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3895,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3903,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3898,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"9785:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:14"},{"expression":{"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3904,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"10018:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3906,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"10033:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3907,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"10047:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3911,"nodeType":"ExpressionStatement","src":"10018:36:14"},{"expression":{"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3912,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"10088:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3914,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"10103:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3915,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"10117:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3919,"nodeType":"ExpressionStatement","src":"10088:36:14"},{"expression":{"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3920,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"10160:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3922,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"10175:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3923,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"10189:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3927,"nodeType":"ExpressionStatement","src":"10160:36:14"},{"expression":{"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3928,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"10231:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3930,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"10246:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3931,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"10260:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3935,"nodeType":"ExpressionStatement","src":"10231:36:14"},{"expression":{"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3936,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"10304:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3938,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"10319:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3939,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"10333:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3943,"nodeType":"ExpressionStatement","src":"10304:36:14"},{"expression":{"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3944,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"10378:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3946,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"10393:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3947,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"10407:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3951,"nodeType":"ExpressionStatement","src":"10378:36:14"},{"expression":{"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3952,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"10859:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3953,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"10868:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3954,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"10874:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3957,"nodeType":"ExpressionStatement","src":"10859:22:14"},{"expression":{"id":3958,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"10902:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3837,"id":3959,"nodeType":"Return","src":"10895:13:14"}]}]},"documentation":{"id":3827,"nodeType":"StructuredDocumentation","src":"6925:312:14","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3962,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:14","nodeType":"FunctionDefinition","parameters":{"id":3834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3829,"mutability":"mutable","name":"x","nameLocation":"7266:1:14","nodeType":"VariableDeclaration","scope":3962,"src":"7258:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3828,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3831,"mutability":"mutable","name":"y","nameLocation":"7277:1:14","nodeType":"VariableDeclaration","scope":3962,"src":"7269:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3830,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3833,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:14","nodeType":"VariableDeclaration","scope":3962,"src":"7280:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3832,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:14"},"returnParameters":{"id":3837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3836,"mutability":"mutable","name":"result","nameLocation":"7332:6:14","nodeType":"VariableDeclaration","scope":3962,"src":"7324:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3835,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:14"},"scope":5056,"src":"7242:3683:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3998,"nodeType":"Block","src":"11164:128:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3978,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"11188:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3979,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"11191:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3980,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"11194:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3977,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3962,3999],"referencedDeclaration":3962,"src":"11181:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3985,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"11242:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}],"id":3984,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"11225:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3447_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3988,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"11262:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3989,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"11265:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3990,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"11268:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3987,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967280,"src":"11255:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3982,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"11209:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"11209:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3976,"id":3997,"nodeType":"Return","src":"11174:111:14"}]},"documentation":{"id":3963,"nodeType":"StructuredDocumentation","src":"10931:118:14","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3999,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:14","nodeType":"FunctionDefinition","parameters":{"id":3973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3965,"mutability":"mutable","name":"x","nameLocation":"11078:1:14","nodeType":"VariableDeclaration","scope":3999,"src":"11070:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3967,"mutability":"mutable","name":"y","nameLocation":"11089:1:14","nodeType":"VariableDeclaration","scope":3999,"src":"11081:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3966,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3969,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:14","nodeType":"VariableDeclaration","scope":3999,"src":"11092:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3968,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3972,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:14","nodeType":"VariableDeclaration","scope":3999,"src":"11113:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"},"typeName":{"id":3971,"nodeType":"UserDefinedTypeName","pathNode":{"id":3970,"name":"Rounding","nameLocations":["11113:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3447,"src":"11113:8:14"},"referencedDeclaration":3447,"src":"11113:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:14"},"returnParameters":{"id":3976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3999,"src":"11155:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:14"},"scope":5056,"src":"11054:238:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4048,"nodeType":"Block","src":"11500:245:14","statements":[{"id":4047,"nodeType":"UncheckedBlock","src":"11510:229:14","statements":[{"assignments":[4012,4014],"declarations":[{"constant":false,"id":4012,"mutability":"mutable","name":"high","nameLocation":"11543:4:14","nodeType":"VariableDeclaration","scope":4047,"src":"11535:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4011,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4014,"mutability":"mutable","name":"low","nameLocation":"11557:3:14","nodeType":"VariableDeclaration","scope":4047,"src":"11549:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4019,"initialValue":{"arguments":[{"id":4016,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"11571:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4017,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"11574:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4015,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"11564:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4020,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"11594:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4022,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"11607:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4033,"nodeType":"IfStatement","src":"11590:86:14","trueBody":{"id":4032,"nodeType":"Block","src":"11610:66:14","statements":[{"expression":{"arguments":[{"expression":{"id":4028,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"11640:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":4029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:14","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1526,"src":"11640:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4025,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"11628:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"11628:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4031,"nodeType":"ExpressionStatement","src":"11628:33:14"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4034,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"11697:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4036,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"11712:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4038,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4040,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4041,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"11719:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4042,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"11726:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4044,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4010,"id":4046,"nodeType":"Return","src":"11689:39:14"}]}]},"documentation":{"id":4000,"nodeType":"StructuredDocumentation","src":"11298:111:14","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4049,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:14","nodeType":"FunctionDefinition","parameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4002,"mutability":"mutable","name":"x","nameLocation":"11438:1:14","nodeType":"VariableDeclaration","scope":4049,"src":"11430:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4004,"mutability":"mutable","name":"y","nameLocation":"11449:1:14","nodeType":"VariableDeclaration","scope":4049,"src":"11441:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4003,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4006,"mutability":"mutable","name":"n","nameLocation":"11458:1:14","nodeType":"VariableDeclaration","scope":4049,"src":"11452:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4005,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:14"},"returnParameters":{"id":4010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4009,"mutability":"mutable","name":"result","nameLocation":"11492:6:14","nodeType":"VariableDeclaration","scope":4049,"src":"11484:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:14"},"scope":5056,"src":"11414:331:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4087,"nodeType":"Block","src":"11963:113:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4065,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"11987:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4066,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"11990:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4067,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"11993:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4064,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4049,4088],"referencedDeclaration":4049,"src":"11980:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4072,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"12031:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}],"id":4071,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"12014:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3447_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4075,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"12051:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4076,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"12054:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4078,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"12062:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4074,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967280,"src":"12044:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4069,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"11998:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"11998:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4063,"id":4086,"nodeType":"Return","src":"11973:96:14"}]},"documentation":{"id":4050,"nodeType":"StructuredDocumentation","src":"11751:109:14","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4088,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:14","nodeType":"FunctionDefinition","parameters":{"id":4060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"x","nameLocation":"11889:1:14","nodeType":"VariableDeclaration","scope":4088,"src":"11881:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4054,"mutability":"mutable","name":"y","nameLocation":"11900:1:14","nodeType":"VariableDeclaration","scope":4088,"src":"11892:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4056,"mutability":"mutable","name":"n","nameLocation":"11909:1:14","nodeType":"VariableDeclaration","scope":4088,"src":"11903:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4055,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4059,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:14","nodeType":"VariableDeclaration","scope":4088,"src":"11912:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"},"typeName":{"id":4058,"nodeType":"UserDefinedTypeName","pathNode":{"id":4057,"name":"Rounding","nameLocations":["11912:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3447,"src":"11912:8:14"},"referencedDeclaration":3447,"src":"11912:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:14"},"returnParameters":{"id":4063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4088,"src":"11954:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4061,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:14"},"scope":5056,"src":"11865:211:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4184,"nodeType":"Block","src":"12710:1849:14","statements":[{"id":4183,"nodeType":"UncheckedBlock","src":"12720:1833:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4098,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"12748:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4103,"nodeType":"IfStatement","src":"12744:20:14","trueBody":{"expression":{"hexValue":"30","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4097,"id":4102,"nodeType":"Return","src":"12756:8:14"}},{"assignments":[4105],"declarations":[{"constant":false,"id":4105,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:14","nodeType":"VariableDeclaration","scope":4183,"src":"13235:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4104,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4109,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4106,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"13255:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4107,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"13259:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:14"},{"assignments":[4111],"declarations":[{"constant":false,"id":4111,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:14","nodeType":"VariableDeclaration","scope":4183,"src":"13274:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4110,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4113,"initialValue":{"id":4112,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"13288:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:14"},{"assignments":[4115],"declarations":[{"constant":false,"id":4115,"mutability":"mutable","name":"x","nameLocation":"13432:1:14","nodeType":"VariableDeclaration","scope":4183,"src":"13425:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4114,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4117,"initialValue":{"hexValue":"30","id":4116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:14"},{"assignments":[4119],"declarations":[{"constant":false,"id":4119,"mutability":"mutable","name":"y","nameLocation":"13458:1:14","nodeType":"VariableDeclaration","scope":4183,"src":"13451:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4118,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4121,"initialValue":{"hexValue":"31","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:14"},{"body":{"id":4158,"nodeType":"Block","src":"13501:882:14","statements":[{"assignments":[4126],"declarations":[{"constant":false,"id":4126,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:14","nodeType":"VariableDeclaration","scope":4158,"src":"13519:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4125,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4130,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4127,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"13538:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4128,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"13544:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:14"},{"expression":{"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4131,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"13573:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4132,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"13578:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4133,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4134,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"13678:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4135,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"13923:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4136,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"13929:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4137,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"13941:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4140,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4142,"nodeType":"ExpressionStatement","src":"13572:395:14"},{"expression":{"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4143,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"13987:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4144,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"13990:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4145,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4146,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"14072:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4147,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"14326:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4148,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"14330:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4151,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"14341:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4149,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:14","typeDescriptions":{}}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4157,"nodeType":"ExpressionStatement","src":"13986:382:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4122,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"13485:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4159,"nodeType":"WhileStatement","src":"13478:905:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4160,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"14401:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4165,"nodeType":"IfStatement","src":"14397:22:14","trueBody":{"expression":{"hexValue":"30","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4097,"id":4164,"nodeType":"Return","src":"14411:8:14"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4167,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"14470:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4170,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"14477:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:14","subExpression":{"id":4173,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"14490:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:14","typeDescriptions":{}}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4179,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"14502:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4177,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:14","typeDescriptions":{}}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4166,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"14462:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4097,"id":4182,"nodeType":"Return","src":"14455:50:14"}]}]},"documentation":{"id":4089,"nodeType":"StructuredDocumentation","src":"12082:553:14","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4185,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:14","nodeType":"FunctionDefinition","parameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4091,"mutability":"mutable","name":"a","nameLocation":"12664:1:14","nodeType":"VariableDeclaration","scope":4185,"src":"12656:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4090,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4093,"mutability":"mutable","name":"n","nameLocation":"12675:1:14","nodeType":"VariableDeclaration","scope":4185,"src":"12667:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:14"},"returnParameters":{"id":4097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4185,"src":"12701:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4095,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:14"},"scope":5056,"src":"12640:1919:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4205,"nodeType":"Block","src":"15159:82:14","statements":[{"id":4204,"nodeType":"UncheckedBlock","src":"15169:66:14","statements":[{"expression":{"arguments":[{"id":4197,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"15212:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4198,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"15215:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4201,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"15222:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4195,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"15200:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5056_$","typeString":"type(library Math)"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:14","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4242,"src":"15200:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4194,"id":4203,"nodeType":"Return","src":"15193:31:14"}]}]},"documentation":{"id":4186,"nodeType":"StructuredDocumentation","src":"14565:514:14","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4206,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:14","nodeType":"FunctionDefinition","parameters":{"id":4191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4188,"mutability":"mutable","name":"a","nameLocation":"15113:1:14","nodeType":"VariableDeclaration","scope":4206,"src":"15105:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4187,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4190,"mutability":"mutable","name":"p","nameLocation":"15124:1:14","nodeType":"VariableDeclaration","scope":4206,"src":"15116:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4189,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:14"},"returnParameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4206,"src":"15150:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4192,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:14"},"scope":5056,"src":"15084:157:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4241,"nodeType":"Block","src":"16011:174:14","statements":[{"assignments":[4219,4221],"declarations":[{"constant":false,"id":4219,"mutability":"mutable","name":"success","nameLocation":"16027:7:14","nodeType":"VariableDeclaration","scope":4241,"src":"16022:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4218,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4221,"mutability":"mutable","name":"result","nameLocation":"16044:6:14","nodeType":"VariableDeclaration","scope":4241,"src":"16036:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4227,"initialValue":{"arguments":[{"id":4223,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"16064:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4224,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"16067:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4225,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"16070:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4222,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4266,4348],"referencedDeclaration":4266,"src":"16054:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:14"},{"condition":{"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:14","subExpression":{"id":4228,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"16087:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4238,"nodeType":"IfStatement","src":"16082:74:14","trueBody":{"id":4237,"nodeType":"Block","src":"16096:60:14","statements":[{"expression":{"arguments":[{"expression":{"id":4233,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"16122:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"16122:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4230,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"16110:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"16110:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4236,"nodeType":"ExpressionStatement","src":"16110:35:14"}]}},{"expression":{"id":4239,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"16172:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4217,"id":4240,"nodeType":"Return","src":"16165:13:14"}]},"documentation":{"id":4207,"nodeType":"StructuredDocumentation","src":"15247:678:14","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4242,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:14","nodeType":"FunctionDefinition","parameters":{"id":4214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4209,"mutability":"mutable","name":"b","nameLocation":"15954:1:14","nodeType":"VariableDeclaration","scope":4242,"src":"15946:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4208,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4211,"mutability":"mutable","name":"e","nameLocation":"15965:1:14","nodeType":"VariableDeclaration","scope":4242,"src":"15957:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4210,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"m","nameLocation":"15976:1:14","nodeType":"VariableDeclaration","scope":4242,"src":"15968:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:14"},"returnParameters":{"id":4217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4242,"src":"16002:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4215,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:14"},"scope":5056,"src":"15930:255:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4265,"nodeType":"Block","src":"17039:1493:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4256,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"17053:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4263,"nodeType":"IfStatement","src":"17049:29:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4255,"id":4262,"nodeType":"Return","src":"17061:17:14"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:14","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:14","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:14"},"nodeType":"YulFunctionCall","src":"17138:11:14"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:14","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:14","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:14"},"nodeType":"YulFunctionCall","src":"18050:17:14"},"nodeType":"YulExpressionStatement","src":"18050:17:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:14"},"nodeType":"YulFunctionCall","src":"18087:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:14","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:14"},"nodeType":"YulFunctionCall","src":"18080:28:14"},"nodeType":"YulExpressionStatement","src":"18080:28:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:14"},"nodeType":"YulFunctionCall","src":"18128:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:14","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:14"},"nodeType":"YulFunctionCall","src":"18121:28:14"},"nodeType":"YulExpressionStatement","src":"18121:28:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:14","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:14"},"nodeType":"YulFunctionCall","src":"18169:14:14"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:14"},"nodeType":"YulFunctionCall","src":"18162:25:14"},"nodeType":"YulExpressionStatement","src":"18162:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:14","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:14"},"nodeType":"YulFunctionCall","src":"18207:14:14"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:14"},"nodeType":"YulFunctionCall","src":"18200:25:14"},"nodeType":"YulExpressionStatement","src":"18200:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:14","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:14"},"nodeType":"YulFunctionCall","src":"18245:14:14"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:14"},"nodeType":"YulFunctionCall","src":"18238:25:14"},"nodeType":"YulExpressionStatement","src":"18238:25:14"},{"nodeType":"YulAssignment","src":"18425:57:14","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:14"},"nodeType":"YulFunctionCall","src":"18447:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:14","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:14","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:14","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:14","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:14"},"nodeType":"YulFunctionCall","src":"18436:46:14"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:14"}]},{"nodeType":"YulAssignment","src":"18495:21:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:14","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:14"},"nodeType":"YulFunctionCall","src":"18505:11:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4245,"isOffset":false,"isSlot":false,"src":"18185:1:14","valueSize":1},{"declaration":4247,"isOffset":false,"isSlot":false,"src":"18223:1:14","valueSize":1},{"declaration":4249,"isOffset":false,"isSlot":false,"src":"18261:1:14","valueSize":1},{"declaration":4254,"isOffset":false,"isSlot":false,"src":"18495:6:14","valueSize":1},{"declaration":4252,"isOffset":false,"isSlot":false,"src":"18425:7:14","valueSize":1}],"flags":["memory-safe"],"id":4264,"nodeType":"InlineAssembly","src":"17088:1438:14"}]},"documentation":{"id":4243,"nodeType":"StructuredDocumentation","src":"16191:738:14","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4266,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:14","nodeType":"FunctionDefinition","parameters":{"id":4250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4245,"mutability":"mutable","name":"b","nameLocation":"16961:1:14","nodeType":"VariableDeclaration","scope":4266,"src":"16953:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4247,"mutability":"mutable","name":"e","nameLocation":"16972:1:14","nodeType":"VariableDeclaration","scope":4266,"src":"16964:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4246,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4249,"mutability":"mutable","name":"m","nameLocation":"16983:1:14","nodeType":"VariableDeclaration","scope":4266,"src":"16975:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4248,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:14"},"returnParameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4252,"mutability":"mutable","name":"success","nameLocation":"17014:7:14","nodeType":"VariableDeclaration","scope":4266,"src":"17009:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4251,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4254,"mutability":"mutable","name":"result","nameLocation":"17031:6:14","nodeType":"VariableDeclaration","scope":4266,"src":"17023:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4253,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:14"},"scope":5056,"src":"16934:1598:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4301,"nodeType":"Block","src":"18729:179:14","statements":[{"assignments":[4279,4281],"declarations":[{"constant":false,"id":4279,"mutability":"mutable","name":"success","nameLocation":"18745:7:14","nodeType":"VariableDeclaration","scope":4301,"src":"18740:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4278,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4281,"mutability":"mutable","name":"result","nameLocation":"18767:6:14","nodeType":"VariableDeclaration","scope":4301,"src":"18754:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4280,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4287,"initialValue":{"arguments":[{"id":4283,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"18787:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4284,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"18790:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4285,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"18793:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4282,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4266,4348],"referencedDeclaration":4348,"src":"18777:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:14"},{"condition":{"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:14","subExpression":{"id":4288,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"18810:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4298,"nodeType":"IfStatement","src":"18805:74:14","trueBody":{"id":4297,"nodeType":"Block","src":"18819:60:14","statements":[{"expression":{"arguments":[{"expression":{"id":4293,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"18845:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":4294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"18845:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4290,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"18833:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"18833:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4296,"nodeType":"ExpressionStatement","src":"18833:35:14"}]}},{"expression":{"id":4299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"18895:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4277,"id":4300,"nodeType":"Return","src":"18888:13:14"}]},"documentation":{"id":4267,"nodeType":"StructuredDocumentation","src":"18538:85:14","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4302,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:14","nodeType":"FunctionDefinition","parameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4269,"mutability":"mutable","name":"b","nameLocation":"18657:1:14","nodeType":"VariableDeclaration","scope":4302,"src":"18644:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4268,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4271,"mutability":"mutable","name":"e","nameLocation":"18673:1:14","nodeType":"VariableDeclaration","scope":4302,"src":"18660:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4270,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4273,"mutability":"mutable","name":"m","nameLocation":"18689:1:14","nodeType":"VariableDeclaration","scope":4302,"src":"18676:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4272,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:14"},"returnParameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4302,"src":"18715:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4275,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:14"},"scope":5056,"src":"18628:280:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4347,"nodeType":"Block","src":"19162:771:14","statements":[{"condition":{"arguments":[{"id":4317,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"19187:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4316,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"19176:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4326,"nodeType":"IfStatement","src":"19172:47:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4320,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4315,"id":4325,"nodeType":"Return","src":"19191:28:14"}},{"assignments":[4328],"declarations":[{"constant":false,"id":4328,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:14","nodeType":"VariableDeclaration","scope":4347,"src":"19230:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4331,"initialValue":{"expression":{"id":4329,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"19245:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:14","memberName":"length","nodeType":"MemberAccess","src":"19245:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:14"},{"expression":{"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"19335:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4335,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"19361:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:14","memberName":"length","nodeType":"MemberAccess","src":"19361:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4337,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"19371:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:14","memberName":"length","nodeType":"MemberAccess","src":"19371:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4339,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"19381:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4340,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"19387:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4341,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"19390:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4342,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"19393:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4333,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"19344:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4345,"nodeType":"ExpressionStatement","src":"19335:60:14"},{"AST":{"nodeType":"YulBlock","src":"19431:496:14","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:14","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:14"},"nodeType":"YulFunctionCall","src":"19460:17:14"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:14","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:14","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:14"},"nodeType":"YulFunctionCall","src":"19589:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:14","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:14"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:14"},"nodeType":"YulFunctionCall","src":"19611:13:14"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:14"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:14"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:14"},"nodeType":"YulFunctionCall","src":"19578:62:14"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:14"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:14"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:14"},"nodeType":"YulFunctionCall","src":"19789:20:14"},"nodeType":"YulExpressionStatement","src":"19789:20:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:14","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:14"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:14"},"nodeType":"YulFunctionCall","src":"19898:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:14"},"nodeType":"YulFunctionCall","src":"19885:32:14"},"nodeType":"YulExpressionStatement","src":"19885:32:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":4328,"isOffset":false,"isSlot":false,"src":"19635:4:14","valueSize":1},{"declaration":4328,"isOffset":false,"isSlot":false,"src":"19804:4:14","valueSize":1},{"declaration":4328,"isOffset":false,"isSlot":false,"src":"19911:4:14","valueSize":1},{"declaration":4314,"isOffset":false,"isSlot":false,"src":"19464:6:14","valueSize":1},{"declaration":4314,"isOffset":false,"isSlot":false,"src":"19617:6:14","valueSize":1},{"declaration":4314,"isOffset":false,"isSlot":false,"src":"19796:6:14","valueSize":1},{"declaration":4312,"isOffset":false,"isSlot":false,"src":"19567:7:14","valueSize":1}],"flags":["memory-safe"],"id":4346,"nodeType":"InlineAssembly","src":"19406:521:14"}]},"documentation":{"id":4303,"nodeType":"StructuredDocumentation","src":"18914:88:14","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4348,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:14","nodeType":"FunctionDefinition","parameters":{"id":4310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4305,"mutability":"mutable","name":"b","nameLocation":"19048:1:14","nodeType":"VariableDeclaration","scope":4348,"src":"19035:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4304,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4307,"mutability":"mutable","name":"e","nameLocation":"19072:1:14","nodeType":"VariableDeclaration","scope":4348,"src":"19059:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4306,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4309,"mutability":"mutable","name":"m","nameLocation":"19096:1:14","nodeType":"VariableDeclaration","scope":4348,"src":"19083:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4308,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:14"},"returnParameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4312,"mutability":"mutable","name":"success","nameLocation":"19132:7:14","nodeType":"VariableDeclaration","scope":4348,"src":"19127:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4311,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4314,"mutability":"mutable","name":"result","nameLocation":"19154:6:14","nodeType":"VariableDeclaration","scope":4348,"src":"19141:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4313,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:14"},"scope":5056,"src":"19007:926:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4380,"nodeType":"Block","src":"20088:176:14","statements":[{"body":{"id":4376,"nodeType":"Block","src":"20145:92:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4367,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"20163:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4369,"indexExpression":{"id":4368,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"20173:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4375,"nodeType":"IfStatement","src":"20159:68:14","trueBody":{"id":4374,"nodeType":"Block","src":"20182:45:14","statements":[{"expression":{"hexValue":"66616c7365","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4355,"id":4373,"nodeType":"Return","src":"20200:12:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"20118:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4361,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"20122:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:14","memberName":"length","nodeType":"MemberAccess","src":"20122:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4377,"initializationExpression":{"assignments":[4357],"declarations":[{"constant":false,"id":4357,"mutability":"mutable","name":"i","nameLocation":"20111:1:14","nodeType":"VariableDeclaration","scope":4377,"src":"20103:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4356,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4359,"initialValue":{"hexValue":"30","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:14"},"loopExpression":{"expression":{"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:14","subExpression":{"id":4364,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"20142:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4366,"nodeType":"ExpressionStatement","src":"20140:3:14"},"nodeType":"ForStatement","src":"20098:139:14"},{"expression":{"hexValue":"74727565","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4355,"id":4379,"nodeType":"Return","src":"20246:11:14"}]},"documentation":{"id":4349,"nodeType":"StructuredDocumentation","src":"19939:72:14","text":" @dev Returns whether the provided byte array is zero."},"id":4381,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:14","nodeType":"FunctionDefinition","parameters":{"id":4352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:14","nodeType":"VariableDeclaration","scope":4381,"src":"20036:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4350,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:14"},"returnParameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4381,"src":"20082:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4353,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:14"},"scope":5056,"src":"20016:248:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4599,"nodeType":"Block","src":"20624:5124:14","statements":[{"id":4598,"nodeType":"UncheckedBlock","src":"20634:5108:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"20728:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4395,"nodeType":"IfStatement","src":"20724:53:14","trueBody":{"id":4394,"nodeType":"Block","src":"20736:41:14","statements":[{"expression":{"id":4392,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"20761:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4388,"id":4393,"nodeType":"Return","src":"20754:8:14"}]}},{"assignments":[4397],"declarations":[{"constant":false,"id":4397,"mutability":"mutable","name":"aa","nameLocation":"21712:2:14","nodeType":"VariableDeclaration","scope":4598,"src":"21704:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4396,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4399,"initialValue":{"id":4398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"21717:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:14"},{"assignments":[4401],"declarations":[{"constant":false,"id":4401,"mutability":"mutable","name":"xn","nameLocation":"21740:2:14","nodeType":"VariableDeclaration","scope":4598,"src":"21732:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4400,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4403,"initialValue":{"hexValue":"31","id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4404,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"21765:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4419,"nodeType":"IfStatement","src":"21761:92:14","trueBody":{"id":4418,"nodeType":"Block","src":"21783:70:14","statements":[{"expression":{"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4410,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"21801:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4413,"nodeType":"ExpressionStatement","src":"21801:10:14"},{"expression":{"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4414,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"21829:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4417,"nodeType":"ExpressionStatement","src":"21829:9:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4420,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"21870:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4424,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4435,"nodeType":"IfStatement","src":"21866:90:14","trueBody":{"id":4434,"nodeType":"Block","src":"21887:69:14","statements":[{"expression":{"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4426,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"21905:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4429,"nodeType":"ExpressionStatement","src":"21905:9:14"},{"expression":{"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4430,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"21932:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4433,"nodeType":"ExpressionStatement","src":"21932:9:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4436,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"21973:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4451,"nodeType":"IfStatement","src":"21969:90:14","trueBody":{"id":4450,"nodeType":"Block","src":"21990:69:14","statements":[{"expression":{"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4442,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"22008:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4445,"nodeType":"ExpressionStatement","src":"22008:9:14"},{"expression":{"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4446,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"22035:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4449,"nodeType":"ExpressionStatement","src":"22035:9:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4452,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"22076:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:14","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4456,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:14","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4467,"nodeType":"IfStatement","src":"22072:89:14","trueBody":{"id":4466,"nodeType":"Block","src":"22093:68:14","statements":[{"expression":{"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4458,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"22111:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4461,"nodeType":"ExpressionStatement","src":"22111:9:14"},{"expression":{"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4462,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"22138:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4465,"nodeType":"ExpressionStatement","src":"22138:8:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4468,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"22178:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4483,"nodeType":"IfStatement","src":"22174:87:14","trueBody":{"id":4482,"nodeType":"Block","src":"22194:67:14","statements":[{"expression":{"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4474,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"22212:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4477,"nodeType":"ExpressionStatement","src":"22212:8:14"},{"expression":{"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4478,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"22238:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4481,"nodeType":"ExpressionStatement","src":"22238:8:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4484,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"22278:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4499,"nodeType":"IfStatement","src":"22274:87:14","trueBody":{"id":4498,"nodeType":"Block","src":"22294:67:14","statements":[{"expression":{"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4490,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"22312:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4493,"nodeType":"ExpressionStatement","src":"22312:8:14"},{"expression":{"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4494,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"22338:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4497,"nodeType":"ExpressionStatement","src":"22338:8:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4500,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"22378:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4511,"nodeType":"IfStatement","src":"22374:61:14","trueBody":{"id":4510,"nodeType":"Block","src":"22394:41:14","statements":[{"expression":{"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4506,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"22412:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4509,"nodeType":"ExpressionStatement","src":"22412:8:14"}]}},{"expression":{"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4512,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"22855:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4514,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"22865:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4516,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4520,"nodeType":"ExpressionStatement","src":"22855:18:14"},{"expression":{"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4521,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"24760:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4522,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"24766:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4523,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"24771:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4524,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"24775:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4531,"nodeType":"ExpressionStatement","src":"24760:23:14"},{"expression":{"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4532,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"24869:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4533,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"24875:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4534,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"24880:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4535,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"24884:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4542,"nodeType":"ExpressionStatement","src":"24869:23:14"},{"expression":{"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4543,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"24980:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4544,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"24986:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4545,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"24991:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4546,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"24995:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4553,"nodeType":"ExpressionStatement","src":"24980:23:14"},{"expression":{"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4554,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"25089:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4555,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"25095:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"25100:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4557,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"25104:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4564,"nodeType":"ExpressionStatement","src":"25089:23:14"},{"expression":{"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4565,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"25199:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4566,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"25205:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4567,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"25210:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4568,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"25214:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4571,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4575,"nodeType":"ExpressionStatement","src":"25199:23:14"},{"expression":{"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4576,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"25309:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4577,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"25315:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4578,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"25320:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4579,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"25324:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4582,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4586,"nodeType":"ExpressionStatement","src":"25309:23:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4587,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"25698:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4590,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"25719:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4591,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"25724:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4592,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"25728:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4588,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"25703:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"25703:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4388,"id":4597,"nodeType":"Return","src":"25691:40:14"}]}]},"documentation":{"id":4382,"nodeType":"StructuredDocumentation","src":"20270:292:14","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4600,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:14","nodeType":"FunctionDefinition","parameters":{"id":4385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4384,"mutability":"mutable","name":"a","nameLocation":"20589:1:14","nodeType":"VariableDeclaration","scope":4600,"src":"20581:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4383,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:14"},"returnParameters":{"id":4388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4600,"src":"20615:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4386,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:14"},"scope":5056,"src":"20567:5181:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4633,"nodeType":"Block","src":"25921:171:14","statements":[{"id":4632,"nodeType":"UncheckedBlock","src":"25931:155:14","statements":[{"assignments":[4612],"declarations":[{"constant":false,"id":4612,"mutability":"mutable","name":"result","nameLocation":"25963:6:14","nodeType":"VariableDeclaration","scope":4632,"src":"25955:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4611,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4616,"initialValue":{"arguments":[{"id":4614,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"25977:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4613,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4600,4634],"referencedDeclaration":4600,"src":"25972:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4617,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"26000:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4621,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"26042:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}],"id":4620,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"26025:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3447_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4623,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"26055:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4624,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"26064:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4626,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"26073:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4618,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"26009:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"26009:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4610,"id":4631,"nodeType":"Return","src":"25993:82:14"}]}]},"documentation":{"id":4601,"nodeType":"StructuredDocumentation","src":"25754:86:14","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4634,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:14","nodeType":"FunctionDefinition","parameters":{"id":4607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4603,"mutability":"mutable","name":"a","nameLocation":"25867:1:14","nodeType":"VariableDeclaration","scope":4634,"src":"25859:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4602,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4606,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:14","nodeType":"VariableDeclaration","scope":4634,"src":"25870:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"},"typeName":{"id":4605,"nodeType":"UserDefinedTypeName","pathNode":{"id":4604,"name":"Rounding","nameLocations":["25870:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3447,"src":"25870:8:14"},"referencedDeclaration":3447,"src":"25870:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:14"},"returnParameters":{"id":4610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4634,"src":"25912:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4608,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:14"},"scope":5056,"src":"25845:247:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4724,"nodeType":"Block","src":"26281:2334:14","statements":[{"expression":{"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4642,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"26363:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4645,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"26383:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4643,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"26367:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"26367:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4652,"nodeType":"ExpressionStatement","src":"26363:64:14"},{"expression":{"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4653,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"26503:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4656,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"26525:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4657,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"26530:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4654,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"26508:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"26508:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:14","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4666,"nodeType":"ExpressionStatement","src":"26503:56:14"},{"expression":{"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4667,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"26634:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4670,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"26656:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4671,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"26661:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4673,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4668,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"26639:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"26639:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4680,"nodeType":"ExpressionStatement","src":"26634:48:14"},{"expression":{"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4681,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"26757:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4684,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"26779:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4685,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"26784:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:14","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4682,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"26762:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"26762:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4694,"nodeType":"ExpressionStatement","src":"26757:44:14"},{"expression":{"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4695,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"26874:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"26896:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4699,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"26901:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4696,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"26879:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"26879:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4708,"nodeType":"ExpressionStatement","src":"26874:42:14"},{"expression":{"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4709,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"26988:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4712,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"27010:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4713,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"27015:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4715,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4710,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"26993:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"26993:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4722,"nodeType":"ExpressionStatement","src":"26988:41:14"},{"AST":{"nodeType":"YulBlock","src":"28490:119:14","statements":[{"nodeType":"YulAssignment","src":"28504:95:14","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:14"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:14"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:14"},"nodeType":"YulFunctionCall","src":"28520:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:14","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:14"},"nodeType":"YulFunctionCall","src":"28515:83:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:14"},"nodeType":"YulFunctionCall","src":"28509:90:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4640,"isOffset":false,"isSlot":false,"src":"28504:1:14","valueSize":1},{"declaration":4640,"isOffset":false,"isSlot":false,"src":"28512:1:14","valueSize":1},{"declaration":4640,"isOffset":false,"isSlot":false,"src":"28524:1:14","valueSize":1},{"declaration":4637,"isOffset":false,"isSlot":false,"src":"28527:1:14","valueSize":1}],"flags":["memory-safe"],"id":4723,"nodeType":"InlineAssembly","src":"28465:144:14"}]},"documentation":{"id":4635,"nodeType":"StructuredDocumentation","src":"26098:119:14","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4725,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:14","nodeType":"FunctionDefinition","parameters":{"id":4638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4637,"mutability":"mutable","name":"x","nameLocation":"26244:1:14","nodeType":"VariableDeclaration","scope":4725,"src":"26236:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4636,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:14"},"returnParameters":{"id":4641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4640,"mutability":"mutable","name":"r","nameLocation":"26278:1:14","nodeType":"VariableDeclaration","scope":4725,"src":"26270:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4639,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:14"},"scope":5056,"src":"26222:2393:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4758,"nodeType":"Block","src":"28848:175:14","statements":[{"id":4757,"nodeType":"UncheckedBlock","src":"28858:159:14","statements":[{"assignments":[4737],"declarations":[{"constant":false,"id":4737,"mutability":"mutable","name":"result","nameLocation":"28890:6:14","nodeType":"VariableDeclaration","scope":4757,"src":"28882:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4736,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4741,"initialValue":{"arguments":[{"id":4739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"28904:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4738,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4725,4759],"referencedDeclaration":4725,"src":"28899:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4742,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"28931:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4746,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"28973:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}],"id":4745,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"28956:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3447_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4749,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"28991:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"29000:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4743,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"28940:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"28940:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4735,"id":4756,"nodeType":"Return","src":"28924:82:14"}]}]},"documentation":{"id":4726,"nodeType":"StructuredDocumentation","src":"28621:142:14","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4759,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:14","nodeType":"FunctionDefinition","parameters":{"id":4732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4728,"mutability":"mutable","name":"value","nameLocation":"28790:5:14","nodeType":"VariableDeclaration","scope":4759,"src":"28782:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4731,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:14","nodeType":"VariableDeclaration","scope":4759,"src":"28797:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"},"typeName":{"id":4730,"nodeType":"UserDefinedTypeName","pathNode":{"id":4729,"name":"Rounding","nameLocations":["28797:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3447,"src":"28797:8:14"},"referencedDeclaration":3447,"src":"28797:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:14"},"returnParameters":{"id":4735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4759,"src":"28839:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4733,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:14"},"scope":5056,"src":"28768:255:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4887,"nodeType":"Block","src":"29216:854:14","statements":[{"assignments":[4768],"declarations":[{"constant":false,"id":4768,"mutability":"mutable","name":"result","nameLocation":"29234:6:14","nodeType":"VariableDeclaration","scope":4887,"src":"29226:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4767,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4770,"initialValue":{"hexValue":"30","id":4769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:14"},{"id":4884,"nodeType":"UncheckedBlock","src":"29254:787:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"29282:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4787,"nodeType":"IfStatement","src":"29278:103:14","trueBody":{"id":4786,"nodeType":"Block","src":"29301:80:14","statements":[{"expression":{"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"29319:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4781,"nodeType":"ExpressionStatement","src":"29319:17:14"},{"expression":{"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4782,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"29354:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4785,"nodeType":"ExpressionStatement","src":"29354:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"29398:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4804,"nodeType":"IfStatement","src":"29394:103:14","trueBody":{"id":4803,"nodeType":"Block","src":"29417:80:14","statements":[{"expression":{"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"29435:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4798,"nodeType":"ExpressionStatement","src":"29435:17:14"},{"expression":{"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4799,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"29470:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4802,"nodeType":"ExpressionStatement","src":"29470:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"29514:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4821,"nodeType":"IfStatement","src":"29510:103:14","trueBody":{"id":4820,"nodeType":"Block","src":"29533:80:14","statements":[{"expression":{"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"29551:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4815,"nodeType":"ExpressionStatement","src":"29551:17:14"},{"expression":{"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"29586:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4819,"nodeType":"ExpressionStatement","src":"29586:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"29630:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4838,"nodeType":"IfStatement","src":"29626:100:14","trueBody":{"id":4837,"nodeType":"Block","src":"29648:78:14","statements":[{"expression":{"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"29666:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4832,"nodeType":"ExpressionStatement","src":"29666:16:14"},{"expression":{"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4833,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"29700:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4836,"nodeType":"ExpressionStatement","src":"29700:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"29743:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4855,"nodeType":"IfStatement","src":"29739:100:14","trueBody":{"id":4854,"nodeType":"Block","src":"29761:78:14","statements":[{"expression":{"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"29779:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4849,"nodeType":"ExpressionStatement","src":"29779:16:14"},{"expression":{"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4850,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"29813:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4853,"nodeType":"ExpressionStatement","src":"29813:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"29856:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4872,"nodeType":"IfStatement","src":"29852:100:14","trueBody":{"id":4871,"nodeType":"Block","src":"29874:78:14","statements":[{"expression":{"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"29892:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4866,"nodeType":"ExpressionStatement","src":"29892:16:14"},{"expression":{"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4867,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"29926:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4870,"nodeType":"ExpressionStatement","src":"29926:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"29969:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4883,"nodeType":"IfStatement","src":"29965:66:14","trueBody":{"id":4882,"nodeType":"Block","src":"29987:44:14","statements":[{"expression":{"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4878,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"30005:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4881,"nodeType":"ExpressionStatement","src":"30005:11:14"}]}}]},{"expression":{"id":4885,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"30057:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4766,"id":4886,"nodeType":"Return","src":"30050:13:14"}]},"documentation":{"id":4760,"nodeType":"StructuredDocumentation","src":"29029:120:14","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4888,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:14","nodeType":"FunctionDefinition","parameters":{"id":4763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4762,"mutability":"mutable","name":"value","nameLocation":"29177:5:14","nodeType":"VariableDeclaration","scope":4888,"src":"29169:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4761,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:14"},"returnParameters":{"id":4766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4888,"src":"29207:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4764,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:14"},"scope":5056,"src":"29154:916:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4921,"nodeType":"Block","src":"30305:177:14","statements":[{"id":4920,"nodeType":"UncheckedBlock","src":"30315:161:14","statements":[{"assignments":[4900],"declarations":[{"constant":false,"id":4900,"mutability":"mutable","name":"result","nameLocation":"30347:6:14","nodeType":"VariableDeclaration","scope":4920,"src":"30339:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4899,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4904,"initialValue":{"arguments":[{"id":4902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"30362:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4901,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4888,4922],"referencedDeclaration":4888,"src":"30356:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4905,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"30389:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4909,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"30431:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}],"id":4908,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"30414:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3447_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4912,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"30450:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"30459:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4906,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"30398:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"30398:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4898,"id":4919,"nodeType":"Return","src":"30382:83:14"}]}]},"documentation":{"id":4889,"nodeType":"StructuredDocumentation","src":"30076:143:14","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4922,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:14","nodeType":"FunctionDefinition","parameters":{"id":4895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4891,"mutability":"mutable","name":"value","nameLocation":"30247:5:14","nodeType":"VariableDeclaration","scope":4922,"src":"30239:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4890,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4894,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:14","nodeType":"VariableDeclaration","scope":4922,"src":"30254:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"},"typeName":{"id":4893,"nodeType":"UserDefinedTypeName","pathNode":{"id":4892,"name":"Rounding","nameLocations":["30254:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3447,"src":"30254:8:14"},"referencedDeclaration":3447,"src":"30254:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:14"},"returnParameters":{"id":4898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4922,"src":"30296:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4896,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:14"},"scope":5056,"src":"30224:258:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4998,"nodeType":"Block","src":"30800:675:14","statements":[{"expression":{"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4930,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"30882:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4933,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"30902:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4931,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"30886:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"30886:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4940,"nodeType":"ExpressionStatement","src":"30882:64:14"},{"expression":{"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4941,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"31022:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4944,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"31044:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4945,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"31049:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4942,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"31027:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"31027:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:14","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4954,"nodeType":"ExpressionStatement","src":"31022:56:14"},{"expression":{"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4955,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"31153:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4958,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"31175:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4959,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"31180:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4956,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"31158:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"31158:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4968,"nodeType":"ExpressionStatement","src":"31153:48:14"},{"expression":{"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4969,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"31276:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4972,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"31298:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4973,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"31303:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:14","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4970,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"31281:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"31281:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4982,"nodeType":"ExpressionStatement","src":"31276:44:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4983,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"31426:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4986,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4989,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"31453:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4990,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"31458:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4992,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4987,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"31436:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"31436:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4929,"id":4997,"nodeType":"Return","src":"31418:50:14"}]},"documentation":{"id":4923,"nodeType":"StructuredDocumentation","src":"30488:246:14","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4999,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:14","nodeType":"FunctionDefinition","parameters":{"id":4926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4925,"mutability":"mutable","name":"x","nameLocation":"30763:1:14","nodeType":"VariableDeclaration","scope":4999,"src":"30755:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4924,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:14"},"returnParameters":{"id":4929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4928,"mutability":"mutable","name":"r","nameLocation":"30797:1:14","nodeType":"VariableDeclaration","scope":4999,"src":"30789:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4927,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:14"},"scope":5056,"src":"30739:736:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5035,"nodeType":"Block","src":"31712:184:14","statements":[{"id":5034,"nodeType":"UncheckedBlock","src":"31722:168:14","statements":[{"assignments":[5011],"declarations":[{"constant":false,"id":5011,"mutability":"mutable","name":"result","nameLocation":"31754:6:14","nodeType":"VariableDeclaration","scope":5034,"src":"31746:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5010,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5015,"initialValue":{"arguments":[{"id":5013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"31770:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5012,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4999,5036],"referencedDeclaration":4999,"src":"31763:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"31797:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5020,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"31839:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}],"id":5019,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"31822:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3447_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"31858:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"31873:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5017,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"31806:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"31806:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5009,"id":5033,"nodeType":"Return","src":"31790:89:14"}]}]},"documentation":{"id":5000,"nodeType":"StructuredDocumentation","src":"31481:144:14","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5036,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:14","nodeType":"FunctionDefinition","parameters":{"id":5006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5002,"mutability":"mutable","name":"value","nameLocation":"31654:5:14","nodeType":"VariableDeclaration","scope":5036,"src":"31646:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5001,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5005,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:14","nodeType":"VariableDeclaration","scope":5036,"src":"31661:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"},"typeName":{"id":5004,"nodeType":"UserDefinedTypeName","pathNode":{"id":5003,"name":"Rounding","nameLocations":["31661:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3447,"src":"31661:8:14"},"referencedDeclaration":3447,"src":"31661:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:14"},"returnParameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5036,"src":"31703:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5007,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:14"},"scope":5056,"src":"31630:266:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5054,"nodeType":"Block","src":"32094:48:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5047,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"32117:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}],"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5045,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:14","typeDescriptions":{}}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5044,"id":5053,"nodeType":"Return","src":"32104:31:14"}]},"documentation":{"id":5037,"nodeType":"StructuredDocumentation","src":"31902:113:14","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5055,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:14","nodeType":"FunctionDefinition","parameters":{"id":5041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5040,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:14","nodeType":"VariableDeclaration","scope":5055,"src":"32046:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"},"typeName":{"id":5039,"nodeType":"UserDefinedTypeName","pathNode":{"id":5038,"name":"Rounding","nameLocations":["32046:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3447,"src":"32046:8:14"},"referencedDeclaration":3447,"src":"32046:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3447","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:14"},"returnParameters":{"id":5044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5055,"src":"32088:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5042,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:14"},"scope":5056,"src":"32020:122:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5057,"src":"281:31863:14","usedErrors":[],"usedEvents":[]}],"src":"103:32042:14"},"id":14},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6821]},"id":6822,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5058,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5059,"nodeType":"StructuredDocumentation","src":"218:550:15","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6821,"linearizedBaseContracts":[6821],"name":"SafeCast","nameLocation":"777:8:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5060,"nodeType":"StructuredDocumentation","src":"792:68:15","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5066,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:15","nodeType":"ErrorDefinition","parameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5062,"mutability":"mutable","name":"bits","nameLocation":"908:4:15","nodeType":"VariableDeclaration","scope":5066,"src":"902:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5061,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5064,"mutability":"mutable","name":"value","nameLocation":"922:5:15","nodeType":"VariableDeclaration","scope":5066,"src":"914:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:15"},"src":"865:64:15"},{"documentation":{"id":5067,"nodeType":"StructuredDocumentation","src":"935:75:15","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5071,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:15","nodeType":"ErrorDefinition","parameters":{"id":5070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5069,"mutability":"mutable","name":"value","nameLocation":"1056:5:15","nodeType":"VariableDeclaration","scope":5071,"src":"1049:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5068,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:15"},"src":"1015:48:15"},{"documentation":{"id":5072,"nodeType":"StructuredDocumentation","src":"1069:67:15","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5078,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:15","nodeType":"ErrorDefinition","parameters":{"id":5077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5074,"mutability":"mutable","name":"bits","nameLocation":"1183:4:15","nodeType":"VariableDeclaration","scope":5078,"src":"1177:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5073,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5076,"mutability":"mutable","name":"value","nameLocation":"1196:5:15","nodeType":"VariableDeclaration","scope":5078,"src":"1189:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5075,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:15"},"src":"1141:62:15"},{"documentation":{"id":5079,"nodeType":"StructuredDocumentation","src":"1209:75:15","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5083,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:15","nodeType":"ErrorDefinition","parameters":{"id":5082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"value","nameLocation":"1331:5:15","nodeType":"VariableDeclaration","scope":5083,"src":"1323:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5080,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:15"},"src":"1289:49:15"},{"body":{"id":5110,"nodeType":"Block","src":"1695:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"1709:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5093,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5092,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1717:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:15","memberName":"max","nodeType":"MemberAccess","src":"1717:17:15","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5104,"nodeType":"IfStatement","src":"1705:105:15","trueBody":{"id":5103,"nodeType":"Block","src":"1736:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:15","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"1793:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5098,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"1757:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5102,"nodeType":"RevertStatement","src":"1750:49:15"}]}},{"expression":{"arguments":[{"id":5107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"1834:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5105,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:15","typeDescriptions":{}}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5090,"id":5109,"nodeType":"Return","src":"1819:21:15"}]},"documentation":{"id":5084,"nodeType":"StructuredDocumentation","src":"1344:280:15","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5111,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:15","nodeType":"FunctionDefinition","parameters":{"id":5087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5086,"mutability":"mutable","name":"value","nameLocation":"1656:5:15","nodeType":"VariableDeclaration","scope":5111,"src":"1648:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5085,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:15"},"returnParameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5111,"src":"1686:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5088,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:15","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:15"},"scope":6821,"src":"1629:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5138,"nodeType":"Block","src":"2204:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"2218:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5121,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5120,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"2226:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:15","memberName":"max","nodeType":"MemberAccess","src":"2226:17:15","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5132,"nodeType":"IfStatement","src":"2214:105:15","trueBody":{"id":5131,"nodeType":"Block","src":"2245:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:15","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"2302:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5126,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"2266:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5130,"nodeType":"RevertStatement","src":"2259:49:15"}]}},{"expression":{"arguments":[{"id":5135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"2343:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5133,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:15","typeDescriptions":{}}},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5118,"id":5137,"nodeType":"Return","src":"2328:21:15"}]},"documentation":{"id":5112,"nodeType":"StructuredDocumentation","src":"1853:280:15","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5139,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:15","nodeType":"FunctionDefinition","parameters":{"id":5115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5114,"mutability":"mutable","name":"value","nameLocation":"2165:5:15","nodeType":"VariableDeclaration","scope":5139,"src":"2157:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5113,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:15"},"returnParameters":{"id":5118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5139,"src":"2195:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5116,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:15","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:15"},"scope":6821,"src":"2138:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5166,"nodeType":"Block","src":"2713:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"2727:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5149,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5148,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"2735:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:15","memberName":"max","nodeType":"MemberAccess","src":"2735:17:15","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5160,"nodeType":"IfStatement","src":"2723:105:15","trueBody":{"id":5159,"nodeType":"Block","src":"2754:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:15","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"2811:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5154,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"2775:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5158,"nodeType":"RevertStatement","src":"2768:49:15"}]}},{"expression":{"arguments":[{"id":5163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"2852:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5161,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:15","typeDescriptions":{}}},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5146,"id":5165,"nodeType":"Return","src":"2837:21:15"}]},"documentation":{"id":5140,"nodeType":"StructuredDocumentation","src":"2362:280:15","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5167,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:15","nodeType":"FunctionDefinition","parameters":{"id":5143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5142,"mutability":"mutable","name":"value","nameLocation":"2674:5:15","nodeType":"VariableDeclaration","scope":5167,"src":"2666:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:15"},"returnParameters":{"id":5146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5167,"src":"2704:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5144,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:15","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:15"},"scope":6821,"src":"2647:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5194,"nodeType":"Block","src":"3222:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"3236:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5177,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5176,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"3244:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:15","memberName":"max","nodeType":"MemberAccess","src":"3244:17:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5188,"nodeType":"IfStatement","src":"3232:105:15","trueBody":{"id":5187,"nodeType":"Block","src":"3263:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:15","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"3320:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5182,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"3284:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5186,"nodeType":"RevertStatement","src":"3277:49:15"}]}},{"expression":{"arguments":[{"id":5191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"3361:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5189,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:15","typeDescriptions":{}}},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5174,"id":5193,"nodeType":"Return","src":"3346:21:15"}]},"documentation":{"id":5168,"nodeType":"StructuredDocumentation","src":"2871:280:15","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5195,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:15","nodeType":"FunctionDefinition","parameters":{"id":5171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5170,"mutability":"mutable","name":"value","nameLocation":"3183:5:15","nodeType":"VariableDeclaration","scope":5195,"src":"3175:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5169,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:15"},"returnParameters":{"id":5174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5195,"src":"3213:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5172,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:15"},"scope":6821,"src":"3156:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5222,"nodeType":"Block","src":"3731:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"3745:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5205,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5204,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"3753:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:15","memberName":"max","nodeType":"MemberAccess","src":"3753:17:15","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5216,"nodeType":"IfStatement","src":"3741:105:15","trueBody":{"id":5215,"nodeType":"Block","src":"3772:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:15","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"3829:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5210,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"3793:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5214,"nodeType":"RevertStatement","src":"3786:49:15"}]}},{"expression":{"arguments":[{"id":5219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"3870:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5217,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:15","typeDescriptions":{}}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5202,"id":5221,"nodeType":"Return","src":"3855:21:15"}]},"documentation":{"id":5196,"nodeType":"StructuredDocumentation","src":"3380:280:15","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5223,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:15","nodeType":"FunctionDefinition","parameters":{"id":5199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5198,"mutability":"mutable","name":"value","nameLocation":"3692:5:15","nodeType":"VariableDeclaration","scope":5223,"src":"3684:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5197,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:15"},"returnParameters":{"id":5202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5223,"src":"3722:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5200,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:15","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:15"},"scope":6821,"src":"3665:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5250,"nodeType":"Block","src":"4240:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"4254:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5233,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5232,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"4262:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:15","memberName":"max","nodeType":"MemberAccess","src":"4262:17:15","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5244,"nodeType":"IfStatement","src":"4250:105:15","trueBody":{"id":5243,"nodeType":"Block","src":"4281:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:15","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"4338:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5238,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"4302:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5242,"nodeType":"RevertStatement","src":"4295:49:15"}]}},{"expression":{"arguments":[{"id":5247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"4379:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5245,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:15","typeDescriptions":{}}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5230,"id":5249,"nodeType":"Return","src":"4364:21:15"}]},"documentation":{"id":5224,"nodeType":"StructuredDocumentation","src":"3889:280:15","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5251,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:15","nodeType":"FunctionDefinition","parameters":{"id":5227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5226,"mutability":"mutable","name":"value","nameLocation":"4201:5:15","nodeType":"VariableDeclaration","scope":5251,"src":"4193:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5225,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:15"},"returnParameters":{"id":5230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5251,"src":"4231:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5228,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:15","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:15"},"scope":6821,"src":"4174:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5278,"nodeType":"Block","src":"4749:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"4763:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5261,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5260,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"4771:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:15","memberName":"max","nodeType":"MemberAccess","src":"4771:17:15","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5272,"nodeType":"IfStatement","src":"4759:105:15","trueBody":{"id":5271,"nodeType":"Block","src":"4790:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:15","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"4847:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5266,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"4811:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5270,"nodeType":"RevertStatement","src":"4804:49:15"}]}},{"expression":{"arguments":[{"id":5275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"4888:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5273,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:15","typeDescriptions":{}}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5258,"id":5277,"nodeType":"Return","src":"4873:21:15"}]},"documentation":{"id":5252,"nodeType":"StructuredDocumentation","src":"4398:280:15","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5279,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:15","nodeType":"FunctionDefinition","parameters":{"id":5255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5254,"mutability":"mutable","name":"value","nameLocation":"4710:5:15","nodeType":"VariableDeclaration","scope":5279,"src":"4702:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5253,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:15"},"returnParameters":{"id":5258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5279,"src":"4740:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5256,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:15","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:15"},"scope":6821,"src":"4683:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5306,"nodeType":"Block","src":"5258:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"5272:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5289,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5288,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"5280:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:15","memberName":"max","nodeType":"MemberAccess","src":"5280:17:15","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5300,"nodeType":"IfStatement","src":"5268:105:15","trueBody":{"id":5299,"nodeType":"Block","src":"5299:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:15","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"5356:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5294,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"5320:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5298,"nodeType":"RevertStatement","src":"5313:49:15"}]}},{"expression":{"arguments":[{"id":5303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"5397:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5301,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:15","typeDescriptions":{}}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5286,"id":5305,"nodeType":"Return","src":"5382:21:15"}]},"documentation":{"id":5280,"nodeType":"StructuredDocumentation","src":"4907:280:15","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5307,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:15","nodeType":"FunctionDefinition","parameters":{"id":5283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5282,"mutability":"mutable","name":"value","nameLocation":"5219:5:15","nodeType":"VariableDeclaration","scope":5307,"src":"5211:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5281,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:15"},"returnParameters":{"id":5286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5307,"src":"5249:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5284,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:15","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:15"},"scope":6821,"src":"5192:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5334,"nodeType":"Block","src":"5767:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"5781:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5317,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5316,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"5789:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:15","memberName":"max","nodeType":"MemberAccess","src":"5789:17:15","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5328,"nodeType":"IfStatement","src":"5777:105:15","trueBody":{"id":5327,"nodeType":"Block","src":"5808:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:15","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"5865:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5322,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"5829:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5326,"nodeType":"RevertStatement","src":"5822:49:15"}]}},{"expression":{"arguments":[{"id":5331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"5906:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5329,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:15","typeDescriptions":{}}},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5314,"id":5333,"nodeType":"Return","src":"5891:21:15"}]},"documentation":{"id":5308,"nodeType":"StructuredDocumentation","src":"5416:280:15","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5335,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:15","nodeType":"FunctionDefinition","parameters":{"id":5311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5310,"mutability":"mutable","name":"value","nameLocation":"5728:5:15","nodeType":"VariableDeclaration","scope":5335,"src":"5720:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5309,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:15"},"returnParameters":{"id":5314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5335,"src":"5758:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5312,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:15","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:15"},"scope":6821,"src":"5701:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5362,"nodeType":"Block","src":"6276:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"6290:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5345,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5344,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"6298:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:15","memberName":"max","nodeType":"MemberAccess","src":"6298:17:15","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5356,"nodeType":"IfStatement","src":"6286:105:15","trueBody":{"id":5355,"nodeType":"Block","src":"6317:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:15","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"6374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5350,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"6338:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5354,"nodeType":"RevertStatement","src":"6331:49:15"}]}},{"expression":{"arguments":[{"id":5359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"6415:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5357,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:15","typeDescriptions":{}}},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5342,"id":5361,"nodeType":"Return","src":"6400:21:15"}]},"documentation":{"id":5336,"nodeType":"StructuredDocumentation","src":"5925:280:15","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5363,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:15","nodeType":"FunctionDefinition","parameters":{"id":5339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5338,"mutability":"mutable","name":"value","nameLocation":"6237:5:15","nodeType":"VariableDeclaration","scope":5363,"src":"6229:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5337,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:15"},"returnParameters":{"id":5342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5363,"src":"6267:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5340,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:15","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:15"},"scope":6821,"src":"6210:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5390,"nodeType":"Block","src":"6785:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5366,"src":"6799:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5373,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5372,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"6807:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:15","memberName":"max","nodeType":"MemberAccess","src":"6807:17:15","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5384,"nodeType":"IfStatement","src":"6795:105:15","trueBody":{"id":5383,"nodeType":"Block","src":"6826:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:15","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5366,"src":"6883:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5378,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"6847:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5382,"nodeType":"RevertStatement","src":"6840:49:15"}]}},{"expression":{"arguments":[{"id":5387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5366,"src":"6924:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5385,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:15","typeDescriptions":{}}},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5370,"id":5389,"nodeType":"Return","src":"6909:21:15"}]},"documentation":{"id":5364,"nodeType":"StructuredDocumentation","src":"6434:280:15","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5391,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:15","nodeType":"FunctionDefinition","parameters":{"id":5367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5366,"mutability":"mutable","name":"value","nameLocation":"6746:5:15","nodeType":"VariableDeclaration","scope":5391,"src":"6738:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5365,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:15"},"returnParameters":{"id":5370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5391,"src":"6776:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5368,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:15","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:15"},"scope":6821,"src":"6719:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5418,"nodeType":"Block","src":"7294:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"7308:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5401,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5400,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"7316:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:15","memberName":"max","nodeType":"MemberAccess","src":"7316:17:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5412,"nodeType":"IfStatement","src":"7304:105:15","trueBody":{"id":5411,"nodeType":"Block","src":"7335:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:15","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"7392:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5406,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"7356:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5410,"nodeType":"RevertStatement","src":"7349:49:15"}]}},{"expression":{"arguments":[{"id":5415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"7433:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5413,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:15","typeDescriptions":{}}},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5398,"id":5417,"nodeType":"Return","src":"7418:21:15"}]},"documentation":{"id":5392,"nodeType":"StructuredDocumentation","src":"6943:280:15","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5419,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:15","nodeType":"FunctionDefinition","parameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5394,"mutability":"mutable","name":"value","nameLocation":"7255:5:15","nodeType":"VariableDeclaration","scope":5419,"src":"7247:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5393,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:15"},"returnParameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5419,"src":"7285:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5396,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:15"},"scope":6821,"src":"7228:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5446,"nodeType":"Block","src":"7803:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"7817:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5429,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5428,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"7825:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:15","memberName":"max","nodeType":"MemberAccess","src":"7825:17:15","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5440,"nodeType":"IfStatement","src":"7813:105:15","trueBody":{"id":5439,"nodeType":"Block","src":"7844:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:15","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"7901:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5434,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"7865:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5438,"nodeType":"RevertStatement","src":"7858:49:15"}]}},{"expression":{"arguments":[{"id":5443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"7942:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5441,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:15","typeDescriptions":{}}},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5426,"id":5445,"nodeType":"Return","src":"7927:21:15"}]},"documentation":{"id":5420,"nodeType":"StructuredDocumentation","src":"7452:280:15","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5447,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:15","nodeType":"FunctionDefinition","parameters":{"id":5423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5422,"mutability":"mutable","name":"value","nameLocation":"7764:5:15","nodeType":"VariableDeclaration","scope":5447,"src":"7756:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5421,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:15"},"returnParameters":{"id":5426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5447,"src":"7794:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5424,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:15","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:15"},"scope":6821,"src":"7737:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5474,"nodeType":"Block","src":"8312:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"8326:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5457,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5456,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8334:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:15","memberName":"max","nodeType":"MemberAccess","src":"8334:17:15","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5468,"nodeType":"IfStatement","src":"8322:105:15","trueBody":{"id":5467,"nodeType":"Block","src":"8353:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:15","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"8410:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5462,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"8374:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5466,"nodeType":"RevertStatement","src":"8367:49:15"}]}},{"expression":{"arguments":[{"id":5471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"8451:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5469,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:15","typeDescriptions":{}}},"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5454,"id":5473,"nodeType":"Return","src":"8436:21:15"}]},"documentation":{"id":5448,"nodeType":"StructuredDocumentation","src":"7961:280:15","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5475,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:15","nodeType":"FunctionDefinition","parameters":{"id":5451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5450,"mutability":"mutable","name":"value","nameLocation":"8273:5:15","nodeType":"VariableDeclaration","scope":5475,"src":"8265:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5449,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:15"},"returnParameters":{"id":5454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5475,"src":"8303:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5452,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:15","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:15"},"scope":6821,"src":"8246:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5502,"nodeType":"Block","src":"8821:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"8835:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5485,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5484,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8843:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:15","memberName":"max","nodeType":"MemberAccess","src":"8843:17:15","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5496,"nodeType":"IfStatement","src":"8831:105:15","trueBody":{"id":5495,"nodeType":"Block","src":"8862:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:15","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"8919:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5490,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"8883:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5494,"nodeType":"RevertStatement","src":"8876:49:15"}]}},{"expression":{"arguments":[{"id":5499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"8960:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5497,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:15","typeDescriptions":{}}},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5482,"id":5501,"nodeType":"Return","src":"8945:21:15"}]},"documentation":{"id":5476,"nodeType":"StructuredDocumentation","src":"8470:280:15","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5503,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:15","nodeType":"FunctionDefinition","parameters":{"id":5479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5478,"mutability":"mutable","name":"value","nameLocation":"8782:5:15","nodeType":"VariableDeclaration","scope":5503,"src":"8774:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5477,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:15"},"returnParameters":{"id":5482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5503,"src":"8812:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5480,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:15","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:15"},"scope":6821,"src":"8755:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5530,"nodeType":"Block","src":"9330:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"9344:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5513,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5512,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"9352:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:15","memberName":"max","nodeType":"MemberAccess","src":"9352:17:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5524,"nodeType":"IfStatement","src":"9340:105:15","trueBody":{"id":5523,"nodeType":"Block","src":"9371:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"9428:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5518,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"9392:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5522,"nodeType":"RevertStatement","src":"9385:49:15"}]}},{"expression":{"arguments":[{"id":5527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"9469:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5525,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:15","typeDescriptions":{}}},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5510,"id":5529,"nodeType":"Return","src":"9454:21:15"}]},"documentation":{"id":5504,"nodeType":"StructuredDocumentation","src":"8979:280:15","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5531,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:15","nodeType":"FunctionDefinition","parameters":{"id":5507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5506,"mutability":"mutable","name":"value","nameLocation":"9291:5:15","nodeType":"VariableDeclaration","scope":5531,"src":"9283:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5505,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:15"},"returnParameters":{"id":5510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5531,"src":"9321:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5508,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:15"},"scope":6821,"src":"9264:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5558,"nodeType":"Block","src":"9839:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5534,"src":"9853:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5541,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5540,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"9861:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:15","memberName":"max","nodeType":"MemberAccess","src":"9861:17:15","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5552,"nodeType":"IfStatement","src":"9849:105:15","trueBody":{"id":5551,"nodeType":"Block","src":"9880:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:15","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5534,"src":"9937:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5546,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"9901:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5550,"nodeType":"RevertStatement","src":"9894:49:15"}]}},{"expression":{"arguments":[{"id":5555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5534,"src":"9978:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5553,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:15","typeDescriptions":{}}},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5538,"id":5557,"nodeType":"Return","src":"9963:21:15"}]},"documentation":{"id":5532,"nodeType":"StructuredDocumentation","src":"9488:280:15","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5559,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:15","nodeType":"FunctionDefinition","parameters":{"id":5535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5534,"mutability":"mutable","name":"value","nameLocation":"9800:5:15","nodeType":"VariableDeclaration","scope":5559,"src":"9792:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5533,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:15"},"returnParameters":{"id":5538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5559,"src":"9830:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5536,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:15","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:15"},"scope":6821,"src":"9773:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5586,"nodeType":"Block","src":"10348:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"10362:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5569,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5568,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10370:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:15","memberName":"max","nodeType":"MemberAccess","src":"10370:17:15","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5580,"nodeType":"IfStatement","src":"10358:105:15","trueBody":{"id":5579,"nodeType":"Block","src":"10389:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:15","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"10446:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5574,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"10410:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5578,"nodeType":"RevertStatement","src":"10403:49:15"}]}},{"expression":{"arguments":[{"id":5583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"10487:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5581,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:15","typeDescriptions":{}}},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5566,"id":5585,"nodeType":"Return","src":"10472:21:15"}]},"documentation":{"id":5560,"nodeType":"StructuredDocumentation","src":"9997:280:15","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5587,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:15","nodeType":"FunctionDefinition","parameters":{"id":5563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5562,"mutability":"mutable","name":"value","nameLocation":"10309:5:15","nodeType":"VariableDeclaration","scope":5587,"src":"10301:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5561,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:15"},"returnParameters":{"id":5566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5587,"src":"10339:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5564,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:15","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:15"},"scope":6821,"src":"10282:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5614,"nodeType":"Block","src":"10857:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"10871:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5597,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5596,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10879:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:15","memberName":"max","nodeType":"MemberAccess","src":"10879:17:15","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5608,"nodeType":"IfStatement","src":"10867:105:15","trueBody":{"id":5607,"nodeType":"Block","src":"10898:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:15","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"10955:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5602,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"10919:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5606,"nodeType":"RevertStatement","src":"10912:49:15"}]}},{"expression":{"arguments":[{"id":5611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"10996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5609,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:15","typeDescriptions":{}}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5594,"id":5613,"nodeType":"Return","src":"10981:21:15"}]},"documentation":{"id":5588,"nodeType":"StructuredDocumentation","src":"10506:280:15","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5615,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:15","nodeType":"FunctionDefinition","parameters":{"id":5591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5590,"mutability":"mutable","name":"value","nameLocation":"10818:5:15","nodeType":"VariableDeclaration","scope":5615,"src":"10810:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5589,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:15"},"returnParameters":{"id":5594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5615,"src":"10848:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5592,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:15","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:15"},"scope":6821,"src":"10791:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5642,"nodeType":"Block","src":"11360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"11374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5625,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5624,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"11382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:15","memberName":"max","nodeType":"MemberAccess","src":"11382:16:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5636,"nodeType":"IfStatement","src":"11370:103:15","trueBody":{"id":5635,"nodeType":"Block","src":"11400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"11456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5630,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"11421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5634,"nodeType":"RevertStatement","src":"11414:48:15"}]}},{"expression":{"arguments":[{"id":5639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"11496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5637,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:15","typeDescriptions":{}}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5622,"id":5641,"nodeType":"Return","src":"11482:20:15"}]},"documentation":{"id":5616,"nodeType":"StructuredDocumentation","src":"11015:276:15","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5643,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5618,"mutability":"mutable","name":"value","nameLocation":"11322:5:15","nodeType":"VariableDeclaration","scope":5643,"src":"11314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5617,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:15"},"returnParameters":{"id":5622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5643,"src":"11352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5620,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:15"},"scope":6821,"src":"11296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5670,"nodeType":"Block","src":"11860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"11874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5653,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5652,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"11882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:15","memberName":"max","nodeType":"MemberAccess","src":"11882:16:15","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5664,"nodeType":"IfStatement","src":"11870:103:15","trueBody":{"id":5663,"nodeType":"Block","src":"11900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"11956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5658,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"11921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5662,"nodeType":"RevertStatement","src":"11914:48:15"}]}},{"expression":{"arguments":[{"id":5667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"11996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5665,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:15","typeDescriptions":{}}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5650,"id":5669,"nodeType":"Return","src":"11982:20:15"}]},"documentation":{"id":5644,"nodeType":"StructuredDocumentation","src":"11515:276:15","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5671,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5646,"mutability":"mutable","name":"value","nameLocation":"11822:5:15","nodeType":"VariableDeclaration","scope":5671,"src":"11814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5645,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:15"},"returnParameters":{"id":5650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5671,"src":"11852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5648,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:15","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:15"},"scope":6821,"src":"11796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5698,"nodeType":"Block","src":"12360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5674,"src":"12374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5681,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5680,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"12382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:15","memberName":"max","nodeType":"MemberAccess","src":"12382:16:15","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5692,"nodeType":"IfStatement","src":"12370:103:15","trueBody":{"id":5691,"nodeType":"Block","src":"12400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5674,"src":"12456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5686,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"12421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5690,"nodeType":"RevertStatement","src":"12414:48:15"}]}},{"expression":{"arguments":[{"id":5695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5674,"src":"12496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5693,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:15","typeDescriptions":{}}},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5678,"id":5697,"nodeType":"Return","src":"12482:20:15"}]},"documentation":{"id":5672,"nodeType":"StructuredDocumentation","src":"12015:276:15","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5699,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5674,"mutability":"mutable","name":"value","nameLocation":"12322:5:15","nodeType":"VariableDeclaration","scope":5699,"src":"12314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5673,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:15"},"returnParameters":{"id":5678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5699,"src":"12352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5676,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:15","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:15"},"scope":6821,"src":"12296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5726,"nodeType":"Block","src":"12860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"12874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5709,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5708,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"12882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:15","memberName":"max","nodeType":"MemberAccess","src":"12882:16:15","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5720,"nodeType":"IfStatement","src":"12870:103:15","trueBody":{"id":5719,"nodeType":"Block","src":"12900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"12956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5714,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"12921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5718,"nodeType":"RevertStatement","src":"12914:48:15"}]}},{"expression":{"arguments":[{"id":5723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"12996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5721,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:15","typeDescriptions":{}}},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5706,"id":5725,"nodeType":"Return","src":"12982:20:15"}]},"documentation":{"id":5700,"nodeType":"StructuredDocumentation","src":"12515:276:15","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5727,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5702,"mutability":"mutable","name":"value","nameLocation":"12822:5:15","nodeType":"VariableDeclaration","scope":5727,"src":"12814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5701,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:15"},"returnParameters":{"id":5706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5727,"src":"12852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5704,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:15","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:15"},"scope":6821,"src":"12796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5754,"nodeType":"Block","src":"13360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"13374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5737,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5736,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"13382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:15","memberName":"max","nodeType":"MemberAccess","src":"13382:16:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5748,"nodeType":"IfStatement","src":"13370:103:15","trueBody":{"id":5747,"nodeType":"Block","src":"13400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"13456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5742,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"13421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5746,"nodeType":"RevertStatement","src":"13414:48:15"}]}},{"expression":{"arguments":[{"id":5751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"13496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5749,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:15","typeDescriptions":{}}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5734,"id":5753,"nodeType":"Return","src":"13482:20:15"}]},"documentation":{"id":5728,"nodeType":"StructuredDocumentation","src":"13015:276:15","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5755,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5730,"mutability":"mutable","name":"value","nameLocation":"13322:5:15","nodeType":"VariableDeclaration","scope":5755,"src":"13314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5729,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:15"},"returnParameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5755,"src":"13352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5732,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:15"},"scope":6821,"src":"13296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5782,"nodeType":"Block","src":"13860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"13874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5765,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5764,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"13882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:15","memberName":"max","nodeType":"MemberAccess","src":"13882:16:15","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5776,"nodeType":"IfStatement","src":"13870:103:15","trueBody":{"id":5775,"nodeType":"Block","src":"13900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"13956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5770,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"13921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5774,"nodeType":"RevertStatement","src":"13914:48:15"}]}},{"expression":{"arguments":[{"id":5779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"13996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5777,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:15","typeDescriptions":{}}},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5762,"id":5781,"nodeType":"Return","src":"13982:20:15"}]},"documentation":{"id":5756,"nodeType":"StructuredDocumentation","src":"13515:276:15","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5783,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5758,"mutability":"mutable","name":"value","nameLocation":"13822:5:15","nodeType":"VariableDeclaration","scope":5783,"src":"13814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5757,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:15"},"returnParameters":{"id":5762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5783,"src":"13852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5760,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:15","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:15"},"scope":6821,"src":"13796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5810,"nodeType":"Block","src":"14360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"14374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5793,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5792,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"14382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:15","memberName":"max","nodeType":"MemberAccess","src":"14382:16:15","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5804,"nodeType":"IfStatement","src":"14370:103:15","trueBody":{"id":5803,"nodeType":"Block","src":"14400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"14456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5798,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"14421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5802,"nodeType":"RevertStatement","src":"14414:48:15"}]}},{"expression":{"arguments":[{"id":5807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"14496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5805,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:15","typeDescriptions":{}}},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5790,"id":5809,"nodeType":"Return","src":"14482:20:15"}]},"documentation":{"id":5784,"nodeType":"StructuredDocumentation","src":"14015:276:15","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5811,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5786,"mutability":"mutable","name":"value","nameLocation":"14322:5:15","nodeType":"VariableDeclaration","scope":5811,"src":"14314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5785,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:15"},"returnParameters":{"id":5790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5811,"src":"14352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5788,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:15","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:15"},"scope":6821,"src":"14296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5838,"nodeType":"Block","src":"14860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"14874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5821,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5820,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"14882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:15","memberName":"max","nodeType":"MemberAccess","src":"14882:16:15","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5832,"nodeType":"IfStatement","src":"14870:103:15","trueBody":{"id":5831,"nodeType":"Block","src":"14900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"14956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5826,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"14921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5830,"nodeType":"RevertStatement","src":"14914:48:15"}]}},{"expression":{"arguments":[{"id":5835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"14996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5833,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:15","typeDescriptions":{}}},"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5818,"id":5837,"nodeType":"Return","src":"14982:20:15"}]},"documentation":{"id":5812,"nodeType":"StructuredDocumentation","src":"14515:276:15","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5839,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5814,"mutability":"mutable","name":"value","nameLocation":"14822:5:15","nodeType":"VariableDeclaration","scope":5839,"src":"14814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5813,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:15"},"returnParameters":{"id":5818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5839,"src":"14852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5816,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:15","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:15"},"scope":6821,"src":"14796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5866,"nodeType":"Block","src":"15360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5842,"src":"15374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5849,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5848,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"15382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:15","memberName":"max","nodeType":"MemberAccess","src":"15382:16:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5860,"nodeType":"IfStatement","src":"15370:103:15","trueBody":{"id":5859,"nodeType":"Block","src":"15400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5842,"src":"15456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5854,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"15421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5858,"nodeType":"RevertStatement","src":"15414:48:15"}]}},{"expression":{"arguments":[{"id":5863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5842,"src":"15496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5861,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:15","typeDescriptions":{}}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5846,"id":5865,"nodeType":"Return","src":"15482:20:15"}]},"documentation":{"id":5840,"nodeType":"StructuredDocumentation","src":"15015:276:15","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5867,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5842,"mutability":"mutable","name":"value","nameLocation":"15322:5:15","nodeType":"VariableDeclaration","scope":5867,"src":"15314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5841,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:15"},"returnParameters":{"id":5846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5867,"src":"15352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5844,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:15"},"scope":6821,"src":"15296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5894,"nodeType":"Block","src":"15860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"15874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5877,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5876,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"15882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:15","memberName":"max","nodeType":"MemberAccess","src":"15882:16:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5888,"nodeType":"IfStatement","src":"15870:103:15","trueBody":{"id":5887,"nodeType":"Block","src":"15900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"15956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5882,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"15921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5886,"nodeType":"RevertStatement","src":"15914:48:15"}]}},{"expression":{"arguments":[{"id":5891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"15996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5889,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:15","typeDescriptions":{}}},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5874,"id":5893,"nodeType":"Return","src":"15982:20:15"}]},"documentation":{"id":5868,"nodeType":"StructuredDocumentation","src":"15515:276:15","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5895,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5870,"mutability":"mutable","name":"value","nameLocation":"15822:5:15","nodeType":"VariableDeclaration","scope":5895,"src":"15814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5869,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:15"},"returnParameters":{"id":5874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5895,"src":"15852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5872,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:15"},"scope":6821,"src":"15796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5922,"nodeType":"Block","src":"16360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"16374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5905,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5904,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"16382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:15","memberName":"max","nodeType":"MemberAccess","src":"16382:16:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5916,"nodeType":"IfStatement","src":"16370:103:15","trueBody":{"id":5915,"nodeType":"Block","src":"16400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"16456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5910,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"16421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5914,"nodeType":"RevertStatement","src":"16414:48:15"}]}},{"expression":{"arguments":[{"id":5919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"16496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5917,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:15","typeDescriptions":{}}},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5902,"id":5921,"nodeType":"Return","src":"16482:20:15"}]},"documentation":{"id":5896,"nodeType":"StructuredDocumentation","src":"16015:276:15","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5923,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5898,"mutability":"mutable","name":"value","nameLocation":"16322:5:15","nodeType":"VariableDeclaration","scope":5923,"src":"16314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5897,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:15"},"returnParameters":{"id":5902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5923,"src":"16352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5900,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:15"},"scope":6821,"src":"16296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5950,"nodeType":"Block","src":"16854:146:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"16868:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5933,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5932,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"16876:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:15","memberName":"max","nodeType":"MemberAccess","src":"16876:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5944,"nodeType":"IfStatement","src":"16864:101:15","trueBody":{"id":5943,"nodeType":"Block","src":"16893:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"16948:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5938,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"16914:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5942,"nodeType":"RevertStatement","src":"16907:47:15"}]}},{"expression":{"arguments":[{"id":5947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"16987:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5945,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:15","typeDescriptions":{}}},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5930,"id":5949,"nodeType":"Return","src":"16974:19:15"}]},"documentation":{"id":5924,"nodeType":"StructuredDocumentation","src":"16515:272:15","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5951,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:15","nodeType":"FunctionDefinition","parameters":{"id":5927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5926,"mutability":"mutable","name":"value","nameLocation":"16817:5:15","nodeType":"VariableDeclaration","scope":5951,"src":"16809:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5925,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:15"},"returnParameters":{"id":5930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5951,"src":"16847:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5928,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:15"},"scope":6821,"src":"16792:208:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5973,"nodeType":"Block","src":"17236:128:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"17250:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5967,"nodeType":"IfStatement","src":"17246:81:15","trueBody":{"id":5966,"nodeType":"Block","src":"17261:66:15","statements":[{"errorCall":{"arguments":[{"id":5963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"17310:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5962,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"17282:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5965,"nodeType":"RevertStatement","src":"17275:41:15"}]}},{"expression":{"arguments":[{"id":5970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"17351:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5968,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:15","typeDescriptions":{}}},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5958,"id":5972,"nodeType":"Return","src":"17336:21:15"}]},"documentation":{"id":5952,"nodeType":"StructuredDocumentation","src":"17006:160:15","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5974,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:15","nodeType":"FunctionDefinition","parameters":{"id":5955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5954,"mutability":"mutable","name":"value","nameLocation":"17197:5:15","nodeType":"VariableDeclaration","scope":5974,"src":"17190:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5953,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:15"},"returnParameters":{"id":5958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5974,"src":"17227:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5956,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:15"},"scope":6821,"src":"17171:193:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5999,"nodeType":"Block","src":"17761:150:15","statements":[{"expression":{"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5982,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"17771:10:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"17791:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5983,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:15","typeDescriptions":{}}},"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5988,"nodeType":"ExpressionStatement","src":"17771:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5989,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"17811:10:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"17825:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5998,"nodeType":"IfStatement","src":"17807:98:15","trueBody":{"id":5997,"nodeType":"Block","src":"17832:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:15","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"17888:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5992,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"17853:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5996,"nodeType":"RevertStatement","src":"17846:48:15"}]}}]},"documentation":{"id":5975,"nodeType":"StructuredDocumentation","src":"17370:312:15","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6000,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:15","nodeType":"FunctionDefinition","parameters":{"id":5978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5977,"mutability":"mutable","name":"value","nameLocation":"17712:5:15","nodeType":"VariableDeclaration","scope":6000,"src":"17705:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5976,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:15"},"returnParameters":{"id":5981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5980,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:15","nodeType":"VariableDeclaration","scope":6000,"src":"17742:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5979,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:15"},"scope":6821,"src":"17687:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6025,"nodeType":"Block","src":"18308:150:15","statements":[{"expression":{"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6008,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"18318:10:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"18338:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6009,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:15","typeDescriptions":{}}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6014,"nodeType":"ExpressionStatement","src":"18318:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6015,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"18358:10:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"18372:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6024,"nodeType":"IfStatement","src":"18354:98:15","trueBody":{"id":6023,"nodeType":"Block","src":"18379:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:15","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"18435:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6018,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"18400:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6022,"nodeType":"RevertStatement","src":"18393:48:15"}]}}]},"documentation":{"id":6001,"nodeType":"StructuredDocumentation","src":"17917:312:15","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6026,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:15","nodeType":"FunctionDefinition","parameters":{"id":6004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6003,"mutability":"mutable","name":"value","nameLocation":"18259:5:15","nodeType":"VariableDeclaration","scope":6026,"src":"18252:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6002,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:15"},"returnParameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:15","nodeType":"VariableDeclaration","scope":6026,"src":"18289:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6005,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:15"},"scope":6821,"src":"18234:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6051,"nodeType":"Block","src":"18855:150:15","statements":[{"expression":{"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6034,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"18865:10:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"18885:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6035,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:15","typeDescriptions":{}}},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6040,"nodeType":"ExpressionStatement","src":"18865:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6041,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"18905:10:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"18919:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6050,"nodeType":"IfStatement","src":"18901:98:15","trueBody":{"id":6049,"nodeType":"Block","src":"18926:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:15","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"18982:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6044,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"18947:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6048,"nodeType":"RevertStatement","src":"18940:48:15"}]}}]},"documentation":{"id":6027,"nodeType":"StructuredDocumentation","src":"18464:312:15","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6052,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:15","nodeType":"FunctionDefinition","parameters":{"id":6030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6029,"mutability":"mutable","name":"value","nameLocation":"18806:5:15","nodeType":"VariableDeclaration","scope":6052,"src":"18799:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6028,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:15"},"returnParameters":{"id":6033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6032,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:15","nodeType":"VariableDeclaration","scope":6052,"src":"18836:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6031,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:15"},"scope":6821,"src":"18781:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6077,"nodeType":"Block","src":"19402:150:15","statements":[{"expression":{"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6060,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"19412:10:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"19432:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6061,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:15","typeDescriptions":{}}},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6066,"nodeType":"ExpressionStatement","src":"19412:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6067,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"19452:10:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"19466:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6076,"nodeType":"IfStatement","src":"19448:98:15","trueBody":{"id":6075,"nodeType":"Block","src":"19473:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:15","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"19529:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6070,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"19494:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6074,"nodeType":"RevertStatement","src":"19487:48:15"}]}}]},"documentation":{"id":6053,"nodeType":"StructuredDocumentation","src":"19011:312:15","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6078,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:15","nodeType":"FunctionDefinition","parameters":{"id":6056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6055,"mutability":"mutable","name":"value","nameLocation":"19353:5:15","nodeType":"VariableDeclaration","scope":6078,"src":"19346:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6054,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:15"},"returnParameters":{"id":6059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6058,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:15","nodeType":"VariableDeclaration","scope":6078,"src":"19383:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6057,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:15"},"scope":6821,"src":"19328:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6103,"nodeType":"Block","src":"19949:150:15","statements":[{"expression":{"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6086,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"19959:10:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"19979:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6087,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:15","typeDescriptions":{}}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6092,"nodeType":"ExpressionStatement","src":"19959:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6093,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"19999:10:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"20013:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6102,"nodeType":"IfStatement","src":"19995:98:15","trueBody":{"id":6101,"nodeType":"Block","src":"20020:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:15","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"20076:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6096,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"20041:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6100,"nodeType":"RevertStatement","src":"20034:48:15"}]}}]},"documentation":{"id":6079,"nodeType":"StructuredDocumentation","src":"19558:312:15","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6104,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:15","nodeType":"FunctionDefinition","parameters":{"id":6082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6081,"mutability":"mutable","name":"value","nameLocation":"19900:5:15","nodeType":"VariableDeclaration","scope":6104,"src":"19893:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6080,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:15"},"returnParameters":{"id":6085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6084,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:15","nodeType":"VariableDeclaration","scope":6104,"src":"19930:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6083,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:15"},"scope":6821,"src":"19875:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6129,"nodeType":"Block","src":"20496:150:15","statements":[{"expression":{"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6112,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"20506:10:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6107,"src":"20526:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6113,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:15","typeDescriptions":{}}},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6118,"nodeType":"ExpressionStatement","src":"20506:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6119,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"20546:10:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6107,"src":"20560:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6128,"nodeType":"IfStatement","src":"20542:98:15","trueBody":{"id":6127,"nodeType":"Block","src":"20567:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:15","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6107,"src":"20623:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6122,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"20588:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6126,"nodeType":"RevertStatement","src":"20581:48:15"}]}}]},"documentation":{"id":6105,"nodeType":"StructuredDocumentation","src":"20105:312:15","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6130,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:15","nodeType":"FunctionDefinition","parameters":{"id":6108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6107,"mutability":"mutable","name":"value","nameLocation":"20447:5:15","nodeType":"VariableDeclaration","scope":6130,"src":"20440:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6106,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:15"},"returnParameters":{"id":6111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6110,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:15","nodeType":"VariableDeclaration","scope":6130,"src":"20477:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6109,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:15"},"scope":6821,"src":"20422:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6155,"nodeType":"Block","src":"21043:150:15","statements":[{"expression":{"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6138,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"21053:10:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"21073:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6139,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:15","typeDescriptions":{}}},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6144,"nodeType":"ExpressionStatement","src":"21053:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6145,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"21093:10:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"21107:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6154,"nodeType":"IfStatement","src":"21089:98:15","trueBody":{"id":6153,"nodeType":"Block","src":"21114:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:15","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"21170:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6148,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"21135:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6152,"nodeType":"RevertStatement","src":"21128:48:15"}]}}]},"documentation":{"id":6131,"nodeType":"StructuredDocumentation","src":"20652:312:15","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6156,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:15","nodeType":"FunctionDefinition","parameters":{"id":6134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6133,"mutability":"mutable","name":"value","nameLocation":"20994:5:15","nodeType":"VariableDeclaration","scope":6156,"src":"20987:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6132,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:15"},"returnParameters":{"id":6137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6136,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:15","nodeType":"VariableDeclaration","scope":6156,"src":"21024:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6135,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:15"},"scope":6821,"src":"20969:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6181,"nodeType":"Block","src":"21590:150:15","statements":[{"expression":{"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"21600:10:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"21620:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6165,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:15","typeDescriptions":{}}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6170,"nodeType":"ExpressionStatement","src":"21600:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6171,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"21640:10:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"21654:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6180,"nodeType":"IfStatement","src":"21636:98:15","trueBody":{"id":6179,"nodeType":"Block","src":"21661:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:15","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"21717:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6174,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"21682:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6178,"nodeType":"RevertStatement","src":"21675:48:15"}]}}]},"documentation":{"id":6157,"nodeType":"StructuredDocumentation","src":"21199:312:15","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6182,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:15","nodeType":"FunctionDefinition","parameters":{"id":6160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6159,"mutability":"mutable","name":"value","nameLocation":"21541:5:15","nodeType":"VariableDeclaration","scope":6182,"src":"21534:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6158,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:15"},"returnParameters":{"id":6163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6162,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:15","nodeType":"VariableDeclaration","scope":6182,"src":"21571:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6161,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:15"},"scope":6821,"src":"21516:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6207,"nodeType":"Block","src":"22137:150:15","statements":[{"expression":{"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6190,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6188,"src":"22147:10:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"22167:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6191,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:15","typeDescriptions":{}}},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6196,"nodeType":"ExpressionStatement","src":"22147:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6197,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6188,"src":"22187:10:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"22201:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6206,"nodeType":"IfStatement","src":"22183:98:15","trueBody":{"id":6205,"nodeType":"Block","src":"22208:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:15","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"22264:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6200,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"22229:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6204,"nodeType":"RevertStatement","src":"22222:48:15"}]}}]},"documentation":{"id":6183,"nodeType":"StructuredDocumentation","src":"21746:312:15","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6208,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:15","nodeType":"FunctionDefinition","parameters":{"id":6186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6185,"mutability":"mutable","name":"value","nameLocation":"22088:5:15","nodeType":"VariableDeclaration","scope":6208,"src":"22081:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6184,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:15"},"returnParameters":{"id":6189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6188,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:15","nodeType":"VariableDeclaration","scope":6208,"src":"22118:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6187,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:15"},"scope":6821,"src":"22063:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6233,"nodeType":"Block","src":"22684:150:15","statements":[{"expression":{"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6216,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"22694:10:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"22714:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6217,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:15","typeDescriptions":{}}},"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6222,"nodeType":"ExpressionStatement","src":"22694:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6223,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"22734:10:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"22748:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6232,"nodeType":"IfStatement","src":"22730:98:15","trueBody":{"id":6231,"nodeType":"Block","src":"22755:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:15","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"22811:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6226,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"22776:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6230,"nodeType":"RevertStatement","src":"22769:48:15"}]}}]},"documentation":{"id":6209,"nodeType":"StructuredDocumentation","src":"22293:312:15","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6234,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:15","nodeType":"FunctionDefinition","parameters":{"id":6212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6211,"mutability":"mutable","name":"value","nameLocation":"22635:5:15","nodeType":"VariableDeclaration","scope":6234,"src":"22628:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6210,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:15"},"returnParameters":{"id":6215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6214,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:15","nodeType":"VariableDeclaration","scope":6234,"src":"22665:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6213,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:15"},"scope":6821,"src":"22610:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6259,"nodeType":"Block","src":"23231:150:15","statements":[{"expression":{"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6242,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"23241:10:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"23261:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6243,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:15","typeDescriptions":{}}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6248,"nodeType":"ExpressionStatement","src":"23241:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6249,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"23281:10:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"23295:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6258,"nodeType":"IfStatement","src":"23277:98:15","trueBody":{"id":6257,"nodeType":"Block","src":"23302:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:15","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"23358:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6252,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"23323:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6256,"nodeType":"RevertStatement","src":"23316:48:15"}]}}]},"documentation":{"id":6235,"nodeType":"StructuredDocumentation","src":"22840:312:15","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6260,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:15","nodeType":"FunctionDefinition","parameters":{"id":6238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6237,"mutability":"mutable","name":"value","nameLocation":"23182:5:15","nodeType":"VariableDeclaration","scope":6260,"src":"23175:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6236,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:15"},"returnParameters":{"id":6241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6240,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:15","nodeType":"VariableDeclaration","scope":6260,"src":"23212:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6239,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:15"},"scope":6821,"src":"23157:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6285,"nodeType":"Block","src":"23778:150:15","statements":[{"expression":{"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"23788:10:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"23808:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6269,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:15","typeDescriptions":{}}},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6274,"nodeType":"ExpressionStatement","src":"23788:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6275,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"23828:10:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"23842:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6284,"nodeType":"IfStatement","src":"23824:98:15","trueBody":{"id":6283,"nodeType":"Block","src":"23849:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:15","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"23905:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6278,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"23870:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6282,"nodeType":"RevertStatement","src":"23863:48:15"}]}}]},"documentation":{"id":6261,"nodeType":"StructuredDocumentation","src":"23387:312:15","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6286,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:15","nodeType":"FunctionDefinition","parameters":{"id":6264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6263,"mutability":"mutable","name":"value","nameLocation":"23729:5:15","nodeType":"VariableDeclaration","scope":6286,"src":"23722:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6262,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:15"},"returnParameters":{"id":6267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6266,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:15","nodeType":"VariableDeclaration","scope":6286,"src":"23759:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6265,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:15"},"scope":6821,"src":"23704:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6311,"nodeType":"Block","src":"24325:150:15","statements":[{"expression":{"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"24335:10:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"24355:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6295,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:15","typeDescriptions":{}}},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6300,"nodeType":"ExpressionStatement","src":"24335:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6301,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"24375:10:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"24389:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6310,"nodeType":"IfStatement","src":"24371:98:15","trueBody":{"id":6309,"nodeType":"Block","src":"24396:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:15","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"24452:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6304,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"24417:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6308,"nodeType":"RevertStatement","src":"24410:48:15"}]}}]},"documentation":{"id":6287,"nodeType":"StructuredDocumentation","src":"23934:312:15","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6312,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:15","nodeType":"FunctionDefinition","parameters":{"id":6290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6289,"mutability":"mutable","name":"value","nameLocation":"24276:5:15","nodeType":"VariableDeclaration","scope":6312,"src":"24269:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6288,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:15"},"returnParameters":{"id":6293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6292,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:15","nodeType":"VariableDeclaration","scope":6312,"src":"24306:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6291,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:15"},"scope":6821,"src":"24251:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6337,"nodeType":"Block","src":"24872:150:15","statements":[{"expression":{"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6318,"src":"24882:10:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"24902:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6321,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:15","typeDescriptions":{}}},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6326,"nodeType":"ExpressionStatement","src":"24882:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6327,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6318,"src":"24922:10:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"24936:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6336,"nodeType":"IfStatement","src":"24918:98:15","trueBody":{"id":6335,"nodeType":"Block","src":"24943:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:15","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"24999:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6330,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"24964:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6334,"nodeType":"RevertStatement","src":"24957:48:15"}]}}]},"documentation":{"id":6313,"nodeType":"StructuredDocumentation","src":"24481:312:15","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6338,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:15","nodeType":"FunctionDefinition","parameters":{"id":6316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6315,"mutability":"mutable","name":"value","nameLocation":"24823:5:15","nodeType":"VariableDeclaration","scope":6338,"src":"24816:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6314,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:15"},"returnParameters":{"id":6319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6318,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:15","nodeType":"VariableDeclaration","scope":6338,"src":"24853:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6317,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:15"},"scope":6821,"src":"24798:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6363,"nodeType":"Block","src":"25419:150:15","statements":[{"expression":{"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"25429:10:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"25449:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6347,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:15","typeDescriptions":{}}},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6352,"nodeType":"ExpressionStatement","src":"25429:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6353,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"25469:10:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"25483:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6362,"nodeType":"IfStatement","src":"25465:98:15","trueBody":{"id":6361,"nodeType":"Block","src":"25490:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:15","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"25546:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6356,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"25511:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6360,"nodeType":"RevertStatement","src":"25504:48:15"}]}}]},"documentation":{"id":6339,"nodeType":"StructuredDocumentation","src":"25028:312:15","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6364,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:15","nodeType":"FunctionDefinition","parameters":{"id":6342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6341,"mutability":"mutable","name":"value","nameLocation":"25370:5:15","nodeType":"VariableDeclaration","scope":6364,"src":"25363:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6340,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:15"},"returnParameters":{"id":6345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6344,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:15","nodeType":"VariableDeclaration","scope":6364,"src":"25400:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6343,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:15"},"scope":6821,"src":"25345:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6389,"nodeType":"Block","src":"25966:150:15","statements":[{"expression":{"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"25976:10:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"25996:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6373,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:15","typeDescriptions":{}}},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6378,"nodeType":"ExpressionStatement","src":"25976:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6379,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"26016:10:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"26030:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6388,"nodeType":"IfStatement","src":"26012:98:15","trueBody":{"id":6387,"nodeType":"Block","src":"26037:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6367,"src":"26093:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6382,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"26058:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6386,"nodeType":"RevertStatement","src":"26051:48:15"}]}}]},"documentation":{"id":6365,"nodeType":"StructuredDocumentation","src":"25575:312:15","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6390,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:15","nodeType":"FunctionDefinition","parameters":{"id":6368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6367,"mutability":"mutable","name":"value","nameLocation":"25917:5:15","nodeType":"VariableDeclaration","scope":6390,"src":"25910:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6366,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:15"},"returnParameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6370,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:15","nodeType":"VariableDeclaration","scope":6390,"src":"25947:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6369,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:15"},"scope":6821,"src":"25892:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6415,"nodeType":"Block","src":"26513:150:15","statements":[{"expression":{"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"26523:10:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"26543:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6399,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:15","typeDescriptions":{}}},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6404,"nodeType":"ExpressionStatement","src":"26523:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6405,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"26563:10:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"26577:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6414,"nodeType":"IfStatement","src":"26559:98:15","trueBody":{"id":6413,"nodeType":"Block","src":"26584:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:15","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"26640:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6408,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"26605:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6412,"nodeType":"RevertStatement","src":"26598:48:15"}]}}]},"documentation":{"id":6391,"nodeType":"StructuredDocumentation","src":"26122:312:15","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6416,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:15","nodeType":"FunctionDefinition","parameters":{"id":6394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6393,"mutability":"mutable","name":"value","nameLocation":"26464:5:15","nodeType":"VariableDeclaration","scope":6416,"src":"26457:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6392,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:15"},"returnParameters":{"id":6397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6396,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:15","nodeType":"VariableDeclaration","scope":6416,"src":"26494:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6395,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:15"},"scope":6821,"src":"26439:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6441,"nodeType":"Block","src":"27060:150:15","statements":[{"expression":{"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"27070:10:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"27090:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6425,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:15","typeDescriptions":{}}},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6430,"nodeType":"ExpressionStatement","src":"27070:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6431,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"27110:10:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"27124:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6440,"nodeType":"IfStatement","src":"27106:98:15","trueBody":{"id":6439,"nodeType":"Block","src":"27131:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:15","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6419,"src":"27187:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6434,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"27152:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6438,"nodeType":"RevertStatement","src":"27145:48:15"}]}}]},"documentation":{"id":6417,"nodeType":"StructuredDocumentation","src":"26669:312:15","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6442,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:15","nodeType":"FunctionDefinition","parameters":{"id":6420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6419,"mutability":"mutable","name":"value","nameLocation":"27011:5:15","nodeType":"VariableDeclaration","scope":6442,"src":"27004:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6418,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:15"},"returnParameters":{"id":6423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6422,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:15","nodeType":"VariableDeclaration","scope":6442,"src":"27041:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6421,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:15"},"scope":6821,"src":"26986:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6467,"nodeType":"Block","src":"27607:150:15","statements":[{"expression":{"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"27617:10:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"27637:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6451,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:15","typeDescriptions":{}}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6456,"nodeType":"ExpressionStatement","src":"27617:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6457,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"27657:10:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"27671:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6466,"nodeType":"IfStatement","src":"27653:98:15","trueBody":{"id":6465,"nodeType":"Block","src":"27678:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:15","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"27734:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6460,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"27699:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6464,"nodeType":"RevertStatement","src":"27692:48:15"}]}}]},"documentation":{"id":6443,"nodeType":"StructuredDocumentation","src":"27216:312:15","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6468,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:15","nodeType":"FunctionDefinition","parameters":{"id":6446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6445,"mutability":"mutable","name":"value","nameLocation":"27558:5:15","nodeType":"VariableDeclaration","scope":6468,"src":"27551:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6444,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:15"},"returnParameters":{"id":6449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6448,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:15","nodeType":"VariableDeclaration","scope":6468,"src":"27588:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6447,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:15"},"scope":6821,"src":"27533:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6493,"nodeType":"Block","src":"28147:148:15","statements":[{"expression":{"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"28157:10:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"28176:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6477,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:15","typeDescriptions":{}}},"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6482,"nodeType":"ExpressionStatement","src":"28157:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6483,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"28196:10:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"28210:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6492,"nodeType":"IfStatement","src":"28192:97:15","trueBody":{"id":6491,"nodeType":"Block","src":"28217:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"28272:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6486,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"28238:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6490,"nodeType":"RevertStatement","src":"28231:47:15"}]}}]},"documentation":{"id":6469,"nodeType":"StructuredDocumentation","src":"27763:307:15","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6494,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:15","nodeType":"FunctionDefinition","parameters":{"id":6472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6471,"mutability":"mutable","name":"value","nameLocation":"28099:5:15","nodeType":"VariableDeclaration","scope":6494,"src":"28092:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6470,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:15"},"returnParameters":{"id":6475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6474,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:15","nodeType":"VariableDeclaration","scope":6494,"src":"28129:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6473,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:15"},"scope":6821,"src":"28075:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6519,"nodeType":"Block","src":"28685:148:15","statements":[{"expression":{"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"28695:10:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"28714:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6503,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:15","typeDescriptions":{}}},"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6508,"nodeType":"ExpressionStatement","src":"28695:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6509,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"28734:10:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"28748:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6518,"nodeType":"IfStatement","src":"28730:97:15","trueBody":{"id":6517,"nodeType":"Block","src":"28755:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:15","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"28810:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6512,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"28776:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6516,"nodeType":"RevertStatement","src":"28769:47:15"}]}}]},"documentation":{"id":6495,"nodeType":"StructuredDocumentation","src":"28301:307:15","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6520,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:15","nodeType":"FunctionDefinition","parameters":{"id":6498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6497,"mutability":"mutable","name":"value","nameLocation":"28637:5:15","nodeType":"VariableDeclaration","scope":6520,"src":"28630:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6496,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:15"},"returnParameters":{"id":6501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6500,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:15","nodeType":"VariableDeclaration","scope":6520,"src":"28667:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6499,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:15"},"scope":6821,"src":"28613:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6545,"nodeType":"Block","src":"29223:148:15","statements":[{"expression":{"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"29233:10:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"29252:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6529,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:15","typeDescriptions":{}}},"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6534,"nodeType":"ExpressionStatement","src":"29233:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6535,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"29272:10:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"29286:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6544,"nodeType":"IfStatement","src":"29268:97:15","trueBody":{"id":6543,"nodeType":"Block","src":"29293:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:15","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"29348:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6538,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"29314:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6542,"nodeType":"RevertStatement","src":"29307:47:15"}]}}]},"documentation":{"id":6521,"nodeType":"StructuredDocumentation","src":"28839:307:15","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6546,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:15","nodeType":"FunctionDefinition","parameters":{"id":6524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6523,"mutability":"mutable","name":"value","nameLocation":"29175:5:15","nodeType":"VariableDeclaration","scope":6546,"src":"29168:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6522,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:15"},"returnParameters":{"id":6527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6526,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:15","nodeType":"VariableDeclaration","scope":6546,"src":"29205:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6525,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:15"},"scope":6821,"src":"29151:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6571,"nodeType":"Block","src":"29761:148:15","statements":[{"expression":{"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6554,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"29771:10:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"29790:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6555,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:15","typeDescriptions":{}}},"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6560,"nodeType":"ExpressionStatement","src":"29771:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6561,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"29810:10:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"29824:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6570,"nodeType":"IfStatement","src":"29806:97:15","trueBody":{"id":6569,"nodeType":"Block","src":"29831:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:15","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"29886:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6564,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"29852:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6568,"nodeType":"RevertStatement","src":"29845:47:15"}]}}]},"documentation":{"id":6547,"nodeType":"StructuredDocumentation","src":"29377:307:15","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6572,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:15","nodeType":"FunctionDefinition","parameters":{"id":6550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6549,"mutability":"mutable","name":"value","nameLocation":"29713:5:15","nodeType":"VariableDeclaration","scope":6572,"src":"29706:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6548,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:15"},"returnParameters":{"id":6553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6552,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:15","nodeType":"VariableDeclaration","scope":6572,"src":"29743:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6551,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:15"},"scope":6821,"src":"29689:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6597,"nodeType":"Block","src":"30299:148:15","statements":[{"expression":{"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6580,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"30309:10:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"30328:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6581,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:15","typeDescriptions":{}}},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6586,"nodeType":"ExpressionStatement","src":"30309:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6587,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"30348:10:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"30362:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6596,"nodeType":"IfStatement","src":"30344:97:15","trueBody":{"id":6595,"nodeType":"Block","src":"30369:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"30424:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6590,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"30390:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6594,"nodeType":"RevertStatement","src":"30383:47:15"}]}}]},"documentation":{"id":6573,"nodeType":"StructuredDocumentation","src":"29915:307:15","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6598,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:15","nodeType":"FunctionDefinition","parameters":{"id":6576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6575,"mutability":"mutable","name":"value","nameLocation":"30251:5:15","nodeType":"VariableDeclaration","scope":6598,"src":"30244:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6574,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:15"},"returnParameters":{"id":6579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6578,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:15","nodeType":"VariableDeclaration","scope":6598,"src":"30281:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6577,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:15"},"scope":6821,"src":"30227:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6623,"nodeType":"Block","src":"30837:148:15","statements":[{"expression":{"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6606,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"30847:10:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"30866:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6607,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:15","typeDescriptions":{}}},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6612,"nodeType":"ExpressionStatement","src":"30847:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6613,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"30886:10:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"30900:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6622,"nodeType":"IfStatement","src":"30882:97:15","trueBody":{"id":6621,"nodeType":"Block","src":"30907:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:15","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"30962:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6616,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"30928:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6620,"nodeType":"RevertStatement","src":"30921:47:15"}]}}]},"documentation":{"id":6599,"nodeType":"StructuredDocumentation","src":"30453:307:15","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6624,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:15","nodeType":"FunctionDefinition","parameters":{"id":6602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6601,"mutability":"mutable","name":"value","nameLocation":"30789:5:15","nodeType":"VariableDeclaration","scope":6624,"src":"30782:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6600,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:15"},"returnParameters":{"id":6605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6604,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:15","nodeType":"VariableDeclaration","scope":6624,"src":"30819:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6603,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:15"},"scope":6821,"src":"30765:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6649,"nodeType":"Block","src":"31375:148:15","statements":[{"expression":{"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6632,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"31385:10:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"31404:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6633,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:15","typeDescriptions":{}}},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6638,"nodeType":"ExpressionStatement","src":"31385:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6639,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"31424:10:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"31438:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6648,"nodeType":"IfStatement","src":"31420:97:15","trueBody":{"id":6647,"nodeType":"Block","src":"31445:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"31500:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6642,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"31466:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6646,"nodeType":"RevertStatement","src":"31459:47:15"}]}}]},"documentation":{"id":6625,"nodeType":"StructuredDocumentation","src":"30991:307:15","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6650,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:15","nodeType":"FunctionDefinition","parameters":{"id":6628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6627,"mutability":"mutable","name":"value","nameLocation":"31327:5:15","nodeType":"VariableDeclaration","scope":6650,"src":"31320:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6626,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:15"},"returnParameters":{"id":6631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6630,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:15","nodeType":"VariableDeclaration","scope":6650,"src":"31357:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6629,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:15"},"scope":6821,"src":"31303:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6675,"nodeType":"Block","src":"31913:148:15","statements":[{"expression":{"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6658,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"31923:10:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6653,"src":"31942:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6659,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:15","typeDescriptions":{}}},"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6664,"nodeType":"ExpressionStatement","src":"31923:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6665,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"31962:10:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6653,"src":"31976:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6674,"nodeType":"IfStatement","src":"31958:97:15","trueBody":{"id":6673,"nodeType":"Block","src":"31983:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:15","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6653,"src":"32038:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6668,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"32004:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6672,"nodeType":"RevertStatement","src":"31997:47:15"}]}}]},"documentation":{"id":6651,"nodeType":"StructuredDocumentation","src":"31529:307:15","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6676,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:15","nodeType":"FunctionDefinition","parameters":{"id":6654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6653,"mutability":"mutable","name":"value","nameLocation":"31865:5:15","nodeType":"VariableDeclaration","scope":6676,"src":"31858:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6652,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:15"},"returnParameters":{"id":6657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6656,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:15","nodeType":"VariableDeclaration","scope":6676,"src":"31895:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6655,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:15"},"scope":6821,"src":"31841:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6701,"nodeType":"Block","src":"32451:148:15","statements":[{"expression":{"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6684,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"32461:10:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"32480:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6685,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:15","typeDescriptions":{}}},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6690,"nodeType":"ExpressionStatement","src":"32461:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6691,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"32500:10:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"32514:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6700,"nodeType":"IfStatement","src":"32496:97:15","trueBody":{"id":6699,"nodeType":"Block","src":"32521:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6679,"src":"32576:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6694,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"32542:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6698,"nodeType":"RevertStatement","src":"32535:47:15"}]}}]},"documentation":{"id":6677,"nodeType":"StructuredDocumentation","src":"32067:307:15","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6702,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:15","nodeType":"FunctionDefinition","parameters":{"id":6680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6679,"mutability":"mutable","name":"value","nameLocation":"32403:5:15","nodeType":"VariableDeclaration","scope":6702,"src":"32396:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6678,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:15"},"returnParameters":{"id":6683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6682,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:15","nodeType":"VariableDeclaration","scope":6702,"src":"32433:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6681,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:15"},"scope":6821,"src":"32379:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6727,"nodeType":"Block","src":"32989:148:15","statements":[{"expression":{"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6710,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"32999:10:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"33018:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6711,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:15","typeDescriptions":{}}},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6716,"nodeType":"ExpressionStatement","src":"32999:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6717,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"33038:10:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"33052:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6726,"nodeType":"IfStatement","src":"33034:97:15","trueBody":{"id":6725,"nodeType":"Block","src":"33059:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:15","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"33114:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6720,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"33080:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6724,"nodeType":"RevertStatement","src":"33073:47:15"}]}}]},"documentation":{"id":6703,"nodeType":"StructuredDocumentation","src":"32605:307:15","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6728,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:15","nodeType":"FunctionDefinition","parameters":{"id":6706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6705,"mutability":"mutable","name":"value","nameLocation":"32941:5:15","nodeType":"VariableDeclaration","scope":6728,"src":"32934:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6704,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:15"},"returnParameters":{"id":6709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6708,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:15","nodeType":"VariableDeclaration","scope":6728,"src":"32971:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6707,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:15"},"scope":6821,"src":"32917:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6753,"nodeType":"Block","src":"33527:148:15","statements":[{"expression":{"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6736,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6734,"src":"33537:10:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"33556:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6737,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:15","typeDescriptions":{}}},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6742,"nodeType":"ExpressionStatement","src":"33537:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6743,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6734,"src":"33576:10:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"33590:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6752,"nodeType":"IfStatement","src":"33572:97:15","trueBody":{"id":6751,"nodeType":"Block","src":"33597:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"33652:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6746,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"33618:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6750,"nodeType":"RevertStatement","src":"33611:47:15"}]}}]},"documentation":{"id":6729,"nodeType":"StructuredDocumentation","src":"33143:307:15","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6754,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:15","nodeType":"FunctionDefinition","parameters":{"id":6732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6731,"mutability":"mutable","name":"value","nameLocation":"33479:5:15","nodeType":"VariableDeclaration","scope":6754,"src":"33472:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6730,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:15"},"returnParameters":{"id":6735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6734,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:15","nodeType":"VariableDeclaration","scope":6754,"src":"33509:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6733,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:15"},"scope":6821,"src":"33455:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6779,"nodeType":"Block","src":"34058:146:15","statements":[{"expression":{"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6762,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6760,"src":"34068:10:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"34086:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6763,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:15","typeDescriptions":{}}},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6768,"nodeType":"ExpressionStatement","src":"34068:24:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6769,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6760,"src":"34106:10:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"34120:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6778,"nodeType":"IfStatement","src":"34102:96:15","trueBody":{"id":6777,"nodeType":"Block","src":"34127:71:15","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"34181:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6772,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"34148:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6776,"nodeType":"RevertStatement","src":"34141:46:15"}]}}]},"documentation":{"id":6755,"nodeType":"StructuredDocumentation","src":"33681:302:15","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6780,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:15","nodeType":"FunctionDefinition","parameters":{"id":6758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6757,"mutability":"mutable","name":"value","nameLocation":"34011:5:15","nodeType":"VariableDeclaration","scope":6780,"src":"34004:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6756,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:15"},"returnParameters":{"id":6761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6760,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:15","nodeType":"VariableDeclaration","scope":6780,"src":"34041:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6759,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:15"},"scope":6821,"src":"33988:216:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6809,"nodeType":"Block","src":"34444:250:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"34557:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6792,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6791,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"34573:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:15","memberName":"max","nodeType":"MemberAccess","src":"34573:16:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6789,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:15","typeDescriptions":{}}},"id":6796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6803,"nodeType":"IfStatement","src":"34553:105:15","trueBody":{"id":6802,"nodeType":"Block","src":"34592:66:15","statements":[{"errorCall":{"arguments":[{"id":6799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"34641:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6798,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"34613:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6801,"nodeType":"RevertStatement","src":"34606:41:15"}]}},{"expression":{"arguments":[{"id":6806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"34681:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6804,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:15","typeDescriptions":{}}},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6787,"id":6808,"nodeType":"Return","src":"34667:20:15"}]},"documentation":{"id":6781,"nodeType":"StructuredDocumentation","src":"34210:165:15","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6810,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:15","nodeType":"FunctionDefinition","parameters":{"id":6784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6783,"mutability":"mutable","name":"value","nameLocation":"34406:5:15","nodeType":"VariableDeclaration","scope":6810,"src":"34398:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6782,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:15"},"returnParameters":{"id":6787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6810,"src":"34436:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6785,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:15"},"scope":6821,"src":"34380:314:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6819,"nodeType":"Block","src":"34853:87:15","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:15","statements":[{"nodeType":"YulAssignment","src":"34902:22:15","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:15"},"nodeType":"YulFunctionCall","src":"34914:9:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:15"},"nodeType":"YulFunctionCall","src":"34907:17:15"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6813,"isOffset":false,"isSlot":false,"src":"34921:1:15","valueSize":1},{"declaration":6816,"isOffset":false,"isSlot":false,"src":"34902:1:15","valueSize":1}],"flags":["memory-safe"],"id":6818,"nodeType":"InlineAssembly","src":"34863:71:15"}]},"documentation":{"id":6811,"nodeType":"StructuredDocumentation","src":"34700:90:15","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6820,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:15","nodeType":"FunctionDefinition","parameters":{"id":6814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6813,"mutability":"mutable","name":"b","nameLocation":"34816:1:15","nodeType":"VariableDeclaration","scope":6820,"src":"34811:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6812,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:15"},"returnParameters":{"id":6817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6816,"mutability":"mutable","name":"u","nameLocation":"34850:1:15","nodeType":"VariableDeclaration","scope":6820,"src":"34842:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6815,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:15"},"scope":6821,"src":"34795:145:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6822,"src":"769:34173:15","usedErrors":[5066,5071,5078,5083],"usedEvents":[]}],"src":"192:34751:15"},"id":15},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6821],"SignedMath":[6965]},"id":6966,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6823,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6825,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6966,"sourceUnit":6822,"src":"135:40:16","symbolAliases":[{"foreign":{"id":6824,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"143:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6826,"nodeType":"StructuredDocumentation","src":"177:80:16","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6965,"linearizedBaseContracts":[6965],"name":"SignedMath","nameLocation":"266:10:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":6855,"nodeType":"Block","src":"746:215:16","statements":[{"id":6854,"nodeType":"UncheckedBlock","src":"756:199:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6838,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"894:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6839,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"900:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6840,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"904:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6842,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6847,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"932:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6845,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"916:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6821_$","typeString":"type(library SafeCast)"}},"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6820,"src":"916:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6843,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:16","typeDescriptions":{}}},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6851,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6837,"id":6853,"nodeType":"Return","src":"887:57:16"}]}]},"documentation":{"id":6827,"nodeType":"StructuredDocumentation","src":"283:374:16","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6856,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:16","nodeType":"FunctionDefinition","parameters":{"id":6834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6829,"mutability":"mutable","name":"condition","nameLocation":"684:9:16","nodeType":"VariableDeclaration","scope":6856,"src":"679:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6828,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6831,"mutability":"mutable","name":"a","nameLocation":"702:1:16","nodeType":"VariableDeclaration","scope":6856,"src":"695:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6830,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6833,"mutability":"mutable","name":"b","nameLocation":"712:1:16","nodeType":"VariableDeclaration","scope":6856,"src":"705:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6832,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:16"},"returnParameters":{"id":6837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6856,"src":"738:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6835,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:16"},"scope":6965,"src":"662:299:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6874,"nodeType":"Block","src":"1102:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6867,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"1127:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6868,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"1131:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6870,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"1134:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6871,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"1137:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6866,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"1119:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6865,"id":6873,"nodeType":"Return","src":"1112:27:16"}]},"documentation":{"id":6857,"nodeType":"StructuredDocumentation","src":"967:66:16","text":" @dev Returns the largest of two signed numbers."},"id":6875,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:16","nodeType":"FunctionDefinition","parameters":{"id":6862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6859,"mutability":"mutable","name":"a","nameLocation":"1058:1:16","nodeType":"VariableDeclaration","scope":6875,"src":"1051:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6858,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6861,"mutability":"mutable","name":"b","nameLocation":"1068:1:16","nodeType":"VariableDeclaration","scope":6875,"src":"1061:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6860,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:16"},"returnParameters":{"id":6865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6875,"src":"1094:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6863,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:16"},"scope":6965,"src":"1038:108:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6893,"nodeType":"Block","src":"1288:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"1313:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6887,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"1317:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6889,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"1320:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6890,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"1323:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6885,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"1305:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6884,"id":6892,"nodeType":"Return","src":"1298:27:16"}]},"documentation":{"id":6876,"nodeType":"StructuredDocumentation","src":"1152:67:16","text":" @dev Returns the smallest of two signed numbers."},"id":6894,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:16","nodeType":"FunctionDefinition","parameters":{"id":6881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6878,"mutability":"mutable","name":"a","nameLocation":"1244:1:16","nodeType":"VariableDeclaration","scope":6894,"src":"1237:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6877,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6880,"mutability":"mutable","name":"b","nameLocation":"1254:1:16","nodeType":"VariableDeclaration","scope":6894,"src":"1247:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6879,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:16"},"returnParameters":{"id":6884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6894,"src":"1280:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6882,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:16"},"scope":6965,"src":"1224:108:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6937,"nodeType":"Block","src":"1537:162:16","statements":[{"assignments":[6905],"declarations":[{"constant":false,"id":6905,"mutability":"mutable","name":"x","nameLocation":"1606:1:16","nodeType":"VariableDeclaration","scope":6937,"src":"1599:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6904,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6918,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6906,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"1611:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6907,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6899,"src":"1615:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6909,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6910,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"1622:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6911,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6899,"src":"1626:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6916,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:16"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6919,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"1651:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6924,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"1671:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6922,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:16","typeDescriptions":{}}},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6920,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:16","typeDescriptions":{}}},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6929,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"1685:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6930,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6899,"src":"1689:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6903,"id":6936,"nodeType":"Return","src":"1644:48:16"}]},"documentation":{"id":6895,"nodeType":"StructuredDocumentation","src":"1338:126:16","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6938,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:16","nodeType":"FunctionDefinition","parameters":{"id":6900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6897,"mutability":"mutable","name":"a","nameLocation":"1493:1:16","nodeType":"VariableDeclaration","scope":6938,"src":"1486:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6896,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6899,"mutability":"mutable","name":"b","nameLocation":"1503:1:16","nodeType":"VariableDeclaration","scope":6938,"src":"1496:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6898,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:16"},"returnParameters":{"id":6903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6938,"src":"1529:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6901,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:16"},"scope":6965,"src":"1469:230:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6963,"nodeType":"Block","src":"1843:767:16","statements":[{"id":6962,"nodeType":"UncheckedBlock","src":"1853:751:16","statements":[{"assignments":[6947],"declarations":[{"constant":false,"id":6947,"mutability":"mutable","name":"mask","nameLocation":"2424:4:16","nodeType":"VariableDeclaration","scope":6962,"src":"2417:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6946,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6951,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6948,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"2431:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6954,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"2576:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6955,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"2580:4:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6957,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6958,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"2588:4:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6952,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:16","typeDescriptions":{}}},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6945,"id":6961,"nodeType":"Return","src":"2560:33:16"}]}]},"documentation":{"id":6939,"nodeType":"StructuredDocumentation","src":"1705:78:16","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6964,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:16","nodeType":"FunctionDefinition","parameters":{"id":6942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6941,"mutability":"mutable","name":"n","nameLocation":"1808:1:16","nodeType":"VariableDeclaration","scope":6964,"src":"1801:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6940,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:16"},"returnParameters":{"id":6945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6964,"src":"1834:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6943,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:16"},"scope":6965,"src":"1788:822:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6966,"src":"258:2354:16","usedErrors":[],"usedEvents":[]}],"src":"109:2504:16"},"id":16},"contracts/NeutralHeart.sol":{"ast":{"absolutePath":"contracts/NeutralHeart.sol","exportedSymbols":{"Context":[1511],"ECDSA":[3313],"ERC165":[3423],"ERC721":[1241],"ERC721Utils":[1481],"IERC165":[3435],"IERC721":[1358],"IERC721Errors":[237],"IERC721Metadata":[1404],"MessageHashUtils":[3399],"NeutralHeart":[7412],"Ownable":[147],"Strings":[2965]},"id":7413,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6967,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":6968,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7413,"sourceUnit":1242,"src":"58:57:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6969,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7413,"sourceUnit":148,"src":"116:52:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":6970,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7413,"sourceUnit":3314,"src":"169:62:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":6971,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7413,"sourceUnit":3400,"src":"232:73:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6972,"name":"ERC721","nameLocations":["332:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"332:6:17"},"id":6973,"nodeType":"InheritanceSpecifier","src":"332:6:17"},{"baseName":{"id":6974,"name":"Ownable","nameLocations":["340:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"340:7:17"},"id":6975,"nodeType":"InheritanceSpecifier","src":"340:7:17"}],"canonicalName":"NeutralHeart","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7412,"linearizedBaseContracts":[7412,147,1241,237,1404,1358,3423,3435,1511],"name":"NeutralHeart","nameLocation":"316:12:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"e00dd161","id":6977,"mutability":"mutable","name":"currentId","nameLocation":"370:9:17","nodeType":"VariableDeclaration","scope":7412,"src":"355:24:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6976,"name":"uint256","nodeType":"ElementaryTypeName","src":"355:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"26a74d8e","id":6979,"mutability":"mutable","name":"maxPublicSupply","nameLocation":"400:15:17","nodeType":"VariableDeclaration","scope":7412,"src":"385:30:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6978,"name":"uint256","nodeType":"ElementaryTypeName","src":"385:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"a4f4f8af","id":6981,"mutability":"mutable","name":"publicMinted","nameLocation":"436:12:17","nodeType":"VariableDeclaration","scope":7412,"src":"421:27:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6980,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b7ec2086","id":6983,"mutability":"mutable","name":"priceWei","nameLocation":"469:8:17","nodeType":"VariableDeclaration","scope":7412,"src":"454:23:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6982,"name":"uint256","nodeType":"ElementaryTypeName","src":"454:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"f74d5480","id":6985,"mutability":"mutable","name":"trustedSigner","nameLocation":"565:13:17","nodeType":"VariableDeclaration","scope":7412,"src":"550:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6984,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"1a02b69e","id":6989,"mutability":"mutable","name":"hasClaimedOnChain","nameLocation":"662:17:17","nodeType":"VariableDeclaration","scope":7412,"src":"630:49:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":6988,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6986,"name":"address","nodeType":"ElementaryTypeName","src":"638:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"630:24:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6987,"name":"bool","nodeType":"ElementaryTypeName","src":"649:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"dd46edb8","id":6993,"mutability":"mutable","name":"tokenVariant","nameLocation":"775:12:17","nodeType":"VariableDeclaration","scope":7412,"src":"742:45:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"},"typeName":{"id":6992,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6990,"name":"uint256","nodeType":"ElementaryTypeName","src":"750:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"742:25:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6991,"name":"uint8","nodeType":"ElementaryTypeName","src":"761:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}},"visibility":"public"},{"constant":false,"id":6995,"mutability":"mutable","name":"_baseTokenURI","nameLocation":"809:13:17","nodeType":"VariableDeclaration","scope":7412,"src":"794:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":6994,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"anonymous":false,"eventSelector":"748a2986091c2034d6e93b6f44f771a79f0e1d6acd8a60c68c17d4e1e2feaed2","id":7001,"name":"PublicMint","nameLocation":"835:10:17","nodeType":"EventDefinition","parameters":{"id":7000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6997,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"862:2:17","nodeType":"VariableDeclaration","scope":7001,"src":"846:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6996,"name":"address","nodeType":"ElementaryTypeName","src":"846:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6999,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"882:7:17","nodeType":"VariableDeclaration","scope":7001,"src":"866:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6998,"name":"uint256","nodeType":"ElementaryTypeName","src":"866:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"845:45:17"},"src":"829:62:17"},{"anonymous":false,"eventSelector":"e9a10c23ea49d40011e019f115185f0bc29740208a504d35f951dca74ba37eac","id":7007,"name":"SubscriberClaim","nameLocation":"902:15:17","nodeType":"EventDefinition","parameters":{"id":7006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7003,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"934:2:17","nodeType":"VariableDeclaration","scope":7007,"src":"918:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7002,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7005,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"954:7:17","nodeType":"VariableDeclaration","scope":7007,"src":"938:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7004,"name":"uint256","nodeType":"ElementaryTypeName","src":"938:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"917:45:17"},"src":"896:67:17"},{"anonymous":false,"eventSelector":"598067bc48ef38b7785eda047c375b2d45f2b845404b58dcdfccf40e7f38d869","id":7017,"name":"Transform","nameLocation":"974:9:17","nodeType":"EventDefinition","parameters":{"id":7016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7009,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1000:5:17","nodeType":"VariableDeclaration","scope":7017,"src":"984:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7008,"name":"address","nodeType":"ElementaryTypeName","src":"984:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7011,"indexed":true,"mutability":"mutable","name":"burnedId","nameLocation":"1023:8:17","nodeType":"VariableDeclaration","scope":7017,"src":"1007:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1007:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7013,"indexed":true,"mutability":"mutable","name":"newId","nameLocation":"1049:5:17","nodeType":"VariableDeclaration","scope":7017,"src":"1033:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7012,"name":"uint256","nodeType":"ElementaryTypeName","src":"1033:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7015,"indexed":false,"mutability":"mutable","name":"variant","nameLocation":"1062:7:17","nodeType":"VariableDeclaration","scope":7017,"src":"1056:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7014,"name":"uint8","nodeType":"ElementaryTypeName","src":"1056:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"983:87:17"},"src":"968:103:17"},{"body":{"id":7048,"nodeType":"Block","src":"1259:128:17","statements":[{"expression":{"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7036,"name":"maxPublicSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"1269:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7037,"name":"maxPublicSupply_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"1287:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1269:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7039,"nodeType":"ExpressionStatement","src":"1269:34:17"},{"expression":{"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7040,"name":"priceWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"1313:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7041,"name":"priceWei_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7025,"src":"1324:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1313:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7043,"nodeType":"ExpressionStatement","src":"1313:20:17"},{"expression":{"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7044,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"1343:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":7045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1355:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1343:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7047,"nodeType":"ExpressionStatement","src":"1343:13:17"}]},"id":7049,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7028,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"1223:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7029,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"1230:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7030,"kind":"baseConstructorSpecifier","modifierName":{"id":7027,"name":"ERC721","nameLocations":["1216:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"1216:6:17"},"nodeType":"ModifierInvocation","src":"1216:22:17"},{"arguments":[{"expression":{"id":7032,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1247:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1251:6:17","memberName":"sender","nodeType":"MemberAccess","src":"1247:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7034,"kind":"baseConstructorSpecifier","modifierName":{"id":7031,"name":"Ownable","nameLocations":["1239:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1239:7:17"},"nodeType":"ModifierInvocation","src":"1239:19:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7019,"mutability":"mutable","name":"name_","nameLocation":"1112:5:17","nodeType":"VariableDeclaration","scope":7049,"src":"1098:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7018,"name":"string","nodeType":"ElementaryTypeName","src":"1098:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7021,"mutability":"mutable","name":"symbol_","nameLocation":"1141:7:17","nodeType":"VariableDeclaration","scope":7049,"src":"1127:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7020,"name":"string","nodeType":"ElementaryTypeName","src":"1127:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7023,"mutability":"mutable","name":"maxPublicSupply_","nameLocation":"1166:16:17","nodeType":"VariableDeclaration","scope":7049,"src":"1158:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7022,"name":"uint256","nodeType":"ElementaryTypeName","src":"1158:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7025,"mutability":"mutable","name":"priceWei_","nameLocation":"1200:9:17","nodeType":"VariableDeclaration","scope":7049,"src":"1192:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7024,"name":"uint256","nodeType":"ElementaryTypeName","src":"1192:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1088:127:17"},"returnParameters":{"id":7035,"nodeType":"ParameterList","parameters":[],"src":"1259:0:17"},"scope":7412,"src":"1077:310:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7060,"nodeType":"Block","src":"1462:34:17","statements":[{"expression":{"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7056,"name":"trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"1472:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7057,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7051,"src":"1488:1:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1472:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7059,"nodeType":"ExpressionStatement","src":"1472:17:17"}]},"functionSelector":"56a1c701","id":7061,"implemented":true,"kind":"function","modifiers":[{"id":7054,"kind":"modifierInvocation","modifierName":{"id":7053,"name":"onlyOwner","nameLocations":["1452:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1452:9:17"},"nodeType":"ModifierInvocation","src":"1452:9:17"}],"name":"setTrustedSigner","nameLocation":"1415:16:17","nodeType":"FunctionDefinition","parameters":{"id":7052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7051,"mutability":"mutable","name":"s","nameLocation":"1440:1:17","nodeType":"VariableDeclaration","scope":7061,"src":"1432:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7050,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:11:17"},"returnParameters":{"id":7055,"nodeType":"ParameterList","parameters":[],"src":"1462:0:17"},"scope":7412,"src":"1406:90:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7072,"nodeType":"Block","src":"1558:34:17","statements":[{"expression":{"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7068,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"1568:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7069,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"1584:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1568:17:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7071,"nodeType":"ExpressionStatement","src":"1568:17:17"}]},"functionSelector":"55f804b3","id":7073,"implemented":true,"kind":"function","modifiers":[{"id":7066,"kind":"modifierInvocation","modifierName":{"id":7065,"name":"onlyOwner","nameLocations":["1548:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1548:9:17"},"nodeType":"ModifierInvocation","src":"1548:9:17"}],"name":"setBaseURI","nameLocation":"1511:10:17","nodeType":"FunctionDefinition","parameters":{"id":7064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7063,"mutability":"mutable","name":"b","nameLocation":"1536:1:17","nodeType":"VariableDeclaration","scope":7073,"src":"1522:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7062,"name":"string","nodeType":"ElementaryTypeName","src":"1522:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1521:17:17"},"returnParameters":{"id":7067,"nodeType":"ParameterList","parameters":[],"src":"1558:0:17"},"scope":7412,"src":"1502:90:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[489],"body":{"id":7081,"nodeType":"Block","src":"1665:37:17","statements":[{"expression":{"id":7079,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"1682:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":7078,"id":7080,"nodeType":"Return","src":"1675:20:17"}]},"id":7082,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"1607:8:17","nodeType":"FunctionDefinition","overrides":{"id":7075,"nodeType":"OverrideSpecifier","overrides":[],"src":"1632:8:17"},"parameters":{"id":7074,"nodeType":"ParameterList","parameters":[],"src":"1615:2:17"},"returnParameters":{"id":7078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7082,"src":"1650:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7076,"name":"string","nodeType":"ElementaryTypeName","src":"1650:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1649:15:17"},"scope":7412,"src":"1598:104:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[480],"body":{"id":7136,"nodeType":"Block","src":"1892:429:17","statements":[{"expression":{"arguments":[{"id":7091,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7084,"src":"1983:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7090,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"1969:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1969:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7093,"nodeType":"ExpressionStatement","src":"1969:22:17"},{"assignments":[7095],"declarations":[{"constant":false,"id":7095,"mutability":"mutable","name":"base","nameLocation":"2015:4:17","nodeType":"VariableDeclaration","scope":7136,"src":"2001:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7094,"name":"string","nodeType":"ElementaryTypeName","src":"2001:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7098,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7096,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[7082],"referencedDeclaration":7082,"src":"2022:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2022:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2001:31:17"},{"assignments":[7100],"declarations":[{"constant":false,"id":7100,"mutability":"mutable","name":"v","nameLocation":"2048:1:17","nodeType":"VariableDeclaration","scope":7136,"src":"2042:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7099,"name":"uint8","nodeType":"ElementaryTypeName","src":"2042:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":7104,"initialValue":{"baseExpression":{"id":7101,"name":"tokenVariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"2052:12:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"}},"id":7103,"indexExpression":{"id":7102,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7084,"src":"2065:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2052:21:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"2042:31:17"},{"assignments":[7106],"declarations":[{"constant":false,"id":7106,"mutability":"mutable","name":"namePart","nameLocation":"2097:8:17","nodeType":"VariableDeclaration","scope":7136,"src":"2083:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7105,"name":"string","nodeType":"ElementaryTypeName","src":"2083:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7108,"initialValue":{"hexValue":"6e65757472616c2e6a736f6e","id":7107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2108:14:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6a7e530fff89082831aa4d983e67d124a236e59cf5adda583f20493910ba0984","typeString":"literal_string \"neutral.json\""},"value":"neutral.json"},"nodeType":"VariableDeclarationStatement","src":"2083:39:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7109,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"2136:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2136:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7117,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"2202:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":7118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2207:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2202:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7125,"nodeType":"IfStatement","src":"2198:60:17","trueBody":{"id":7124,"nodeType":"Block","src":"2210:48:17","statements":[{"expression":{"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7120,"name":"namePart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"2224:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"646576696c2e6a736f6e","id":7121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:12:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d24c80b191361e85644b6b0bda725d53d4e964351c7c01a253ab10de48ed4f8e","typeString":"literal_string \"devil.json\""},"value":"devil.json"},"src":"2224:23:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7123,"nodeType":"ExpressionStatement","src":"2224:23:17"}]}},"id":7126,"nodeType":"IfStatement","src":"2132:126:17","trueBody":{"id":7116,"nodeType":"Block","src":"2144:48:17","statements":[{"expression":{"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7112,"name":"namePart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"2158:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"616e67656c2e6a736f6e","id":7113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:12:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_862c74a20a46320d28f32fc94d228be63a6e107173f6588aa679f5e090940efa","typeString":"literal_string \"angel.json\""},"value":"angel.json"},"src":"2158:23:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7115,"nodeType":"ExpressionStatement","src":"2158:23:17"}]}},{"expression":{"arguments":[{"arguments":[{"id":7131,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"2298:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7132,"name":"namePart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"2304:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7129,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"2281:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2285:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"2281:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2274:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7127,"name":"string","nodeType":"ElementaryTypeName","src":"2274:6:17","typeDescriptions":{}}},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7089,"id":7135,"nodeType":"Return","src":"2267:47:17"}]},"functionSelector":"c87b56dd","id":7137,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1821:8:17","nodeType":"FunctionDefinition","overrides":{"id":7086,"nodeType":"OverrideSpecifier","overrides":[],"src":"1859:8:17"},"parameters":{"id":7085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7084,"mutability":"mutable","name":"tokenId","nameLocation":"1838:7:17","nodeType":"VariableDeclaration","scope":7137,"src":"1830:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7083,"name":"uint256","nodeType":"ElementaryTypeName","src":"1830:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1829:17:17"},"returnParameters":{"id":7089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7137,"src":"1877:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7087,"name":"string","nodeType":"ElementaryTypeName","src":"1877:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1876:15:17"},"scope":7412,"src":"1812:509:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7211,"nodeType":"Block","src":"2403:505:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7143,"name":"qty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"2421:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2427:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2421:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7146,"name":"qty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"2432:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3130","id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2439:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"2432:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2421:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420717479","id":7150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2443:13:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a9e59314a78d25b237b9f5f22b78aeb6280107de0a7d9b9b3d2d4f880e56b06","typeString":"literal_string \"invalid qty\""},"value":"invalid qty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3a9e59314a78d25b237b9f5f22b78aeb6280107de0a7d9b9b3d2d4f880e56b06","typeString":"literal_string \"invalid qty\""}],"id":7142,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2413:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2413:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7152,"nodeType":"ExpressionStatement","src":"2413:44:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7154,"name":"publicMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"2475:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7155,"name":"qty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"2490:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2475:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7157,"name":"maxPublicSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"2497:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2475:37:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7075626c696320736f6c64206f7574","id":7159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2514:17:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d","typeString":"literal_string \"public sold out\""},"value":"public sold out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d","typeString":"literal_string \"public sold out\""}],"id":7153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2467:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2467:65:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7161,"nodeType":"ExpressionStatement","src":"2467:65:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7163,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2550:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2554:5:17","memberName":"value","nodeType":"MemberAccess","src":"2550:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7165,"name":"priceWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"2563:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7166,"name":"qty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"2574:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2563:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2550:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e636f7272656374207061796d656e74","id":7169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2579:19:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877","typeString":"literal_string \"incorrect payment\""},"value":"incorrect payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877","typeString":"literal_string \"incorrect payment\""}],"id":7162,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2542:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:57:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7171,"nodeType":"ExpressionStatement","src":"2542:57:17"},{"body":{"id":7205,"nodeType":"Block","src":"2644:229:17","statements":[{"assignments":[7183],"declarations":[{"constant":false,"id":7183,"mutability":"mutable","name":"tokenId","nameLocation":"2666:7:17","nodeType":"VariableDeclaration","scope":7205,"src":"2658:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7182,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7186,"initialValue":{"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2676:11:17","subExpression":{"id":7184,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"2676:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2658:29:17"},{"expression":{"arguments":[{"expression":{"id":7188,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2711:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2715:6:17","memberName":"sender","nodeType":"MemberAccess","src":"2711:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7190,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7183,"src":"2723:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7187,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[919,949],"referencedDeclaration":919,"src":"2701:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7192,"nodeType":"ExpressionStatement","src":"2701:30:17"},{"expression":{"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7193,"name":"tokenVariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"2787:12:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"}},"id":7195,"indexExpression":{"id":7194,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7183,"src":"2800:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2787:21:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2787:25:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7198,"nodeType":"ExpressionStatement","src":"2787:25:17"},{"eventCall":{"arguments":[{"expression":{"id":7200,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2842:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2846:6:17","memberName":"sender","nodeType":"MemberAccess","src":"2842:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7202,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7183,"src":"2854:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7199,"name":"PublicMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"2831:10:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7204,"nodeType":"EmitStatement","src":"2826:36:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7176,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"2630:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7177,"name":"qty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"2634:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2630:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7206,"initializationExpression":{"assignments":[7173],"declarations":[{"constant":false,"id":7173,"mutability":"mutable","name":"i","nameLocation":"2623:1:17","nodeType":"VariableDeclaration","scope":7206,"src":"2615:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7175,"initialValue":{"hexValue":"30","id":7174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2615:13:17"},"loopExpression":{"expression":{"id":7180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2639:3:17","subExpression":{"id":7179,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"2639:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7181,"nodeType":"ExpressionStatement","src":"2639:3:17"},"nodeType":"ForStatement","src":"2610:263:17"},{"expression":{"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7207,"name":"publicMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"2882:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7208,"name":"qty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"2898:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2882:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7210,"nodeType":"ExpressionStatement","src":"2882:19:17"}]},"functionSelector":"2db11544","id":7212,"implemented":true,"kind":"function","modifiers":[],"name":"publicMint","nameLocation":"2362:10:17","nodeType":"FunctionDefinition","parameters":{"id":7140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7139,"mutability":"mutable","name":"qty","nameLocation":"2381:3:17","nodeType":"VariableDeclaration","scope":7212,"src":"2373:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7138,"name":"uint256","nodeType":"ElementaryTypeName","src":"2373:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2372:13:17"},"returnParameters":{"id":7141,"nodeType":"ParameterList","parameters":[],"src":"2403:0:17"},"scope":7412,"src":"2353:555:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7304,"nodeType":"Block","src":"3106:756:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7218,"name":"trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"3124:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3149:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3141:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7219,"name":"address","nodeType":"ElementaryTypeName","src":"3141:7:17","typeDescriptions":{}}},"id":7222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3141:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3124:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"74727573746564207369676e6572206e6f7420736574","id":7224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3153:24:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1","typeString":"literal_string \"trusted signer not set\""},"value":"trusted signer not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1","typeString":"literal_string \"trusted signer not set\""}],"id":7217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3116:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7226,"nodeType":"ExpressionStatement","src":"3116:62:17"},{"expression":{"arguments":[{"id":7232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3196:30:17","subExpression":{"baseExpression":{"id":7228,"name":"hasClaimedOnChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3197:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7231,"indexExpression":{"expression":{"id":7229,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3215:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3219:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3215:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3197:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616c726561647920636c61696d6564206f6e2d636861696e","id":7233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3228:26:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3","typeString":"literal_string \"already claimed on-chain\""},"value":"already claimed on-chain"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3","typeString":"literal_string \"already claimed on-chain\""}],"id":7227,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3188:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3188:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7235,"nodeType":"ExpressionStatement","src":"3188:67:17"},{"assignments":[7237],"declarations":[{"constant":false,"id":7237,"mutability":"mutable","name":"digest","nameLocation":"3270:6:17","nodeType":"VariableDeclaration","scope":7304,"src":"3262:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3262:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7251,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":7243,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3314:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_NeutralHeart_$7412","typeString":"contract NeutralHeart"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NeutralHeart_$7412","typeString":"contract NeutralHeart"}],"id":7242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3306:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7241,"name":"address","nodeType":"ElementaryTypeName","src":"3306:7:17","typeDescriptions":{}}},"id":7244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3306:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7245,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"3321:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3327:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"3321:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7247,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3336:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3340:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3336:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7239,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"3289:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3293:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"3289:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3289:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7238,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"3279:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3279:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3262:86:17"},{"assignments":[7253],"declarations":[{"constant":false,"id":7253,"mutability":"mutable","name":"prefixed","nameLocation":"3435:8:17","nodeType":"VariableDeclaration","scope":7304,"src":"3427:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3427:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7258,"initialValue":{"arguments":[{"id":7256,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"3486:6:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7254,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"3446:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3399_$","typeString":"type(library MessageHashUtils)"}},"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3463:22:17","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":3328,"src":"3446:39:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3446:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3427:66:17"},{"assignments":[7260],"declarations":[{"constant":false,"id":7260,"mutability":"mutable","name":"signer","nameLocation":"3507:6:17","nodeType":"VariableDeclaration","scope":7304,"src":"3499:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7259,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7266,"initialValue":{"arguments":[{"id":7263,"name":"prefixed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"3530:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7264,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"3540:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":7261,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"3516:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3313_$","typeString":"type(library ECDSA)"}},"id":7262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3522:7:17","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3069,"src":"3516:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3516:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3499:51:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7268,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"3568:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7269,"name":"trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"3578:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3568:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964207369676e6174757265","id":7271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3593:19:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","typeString":"literal_string \"invalid signature\""},"value":"invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","typeString":"literal_string \"invalid signature\""}],"id":7267,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3560:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7273,"nodeType":"ExpressionStatement","src":"3560:53:17"},{"expression":{"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7274,"name":"hasClaimedOnChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3624:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7277,"indexExpression":{"expression":{"id":7275,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3642:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3646:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3642:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3624:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3656:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3624:36:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7280,"nodeType":"ExpressionStatement","src":"3624:36:17"},{"assignments":[7282],"declarations":[{"constant":false,"id":7282,"mutability":"mutable","name":"tokenId","nameLocation":"3678:7:17","nodeType":"VariableDeclaration","scope":7304,"src":"3670:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7281,"name":"uint256","nodeType":"ElementaryTypeName","src":"3670:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7285,"initialValue":{"id":7284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3688:11:17","subExpression":{"id":7283,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"3688:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3670:29:17"},{"expression":{"arguments":[{"expression":{"id":7287,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3719:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3723:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3719:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7289,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"3731:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7286,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[919,949],"referencedDeclaration":919,"src":"3709:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3709:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7291,"nodeType":"ExpressionStatement","src":"3709:30:17"},{"expression":{"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7292,"name":"tokenVariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"3779:12:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"}},"id":7294,"indexExpression":{"id":7293,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"3792:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3779:21:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3803:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3779:25:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7297,"nodeType":"ExpressionStatement","src":"3779:25:17"},{"eventCall":{"arguments":[{"expression":{"id":7299,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3835:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3839:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3835:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7301,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"3847:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7298,"name":"SubscriberClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"3819:15:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3819:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7303,"nodeType":"EmitStatement","src":"3814:41:17"}]},"functionSelector":"bcea0fec","id":7305,"implemented":true,"kind":"function","modifiers":[],"name":"claimForSubscriber","nameLocation":"3052:18:17","nodeType":"FunctionDefinition","parameters":{"id":7215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7214,"mutability":"mutable","name":"signature","nameLocation":"3086:9:17","nodeType":"VariableDeclaration","scope":7305,"src":"3071:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7213,"name":"bytes","nodeType":"ElementaryTypeName","src":"3071:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3070:26:17"},"returnParameters":{"id":7216,"nodeType":"ParameterList","parameters":[],"src":"3106:0:17"},"scope":7412,"src":"3043:819:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7371,"nodeType":"Block","src":"4074:500:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7313,"name":"variant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"4092:7:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4103:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4092:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7316,"name":"variant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"4108:7:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":7317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4119:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4108:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4092:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c69642076617269616e74","id":7320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4122:17:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662","typeString":"literal_string \"invalid variant\""},"value":"invalid variant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662","typeString":"literal_string \"invalid variant\""}],"id":7312,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4084:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4084:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7322,"nodeType":"ExpressionStatement","src":"4084:56:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7325,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"4166:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7324,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"4158:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4158:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7327,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4178:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4182:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4178:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4158:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f74206f776e6572","id":7330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4190:11:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e","typeString":"literal_string \"not owner\""},"value":"not owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e","typeString":"literal_string \"not owner\""}],"id":7323,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4150:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4150:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7332,"nodeType":"ExpressionStatement","src":"4150:52:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7334,"name":"tokenVariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"4220:12:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"}},"id":7336,"indexExpression":{"id":7335,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"4233:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4220:21:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4245:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4220:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c79206e65757472616c20746f6b656e732063616e206265207472616e73666f726d6564","id":7339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4248:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277","typeString":"literal_string \"only neutral tokens can be transformed\""},"value":"only neutral tokens can be transformed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277","typeString":"literal_string \"only neutral tokens can be transformed\""}],"id":7333,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4212:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4212:77:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7341,"nodeType":"ExpressionStatement","src":"4212:77:17"},{"expression":{"arguments":[{"id":7343,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"4340:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7342,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"4334:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4334:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7345,"nodeType":"ExpressionStatement","src":"4334:14:17"},{"assignments":[7347],"declarations":[{"constant":false,"id":7347,"mutability":"mutable","name":"newId","nameLocation":"4409:5:17","nodeType":"VariableDeclaration","scope":7371,"src":"4401:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7346,"name":"uint256","nodeType":"ElementaryTypeName","src":"4401:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7350,"initialValue":{"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4417:11:17","subExpression":{"id":7348,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"4417:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4401:27:17"},{"expression":{"arguments":[{"expression":{"id":7352,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4448:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4452:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4448:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7354,"name":"newId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"4460:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7351,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[919,949],"referencedDeclaration":919,"src":"4438:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7356,"nodeType":"ExpressionStatement","src":"4438:28:17"},{"expression":{"id":7361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7357,"name":"tokenVariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"4476:12:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"}},"id":7359,"indexExpression":{"id":7358,"name":"newId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"4489:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4476:19:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7360,"name":"variant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"4498:7:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4476:29:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7362,"nodeType":"ExpressionStatement","src":"4476:29:17"},{"eventCall":{"arguments":[{"expression":{"id":7364,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4531:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4535:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4531:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7366,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"4543:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7367,"name":"newId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"4552:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7368,"name":"variant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"4559:7:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":7363,"name":"Transform","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7017,"src":"4521:9:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$returns$__$","typeString":"function (address,uint256,uint256,uint8)"}},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4521:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7370,"nodeType":"EmitStatement","src":"4516:51:17"}]},"functionSelector":"f78f647c","id":7372,"implemented":true,"kind":"function","modifiers":[],"name":"transform","nameLocation":"4023:9:17","nodeType":"FunctionDefinition","parameters":{"id":7310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7307,"mutability":"mutable","name":"tokenId","nameLocation":"4041:7:17","nodeType":"VariableDeclaration","scope":7372,"src":"4033:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7306,"name":"uint256","nodeType":"ElementaryTypeName","src":"4033:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7309,"mutability":"mutable","name":"variant","nameLocation":"4056:7:17","nodeType":"VariableDeclaration","scope":7372,"src":"4050:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7308,"name":"uint8","nodeType":"ElementaryTypeName","src":"4050:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4032:32:17"},"returnParameters":{"id":7311,"nodeType":"ParameterList","parameters":[],"src":"4074:0:17"},"scope":7412,"src":"4014:560:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7410,"nodeType":"Block","src":"4686:170:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7380,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7374,"src":"4704:2:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4718:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4710:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7381,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:17","typeDescriptions":{}}},"id":7384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4710:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4704:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c69642061646472657373","id":7386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4722:17:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225","typeString":"literal_string \"invalid address\""},"value":"invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225","typeString":"literal_string \"invalid address\""}],"id":7379,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4696:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4696:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7388,"nodeType":"ExpressionStatement","src":"4696:44:17"},{"assignments":[7390],"declarations":[{"constant":false,"id":7390,"mutability":"mutable","name":"bal","nameLocation":"4758:3:17","nodeType":"VariableDeclaration","scope":7410,"src":"4750:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7389,"name":"uint256","nodeType":"ElementaryTypeName","src":"4750:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7396,"initialValue":{"expression":{"arguments":[{"id":7393,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"4772:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_NeutralHeart_$7412","typeString":"contract NeutralHeart"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NeutralHeart_$7412","typeString":"contract NeutralHeart"}],"id":7392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4764:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7391,"name":"address","nodeType":"ElementaryTypeName","src":"4764:7:17","typeDescriptions":{}}},"id":7394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4764:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4778:7:17","memberName":"balance","nodeType":"MemberAccess","src":"4764:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4750:35:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7398,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"4803:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4809:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4803:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f2066756e6473","id":7401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4812:10:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920","typeString":"literal_string \"no funds\""},"value":"no funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920","typeString":"literal_string \"no funds\""}],"id":7397,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4795:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4795:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7403,"nodeType":"ExpressionStatement","src":"4795:28:17"},{"expression":{"arguments":[{"id":7407,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"4845:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7404,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7374,"src":"4833:2:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4836:8:17","memberName":"transfer","nodeType":"MemberAccess","src":"4833:11:17","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4833:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7409,"nodeType":"ExpressionStatement","src":"4833:16:17"}]},"functionSelector":"51cff8d9","id":7411,"implemented":true,"kind":"function","modifiers":[{"id":7377,"kind":"modifierInvocation","modifierName":{"id":7376,"name":"onlyOwner","nameLocations":["4676:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4676:9:17"},"nodeType":"ModifierInvocation","src":"4676:9:17"}],"name":"withdraw","nameLocation":"4638:8:17","nodeType":"FunctionDefinition","parameters":{"id":7375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7374,"mutability":"mutable","name":"to","nameLocation":"4663:2:17","nodeType":"VariableDeclaration","scope":7411,"src":"4647:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7373,"name":"address","nodeType":"ElementaryTypeName","src":"4647:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"4646:20:17"},"returnParameters":{"id":7378,"nodeType":"ParameterList","parameters":[],"src":"4686:0:17"},"scope":7412,"src":"4629:227:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7413,"src":"307:4551:17","usedErrors":[13,18,195,200,209,214,219,226,231,236,2976,2981,2986],"usedEvents":[24,1257,1266,1275,7001,7007,7017]}],"src":"32:4827:17"},"id":17}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220162f91a938900f67d62c9c64f40c044c95d964965c1f6c6d7a10d1acfd1be75e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0x2F SWAP2 0xA9 CODESIZE SWAP1 0xF PUSH8 0xD62C9C64F40C044C SWAP6 0xD9 PUSH5 0x965C1F6C6D PUSH27 0x10D1ACFD1BE75E64736F6C63430008140033000000000000000000 ","sourceMap":"431:1490:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220162f91a938900f67d62c9c64f40c044c95d964965c1f6c6d7a10d1acfd1be75e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0x2F SWAP2 0xA9 CODESIZE SWAP1 0xF PUSH8 0xD62C9C64F40C044C SWAP6 0xD9 PUSH5 0x965C1F6C6D PUSH27 0x10D1ACFD1BE75E64736F6C63430008140033000000000000000000 ","sourceMap":"431:1490:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cdfc0f4896bddb25e6dbaa67bf1eb0e65a8304d29a2184c6bb257d077c9490e664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xFC 0xF BASEFEE SWAP7 0xBD 0xDB 0x25 0xE6 0xDB 0xAA PUSH8 0xBF1EB0E65A8304D2 SWAP11 0x21 DUP5 0xC6 0xBB 0x25 PUSH30 0x77C9490E664736F6C634300081400330000000000000000000000000000 ","sourceMap":"297:18982:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cdfc0f4896bddb25e6dbaa67bf1eb0e65a8304d29a2184c6bb257d077c9490e664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xFC 0xF BASEFEE SWAP7 0xBD 0xDB 0x25 0xE6 0xDB 0xAA PUSH8 0xBF1EB0E65A8304D2 SWAP11 0x21 DUP5 0xC6 0xBB 0x25 PUSH30 0x77C9490E664736F6C634300081400330000000000000000000000000000 ","sourceMap":"297:18982:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026c48870ae02959cbf0acbe21bcfca73b8ad9bf6c86e24aa9d844ab7355d9d6564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xC4 DUP9 PUSH17 0xAE02959CBF0ACBE21BCFCA73B8AD9BF6C8 PUSH15 0x24AA9D844AB7355D9D6564736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026c48870ae02959cbf0acbe21bcfca73b8ad9bf6c86e24aa9d844ab7355d9d6564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xC4 DUP9 PUSH17 0xAE02959CBF0ACBE21BCFCA73B8AD9BF6C8 PUSH15 0x24AA9D844AB7355D9D6564736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/NeutralHeart.sol":{"NeutralHeart":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"uint256","name":"maxPublicSupply_","type":"uint256"},{"internalType":"uint256","name":"priceWei_","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"PublicMint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"SubscriberClaim","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"uint256","name":"burnedId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"newId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"variant","type":"uint8"}],"name":"Transform","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"claimForSubscriber","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"currentId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"hasClaimedOnChain","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxPublicSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceWei","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"qty","type":"uint256"}],"name":"publicMint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"publicMinted","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"b","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"s","type":"address"}],"name":"setTrustedSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenVariant","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint8","name":"variant","type":"uint8"}],"name":"transform","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trustedSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_354":{"entryPoint":null,"id":354,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7049":{"entryPoint":null,"id":7049,"parameterSlots":4,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":263,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":738,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":813,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory":{"entryPoint":923,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1959,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1976,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":609,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":461,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":640,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1210,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1099,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1521,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1939,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1907,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":864,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1482,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1356,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1676,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":694,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1231,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1157,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1646,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":555,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1346,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1614,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1110,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":508,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1396,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":481,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":486,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":476,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":471,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":491,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1247,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1601,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1454,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1260,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1406,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":874,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1449,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9750:18","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:18","statements":[{"nodeType":"YulAssignment","src":"57:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:18"},"nodeType":"YulFunctionCall","src":"67:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:18","type":""}],"src":"7:75:18"},{"body":{"nodeType":"YulBlock","src":"177:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:18"},"nodeType":"YulFunctionCall","src":"187:12:18"},"nodeType":"YulExpressionStatement","src":"187:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:18"},{"body":{"nodeType":"YulBlock","src":"300:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:18"},"nodeType":"YulFunctionCall","src":"310:12:18"},"nodeType":"YulExpressionStatement","src":"310:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:18"},{"body":{"nodeType":"YulBlock","src":"423:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:18"},"nodeType":"YulFunctionCall","src":"433:12:18"},"nodeType":"YulExpressionStatement","src":"433:12:18"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:18"},{"body":{"nodeType":"YulBlock","src":"546:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:18"},"nodeType":"YulFunctionCall","src":"556:12:18"},"nodeType":"YulExpressionStatement","src":"556:12:18"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:18"},{"body":{"nodeType":"YulBlock","src":"628:54:18","statements":[{"nodeType":"YulAssignment","src":"638:38:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:18"},"nodeType":"YulFunctionCall","src":"652:14:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:18"},"nodeType":"YulFunctionCall","src":"668:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:18"},"nodeType":"YulFunctionCall","src":"648:28:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:18"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:18","type":""}],"src":"580:102:18"},{"body":{"nodeType":"YulBlock","src":"716:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:18"},"nodeType":"YulFunctionCall","src":"726:88:18"},"nodeType":"YulExpressionStatement","src":"726:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:18"},"nodeType":"YulFunctionCall","src":"823:15:18"},"nodeType":"YulExpressionStatement","src":"823:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:18"},"nodeType":"YulFunctionCall","src":"847:15:18"},"nodeType":"YulExpressionStatement","src":"847:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:18"},{"body":{"nodeType":"YulBlock","src":"917:238:18","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:18"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:18"},"nodeType":"YulFunctionCall","src":"957:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:18"},"nodeType":"YulFunctionCall","src":"945:40:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:18"},"nodeType":"YulFunctionCall","src":"1098:18:18"},"nodeType":"YulExpressionStatement","src":"1098:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:18"},"nodeType":"YulFunctionCall","src":"1036:34:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:18"},"nodeType":"YulFunctionCall","src":"1072:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:18"},"nodeType":"YulFunctionCall","src":"1033:62:18"},"nodeType":"YulIf","src":"1030:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:18"},"nodeType":"YulFunctionCall","src":"1127:22:18"},"nodeType":"YulExpressionStatement","src":"1127:22:18"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:18","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:18","type":""}],"src":"874:281:18"},{"body":{"nodeType":"YulBlock","src":"1202:88:18","statements":[{"nodeType":"YulAssignment","src":"1212:30:18","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:18"},"nodeType":"YulFunctionCall","src":"1222:20:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:18"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:18"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:18"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:18"},"nodeType":"YulFunctionCall","src":"1251:33:18"},"nodeType":"YulExpressionStatement","src":"1251:33:18"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:18","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:18","type":""}],"src":"1161:129:18"},{"body":{"nodeType":"YulBlock","src":"1363:241:18","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:18"},"nodeType":"YulFunctionCall","src":"1470:18:18"},"nodeType":"YulExpressionStatement","src":"1470:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:18"},"nodeType":"YulFunctionCall","src":"1437:30:18"},"nodeType":"YulIf","src":"1434:56:18"},{"nodeType":"YulAssignment","src":"1500:37:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:18"},"nodeType":"YulFunctionCall","src":"1508:29:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:18"}]},{"nodeType":"YulAssignment","src":"1574:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:18"},"nodeType":"YulFunctionCall","src":"1582:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:18"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:18","type":""}],"src":"1296:308:18"},{"body":{"nodeType":"YulBlock","src":"1672:184:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:18"},"nodeType":"YulFunctionCall","src":"1772:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:18"},"nodeType":"YulFunctionCall","src":"1791:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:18"},"nodeType":"YulFunctionCall","src":"1785:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:18"},"nodeType":"YulFunctionCall","src":"1765:39:18"},"nodeType":"YulExpressionStatement","src":"1765:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:18"},"nodeType":"YulFunctionCall","src":"1709:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:18","statements":[{"nodeType":"YulAssignment","src":"1725:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:18"},"nodeType":"YulFunctionCall","src":"1730:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:18","statements":[]},"src":"1701:113:18"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:18"},"nodeType":"YulFunctionCall","src":"1830:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:18"},"nodeType":"YulFunctionCall","src":"1823:27:18"},"nodeType":"YulExpressionStatement","src":"1823:27:18"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:18","type":""}],"src":"1610:246:18"},{"body":{"nodeType":"YulBlock","src":"1957:339:18","statements":[{"nodeType":"YulAssignment","src":"1967:75:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:18"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:18"},"nodeType":"YulFunctionCall","src":"1992:49:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:18"},"nodeType":"YulFunctionCall","src":"1976:66:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:18"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:18"},"nodeType":"YulFunctionCall","src":"2051:21:18"},"nodeType":"YulExpressionStatement","src":"2051:21:18"},{"nodeType":"YulVariableDeclaration","src":"2081:27:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:18"},"nodeType":"YulFunctionCall","src":"2092:16:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:18"},"nodeType":"YulFunctionCall","src":"2148:79:18"},"nodeType":"YulExpressionStatement","src":"2148:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:18"},"nodeType":"YulFunctionCall","src":"2123:16:18"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:18"},"nodeType":"YulFunctionCall","src":"2120:25:18"},"nodeType":"YulIf","src":"2117:112:18"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:18"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:18"},"nodeType":"YulFunctionCall","src":"2238:52:18"},"nodeType":"YulExpressionStatement","src":"2238:52:18"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:18","type":""}],"src":"1862:434:18"},{"body":{"nodeType":"YulBlock","src":"2389:282:18","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:18"},"nodeType":"YulFunctionCall","src":"2440:79:18"},"nodeType":"YulExpressionStatement","src":"2440:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:18"},"nodeType":"YulFunctionCall","src":"2413:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:18"},"nodeType":"YulFunctionCall","src":"2409:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:18"},"nodeType":"YulFunctionCall","src":"2402:35:18"},"nodeType":"YulIf","src":"2399:122:18"},{"nodeType":"YulVariableDeclaration","src":"2530:27:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:18"},"nodeType":"YulFunctionCall","src":"2544:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:18"},"nodeType":"YulFunctionCall","src":"2634:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:18"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:18"},"nodeType":"YulFunctionCall","src":"2575:90:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:18"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:18","type":""}],"src":"2316:355:18"},{"body":{"nodeType":"YulBlock","src":"2722:32:18","statements":[{"nodeType":"YulAssignment","src":"2732:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"2743:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2732:7:18"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2704:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2714:7:18","type":""}],"src":"2677:77:18"},{"body":{"nodeType":"YulBlock","src":"2803:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"2860:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2869:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2872:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2862:6:18"},"nodeType":"YulFunctionCall","src":"2862:12:18"},"nodeType":"YulExpressionStatement","src":"2862:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2826:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2851:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2833:17:18"},"nodeType":"YulFunctionCall","src":"2833:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2823:2:18"},"nodeType":"YulFunctionCall","src":"2823:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2816:6:18"},"nodeType":"YulFunctionCall","src":"2816:43:18"},"nodeType":"YulIf","src":"2813:63:18"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2796:5:18","type":""}],"src":"2760:122:18"},{"body":{"nodeType":"YulBlock","src":"2951:80:18","statements":[{"nodeType":"YulAssignment","src":"2961:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2976:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2970:5:18"},"nodeType":"YulFunctionCall","src":"2970:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2961:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3019:5:18"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2992:26:18"},"nodeType":"YulFunctionCall","src":"2992:33:18"},"nodeType":"YulExpressionStatement","src":"2992:33:18"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2929:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2937:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2945:5:18","type":""}],"src":"2888:143:18"},{"body":{"nodeType":"YulBlock","src":"3185:1018:18","statements":[{"body":{"nodeType":"YulBlock","src":"3232:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3234:77:18"},"nodeType":"YulFunctionCall","src":"3234:79:18"},"nodeType":"YulExpressionStatement","src":"3234:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3206:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3215:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3202:3:18"},"nodeType":"YulFunctionCall","src":"3202:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3227:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3198:3:18"},"nodeType":"YulFunctionCall","src":"3198:33:18"},"nodeType":"YulIf","src":"3195:120:18"},{"nodeType":"YulBlock","src":"3325:291:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3340:38:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3364:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3375:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3360:3:18"},"nodeType":"YulFunctionCall","src":"3360:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3354:5:18"},"nodeType":"YulFunctionCall","src":"3354:24:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3344:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3425:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3427:77:18"},"nodeType":"YulFunctionCall","src":"3427:79:18"},"nodeType":"YulExpressionStatement","src":"3427:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3397:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3405:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3394:2:18"},"nodeType":"YulFunctionCall","src":"3394:30:18"},"nodeType":"YulIf","src":"3391:117:18"},{"nodeType":"YulAssignment","src":"3522:84:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3578:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3589:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3574:3:18"},"nodeType":"YulFunctionCall","src":"3574:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3598:7:18"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3532:41:18"},"nodeType":"YulFunctionCall","src":"3532:74:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3522:6:18"}]}]},{"nodeType":"YulBlock","src":"3626:292:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3641:39:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3665:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3676:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3661:3:18"},"nodeType":"YulFunctionCall","src":"3661:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3655:5:18"},"nodeType":"YulFunctionCall","src":"3655:25:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3645:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3727:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3729:77:18"},"nodeType":"YulFunctionCall","src":"3729:79:18"},"nodeType":"YulExpressionStatement","src":"3729:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3699:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3707:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3696:2:18"},"nodeType":"YulFunctionCall","src":"3696:30:18"},"nodeType":"YulIf","src":"3693:117:18"},{"nodeType":"YulAssignment","src":"3824:84:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3880:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3891:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3876:3:18"},"nodeType":"YulFunctionCall","src":"3876:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3900:7:18"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3834:41:18"},"nodeType":"YulFunctionCall","src":"3834:74:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3824:6:18"}]}]},{"nodeType":"YulBlock","src":"3928:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3943:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3957:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3947:6:18","type":""}]},{"nodeType":"YulAssignment","src":"3973:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4019:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4030:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4015:3:18"},"nodeType":"YulFunctionCall","src":"4015:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4039:7:18"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3983:31:18"},"nodeType":"YulFunctionCall","src":"3983:64:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3973:6:18"}]}]},{"nodeType":"YulBlock","src":"4067:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4082:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4096:2:18","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4086:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4112:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4169:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:18"},"nodeType":"YulFunctionCall","src":"4154:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4178:7:18"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4122:31:18"},"nodeType":"YulFunctionCall","src":"4122:64:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4112:6:18"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3131:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3142:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3154:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3162:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3170:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3178:6:18","type":""}],"src":"3037:1166:18"},{"body":{"nodeType":"YulBlock","src":"4268:40:18","statements":[{"nodeType":"YulAssignment","src":"4279:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4295:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4289:5:18"},"nodeType":"YulFunctionCall","src":"4289:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4279:6:18"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4251:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4261:6:18","type":""}],"src":"4209:99:18"},{"body":{"nodeType":"YulBlock","src":"4342:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4359:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4362:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4352:6:18"},"nodeType":"YulFunctionCall","src":"4352:88:18"},"nodeType":"YulExpressionStatement","src":"4352:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4456:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4459:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4449:6:18"},"nodeType":"YulFunctionCall","src":"4449:15:18"},"nodeType":"YulExpressionStatement","src":"4449:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4480:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4483:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4473:6:18"},"nodeType":"YulFunctionCall","src":"4473:15:18"},"nodeType":"YulExpressionStatement","src":"4473:15:18"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"4314:180:18"},{"body":{"nodeType":"YulBlock","src":"4551:269:18","statements":[{"nodeType":"YulAssignment","src":"4561:22:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4575:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"4581:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4571:3:18"},"nodeType":"YulFunctionCall","src":"4571:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4561:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"4592:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4622:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"4628:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4618:3:18"},"nodeType":"YulFunctionCall","src":"4618:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4596:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4669:51:18","statements":[{"nodeType":"YulAssignment","src":"4683:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4697:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4705:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4693:3:18"},"nodeType":"YulFunctionCall","src":"4693:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4683:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4649:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4642:6:18"},"nodeType":"YulFunctionCall","src":"4642:26:18"},"nodeType":"YulIf","src":"4639:81:18"},{"body":{"nodeType":"YulBlock","src":"4772:42:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4786:16:18"},"nodeType":"YulFunctionCall","src":"4786:18:18"},"nodeType":"YulExpressionStatement","src":"4786:18:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4736:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4759:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4767:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4756:2:18"},"nodeType":"YulFunctionCall","src":"4756:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4733:2:18"},"nodeType":"YulFunctionCall","src":"4733:38:18"},"nodeType":"YulIf","src":"4730:84:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4535:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4544:6:18","type":""}],"src":"4500:320:18"},{"body":{"nodeType":"YulBlock","src":"4880:87:18","statements":[{"nodeType":"YulAssignment","src":"4890:11:18","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4898:3:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4890:4:18"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4918:1:18","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4921:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4911:6:18"},"nodeType":"YulFunctionCall","src":"4911:14:18"},"nodeType":"YulExpressionStatement","src":"4911:14:18"},{"nodeType":"YulAssignment","src":"4934:26:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4952:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4955:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4942:9:18"},"nodeType":"YulFunctionCall","src":"4942:18:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4934:4:18"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4867:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4875:4:18","type":""}],"src":"4826:141:18"},{"body":{"nodeType":"YulBlock","src":"5017:49:18","statements":[{"nodeType":"YulAssignment","src":"5027:33:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5045:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"5052:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5041:3:18"},"nodeType":"YulFunctionCall","src":"5041:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"5057:2:18","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5037:3:18"},"nodeType":"YulFunctionCall","src":"5037:23:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5027:6:18"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5000:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5010:6:18","type":""}],"src":"4973:93:18"},{"body":{"nodeType":"YulBlock","src":"5125:54:18","statements":[{"nodeType":"YulAssignment","src":"5135:37:18","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"5160:4:18"},{"name":"value","nodeType":"YulIdentifier","src":"5166:5:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5156:3:18"},"nodeType":"YulFunctionCall","src":"5156:16:18"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"5135:8:18"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"5100:4:18","type":""},{"name":"value","nodeType":"YulTypedName","src":"5106:5:18","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"5116:8:18","type":""}],"src":"5072:107:18"},{"body":{"nodeType":"YulBlock","src":"5261:317:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5271:35:18","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"5292:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"5304:1:18","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5288:3:18"},"nodeType":"YulFunctionCall","src":"5288:18:18"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"5275:9:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5315:109:18","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5346:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5357:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5327:18:18"},"nodeType":"YulFunctionCall","src":"5327:97:18"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"5319:4:18","type":""}]},{"nodeType":"YulAssignment","src":"5433:51:18","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5464:9:18"},{"name":"toInsert","nodeType":"YulIdentifier","src":"5475:8:18"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5445:18:18"},"nodeType":"YulFunctionCall","src":"5445:39:18"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5433:8:18"}]},{"nodeType":"YulAssignment","src":"5493:30:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5506:5:18"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"5517:4:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5513:3:18"},"nodeType":"YulFunctionCall","src":"5513:9:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5502:3:18"},"nodeType":"YulFunctionCall","src":"5502:21:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5493:5:18"}]},{"nodeType":"YulAssignment","src":"5532:40:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5545:5:18"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5556:8:18"},{"name":"mask","nodeType":"YulIdentifier","src":"5566:4:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5552:3:18"},"nodeType":"YulFunctionCall","src":"5552:19:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5542:2:18"},"nodeType":"YulFunctionCall","src":"5542:30:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5532:6:18"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5222:5:18","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"5229:10:18","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"5241:8:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5254:6:18","type":""}],"src":"5185:393:18"},{"body":{"nodeType":"YulBlock","src":"5616:28:18","statements":[{"nodeType":"YulAssignment","src":"5626:12:18","value":{"name":"value","nodeType":"YulIdentifier","src":"5633:5:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5626:3:18"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5602:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5612:3:18","type":""}],"src":"5584:60:18"},{"body":{"nodeType":"YulBlock","src":"5710:82:18","statements":[{"nodeType":"YulAssignment","src":"5720:66:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5778:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5760:17:18"},"nodeType":"YulFunctionCall","src":"5760:24:18"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5751:8:18"},"nodeType":"YulFunctionCall","src":"5751:34:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5733:17:18"},"nodeType":"YulFunctionCall","src":"5733:53:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5720:9:18"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5690:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5700:9:18","type":""}],"src":"5650:142:18"},{"body":{"nodeType":"YulBlock","src":"5845:28:18","statements":[{"nodeType":"YulAssignment","src":"5855:12:18","value":{"name":"value","nodeType":"YulIdentifier","src":"5862:5:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5855:3:18"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5831:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5841:3:18","type":""}],"src":"5798:75:18"},{"body":{"nodeType":"YulBlock","src":"5955:193:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5965:63:18","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"6020:7:18"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5989:30:18"},"nodeType":"YulFunctionCall","src":"5989:39:18"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5969:16:18","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6044:4:18"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6084:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6078:5:18"},"nodeType":"YulFunctionCall","src":"6078:11:18"},{"name":"offset","nodeType":"YulIdentifier","src":"6091:6:18"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"6123:16:18"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"6099:23:18"},"nodeType":"YulFunctionCall","src":"6099:41:18"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"6050:27:18"},"nodeType":"YulFunctionCall","src":"6050:91:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6037:6:18"},"nodeType":"YulFunctionCall","src":"6037:105:18"},"nodeType":"YulExpressionStatement","src":"6037:105:18"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5932:4:18","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5938:6:18","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5946:7:18","type":""}],"src":"5879:269:18"},{"body":{"nodeType":"YulBlock","src":"6203:24:18","statements":[{"nodeType":"YulAssignment","src":"6213:8:18","value":{"kind":"number","nodeType":"YulLiteral","src":"6220:1:18","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6213:3:18"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6199:3:18","type":""}],"src":"6154:73:18"},{"body":{"nodeType":"YulBlock","src":"6286:136:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6296:46:18","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"6310:30:18"},"nodeType":"YulFunctionCall","src":"6310:32:18"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"6300:6:18","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6395:4:18"},{"name":"offset","nodeType":"YulIdentifier","src":"6401:6:18"},{"name":"zero_0","nodeType":"YulIdentifier","src":"6409:6:18"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6351:43:18"},"nodeType":"YulFunctionCall","src":"6351:65:18"},"nodeType":"YulExpressionStatement","src":"6351:65:18"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6272:4:18","type":""},{"name":"offset","nodeType":"YulTypedName","src":"6278:6:18","type":""}],"src":"6233:189:18"},{"body":{"nodeType":"YulBlock","src":"6478:136:18","statements":[{"body":{"nodeType":"YulBlock","src":"6545:63:18","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6589:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"6596:1:18","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"6559:29:18"},"nodeType":"YulFunctionCall","src":"6559:39:18"},"nodeType":"YulExpressionStatement","src":"6559:39:18"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6498:5:18"},{"name":"end","nodeType":"YulIdentifier","src":"6505:3:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6495:2:18"},"nodeType":"YulFunctionCall","src":"6495:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6510:26:18","statements":[{"nodeType":"YulAssignment","src":"6512:22:18","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6525:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"6532:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6521:3:18"},"nodeType":"YulFunctionCall","src":"6521:13:18"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"6512:5:18"}]}]},"pre":{"nodeType":"YulBlock","src":"6492:2:18","statements":[]},"src":"6488:120:18"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"6466:5:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"6473:3:18","type":""}],"src":"6428:186:18"},{"body":{"nodeType":"YulBlock","src":"6699:464:18","statements":[{"body":{"nodeType":"YulBlock","src":"6725:431:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6739:54:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6787:5:18"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6755:31:18"},"nodeType":"YulFunctionCall","src":"6755:38:18"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6743:8:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6806:63:18","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6829:8:18"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6857:10:18"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6839:17:18"},"nodeType":"YulFunctionCall","src":"6839:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6825:3:18"},"nodeType":"YulFunctionCall","src":"6825:44:18"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6810:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"7026:27:18","statements":[{"nodeType":"YulAssignment","src":"7028:23:18","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"7043:8:18"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7028:11:18"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"7010:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"7022:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7007:2:18"},"nodeType":"YulFunctionCall","src":"7007:18:18"},"nodeType":"YulIf","src":"7004:49:18"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7095:11:18"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"7112:8:18"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"7140:3:18"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"7122:17:18"},"nodeType":"YulFunctionCall","src":"7122:22:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7108:3:18"},"nodeType":"YulFunctionCall","src":"7108:37:18"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"7066:28:18"},"nodeType":"YulFunctionCall","src":"7066:80:18"},"nodeType":"YulExpressionStatement","src":"7066:80:18"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6716:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"6721:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6713:2:18"},"nodeType":"YulFunctionCall","src":"6713:11:18"},"nodeType":"YulIf","src":"6710:446:18"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6675:5:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"6682:3:18","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6687:10:18","type":""}],"src":"6620:543:18"},{"body":{"nodeType":"YulBlock","src":"7232:54:18","statements":[{"nodeType":"YulAssignment","src":"7242:37:18","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"7267:4:18"},{"name":"value","nodeType":"YulIdentifier","src":"7273:5:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7263:3:18"},"nodeType":"YulFunctionCall","src":"7263:16:18"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"7242:8:18"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"7207:4:18","type":""},{"name":"value","nodeType":"YulTypedName","src":"7213:5:18","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"7223:8:18","type":""}],"src":"7169:117:18"},{"body":{"nodeType":"YulBlock","src":"7343:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7353:68:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7402:1:18","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"7405:5:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7398:3:18"},"nodeType":"YulFunctionCall","src":"7398:13:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7417:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7413:3:18"},"nodeType":"YulFunctionCall","src":"7413:6:18"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"7369:28:18"},"nodeType":"YulFunctionCall","src":"7369:51:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7365:3:18"},"nodeType":"YulFunctionCall","src":"7365:56:18"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7357:4:18","type":""}]},{"nodeType":"YulAssignment","src":"7430:25:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7444:4:18"},{"name":"mask","nodeType":"YulIdentifier","src":"7450:4:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7440:3:18"},"nodeType":"YulFunctionCall","src":"7440:15:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7430:6:18"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7320:4:18","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"7326:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7336:6:18","type":""}],"src":"7292:169:18"},{"body":{"nodeType":"YulBlock","src":"7547:214:18","statements":[{"nodeType":"YulAssignment","src":"7680:37:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7707:4:18"},{"name":"len","nodeType":"YulIdentifier","src":"7713:3:18"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7688:18:18"},"nodeType":"YulFunctionCall","src":"7688:29:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7680:4:18"}]},{"nodeType":"YulAssignment","src":"7726:29:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7737:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7747:1:18","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7750:3:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7743:3:18"},"nodeType":"YulFunctionCall","src":"7743:11:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7734:2:18"},"nodeType":"YulFunctionCall","src":"7734:21:18"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7726:4:18"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7528:4:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"7534:3:18","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"7542:4:18","type":""}],"src":"7466:295:18"},{"body":{"nodeType":"YulBlock","src":"7858:1303:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7869:51:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7916:3:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7883:32:18"},"nodeType":"YulFunctionCall","src":"7883:37:18"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7873:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"8005:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8007:16:18"},"nodeType":"YulFunctionCall","src":"8007:18:18"},"nodeType":"YulExpressionStatement","src":"8007:18:18"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7977:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"7985:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7974:2:18"},"nodeType":"YulFunctionCall","src":"7974:30:18"},"nodeType":"YulIf","src":"7971:56:18"},{"nodeType":"YulVariableDeclaration","src":"8037:52:18","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8083:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8077:5:18"},"nodeType":"YulFunctionCall","src":"8077:11:18"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"8051:25:18"},"nodeType":"YulFunctionCall","src":"8051:38:18"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"8041:6:18","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8182:4:18"},{"name":"oldLen","nodeType":"YulIdentifier","src":"8188:6:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"8196:6:18"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"8136:45:18"},"nodeType":"YulFunctionCall","src":"8136:67:18"},"nodeType":"YulExpressionStatement","src":"8136:67:18"},{"nodeType":"YulVariableDeclaration","src":"8213:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8230:1:18","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"8217:9:18","type":""}]},{"nodeType":"YulAssignment","src":"8241:17:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8254:4:18","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8241:9:18"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"8305:611:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8319:37:18","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8338:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8350:4:18","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8346:3:18"},"nodeType":"YulFunctionCall","src":"8346:9:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8334:3:18"},"nodeType":"YulFunctionCall","src":"8334:22:18"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"8323:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8370:51:18","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8416:4:18"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8384:31:18"},"nodeType":"YulFunctionCall","src":"8384:37:18"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"8374:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8434:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8443:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8438:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"8502:163:18","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8527:6:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8545:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8550:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8541:3:18"},"nodeType":"YulFunctionCall","src":"8541:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8535:5:18"},"nodeType":"YulFunctionCall","src":"8535:26:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8520:6:18"},"nodeType":"YulFunctionCall","src":"8520:42:18"},"nodeType":"YulExpressionStatement","src":"8520:42:18"},{"nodeType":"YulAssignment","src":"8579:24:18","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8593:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8601:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8589:3:18"},"nodeType":"YulFunctionCall","src":"8589:14:18"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8579:6:18"}]},{"nodeType":"YulAssignment","src":"8620:31:18","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8637:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8648:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8633:3:18"},"nodeType":"YulFunctionCall","src":"8633:18:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8620:9:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8468:1:18"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"8471:7:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8465:2:18"},"nodeType":"YulFunctionCall","src":"8465:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8480:21:18","statements":[{"nodeType":"YulAssignment","src":"8482:17:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8491:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"8494:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8487:3:18"},"nodeType":"YulFunctionCall","src":"8487:12:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8482:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"8461:3:18","statements":[]},"src":"8457:208:18"},{"body":{"nodeType":"YulBlock","src":"8701:156:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8719:43:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8746:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8751:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8742:3:18"},"nodeType":"YulFunctionCall","src":"8742:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8736:5:18"},"nodeType":"YulFunctionCall","src":"8736:26:18"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8723:9:18","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8786:6:18"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8813:9:18"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8828:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8836:4:18","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8824:3:18"},"nodeType":"YulFunctionCall","src":"8824:17:18"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8794:18:18"},"nodeType":"YulFunctionCall","src":"8794:48:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8779:6:18"},"nodeType":"YulFunctionCall","src":"8779:64:18"},"nodeType":"YulExpressionStatement","src":"8779:64:18"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8684:7:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"8693:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8681:2:18"},"nodeType":"YulFunctionCall","src":"8681:19:18"},"nodeType":"YulIf","src":"8678:179:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8877:4:18"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8891:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8899:1:18","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8887:3:18"},"nodeType":"YulFunctionCall","src":"8887:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"8903:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8883:3:18"},"nodeType":"YulFunctionCall","src":"8883:22:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8870:6:18"},"nodeType":"YulFunctionCall","src":"8870:36:18"},"nodeType":"YulExpressionStatement","src":"8870:36:18"}]},"nodeType":"YulCase","src":"8298:618:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8303:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8933:222:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8947:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8960:1:18","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8951:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"8984:67:18","statements":[{"nodeType":"YulAssignment","src":"9002:35:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9021:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9026:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9017:3:18"},"nodeType":"YulFunctionCall","src":"9017:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9011:5:18"},"nodeType":"YulFunctionCall","src":"9011:26:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9002:5:18"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8977:6:18"},"nodeType":"YulIf","src":"8974:77:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9071:4:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9130:5:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"9137:6:18"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"9077:52:18"},"nodeType":"YulFunctionCall","src":"9077:67:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9064:6:18"},"nodeType":"YulFunctionCall","src":"9064:81:18"},"nodeType":"YulExpressionStatement","src":"9064:81:18"}]},"nodeType":"YulCase","src":"8925:230:18","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8278:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8286:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8275:2:18"},"nodeType":"YulFunctionCall","src":"8275:14:18"},"nodeType":"YulSwitch","src":"8268:887:18"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7847:4:18","type":""},{"name":"src","nodeType":"YulTypedName","src":"7853:3:18","type":""}],"src":"7766:1395:18"},{"body":{"nodeType":"YulBlock","src":"9212:81:18","statements":[{"nodeType":"YulAssignment","src":"9222:65:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9237:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"9244:42:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9233:3:18"},"nodeType":"YulFunctionCall","src":"9233:54:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9222:7:18"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9194:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9204:7:18","type":""}],"src":"9167:126:18"},{"body":{"nodeType":"YulBlock","src":"9344:51:18","statements":[{"nodeType":"YulAssignment","src":"9354:35:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9383:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"9365:17:18"},"nodeType":"YulFunctionCall","src":"9365:24:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9354:7:18"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9326:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9336:7:18","type":""}],"src":"9299:96:18"},{"body":{"nodeType":"YulBlock","src":"9466:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9483:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9506:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9488:17:18"},"nodeType":"YulFunctionCall","src":"9488:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9476:6:18"},"nodeType":"YulFunctionCall","src":"9476:37:18"},"nodeType":"YulExpressionStatement","src":"9476:37:18"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9454:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9461:3:18","type":""}],"src":"9401:118:18"},{"body":{"nodeType":"YulBlock","src":"9623:124:18","statements":[{"nodeType":"YulAssignment","src":"9633:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9645:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9656:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9641:3:18"},"nodeType":"YulFunctionCall","src":"9641:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9633:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9713:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9726:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9737:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9722:3:18"},"nodeType":"YulFunctionCall","src":"9722:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9669:43:18"},"nodeType":"YulFunctionCall","src":"9669:71:18"},"nodeType":"YulExpressionStatement","src":"9669:71:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9595:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9607:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9618:4:18","type":""}],"src":"9525:222:18"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620043693803806200436983398181016040528101906200003791906200039b565b33848481600090816200004b91906200068c565b5080600190816200005d91906200068c565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000d55760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000cc9190620007b8565b60405180910390fd5b620000e6816200010760201b60201c565b508160088190555080600a81905550600160078190555050505050620007d5565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200023682620001eb565b810181811067ffffffffffffffff82111715620002585762000257620001fc565b5b80604052505050565b60006200026d620001cd565b90506200027b82826200022b565b919050565b600067ffffffffffffffff8211156200029e576200029d620001fc565b5b620002a982620001eb565b9050602081019050919050565b60005b83811015620002d6578082015181840152602081019050620002b9565b60008484015250505050565b6000620002f9620002f38462000280565b62000261565b905082815260208101848484011115620003185762000317620001e6565b5b62000325848285620002b6565b509392505050565b600082601f830112620003455762000344620001e1565b5b815162000357848260208601620002e2565b91505092915050565b6000819050919050565b620003758162000360565b81146200038157600080fd5b50565b60008151905062000395816200036a565b92915050565b60008060008060808587031215620003b857620003b7620001d7565b5b600085015167ffffffffffffffff811115620003d957620003d8620001dc565b5b620003e7878288016200032d565b945050602085015167ffffffffffffffff8111156200040b576200040a620001dc565b5b62000419878288016200032d565b93505060406200042c8782880162000384565b92505060606200043f8782880162000384565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200049e57607f821691505b602082108103620004b457620004b362000456565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200051e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004df565b6200052a8683620004df565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200056d62000567620005618462000360565b62000542565b62000360565b9050919050565b6000819050919050565b62000589836200054c565b620005a1620005988262000574565b848454620004ec565b825550505050565b600090565b620005b8620005a9565b620005c58184846200057e565b505050565b5b81811015620005ed57620005e1600082620005ae565b600181019050620005cb565b5050565b601f8211156200063c576200060681620004ba565b6200061184620004cf565b8101602085101562000621578190505b620006396200063085620004cf565b830182620005ca565b50505b505050565b600082821c905092915050565b6000620006616000198460080262000641565b1980831691505092915050565b60006200067c83836200064e565b9150826002028217905092915050565b62000697826200044b565b67ffffffffffffffff811115620006b357620006b2620001fc565b5b620006bf825462000485565b620006cc828285620005f1565b600060209050601f831160018114620007045760008415620006ef578287015190505b620006fb85826200066e565b8655506200076b565b601f1984166200071486620004ba565b60005b828110156200073e5784890151825560018201915060208501945060208101905062000717565b868310156200075e57848901516200075a601f8916826200064e565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007a08262000773565b9050919050565b620007b28162000793565b82525050565b6000602082019050620007cf6000830184620007a7565b92915050565b613b8480620007e56000396000f3fe6080604052600436106101c25760003560e01c8063715018a6116100f7578063bcea0fec11610095578063e985e9c511610064578063e985e9c514610643578063f2fde38b14610680578063f74d5480146106a9578063f78f647c146106d4576101c2565b8063bcea0fec14610575578063c87b56dd1461059e578063dd46edb8146105db578063e00dd16114610618576101c2565b8063a22cb465116100d1578063a22cb465146104cd578063a4f4f8af146104f6578063b7ec208614610521578063b88d4fde1461054c576101c2565b8063715018a6146104605780638da5cb5b1461047757806395d89b41146104a2576101c2565b80632db115441161016457806355f804b31161013e57806355f804b31461039457806356a1c701146103bd5780636352211e146103e657806370a0823114610423576101c2565b80632db115441461032657806342842e0e1461034257806351cff8d91461036b576101c2565b8063095ea7b3116101a0578063095ea7b31461026c5780631a02b69e1461029557806323b872dd146102d257806326a74d8e146102fb576101c2565b806301ffc9a7146101c757806306fdde0314610204578063081812fc1461022f575b600080fd5b3480156101d357600080fd5b506101ee60048036038101906101e991906127d5565b6106fd565b6040516101fb919061281d565b60405180910390f35b34801561021057600080fd5b506102196107df565b60405161022691906128c8565b60405180910390f35b34801561023b57600080fd5b5061025660048036038101906102519190612920565b610871565b604051610263919061298e565b60405180910390f35b34801561027857600080fd5b50610293600480360381019061028e91906129d5565b61088d565b005b3480156102a157600080fd5b506102bc60048036038101906102b79190612a15565b6108a3565b6040516102c9919061281d565b60405180910390f35b3480156102de57600080fd5b506102f960048036038101906102f49190612a42565b6108c3565b005b34801561030757600080fd5b506103106109c5565b60405161031d9190612aa4565b60405180910390f35b610340600480360381019061033b9190612920565b6109cb565b005b34801561034e57600080fd5b5061036960048036038101906103649190612a42565b610b8e565b005b34801561037757600080fd5b50610392600480360381019061038d9190612afd565b610bae565b005b3480156103a057600080fd5b506103bb60048036038101906103b69190612c5f565b610cb8565b005b3480156103c957600080fd5b506103e460048036038101906103df9190612a15565b610cd3565b005b3480156103f257600080fd5b5061040d60048036038101906104089190612920565b610d1f565b60405161041a919061298e565b60405180910390f35b34801561042f57600080fd5b5061044a60048036038101906104459190612a15565b610d31565b6040516104579190612aa4565b60405180910390f35b34801561046c57600080fd5b50610475610deb565b005b34801561048357600080fd5b5061048c610dff565b604051610499919061298e565b60405180910390f35b3480156104ae57600080fd5b506104b7610e29565b6040516104c491906128c8565b60405180910390f35b3480156104d957600080fd5b506104f460048036038101906104ef9190612cd4565b610ebb565b005b34801561050257600080fd5b5061050b610ed1565b6040516105189190612aa4565b60405180910390f35b34801561052d57600080fd5b50610536610ed7565b6040516105439190612aa4565b60405180910390f35b34801561055857600080fd5b50610573600480360381019061056e9190612db5565b610edd565b005b34801561058157600080fd5b5061059c60048036038101906105979190612e98565b610f02565b005b3480156105aa57600080fd5b506105c560048036038101906105c09190612920565b611234565b6040516105d291906128c8565b60405180910390f35b3480156105e757600080fd5b5061060260048036038101906105fd9190612920565b611364565b60405161060f9190612f01565b60405180910390f35b34801561062457600080fd5b5061062d611384565b60405161063a9190612aa4565b60405180910390f35b34801561064f57600080fd5b5061066a60048036038101906106659190612f1c565b61138a565b604051610677919061281d565b60405180910390f35b34801561068c57600080fd5b506106a760048036038101906106a29190612a15565b61141e565b005b3480156106b557600080fd5b506106be6114a4565b6040516106cb919061298e565b60405180910390f35b3480156106e057600080fd5b506106fb60048036038101906106f69190612f88565b6114ca565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806107c857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806107d857506107d7826116a9565b5b9050919050565b6060600080546107ee90612ff7565b80601f016020809104026020016040519081016040528092919081815260200182805461081a90612ff7565b80156108675780601f1061083c57610100808354040283529160200191610867565b820191906000526020600020905b81548152906001019060200180831161084a57829003601f168201915b5050505050905090565b600061087c82611713565b506108868261179b565b9050919050565b61089f828261089a6117d8565b6117e0565b5050565b600c6020528060005260406000206000915054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109355760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161092c919061298e565b60405180910390fd5b600061094983836109446117d8565b6117f2565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109bf578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016109b693929190613028565b60405180910390fd5b50505050565b60085481565b6000811180156109dc5750600a8111155b610a1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a12906130ab565b60405180910390fd5b60085481600954610a2c91906130fa565b1115610a6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a649061317a565b60405180910390fd5b80600a54610a7b919061319a565b3414610abc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab390613228565b60405180910390fd5b60005b81811015610b7157600060076000815480929190610adc90613248565b919050559050610aec3382611a0c565b6000600d600083815260200190815260200160002060006101000a81548160ff021916908360ff160217905550803373ffffffffffffffffffffffffffffffffffffffff167f748a2986091c2034d6e93b6f44f771a79f0e1d6acd8a60c68c17d4e1e2feaed260405160405180910390a3508080610b6990613248565b915050610abf565b508060096000828254610b8491906130fa565b9250508190555050565b610ba983838360405180602001604052806000815250610edd565b505050565b610bb6611a2a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1c906132dc565b60405180910390fd5b600047905060008111610c6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6490613348565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610cb3573d6000803e3d6000fd5b505050565b610cc0611a2a565b80600e9081610ccf9190613514565b5050565b610cdb611a2a565b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610d2a82611713565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610da45760006040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610d9b919061298e565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610df3611a2a565b610dfd6000611ab1565b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610e3890612ff7565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6490612ff7565b8015610eb15780601f10610e8657610100808354040283529160200191610eb1565b820191906000526020600020905b815481529060010190602001808311610e9457829003601f168201915b5050505050905090565b610ecd610ec66117d8565b8383611b77565b5050565b60095481565b600a5481565b610ee88484846108c3565b610efc610ef36117d8565b85858585611ce6565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610f93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8a90613632565b60405180910390fd5b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611020576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110179061369e565b60405180910390fd5b600030463360405160200161103793929190613727565b604051602081830303815290604052805190602001209050600061105a82611e97565b905060006110ac8286868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611ecd565b9050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461113e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611135906137b0565b60405180910390fd5b6001600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600760008154809291906111ab90613248565b9190505590506111bb3382611a0c565b6000600d600083815260200190815260200160002060006101000a81548160ff021916908360ff160217905550803373ffffffffffffffffffffffffffffffffffffffff167fe9a10c23ea49d40011e019f115185f0bc29740208a504d35f951dca74ba37eac60405160405180910390a3505050505050565b606061123f82611713565b50600061124a611ef9565b90506000600d600085815260200190815260200160002060009054906101000a900460ff16905060006040518060400160405280600c81526020017f6e65757472616c2e6a736f6e0000000000000000000000000000000000000000815250905060018260ff16036112f3576040518060400160405280600a81526020017f616e67656c2e6a736f6e000000000000000000000000000000000000000000008152509050611338565b60028260ff1603611337576040518060400160405280600a81526020017f646576696c2e6a736f6e0000000000000000000000000000000000000000000081525090505b5b828160405160200161134b92919061380c565b6040516020818303038152906040529350505050919050565b600d6020528060005260406000206000915054906101000a900460ff1681565b60075481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611426611a2a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114985760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161148f919061298e565b60405180910390fd5b6114a181611ab1565b50565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018160ff1614806114df575060028160ff16145b61151e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115159061387c565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1661153e83610d1f565b73ffffffffffffffffffffffffffffffffffffffff1614611594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158b906138e8565b60405180910390fd5b6000600d600084815260200190815260200160002060009054906101000a900460ff1660ff16146115fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f19061397a565b60405180910390fd5b61160382611f8b565b60006007600081548092919061161890613248565b9190505590506116283382611a0c565b81600d600083815260200190815260200160002060006101000a81548160ff021916908360ff16021790555080833373ffffffffffffffffffffffffffffffffffffffff167f598067bc48ef38b7785eda047c375b2d45f2b845404b58dcdfccf40e7f38d8698560405161169c9190612f01565b60405180910390a4505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008061171f83612011565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361179257826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117899190612aa4565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b6117ed838383600161204e565b505050565b6000806117fe84612011565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146118405761183f818486612213565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146118d15761188260008560008061204e565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611954576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b611a268282604051806020016040528060008152506122d7565b5050565b611a326117d8565b73ffffffffffffffffffffffffffffffffffffffff16611a50610dff565b73ffffffffffffffffffffffffffffffffffffffff1614611aaf57611a736117d8565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611aa6919061298e565b60405180910390fd5b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611be857816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401611bdf919061298e565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611cd9919061281d565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611e90578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401611d4594939291906139ef565b6020604051808303816000875af1925050508015611d8157506040513d601f19601f82011682018060405250810190611d7e9190613a50565b60015b611e05573d8060008114611db1576040519150601f19603f3d011682016040523d82523d6000602084013e611db6565b606091505b506000815103611dfd57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611df4919061298e565b60405180910390fd5b805160208201fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611e8e57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611e85919061298e565b60405180910390fd5b505b5050505050565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b600080600080611edd86866122fb565b925092509250611eed8282612357565b82935050505092915050565b6060600e8054611f0890612ff7565b80601f0160208091040260200160405190810160405280929190818152602001828054611f3490612ff7565b8015611f815780601f10611f5657610100808354040283529160200191611f81565b820191906000526020600020905b815481529060010190602001808311611f6457829003601f168201915b5050505050905090565b6000611f9a60008360006117f2565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361200d57816040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016120049190612aa4565b60405180910390fd5b5050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806120875750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156121bb57600061209784611713565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561210257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156121155750612113818461138a565b155b1561215757826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161214e919061298e565b60405180910390fd5b81156121b957838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61221e8383836124bb565b6122d257600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361229357806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161228a9190612aa4565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016122c9929190613a7d565b60405180910390fd5b505050565b6122e1838361257c565b6122f66122ec6117d8565b6000858585611ce6565b505050565b600080600060418451036123405760008060006020870151925060408701519150606087015160001a905061233288828585612675565b955095509550505050612350565b60006002855160001b9250925092505b9250925092565b6000600381111561236b5761236a613aa6565b5b82600381111561237e5761237d613aa6565b5b03156124b7576001600381111561239857612397613aa6565b5b8260038111156123ab576123aa613aa6565b5b036123e2576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156123f6576123f5613aa6565b5b82600381111561240957612408613aa6565b5b0361244e578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016124459190612aa4565b60405180910390fd5b60038081111561246157612460613aa6565b5b82600381111561247457612473613aa6565b5b036124b657806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016124ad9190613aee565b60405180910390fd5b5b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561257357508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806125345750612533848461138a565b5b8061257257508273ffffffffffffffffffffffffffffffffffffffff1661255a8361179b565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036125ee5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016125e5919061298e565b60405180910390fd5b60006125fc838360006117f2565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146126705760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401612667919061298e565b60405180910390fd5b505050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156126b557600060038592509250925061275f565b6000600188888888604051600081526020016040526040516126da9493929190613b09565b6020604051602081039080840390855afa1580156126fc573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361275057600060016000801b9350935093505061275f565b8060008060001b935093509350505b9450945094915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6127b28161277d565b81146127bd57600080fd5b50565b6000813590506127cf816127a9565b92915050565b6000602082840312156127eb576127ea612773565b5b60006127f9848285016127c0565b91505092915050565b60008115159050919050565b61281781612802565b82525050565b6000602082019050612832600083018461280e565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612872578082015181840152602081019050612857565b60008484015250505050565b6000601f19601f8301169050919050565b600061289a82612838565b6128a48185612843565b93506128b4818560208601612854565b6128bd8161287e565b840191505092915050565b600060208201905081810360008301526128e2818461288f565b905092915050565b6000819050919050565b6128fd816128ea565b811461290857600080fd5b50565b60008135905061291a816128f4565b92915050565b60006020828403121561293657612935612773565b5b60006129448482850161290b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006129788261294d565b9050919050565b6129888161296d565b82525050565b60006020820190506129a3600083018461297f565b92915050565b6129b28161296d565b81146129bd57600080fd5b50565b6000813590506129cf816129a9565b92915050565b600080604083850312156129ec576129eb612773565b5b60006129fa858286016129c0565b9250506020612a0b8582860161290b565b9150509250929050565b600060208284031215612a2b57612a2a612773565b5b6000612a39848285016129c0565b91505092915050565b600080600060608486031215612a5b57612a5a612773565b5b6000612a69868287016129c0565b9350506020612a7a868287016129c0565b9250506040612a8b8682870161290b565b9150509250925092565b612a9e816128ea565b82525050565b6000602082019050612ab96000830184612a95565b92915050565b6000612aca8261294d565b9050919050565b612ada81612abf565b8114612ae557600080fd5b50565b600081359050612af781612ad1565b92915050565b600060208284031215612b1357612b12612773565b5b6000612b2184828501612ae8565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612b6c8261287e565b810181811067ffffffffffffffff82111715612b8b57612b8a612b34565b5b80604052505050565b6000612b9e612769565b9050612baa8282612b63565b919050565b600067ffffffffffffffff821115612bca57612bc9612b34565b5b612bd38261287e565b9050602081019050919050565b82818337600083830152505050565b6000612c02612bfd84612baf565b612b94565b905082815260208101848484011115612c1e57612c1d612b2f565b5b612c29848285612be0565b509392505050565b600082601f830112612c4657612c45612b2a565b5b8135612c56848260208601612bef565b91505092915050565b600060208284031215612c7557612c74612773565b5b600082013567ffffffffffffffff811115612c9357612c92612778565b5b612c9f84828501612c31565b91505092915050565b612cb181612802565b8114612cbc57600080fd5b50565b600081359050612cce81612ca8565b92915050565b60008060408385031215612ceb57612cea612773565b5b6000612cf9858286016129c0565b9250506020612d0a85828601612cbf565b9150509250929050565b600067ffffffffffffffff821115612d2f57612d2e612b34565b5b612d388261287e565b9050602081019050919050565b6000612d58612d5384612d14565b612b94565b905082815260208101848484011115612d7457612d73612b2f565b5b612d7f848285612be0565b509392505050565b600082601f830112612d9c57612d9b612b2a565b5b8135612dac848260208601612d45565b91505092915050565b60008060008060808587031215612dcf57612dce612773565b5b6000612ddd878288016129c0565b9450506020612dee878288016129c0565b9350506040612dff8782880161290b565b925050606085013567ffffffffffffffff811115612e2057612e1f612778565b5b612e2c87828801612d87565b91505092959194509250565b600080fd5b600080fd5b60008083601f840112612e5857612e57612b2a565b5b8235905067ffffffffffffffff811115612e7557612e74612e38565b5b602083019150836001820283011115612e9157612e90612e3d565b5b9250929050565b60008060208385031215612eaf57612eae612773565b5b600083013567ffffffffffffffff811115612ecd57612ecc612778565b5b612ed985828601612e42565b92509250509250929050565b600060ff82169050919050565b612efb81612ee5565b82525050565b6000602082019050612f166000830184612ef2565b92915050565b60008060408385031215612f3357612f32612773565b5b6000612f41858286016129c0565b9250506020612f52858286016129c0565b9150509250929050565b612f6581612ee5565b8114612f7057600080fd5b50565b600081359050612f8281612f5c565b92915050565b60008060408385031215612f9f57612f9e612773565b5b6000612fad8582860161290b565b9250506020612fbe85828601612f73565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061300f57607f821691505b60208210810361302257613021612fc8565b5b50919050565b600060608201905061303d600083018661297f565b61304a6020830185612a95565b613057604083018461297f565b949350505050565b7f696e76616c696420717479000000000000000000000000000000000000000000600082015250565b6000613095600b83612843565b91506130a08261305f565b602082019050919050565b600060208201905081810360008301526130c481613088565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613105826128ea565b9150613110836128ea565b9250828201905080821115613128576131276130cb565b5b92915050565b7f7075626c696320736f6c64206f75740000000000000000000000000000000000600082015250565b6000613164600f83612843565b915061316f8261312e565b602082019050919050565b6000602082019050818103600083015261319381613157565b9050919050565b60006131a5826128ea565b91506131b0836128ea565b92508282026131be816128ea565b915082820484148315176131d5576131d46130cb565b5b5092915050565b7f696e636f7272656374207061796d656e74000000000000000000000000000000600082015250565b6000613212601183612843565b915061321d826131dc565b602082019050919050565b6000602082019050818103600083015261324181613205565b9050919050565b6000613253826128ea565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613285576132846130cb565b5b600182019050919050565b7f696e76616c696420616464726573730000000000000000000000000000000000600082015250565b60006132c6600f83612843565b91506132d182613290565b602082019050919050565b600060208201905081810360008301526132f5816132b9565b9050919050565b7f6e6f2066756e6473000000000000000000000000000000000000000000000000600082015250565b6000613332600883612843565b915061333d826132fc565b602082019050919050565b6000602082019050818103600083015261336181613325565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026133ca7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261338d565b6133d4868361338d565b95508019841693508086168417925050509392505050565b6000819050919050565b600061341161340c613407846128ea565b6133ec565b6128ea565b9050919050565b6000819050919050565b61342b836133f6565b61343f61343782613418565b84845461339a565b825550505050565b600090565b613454613447565b61345f818484613422565b505050565b5b818110156134835761347860008261344c565b600181019050613465565b5050565b601f8211156134c85761349981613368565b6134a28461337d565b810160208510156134b1578190505b6134c56134bd8561337d565b830182613464565b50505b505050565b600082821c905092915050565b60006134eb600019846008026134cd565b1980831691505092915050565b600061350483836134da565b9150826002028217905092915050565b61351d82612838565b67ffffffffffffffff81111561353657613535612b34565b5b6135408254612ff7565b61354b828285613487565b600060209050601f83116001811461357e576000841561356c578287015190505b61357685826134f8565b8655506135de565b601f19841661358c86613368565b60005b828110156135b45784890151825560018201915060208501945060208101905061358f565b868310156135d157848901516135cd601f8916826134da565b8355505b6001600288020188555050505b505050505050565b7f74727573746564207369676e6572206e6f742073657400000000000000000000600082015250565b600061361c601683612843565b9150613627826135e6565b602082019050919050565b6000602082019050818103600083015261364b8161360f565b9050919050565b7f616c726561647920636c61696d6564206f6e2d636861696e0000000000000000600082015250565b6000613688601883612843565b915061369382613652565b602082019050919050565b600060208201905081810360008301526136b78161367b565b9050919050565b60008160601b9050919050565b60006136d6826136be565b9050919050565b60006136e8826136cb565b9050919050565b6137006136fb8261296d565b6136dd565b82525050565b6000819050919050565b61372161371c826128ea565b613706565b82525050565b600061373382866136ef565b6014820191506137438285613710565b60208201915061375382846136ef565b601482019150819050949350505050565b7f696e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b600061379a601183612843565b91506137a582613764565b602082019050919050565b600060208201905081810360008301526137c98161378d565b9050919050565b600081905092915050565b60006137e682612838565b6137f081856137d0565b9350613800818560208601612854565b80840191505092915050565b600061381882856137db565b915061382482846137db565b91508190509392505050565b7f696e76616c69642076617269616e740000000000000000000000000000000000600082015250565b6000613866600f83612843565b915061387182613830565b602082019050919050565b6000602082019050818103600083015261389581613859565b9050919050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006138d2600983612843565b91506138dd8261389c565b602082019050919050565b60006020820190508181036000830152613901816138c5565b9050919050565b7f6f6e6c79206e65757472616c20746f6b656e732063616e206265207472616e7360008201527f666f726d65640000000000000000000000000000000000000000000000000000602082015250565b6000613964602683612843565b915061396f82613908565b604082019050919050565b6000602082019050818103600083015261399381613957565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006139c18261399a565b6139cb81856139a5565b93506139db818560208601612854565b6139e48161287e565b840191505092915050565b6000608082019050613a04600083018761297f565b613a11602083018661297f565b613a1e6040830185612a95565b8181036060830152613a3081846139b6565b905095945050505050565b600081519050613a4a816127a9565b92915050565b600060208284031215613a6657613a65612773565b5b6000613a7484828501613a3b565b91505092915050565b6000604082019050613a92600083018561297f565b613a9f6020830184612a95565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000819050919050565b613ae881613ad5565b82525050565b6000602082019050613b036000830184613adf565b92915050565b6000608082019050613b1e6000830187613adf565b613b2b6020830186612ef2565b613b386040830185613adf565b613b456060830184613adf565b9594505050505056fea2646970667358221220010b4afe7d5218fc83b2dae60f9b5fe21de5c1618621f0a253dfc39b9a9eee8f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4369 CODESIZE SUB DUP1 PUSH3 0x4369 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x39B JUMP JUMPDEST CALLER DUP5 DUP5 DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x4B SWAP2 SWAP1 PUSH3 0x68C JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5D SWAP2 SWAP1 PUSH3 0x68C JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xD5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xCC SWAP2 SWAP1 PUSH3 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xE6 DUP2 PUSH3 0x107 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x7D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x236 DUP3 PUSH3 0x1EB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x258 JUMPI PUSH3 0x257 PUSH3 0x1FC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x26D PUSH3 0x1CD JUMP JUMPDEST SWAP1 POP PUSH3 0x27B DUP3 DUP3 PUSH3 0x22B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x29E JUMPI PUSH3 0x29D PUSH3 0x1FC JUMP JUMPDEST JUMPDEST PUSH3 0x2A9 DUP3 PUSH3 0x1EB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2D6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2B9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2F9 PUSH3 0x2F3 DUP5 PUSH3 0x280 JUMP JUMPDEST PUSH3 0x261 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x318 JUMPI PUSH3 0x317 PUSH3 0x1E6 JUMP JUMPDEST JUMPDEST PUSH3 0x325 DUP5 DUP3 DUP6 PUSH3 0x2B6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x345 JUMPI PUSH3 0x344 PUSH3 0x1E1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x357 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x2E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x375 DUP2 PUSH3 0x360 JUMP JUMPDEST DUP2 EQ PUSH3 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x395 DUP2 PUSH3 0x36A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x3B8 JUMPI PUSH3 0x3B7 PUSH3 0x1D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3D9 JUMPI PUSH3 0x3D8 PUSH3 0x1DC JUMP JUMPDEST JUMPDEST PUSH3 0x3E7 DUP8 DUP3 DUP9 ADD PUSH3 0x32D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x40B JUMPI PUSH3 0x40A PUSH3 0x1DC JUMP JUMPDEST JUMPDEST PUSH3 0x419 DUP8 DUP3 DUP9 ADD PUSH3 0x32D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x42C DUP8 DUP3 DUP9 ADD PUSH3 0x384 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x43F DUP8 DUP3 DUP9 ADD PUSH3 0x384 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x49E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4B4 JUMPI PUSH3 0x4B3 PUSH3 0x456 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x51E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4DF JUMP JUMPDEST PUSH3 0x52A DUP7 DUP4 PUSH3 0x4DF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x56D PUSH3 0x567 PUSH3 0x561 DUP5 PUSH3 0x360 JUMP JUMPDEST PUSH3 0x542 JUMP JUMPDEST PUSH3 0x360 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x589 DUP4 PUSH3 0x54C JUMP JUMPDEST PUSH3 0x5A1 PUSH3 0x598 DUP3 PUSH3 0x574 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4EC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5B8 PUSH3 0x5A9 JUMP JUMPDEST PUSH3 0x5C5 DUP2 DUP5 DUP5 PUSH3 0x57E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5ED JUMPI PUSH3 0x5E1 PUSH1 0x0 DUP3 PUSH3 0x5AE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5CB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x63C JUMPI PUSH3 0x606 DUP2 PUSH3 0x4BA JUMP JUMPDEST PUSH3 0x611 DUP5 PUSH3 0x4CF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x621 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x639 PUSH3 0x630 DUP6 PUSH3 0x4CF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5CA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x661 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x641 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x67C DUP4 DUP4 PUSH3 0x64E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x697 DUP3 PUSH3 0x44B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6B3 JUMPI PUSH3 0x6B2 PUSH3 0x1FC JUMP JUMPDEST JUMPDEST PUSH3 0x6BF DUP3 SLOAD PUSH3 0x485 JUMP JUMPDEST PUSH3 0x6CC DUP3 DUP3 DUP6 PUSH3 0x5F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x704 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x6EF JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6FB DUP6 DUP3 PUSH3 0x66E JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x76B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x714 DUP7 PUSH3 0x4BA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x73E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x717 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x75E JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x75A PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x64E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7A0 DUP3 PUSH3 0x773 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7B2 DUP2 PUSH3 0x793 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x7CF PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x7A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B84 DUP1 PUSH3 0x7E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xBCEA0FEC GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x680 JUMPI DUP1 PUSH4 0xF74D5480 EQ PUSH2 0x6A9 JUMPI DUP1 PUSH4 0xF78F647C EQ PUSH2 0x6D4 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xBCEA0FEC EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xDD46EDB8 EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0xE00DD161 EQ PUSH2 0x618 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xA22CB465 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xA4F4F8AF EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0xB7EC2086 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x54C JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A2 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x2DB11544 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x55F804B3 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x56A1C701 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x423 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x2DB11544 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x36B JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x1A02B69E EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x26A74D8E EQ PUSH2 0x2FB JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x22F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x219 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x2920 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x29D5 JUMP JUMPDEST PUSH2 0x88D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x2A15 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x2A42 JUMP JUMPDEST PUSH2 0x8C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x2920 JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x2A42 JUMP JUMPDEST PUSH2 0xB8E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x2AFD JUMP JUMPDEST PUSH2 0xBAE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x2C5F JUMP JUMPDEST PUSH2 0xCB8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x2A15 JUMP JUMPDEST PUSH2 0xCD3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x2920 JUMP JUMPDEST PUSH2 0xD1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x2A15 JUMP JUMPDEST PUSH2 0xD31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH2 0xDEB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48C PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B7 PUSH2 0xE29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0xEBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50B PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x536 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x573 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x2DB5 JUMP JUMPDEST PUSH2 0xEDD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH2 0xF02 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x2920 JUMP JUMPDEST PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x602 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x2920 JUMP JUMPDEST PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x2F01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62D PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x2F1C JUMP JUMPDEST PUSH2 0x138A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A2 SWAP2 SWAP1 PUSH2 0x2A15 JUMP JUMPDEST PUSH2 0x141E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BE PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0x2F88 JUMP JUMPDEST PUSH2 0x14CA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x7C8 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x7D8 JUMPI POP PUSH2 0x7D7 DUP3 PUSH2 0x16A9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x7EE SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x81A SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x867 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x83C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x867 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x84A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87C DUP3 PUSH2 0x1713 JUMP JUMPDEST POP PUSH2 0x886 DUP3 PUSH2 0x179B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x89F DUP3 DUP3 PUSH2 0x89A PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0x17E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x935 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x949 DUP4 DUP4 PUSH2 0x944 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0x17F2 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9BF JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x9DC JUMPI POP PUSH1 0xA DUP2 GT ISZERO JUMPDEST PUSH2 0xA1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA12 SWAP1 PUSH2 0x30AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH1 0x9 SLOAD PUSH2 0xA2C SWAP2 SWAP1 PUSH2 0x30FA JUMP JUMPDEST GT ISZERO PUSH2 0xA6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA64 SWAP1 PUSH2 0x317A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA SLOAD PUSH2 0xA7B SWAP2 SWAP1 PUSH2 0x319A JUMP JUMPDEST CALLVALUE EQ PUSH2 0xABC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB3 SWAP1 PUSH2 0x3228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB71 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xADC SWAP1 PUSH2 0x3248 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0xAEC CALLER DUP3 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x748A2986091C2034D6E93B6F44F771A79F0E1D6ACD8A60C68C17D4E1E2FEAED2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP1 DUP1 PUSH2 0xB69 SWAP1 PUSH2 0x3248 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xABF JUMP JUMPDEST POP DUP1 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB84 SWAP2 SWAP1 PUSH2 0x30FA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xBA9 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xEDD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBB6 PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1C SWAP1 PUSH2 0x32DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xC6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC64 SWAP1 PUSH2 0x3348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xCC0 PUSH2 0x1A2A JUMP JUMPDEST DUP1 PUSH1 0xE SWAP1 DUP2 PUSH2 0xCCF SWAP2 SWAP1 PUSH2 0x3514 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCDB PUSH2 0x1A2A JUMP JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2A DUP3 PUSH2 0x1713 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9B SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF3 PUSH2 0x1A2A JUMP JUMPDEST PUSH2 0xDFD PUSH1 0x0 PUSH2 0x1AB1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xE38 SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE64 SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEB1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE86 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEB1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE94 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xECD PUSH2 0xEC6 PUSH2 0x17D8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1B77 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0xEE8 DUP5 DUP5 DUP5 PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0xEFC PUSH2 0xEF3 PUSH2 0x17D8 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8A SWAP1 PUSH2 0x3632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1020 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1017 SWAP1 PUSH2 0x369E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ADDRESS CHAINID CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1037 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x105A DUP3 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10AC DUP3 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x1ECD JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x113E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1135 SWAP1 PUSH2 0x37B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x11AB SWAP1 PUSH2 0x3248 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x11BB CALLER DUP3 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE9A10C23EA49D40011E019F115185F0BC29740208A504D35F951DCA74BA37EAC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x123F DUP3 PUSH2 0x1713 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x124A PUSH2 0x1EF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E65757472616C2E6A736F6E0000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x1 DUP3 PUSH1 0xFF AND SUB PUSH2 0x12F3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x616E67656C2E6A736F6E00000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1338 JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0xFF AND SUB PUSH2 0x1337 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646576696C2E6A736F6E00000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST JUMPDEST DUP3 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x134B SWAP3 SWAP2 SWAP1 PUSH2 0x380C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1426 PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1498 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148F SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14A1 DUP2 PUSH2 0x1AB1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xFF AND EQ DUP1 PUSH2 0x14DF JUMPI POP PUSH1 0x2 DUP2 PUSH1 0xFF AND EQ JUMPDEST PUSH2 0x151E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1515 SWAP1 PUSH2 0x387C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x153E DUP4 PUSH2 0xD1F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1594 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x158B SWAP1 PUSH2 0x38E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x15FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F1 SWAP1 PUSH2 0x397A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1603 DUP3 PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1618 SWAP1 PUSH2 0x3248 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x1628 CALLER DUP3 PUSH2 0x1A0C JUMP JUMPDEST DUP2 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x598067BC48EF38B7785EDA047C375B2D45F2B845404B58DCDFCCF40E7F38D869 DUP6 PUSH1 0x40 MLOAD PUSH2 0x169C SWAP2 SWAP1 PUSH2 0x2F01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x171F DUP4 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1792 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1789 SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x17ED DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x204E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x17FE DUP5 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1840 JUMPI PUSH2 0x183F DUP2 DUP5 DUP7 PUSH2 0x2213 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18D1 JUMPI PUSH2 0x1882 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1954 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A26 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x22D7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1A32 PUSH2 0x17D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A50 PUSH2 0xDFF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AAF JUMPI PUSH2 0x1A73 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA6 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BE8 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDF SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CD9 SWAP2 SWAP1 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1E90 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D45 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1D81 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D7E SWAP2 SWAP1 PUSH2 0x3A50 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1E05 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DB1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1DFD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DF4 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1E8E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E85 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1EDD DUP7 DUP7 PUSH2 0x22FB JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1EED DUP3 DUP3 PUSH2 0x2357 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE DUP1 SLOAD PUSH2 0x1F08 SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F34 SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F81 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F56 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F81 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F64 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9A PUSH1 0x0 DUP4 PUSH1 0x0 PUSH2 0x17F2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x200D JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2004 SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2087 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x21BB JUMPI PUSH1 0x0 PUSH2 0x2097 DUP5 PUSH2 0x1713 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2102 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2115 JUMPI POP PUSH2 0x2113 DUP2 DUP5 PUSH2 0x138A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2157 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214E SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x21B9 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x221E DUP4 DUP4 DUP4 PUSH2 0x24BB JUMP JUMPDEST PUSH2 0x22D2 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2293 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x228A SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C9 SWAP3 SWAP2 SWAP1 PUSH2 0x3A7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x22E1 DUP4 DUP4 PUSH2 0x257C JUMP JUMPDEST PUSH2 0x22F6 PUSH2 0x22EC PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x2340 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x2332 DUP9 DUP3 DUP6 DUP6 PUSH2 0x2675 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x236B JUMPI PUSH2 0x236A PUSH2 0x3AA6 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x237E JUMPI PUSH2 0x237D PUSH2 0x3AA6 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x24B7 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2398 JUMPI PUSH2 0x2397 PUSH2 0x3AA6 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23AB JUMPI PUSH2 0x23AA PUSH2 0x3AA6 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x23E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23F6 JUMPI PUSH2 0x23F5 PUSH2 0x3AA6 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2409 JUMPI PUSH2 0x2408 PUSH2 0x3AA6 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x244E JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2445 SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2461 JUMPI PUSH2 0x2460 PUSH2 0x3AA6 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2474 JUMPI PUSH2 0x2473 PUSH2 0x3AA6 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x24B6 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24AD SWAP2 SWAP1 PUSH2 0x3AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2573 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2534 JUMPI POP PUSH2 0x2533 DUP5 DUP5 PUSH2 0x138A JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2572 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x255A DUP4 PUSH2 0x179B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x25EE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25E5 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25FC DUP4 DUP4 PUSH1 0x0 PUSH2 0x17F2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2670 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2667 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x26B5 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x275F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x26DA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B09 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2750 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x275F JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27B2 DUP2 PUSH2 0x277D JUMP JUMPDEST DUP2 EQ PUSH2 0x27BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27CF DUP2 PUSH2 0x27A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27EB JUMPI PUSH2 0x27EA PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27F9 DUP5 DUP3 DUP6 ADD PUSH2 0x27C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2817 DUP2 PUSH2 0x2802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2832 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x280E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2872 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2857 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289A DUP3 PUSH2 0x2838 JUMP JUMPDEST PUSH2 0x28A4 DUP2 DUP6 PUSH2 0x2843 JUMP JUMPDEST SWAP4 POP PUSH2 0x28B4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2854 JUMP JUMPDEST PUSH2 0x28BD DUP2 PUSH2 0x287E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28E2 DUP2 DUP5 PUSH2 0x288F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28FD DUP2 PUSH2 0x28EA JUMP JUMPDEST DUP2 EQ PUSH2 0x2908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x291A DUP2 PUSH2 0x28F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2936 JUMPI PUSH2 0x2935 PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2944 DUP5 DUP3 DUP6 ADD PUSH2 0x290B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2978 DUP3 PUSH2 0x294D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2988 DUP2 PUSH2 0x296D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x297F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29B2 DUP2 PUSH2 0x296D JUMP JUMPDEST DUP2 EQ PUSH2 0x29BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29CF DUP2 PUSH2 0x29A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29EC JUMPI PUSH2 0x29EB PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29FA DUP6 DUP3 DUP7 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A0B DUP6 DUP3 DUP7 ADD PUSH2 0x290B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A2B JUMPI PUSH2 0x2A2A PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A39 DUP5 DUP3 DUP6 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A5B JUMPI PUSH2 0x2A5A PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A69 DUP7 DUP3 DUP8 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2A7A DUP7 DUP3 DUP8 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2A8B DUP7 DUP3 DUP8 ADD PUSH2 0x290B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2A9E DUP2 PUSH2 0x28EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AB9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ACA DUP3 PUSH2 0x294D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2ADA DUP2 PUSH2 0x2ABF JUMP JUMPDEST DUP2 EQ PUSH2 0x2AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AF7 DUP2 PUSH2 0x2AD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B13 JUMPI PUSH2 0x2B12 PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B21 DUP5 DUP3 DUP6 ADD PUSH2 0x2AE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2B6C DUP3 PUSH2 0x287E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B8B JUMPI PUSH2 0x2B8A PUSH2 0x2B34 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B9E PUSH2 0x2769 JUMP JUMPDEST SWAP1 POP PUSH2 0x2BAA DUP3 DUP3 PUSH2 0x2B63 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BCA JUMPI PUSH2 0x2BC9 PUSH2 0x2B34 JUMP JUMPDEST JUMPDEST PUSH2 0x2BD3 DUP3 PUSH2 0x287E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C02 PUSH2 0x2BFD DUP5 PUSH2 0x2BAF JUMP JUMPDEST PUSH2 0x2B94 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2C1E JUMPI PUSH2 0x2C1D PUSH2 0x2B2F JUMP JUMPDEST JUMPDEST PUSH2 0x2C29 DUP5 DUP3 DUP6 PUSH2 0x2BE0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C46 JUMPI PUSH2 0x2C45 PUSH2 0x2B2A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C56 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2BEF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C75 JUMPI PUSH2 0x2C74 PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C93 JUMPI PUSH2 0x2C92 PUSH2 0x2778 JUMP JUMPDEST JUMPDEST PUSH2 0x2C9F DUP5 DUP3 DUP6 ADD PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CB1 DUP2 PUSH2 0x2802 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CCE DUP2 PUSH2 0x2CA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CEB JUMPI PUSH2 0x2CEA PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CF9 DUP6 DUP3 DUP7 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D0A DUP6 DUP3 DUP7 ADD PUSH2 0x2CBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2D2F JUMPI PUSH2 0x2D2E PUSH2 0x2B34 JUMP JUMPDEST JUMPDEST PUSH2 0x2D38 DUP3 PUSH2 0x287E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D58 PUSH2 0x2D53 DUP5 PUSH2 0x2D14 JUMP JUMPDEST PUSH2 0x2B94 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2D74 JUMPI PUSH2 0x2D73 PUSH2 0x2B2F JUMP JUMPDEST JUMPDEST PUSH2 0x2D7F DUP5 DUP3 DUP6 PUSH2 0x2BE0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D9C JUMPI PUSH2 0x2D9B PUSH2 0x2B2A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2DAC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2D45 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2DCF JUMPI PUSH2 0x2DCE PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DDD DUP8 DUP3 DUP9 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2DEE DUP8 DUP3 DUP9 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2DFF DUP8 DUP3 DUP9 ADD PUSH2 0x290B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E20 JUMPI PUSH2 0x2E1F PUSH2 0x2778 JUMP JUMPDEST JUMPDEST PUSH2 0x2E2C DUP8 DUP3 DUP9 ADD PUSH2 0x2D87 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2E58 JUMPI PUSH2 0x2E57 PUSH2 0x2B2A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E75 JUMPI PUSH2 0x2E74 PUSH2 0x2E38 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2E91 JUMPI PUSH2 0x2E90 PUSH2 0x2E3D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EAF JUMPI PUSH2 0x2EAE PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2ECD JUMPI PUSH2 0x2ECC PUSH2 0x2778 JUMP JUMPDEST JUMPDEST PUSH2 0x2ED9 DUP6 DUP3 DUP7 ADD PUSH2 0x2E42 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EFB DUP2 PUSH2 0x2EE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F16 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F33 JUMPI PUSH2 0x2F32 PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F41 DUP6 DUP3 DUP7 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F52 DUP6 DUP3 DUP7 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F65 DUP2 PUSH2 0x2EE5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F82 DUP2 PUSH2 0x2F5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F9F JUMPI PUSH2 0x2F9E PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FAD DUP6 DUP3 DUP7 ADD PUSH2 0x290B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2FBE DUP6 DUP3 DUP7 ADD PUSH2 0x2F73 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x300F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3022 JUMPI PUSH2 0x3021 PUSH2 0x2FC8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x303D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x297F JUMP JUMPDEST PUSH2 0x304A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2A95 JUMP JUMPDEST PUSH2 0x3057 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x297F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C696420717479000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3095 PUSH1 0xB DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x30A0 DUP3 PUSH2 0x305F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30C4 DUP2 PUSH2 0x3088 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3105 DUP3 PUSH2 0x28EA JUMP JUMPDEST SWAP2 POP PUSH2 0x3110 DUP4 PUSH2 0x28EA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3128 JUMPI PUSH2 0x3127 PUSH2 0x30CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7075626C696320736F6C64206F75740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3164 PUSH1 0xF DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x316F DUP3 PUSH2 0x312E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3193 DUP2 PUSH2 0x3157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31A5 DUP3 PUSH2 0x28EA JUMP JUMPDEST SWAP2 POP PUSH2 0x31B0 DUP4 PUSH2 0x28EA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x31BE DUP2 PUSH2 0x28EA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x31D5 JUMPI PUSH2 0x31D4 PUSH2 0x30CB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E636F7272656374207061796D656E74000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3212 PUSH1 0x11 DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x321D DUP3 PUSH2 0x31DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3241 DUP2 PUSH2 0x3205 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3253 DUP3 PUSH2 0x28EA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3285 JUMPI PUSH2 0x3284 PUSH2 0x30CB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C6 PUSH1 0xF DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x32D1 DUP3 PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32F5 DUP2 PUSH2 0x32B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F2066756E6473000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3332 PUSH1 0x8 DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x333D DUP3 PUSH2 0x32FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3361 DUP2 PUSH2 0x3325 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x33CA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x338D JUMP JUMPDEST PUSH2 0x33D4 DUP7 DUP4 PUSH2 0x338D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3411 PUSH2 0x340C PUSH2 0x3407 DUP5 PUSH2 0x28EA JUMP JUMPDEST PUSH2 0x33EC JUMP JUMPDEST PUSH2 0x28EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x342B DUP4 PUSH2 0x33F6 JUMP JUMPDEST PUSH2 0x343F PUSH2 0x3437 DUP3 PUSH2 0x3418 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x339A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3454 PUSH2 0x3447 JUMP JUMPDEST PUSH2 0x345F DUP2 DUP5 DUP5 PUSH2 0x3422 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3483 JUMPI PUSH2 0x3478 PUSH1 0x0 DUP3 PUSH2 0x344C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3465 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x34C8 JUMPI PUSH2 0x3499 DUP2 PUSH2 0x3368 JUMP JUMPDEST PUSH2 0x34A2 DUP5 PUSH2 0x337D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x34B1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x34C5 PUSH2 0x34BD DUP6 PUSH2 0x337D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3464 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34EB PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x34CD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3504 DUP4 DUP4 PUSH2 0x34DA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x351D DUP3 PUSH2 0x2838 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3536 JUMPI PUSH2 0x3535 PUSH2 0x2B34 JUMP JUMPDEST JUMPDEST PUSH2 0x3540 DUP3 SLOAD PUSH2 0x2FF7 JUMP JUMPDEST PUSH2 0x354B DUP3 DUP3 DUP6 PUSH2 0x3487 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x357E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x356C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3576 DUP6 DUP3 PUSH2 0x34F8 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x35DE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x358C DUP7 PUSH2 0x3368 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x35B4 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x358F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x35D1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x35CD PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x34DA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x74727573746564207369676E6572206E6F742073657400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x361C PUSH1 0x16 DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x3627 DUP3 PUSH2 0x35E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x364B DUP2 PUSH2 0x360F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C726561647920636C61696D6564206F6E2D636861696E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3688 PUSH1 0x18 DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x3693 DUP3 PUSH2 0x3652 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36B7 DUP2 PUSH2 0x367B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D6 DUP3 PUSH2 0x36BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36E8 DUP3 PUSH2 0x36CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3700 PUSH2 0x36FB DUP3 PUSH2 0x296D JUMP JUMPDEST PUSH2 0x36DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3721 PUSH2 0x371C DUP3 PUSH2 0x28EA JUMP JUMPDEST PUSH2 0x3706 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3733 DUP3 DUP7 PUSH2 0x36EF JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x3743 DUP3 DUP6 PUSH2 0x3710 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x3753 DUP3 DUP5 PUSH2 0x36EF JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x379A PUSH1 0x11 DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x37A5 DUP3 PUSH2 0x3764 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37C9 DUP2 PUSH2 0x378D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E6 DUP3 PUSH2 0x2838 JUMP JUMPDEST PUSH2 0x37F0 DUP2 DUP6 PUSH2 0x37D0 JUMP JUMPDEST SWAP4 POP PUSH2 0x3800 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2854 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3818 DUP3 DUP6 PUSH2 0x37DB JUMP JUMPDEST SWAP2 POP PUSH2 0x3824 DUP3 DUP5 PUSH2 0x37DB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C69642076617269616E740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3866 PUSH1 0xF DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x3871 DUP3 PUSH2 0x3830 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3895 DUP2 PUSH2 0x3859 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38D2 PUSH1 0x9 DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x38DD DUP3 PUSH2 0x389C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3901 DUP2 PUSH2 0x38C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6F6E6C79206E65757472616C20746F6B656E732063616E206265207472616E73 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x666F726D65640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3964 PUSH1 0x26 DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x396F DUP3 PUSH2 0x3908 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3993 DUP2 PUSH2 0x3957 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C1 DUP3 PUSH2 0x399A JUMP JUMPDEST PUSH2 0x39CB DUP2 DUP6 PUSH2 0x39A5 JUMP JUMPDEST SWAP4 POP PUSH2 0x39DB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2854 JUMP JUMPDEST PUSH2 0x39E4 DUP2 PUSH2 0x287E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3A04 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x297F JUMP JUMPDEST PUSH2 0x3A11 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x297F JUMP JUMPDEST PUSH2 0x3A1E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2A95 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3A30 DUP2 DUP5 PUSH2 0x39B6 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3A4A DUP2 PUSH2 0x27A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A66 JUMPI PUSH2 0x3A65 PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A74 DUP5 DUP3 DUP6 ADD PUSH2 0x3A3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A92 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x297F JUMP JUMPDEST PUSH2 0x3A9F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2A95 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AE8 DUP2 PUSH2 0x3AD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B03 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3ADF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3B1E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3ADF JUMP JUMPDEST PUSH2 0x3B2B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0x3B38 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3ADF JUMP JUMPDEST PUSH2 0x3B45 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3ADF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD SIGNEXTEND 0x4A INVALID PUSH30 0x5218FC83B2DAE60F9B5FE21DE5C1618621F0A253DFC39B9A9EEE8F64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"307:4551:17:-:0;;;1077:310;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1247:10;1223:5;1230:7;1454:5:2;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1287:16:17::2;1269:15;:34;;;;1324:9;1313:8;:20;;;;1355:1;1343:9;:13;;;;1077:310:::0;;;;307:4551;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:75:18:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:77::-;2714:7;2743:5;2732:16;;2677:77;;;:::o;2760:122::-;2833:24;2851:5;2833:24;:::i;:::-;2826:5;2823:35;2813:63;;2872:1;2869;2862:12;2813:63;2760:122;:::o;2888:143::-;2945:5;2976:6;2970:13;2961:22;;2992:33;3019:5;2992:33;:::i;:::-;2888:143;;;;:::o;3037:1166::-;3154:6;3162;3170;3178;3227:3;3215:9;3206:7;3202:23;3198:33;3195:120;;;3234:79;;:::i;:::-;3195:120;3375:1;3364:9;3360:17;3354:24;3405:18;3397:6;3394:30;3391:117;;;3427:79;;:::i;:::-;3391:117;3532:74;3598:7;3589:6;3578:9;3574:22;3532:74;:::i;:::-;3522:84;;3325:291;3676:2;3665:9;3661:18;3655:25;3707:18;3699:6;3696:30;3693:117;;;3729:79;;:::i;:::-;3693:117;3834:74;3900:7;3891:6;3880:9;3876:22;3834:74;:::i;:::-;3824:84;;3626:292;3957:2;3983:64;4039:7;4030:6;4019:9;4015:22;3983:64;:::i;:::-;3973:74;;3928:129;4096:2;4122:64;4178:7;4169:6;4158:9;4154:22;4122:64;:::i;:::-;4112:74;;4067:129;3037:1166;;;;;;;:::o;4209:99::-;4261:6;4295:5;4289:12;4279:22;;4209:99;;;:::o;4314:180::-;4362:77;4359:1;4352:88;4459:4;4456:1;4449:15;4483:4;4480:1;4473:15;4500:320;4544:6;4581:1;4575:4;4571:12;4561:22;;4628:1;4622:4;4618:12;4649:18;4639:81;;4705:4;4697:6;4693:17;4683:27;;4639:81;4767:2;4759:6;4756:14;4736:18;4733:38;4730:84;;4786:18;;:::i;:::-;4730:84;4551:269;4500:320;;;:::o;4826:141::-;4875:4;4898:3;4890:11;;4921:3;4918:1;4911:14;4955:4;4952:1;4942:18;4934:26;;4826:141;;;:::o;4973:93::-;5010:6;5057:2;5052;5045:5;5041:14;5037:23;5027:33;;4973:93;;;:::o;5072:107::-;5116:8;5166:5;5160:4;5156:16;5135:37;;5072:107;;;;:::o;5185:393::-;5254:6;5304:1;5292:10;5288:18;5327:97;5357:66;5346:9;5327:97;:::i;:::-;5445:39;5475:8;5464:9;5445:39;:::i;:::-;5433:51;;5517:4;5513:9;5506:5;5502:21;5493:30;;5566:4;5556:8;5552:19;5545:5;5542:30;5532:40;;5261:317;;5185:393;;;;;:::o;5584:60::-;5612:3;5633:5;5626:12;;5584:60;;;:::o;5650:142::-;5700:9;5733:53;5751:34;5760:24;5778:5;5760:24;:::i;:::-;5751:34;:::i;:::-;5733:53;:::i;:::-;5720:66;;5650:142;;;:::o;5798:75::-;5841:3;5862:5;5855:12;;5798:75;;;:::o;5879:269::-;5989:39;6020:7;5989:39;:::i;:::-;6050:91;6099:41;6123:16;6099:41;:::i;:::-;6091:6;6084:4;6078:11;6050:91;:::i;:::-;6044:4;6037:105;5955:193;5879:269;;;:::o;6154:73::-;6199:3;6154:73;:::o;6233:189::-;6310:32;;:::i;:::-;6351:65;6409:6;6401;6395:4;6351:65;:::i;:::-;6286:136;6233:189;;:::o;6428:186::-;6488:120;6505:3;6498:5;6495:14;6488:120;;;6559:39;6596:1;6589:5;6559:39;:::i;:::-;6532:1;6525:5;6521:13;6512:22;;6488:120;;;6428:186;;:::o;6620:543::-;6721:2;6716:3;6713:11;6710:446;;;6755:38;6787:5;6755:38;:::i;:::-;6839:29;6857:10;6839:29;:::i;:::-;6829:8;6825:44;7022:2;7010:10;7007:18;7004:49;;;7043:8;7028:23;;7004:49;7066:80;7122:22;7140:3;7122:22;:::i;:::-;7112:8;7108:37;7095:11;7066:80;:::i;:::-;6725:431;;6710:446;6620:543;;;:::o;7169:117::-;7223:8;7273:5;7267:4;7263:16;7242:37;;7169:117;;;;:::o;7292:169::-;7336:6;7369:51;7417:1;7413:6;7405:5;7402:1;7398:13;7369:51;:::i;:::-;7365:56;7450:4;7444;7440:15;7430:25;;7343:118;7292:169;;;;:::o;7466:295::-;7542:4;7688:29;7713:3;7707:4;7688:29;:::i;:::-;7680:37;;7750:3;7747:1;7743:11;7737:4;7734:21;7726:29;;7466:295;;;;:::o;7766:1395::-;7883:37;7916:3;7883:37;:::i;:::-;7985:18;7977:6;7974:30;7971:56;;;8007:18;;:::i;:::-;7971:56;8051:38;8083:4;8077:11;8051:38;:::i;:::-;8136:67;8196:6;8188;8182:4;8136:67;:::i;:::-;8230:1;8254:4;8241:17;;8286:2;8278:6;8275:14;8303:1;8298:618;;;;8960:1;8977:6;8974:77;;;9026:9;9021:3;9017:19;9011:26;9002:35;;8974:77;9077:67;9137:6;9130:5;9077:67;:::i;:::-;9071:4;9064:81;8933:222;8268:887;;8298:618;8350:4;8346:9;8338:6;8334:22;8384:37;8416:4;8384:37;:::i;:::-;8443:1;8457:208;8471:7;8468:1;8465:14;8457:208;;;8550:9;8545:3;8541:19;8535:26;8527:6;8520:42;8601:1;8593:6;8589:14;8579:24;;8648:2;8637:9;8633:18;8620:31;;8494:4;8491:1;8487:12;8482:17;;8457:208;;;8693:6;8684:7;8681:19;8678:179;;;8751:9;8746:3;8742:19;8736:26;8794:48;8836:4;8828:6;8824:17;8813:9;8794:48;:::i;:::-;8786:6;8779:64;8701:156;8678:179;8903:1;8899;8891:6;8887:14;8883:22;8877:4;8870:36;8305:611;;;8268:887;;7858:1303;;;7766:1395;;:::o;9167:126::-;9204:7;9244:42;9237:5;9233:54;9222:65;;9167:126;;;:::o;9299:96::-;9336:7;9365:24;9383:5;9365:24;:::i;:::-;9354:35;;9299:96;;;:::o;9401:118::-;9488:24;9506:5;9488:24;:::i;:::-;9483:3;9476:37;9401:118;;:::o;9525:222::-;9618:4;9656:2;9645:9;9641:18;9633:26;;9669:71;9737:1;9726:9;9722:17;9713:6;9669:71;:::i;:::-;9525:222;;;;:::o;307:4551:17:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1108":{"entryPoint":6112,"id":1108,"parameterSlots":3,"returnSlots":0},"@_approve_1174":{"entryPoint":8270,"id":1174,"parameterSlots":4,"returnSlots":0},"@_baseURI_7082":{"entryPoint":7929,"id":7082,"parameterSlots":0,"returnSlots":1},"@_burn_982":{"entryPoint":8075,"id":982,"parameterSlots":1,"returnSlots":0},"@_checkAuthorized_748":{"entryPoint":8723,"id":748,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":6698,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_675":{"entryPoint":6043,"id":675,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_711":{"entryPoint":9403,"id":711,"parameterSlots":3,"returnSlots":1},"@_mint_904":{"entryPoint":9596,"id":904,"parameterSlots":2,"returnSlots":0},"@_msgSender_1493":{"entryPoint":6104,"id":1493,"parameterSlots":0,"returnSlots":1},"@_ownerOf_662":{"entryPoint":8209,"id":662,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1240":{"entryPoint":5907,"id":1240,"parameterSlots":1,"returnSlots":1},"@_safeMint_919":{"entryPoint":6668,"id":919,"parameterSlots":2,"returnSlots":0},"@_safeMint_949":{"entryPoint":8919,"id":949,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_1211":{"entryPoint":7031,"id":1211,"parameterSlots":3,"returnSlots":0},"@_throwError_3312":{"entryPoint":9047,"id":3312,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":6833,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_854":{"entryPoint":6130,"id":854,"parameterSlots":3,"returnSlots":1},"@approve_505":{"entryPoint":2189,"id":505,"parameterSlots":2,"returnSlots":0},"@balanceOf_413":{"entryPoint":3377,"id":413,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_1480":{"entryPoint":7398,"id":1480,"parameterSlots":5,"returnSlots":0},"@claimForSubscriber_7305":{"entryPoint":3842,"id":7305,"parameterSlots":2,"returnSlots":0},"@currentId_6977":{"entryPoint":4996,"id":6977,"parameterSlots":0,"returnSlots":0},"@getApproved_522":{"entryPoint":2161,"id":522,"parameterSlots":1,"returnSlots":1},"@hasClaimedOnChain_6989":{"entryPoint":2211,"id":6989,"parameterSlots":0,"returnSlots":0},"@isApprovedForAll_555":{"entryPoint":5002,"id":555,"parameterSlots":2,"returnSlots":1},"@maxPublicSupply_6979":{"entryPoint":2501,"id":6979,"parameterSlots":0,"returnSlots":0},"@name_435":{"entryPoint":2015,"id":435,"parameterSlots":0,"returnSlots":1},"@ownerOf_426":{"entryPoint":3359,"id":426,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":3583,"id":67,"parameterSlots":0,"returnSlots":1},"@priceWei_6983":{"entryPoint":3799,"id":6983,"parameterSlots":0,"returnSlots":0},"@publicMint_7212":{"entryPoint":2507,"id":7212,"parameterSlots":1,"returnSlots":0},"@publicMinted_6981":{"entryPoint":3793,"id":6981,"parameterSlots":0,"returnSlots":0},"@recover_3069":{"entryPoint":7885,"id":3069,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":3563,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_619":{"entryPoint":2958,"id":619,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_649":{"entryPoint":3805,"id":649,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_538":{"entryPoint":3771,"id":538,"parameterSlots":2,"returnSlots":0},"@setBaseURI_7073":{"entryPoint":3256,"id":7073,"parameterSlots":1,"returnSlots":0},"@setTrustedSigner_7061":{"entryPoint":3283,"id":7061,"parameterSlots":1,"returnSlots":0},"@supportsInterface_3422":{"entryPoint":5801,"id":3422,"parameterSlots":1,"returnSlots":1},"@supportsInterface_385":{"entryPoint":1789,"id":385,"parameterSlots":1,"returnSlots":1},"@symbol_444":{"entryPoint":3625,"id":444,"parameterSlots":0,"returnSlots":1},"@toEthSignedMessageHash_3328":{"entryPoint":7831,"id":3328,"parameterSlots":1,"returnSlots":1},"@tokenURI_7137":{"entryPoint":4660,"id":7137,"parameterSlots":1,"returnSlots":1},"@tokenVariant_6993":{"entryPoint":4964,"id":6993,"parameterSlots":0,"returnSlots":0},"@transferFrom_601":{"entryPoint":2243,"id":601,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":5150,"id":126,"parameterSlots":1,"returnSlots":0},"@transform_7372":{"entryPoint":5322,"id":7372,"parameterSlots":2,"returnSlots":0},"@trustedSigner_6985":{"entryPoint":5284,"id":6985,"parameterSlots":0,"returnSlots":0},"@tryRecover_3039":{"entryPoint":8955,"id":3039,"parameterSlots":2,"returnSlots":3},"@tryRecover_3227":{"entryPoint":9845,"id":3227,"parameterSlots":4,"returnSlots":3},"@withdraw_7411":{"entryPoint":2990,"id":7411,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":11589,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":11247,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":10688,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":10984,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":11455,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":10176,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":14907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":11842,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":11655,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":11313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":10507,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":12147,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10773,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":11005,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":12060,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":10818,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":11701,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":11476,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10709,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":10197,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":14928,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":11928,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":11359,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":10528,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint8":{"entryPoint":12168,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":10623,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":14063,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":10254,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":15071,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":14774,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":10383,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14299,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877_to_t_string_memory_ptr_fromStack":{"entryPoint":12805,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack":{"entryPoint":14221,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662_to_t_string_memory_ptr_fromStack":{"entryPoint":14425,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3a9e59314a78d25b237b9f5f22b78aeb6280107de0a7d9b9b3d2d4f880e56b06_to_t_string_memory_ptr_fromStack":{"entryPoint":12424,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920_to_t_string_memory_ptr_fromStack":{"entryPoint":13093,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225_to_t_string_memory_ptr_fromStack":{"entryPoint":12985,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1_to_t_string_memory_ptr_fromStack":{"entryPoint":13839,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3_to_t_string_memory_ptr_fromStack":{"entryPoint":13947,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277_to_t_string_memory_ptr_fromStack":{"entryPoint":14679,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d_to_t_string_memory_ptr_fromStack":{"entryPoint":12631,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack":{"entryPoint":14533,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":10901,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":14096,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":12018,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":14119,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":14348,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10638,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":14831,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":14973,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":12328,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":10269,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":15086,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":15113,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10440,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12840,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14256,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14460,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3a9e59314a78d25b237b9f5f22b78aeb6280107de0a7d9b9b3d2d4f880e56b06__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12459,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13128,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13020,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13874,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13982,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14714,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12666,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14568,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":10916,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":12033,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":11156,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":10089,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":11540,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":11183,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":13160,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":14746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":10296,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":14757,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":10307,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14288,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12538,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":12698,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":13447,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":10605,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":10943,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":10242,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":15061,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":10109,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":10573,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":10474,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":12005,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":13412,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":13302,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":13588,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":11232,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":10324,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":13181,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":12279,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":13560,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":11107,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":13292,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":12872,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":14045,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":14027,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":14086,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":13530,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":12491,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":15014,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":12232,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":11060,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":13336,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":11832,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":11050,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":11837,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":11055,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":10104,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":10099,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10366,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":14014,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":13197,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":13517,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":13388,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877":{"entryPoint":12764,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a":{"entryPoint":14180,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662":{"entryPoint":14384,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3a9e59314a78d25b237b9f5f22b78aeb6280107de0a7d9b9b3d2d4f880e56b06":{"entryPoint":12383,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920":{"entryPoint":13052,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225":{"entryPoint":12944,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1":{"entryPoint":13798,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3":{"entryPoint":13906,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277":{"entryPoint":14600,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d":{"entryPoint":12590,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e":{"entryPoint":14492,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":13210,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":13346,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10665,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":10961,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":11432,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":10153,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":10484,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":12124,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":13383,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:37990:18","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:18","statements":[{"nodeType":"YulAssignment","src":"57:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:18"},"nodeType":"YulFunctionCall","src":"67:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:18","type":""}],"src":"7:75:18"},{"body":{"nodeType":"YulBlock","src":"177:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:18"},"nodeType":"YulFunctionCall","src":"187:12:18"},"nodeType":"YulExpressionStatement","src":"187:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:18"},{"body":{"nodeType":"YulBlock","src":"300:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:18"},"nodeType":"YulFunctionCall","src":"310:12:18"},"nodeType":"YulExpressionStatement","src":"310:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:18"},{"body":{"nodeType":"YulBlock","src":"378:105:18","statements":[{"nodeType":"YulAssignment","src":"388:89:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:18","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:18"},"nodeType":"YulFunctionCall","src":"399:78:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:18"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:18","type":""}],"src":"334:149:18"},{"body":{"nodeType":"YulBlock","src":"531:78:18","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:18"},"nodeType":"YulFunctionCall","src":"589:12:18"},"nodeType":"YulExpressionStatement","src":"589:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:18"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:18"},"nodeType":"YulFunctionCall","src":"561:23:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:18"},"nodeType":"YulFunctionCall","src":"551:34:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:18"},"nodeType":"YulFunctionCall","src":"544:42:18"},"nodeType":"YulIf","src":"541:62:18"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:18","type":""}],"src":"489:120:18"},{"body":{"nodeType":"YulBlock","src":"666:86:18","statements":[{"nodeType":"YulAssignment","src":"676:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:18"},"nodeType":"YulFunctionCall","src":"685:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:18"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:18"},"nodeType":"YulFunctionCall","src":"714:32:18"},"nodeType":"YulExpressionStatement","src":"714:32:18"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:18","type":""}],"src":"615:137:18"},{"body":{"nodeType":"YulBlock","src":"823:262:18","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:18"},"nodeType":"YulFunctionCall","src":"871:79:18"},"nodeType":"YulExpressionStatement","src":"871:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:18"},"nodeType":"YulFunctionCall","src":"840:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:18"},"nodeType":"YulFunctionCall","src":"836:32:18"},"nodeType":"YulIf","src":"833:119:18"},{"nodeType":"YulBlock","src":"962:116:18","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:18","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:18"},"nodeType":"YulFunctionCall","src":"1036:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:18"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:18"},"nodeType":"YulFunctionCall","src":"1016:52:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:18"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:18","type":""}],"src":"758:327:18"},{"body":{"nodeType":"YulBlock","src":"1133:48:18","statements":[{"nodeType":"YulAssignment","src":"1143:32:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:18"},"nodeType":"YulFunctionCall","src":"1161:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:18"},"nodeType":"YulFunctionCall","src":"1154:21:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:18"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:18","type":""}],"src":"1091:90:18"},{"body":{"nodeType":"YulBlock","src":"1246:50:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:18"},"nodeType":"YulFunctionCall","src":"1268:21:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:18"},"nodeType":"YulFunctionCall","src":"1256:34:18"},"nodeType":"YulExpressionStatement","src":"1256:34:18"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:18","type":""}],"src":"1187:109:18"},{"body":{"nodeType":"YulBlock","src":"1394:118:18","statements":[{"nodeType":"YulAssignment","src":"1404:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:18"},"nodeType":"YulFunctionCall","src":"1412:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:18"},"nodeType":"YulFunctionCall","src":"1487:17:18"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:18"},"nodeType":"YulFunctionCall","src":"1440:65:18"},"nodeType":"YulExpressionStatement","src":"1440:65:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:18","type":""}],"src":"1302:210:18"},{"body":{"nodeType":"YulBlock","src":"1577:40:18","statements":[{"nodeType":"YulAssignment","src":"1588:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:18"},"nodeType":"YulFunctionCall","src":"1598:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:18"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:18","type":""}],"src":"1518:99:18"},{"body":{"nodeType":"YulBlock","src":"1719:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:18"},"nodeType":"YulFunctionCall","src":"1729:19:18"},"nodeType":"YulExpressionStatement","src":"1729:19:18"},{"nodeType":"YulAssignment","src":"1757:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:18"},"nodeType":"YulFunctionCall","src":"1772:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:18","type":""}],"src":"1623:169:18"},{"body":{"nodeType":"YulBlock","src":"1860:184:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:18"},"nodeType":"YulFunctionCall","src":"1960:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:18"},"nodeType":"YulFunctionCall","src":"1979:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:18"},"nodeType":"YulFunctionCall","src":"1973:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:18"},"nodeType":"YulFunctionCall","src":"1953:39:18"},"nodeType":"YulExpressionStatement","src":"1953:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:18"},"nodeType":"YulFunctionCall","src":"1897:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:18","statements":[{"nodeType":"YulAssignment","src":"1913:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:18"},"nodeType":"YulFunctionCall","src":"1918:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:18","statements":[]},"src":"1889:113:18"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:18"},"nodeType":"YulFunctionCall","src":"2018:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:18"},"nodeType":"YulFunctionCall","src":"2011:27:18"},"nodeType":"YulExpressionStatement","src":"2011:27:18"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:18","type":""}],"src":"1798:246:18"},{"body":{"nodeType":"YulBlock","src":"2098:54:18","statements":[{"nodeType":"YulAssignment","src":"2108:38:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:18"},"nodeType":"YulFunctionCall","src":"2122:14:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:18"},"nodeType":"YulFunctionCall","src":"2138:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:18"},"nodeType":"YulFunctionCall","src":"2118:28:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:18"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:18","type":""}],"src":"2050:102:18"},{"body":{"nodeType":"YulBlock","src":"2250:285:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:18"},"nodeType":"YulFunctionCall","src":"2274:39:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:18"},"nodeType":"YulFunctionCall","src":"2329:71:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:18"},"nodeType":"YulFunctionCall","src":"2444:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:18"},"nodeType":"YulFunctionCall","src":"2409:65:18"},"nodeType":"YulExpressionStatement","src":"2409:65:18"},{"nodeType":"YulAssignment","src":"2483:46:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:18"},"nodeType":"YulFunctionCall","src":"2499:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:18"},"nodeType":"YulFunctionCall","src":"2490:39:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:18"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:18","type":""}],"src":"2158:377:18"},{"body":{"nodeType":"YulBlock","src":"2659:195:18","statements":[{"nodeType":"YulAssignment","src":"2669:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:18"},"nodeType":"YulFunctionCall","src":"2677:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:18"},"nodeType":"YulFunctionCall","src":"2712:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:18"},"nodeType":"YulFunctionCall","src":"2731:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:18"},"nodeType":"YulFunctionCall","src":"2705:47:18"},"nodeType":"YulExpressionStatement","src":"2705:47:18"},{"nodeType":"YulAssignment","src":"2761:86:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:18"},"nodeType":"YulFunctionCall","src":"2769:78:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:18"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:18","type":""}],"src":"2541:313:18"},{"body":{"nodeType":"YulBlock","src":"2905:32:18","statements":[{"nodeType":"YulAssignment","src":"2915:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:18"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:18","type":""}],"src":"2860:77:18"},{"body":{"nodeType":"YulBlock","src":"2986:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:18"},"nodeType":"YulFunctionCall","src":"3045:12:18"},"nodeType":"YulExpressionStatement","src":"3045:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:18"},"nodeType":"YulFunctionCall","src":"3016:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:18"},"nodeType":"YulFunctionCall","src":"3006:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:18"},"nodeType":"YulFunctionCall","src":"2999:43:18"},"nodeType":"YulIf","src":"2996:63:18"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:18","type":""}],"src":"2943:122:18"},{"body":{"nodeType":"YulBlock","src":"3123:87:18","statements":[{"nodeType":"YulAssignment","src":"3133:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:18"},"nodeType":"YulFunctionCall","src":"3142:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:18"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:18"},"nodeType":"YulFunctionCall","src":"3171:33:18"},"nodeType":"YulExpressionStatement","src":"3171:33:18"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:18","type":""}],"src":"3071:139:18"},{"body":{"nodeType":"YulBlock","src":"3282:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:18"},"nodeType":"YulFunctionCall","src":"3330:79:18"},"nodeType":"YulExpressionStatement","src":"3330:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:18"},"nodeType":"YulFunctionCall","src":"3299:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:18"},"nodeType":"YulFunctionCall","src":"3295:32:18"},"nodeType":"YulIf","src":"3292:119:18"},{"nodeType":"YulBlock","src":"3421:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:18","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:18"},"nodeType":"YulFunctionCall","src":"3496:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:18"},"nodeType":"YulFunctionCall","src":"3475:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:18","type":""}],"src":"3216:329:18"},{"body":{"nodeType":"YulBlock","src":"3596:81:18","statements":[{"nodeType":"YulAssignment","src":"3606:65:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:18"},"nodeType":"YulFunctionCall","src":"3617:54:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:18"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:18","type":""}],"src":"3551:126:18"},{"body":{"nodeType":"YulBlock","src":"3728:51:18","statements":[{"nodeType":"YulAssignment","src":"3738:35:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:18"},"nodeType":"YulFunctionCall","src":"3749:24:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:18"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:18","type":""}],"src":"3683:96:18"},{"body":{"nodeType":"YulBlock","src":"3850:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:18"},"nodeType":"YulFunctionCall","src":"3872:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:18"},"nodeType":"YulFunctionCall","src":"3860:37:18"},"nodeType":"YulExpressionStatement","src":"3860:37:18"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:18","type":""}],"src":"3785:118:18"},{"body":{"nodeType":"YulBlock","src":"4007:124:18","statements":[{"nodeType":"YulAssignment","src":"4017:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:18"},"nodeType":"YulFunctionCall","src":"4025:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:18"},"nodeType":"YulFunctionCall","src":"4106:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:18"},"nodeType":"YulFunctionCall","src":"4053:71:18"},"nodeType":"YulExpressionStatement","src":"4053:71:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:18","type":""}],"src":"3909:222:18"},{"body":{"nodeType":"YulBlock","src":"4180:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:18"},"nodeType":"YulFunctionCall","src":"4239:12:18"},"nodeType":"YulExpressionStatement","src":"4239:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:18"},"nodeType":"YulFunctionCall","src":"4210:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:18"},"nodeType":"YulFunctionCall","src":"4200:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:18"},"nodeType":"YulFunctionCall","src":"4193:43:18"},"nodeType":"YulIf","src":"4190:63:18"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:18","type":""}],"src":"4137:122:18"},{"body":{"nodeType":"YulBlock","src":"4317:87:18","statements":[{"nodeType":"YulAssignment","src":"4327:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:18"},"nodeType":"YulFunctionCall","src":"4336:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:18"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:18"},"nodeType":"YulFunctionCall","src":"4365:33:18"},"nodeType":"YulExpressionStatement","src":"4365:33:18"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:18","type":""}],"src":"4265:139:18"},{"body":{"nodeType":"YulBlock","src":"4493:391:18","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:18"},"nodeType":"YulFunctionCall","src":"4541:79:18"},"nodeType":"YulExpressionStatement","src":"4541:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:18"},"nodeType":"YulFunctionCall","src":"4510:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:18"},"nodeType":"YulFunctionCall","src":"4506:32:18"},"nodeType":"YulIf","src":"4503:119:18"},{"nodeType":"YulBlock","src":"4632:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:18"},"nodeType":"YulFunctionCall","src":"4707:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:18"},"nodeType":"YulFunctionCall","src":"4686:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:18"}]}]},{"nodeType":"YulBlock","src":"4759:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:18"},"nodeType":"YulFunctionCall","src":"4835:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:18"},"nodeType":"YulFunctionCall","src":"4814:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:18","type":""}],"src":"4410:474:18"},{"body":{"nodeType":"YulBlock","src":"4956:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"5002:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5004:77:18"},"nodeType":"YulFunctionCall","src":"5004:79:18"},"nodeType":"YulExpressionStatement","src":"5004:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4977:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4986:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4973:3:18"},"nodeType":"YulFunctionCall","src":"4973:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4998:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4969:3:18"},"nodeType":"YulFunctionCall","src":"4969:32:18"},"nodeType":"YulIf","src":"4966:119:18"},{"nodeType":"YulBlock","src":"5095:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5110:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5124:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5114:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5139:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5174:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5185:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5170:3:18"},"nodeType":"YulFunctionCall","src":"5170:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5194:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5149:20:18"},"nodeType":"YulFunctionCall","src":"5149:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5139:6:18"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4926:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4937:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4949:6:18","type":""}],"src":"4890:329:18"},{"body":{"nodeType":"YulBlock","src":"5325:519:18","statements":[{"body":{"nodeType":"YulBlock","src":"5371:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5373:77:18"},"nodeType":"YulFunctionCall","src":"5373:79:18"},"nodeType":"YulExpressionStatement","src":"5373:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5346:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5355:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5342:3:18"},"nodeType":"YulFunctionCall","src":"5342:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5367:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5338:3:18"},"nodeType":"YulFunctionCall","src":"5338:32:18"},"nodeType":"YulIf","src":"5335:119:18"},{"nodeType":"YulBlock","src":"5464:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5479:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5493:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5483:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5508:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5543:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5554:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5539:3:18"},"nodeType":"YulFunctionCall","src":"5539:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5563:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5518:20:18"},"nodeType":"YulFunctionCall","src":"5518:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5508:6:18"}]}]},{"nodeType":"YulBlock","src":"5591:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5606:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5620:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5610:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5636:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5671:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5682:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5667:3:18"},"nodeType":"YulFunctionCall","src":"5667:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5691:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5646:20:18"},"nodeType":"YulFunctionCall","src":"5646:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5636:6:18"}]}]},{"nodeType":"YulBlock","src":"5719:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5734:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5748:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5738:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5764:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5799:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5810:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5795:3:18"},"nodeType":"YulFunctionCall","src":"5795:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5819:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5774:20:18"},"nodeType":"YulFunctionCall","src":"5774:53:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5764:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5279:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5290:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5302:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5310:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5318:6:18","type":""}],"src":"5225:619:18"},{"body":{"nodeType":"YulBlock","src":"5915:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5932:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5955:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5937:17:18"},"nodeType":"YulFunctionCall","src":"5937:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5925:6:18"},"nodeType":"YulFunctionCall","src":"5925:37:18"},"nodeType":"YulExpressionStatement","src":"5925:37:18"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5903:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5910:3:18","type":""}],"src":"5850:118:18"},{"body":{"nodeType":"YulBlock","src":"6072:124:18","statements":[{"nodeType":"YulAssignment","src":"6082:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6094:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6105:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:18"},"nodeType":"YulFunctionCall","src":"6090:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6082:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6162:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6175:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6186:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6171:3:18"},"nodeType":"YulFunctionCall","src":"6171:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6118:43:18"},"nodeType":"YulFunctionCall","src":"6118:71:18"},"nodeType":"YulExpressionStatement","src":"6118:71:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6044:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6056:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6067:4:18","type":""}],"src":"5974:222:18"},{"body":{"nodeType":"YulBlock","src":"6255:51:18","statements":[{"nodeType":"YulAssignment","src":"6265:35:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6294:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6276:17:18"},"nodeType":"YulFunctionCall","src":"6276:24:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6265:7:18"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6237:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6247:7:18","type":""}],"src":"6202:104:18"},{"body":{"nodeType":"YulBlock","src":"6363:87:18","statements":[{"body":{"nodeType":"YulBlock","src":"6428:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6437:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6440:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6430:6:18"},"nodeType":"YulFunctionCall","src":"6430:12:18"},"nodeType":"YulExpressionStatement","src":"6430:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6386:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6419:5:18"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"6393:25:18"},"nodeType":"YulFunctionCall","src":"6393:32:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6383:2:18"},"nodeType":"YulFunctionCall","src":"6383:43:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6376:6:18"},"nodeType":"YulFunctionCall","src":"6376:51:18"},"nodeType":"YulIf","src":"6373:71:18"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6356:5:18","type":""}],"src":"6312:138:18"},{"body":{"nodeType":"YulBlock","src":"6516:95:18","statements":[{"nodeType":"YulAssignment","src":"6526:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6548:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6535:12:18"},"nodeType":"YulFunctionCall","src":"6535:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6526:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6599:5:18"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"6564:34:18"},"nodeType":"YulFunctionCall","src":"6564:41:18"},"nodeType":"YulExpressionStatement","src":"6564:41:18"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6494:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"6502:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6510:5:18","type":""}],"src":"6456:155:18"},{"body":{"nodeType":"YulBlock","src":"6691:271:18","statements":[{"body":{"nodeType":"YulBlock","src":"6737:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6739:77:18"},"nodeType":"YulFunctionCall","src":"6739:79:18"},"nodeType":"YulExpressionStatement","src":"6739:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6712:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"6721:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6708:3:18"},"nodeType":"YulFunctionCall","src":"6708:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"6733:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6704:3:18"},"nodeType":"YulFunctionCall","src":"6704:32:18"},"nodeType":"YulIf","src":"6701:119:18"},{"nodeType":"YulBlock","src":"6830:125:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6845:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"6859:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6849:6:18","type":""}]},{"nodeType":"YulAssignment","src":"6874:71:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6917:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"6928:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6913:3:18"},"nodeType":"YulFunctionCall","src":"6913:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6937:7:18"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"6884:28:18"},"nodeType":"YulFunctionCall","src":"6884:61:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6874:6:18"}]}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6661:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6672:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6684:6:18","type":""}],"src":"6617:345:18"},{"body":{"nodeType":"YulBlock","src":"7057:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7074:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7077:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7067:6:18"},"nodeType":"YulFunctionCall","src":"7067:12:18"},"nodeType":"YulExpressionStatement","src":"7067:12:18"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6968:117:18"},{"body":{"nodeType":"YulBlock","src":"7180:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7197:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7200:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7190:6:18"},"nodeType":"YulFunctionCall","src":"7190:12:18"},"nodeType":"YulExpressionStatement","src":"7190:12:18"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7091:117:18"},{"body":{"nodeType":"YulBlock","src":"7242:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7259:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7262:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7252:6:18"},"nodeType":"YulFunctionCall","src":"7252:88:18"},"nodeType":"YulExpressionStatement","src":"7252:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7356:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7359:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7349:6:18"},"nodeType":"YulFunctionCall","src":"7349:15:18"},"nodeType":"YulExpressionStatement","src":"7349:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7380:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7383:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7373:6:18"},"nodeType":"YulFunctionCall","src":"7373:15:18"},"nodeType":"YulExpressionStatement","src":"7373:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7214:180:18"},{"body":{"nodeType":"YulBlock","src":"7443:238:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7453:58:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7475:6:18"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7505:4:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7483:21:18"},"nodeType":"YulFunctionCall","src":"7483:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7471:3:18"},"nodeType":"YulFunctionCall","src":"7471:40:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7457:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"7622:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7624:16:18"},"nodeType":"YulFunctionCall","src":"7624:18:18"},"nodeType":"YulExpressionStatement","src":"7624:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7565:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"7577:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7562:2:18"},"nodeType":"YulFunctionCall","src":"7562:34:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7601:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7613:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7598:2:18"},"nodeType":"YulFunctionCall","src":"7598:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7559:2:18"},"nodeType":"YulFunctionCall","src":"7559:62:18"},"nodeType":"YulIf","src":"7556:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7660:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7664:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7653:6:18"},"nodeType":"YulFunctionCall","src":"7653:22:18"},"nodeType":"YulExpressionStatement","src":"7653:22:18"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7429:6:18","type":""},{"name":"size","nodeType":"YulTypedName","src":"7437:4:18","type":""}],"src":"7400:281:18"},{"body":{"nodeType":"YulBlock","src":"7728:88:18","statements":[{"nodeType":"YulAssignment","src":"7738:30:18","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7748:18:18"},"nodeType":"YulFunctionCall","src":"7748:20:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7738:6:18"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7797:6:18"},{"name":"size","nodeType":"YulIdentifier","src":"7805:4:18"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7777:19:18"},"nodeType":"YulFunctionCall","src":"7777:33:18"},"nodeType":"YulExpressionStatement","src":"7777:33:18"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7712:4:18","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7721:6:18","type":""}],"src":"7687:129:18"},{"body":{"nodeType":"YulBlock","src":"7889:241:18","statements":[{"body":{"nodeType":"YulBlock","src":"7994:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7996:16:18"},"nodeType":"YulFunctionCall","src":"7996:18:18"},"nodeType":"YulExpressionStatement","src":"7996:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7966:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"7974:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7963:2:18"},"nodeType":"YulFunctionCall","src":"7963:30:18"},"nodeType":"YulIf","src":"7960:56:18"},{"nodeType":"YulAssignment","src":"8026:37:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8056:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8034:21:18"},"nodeType":"YulFunctionCall","src":"8034:29:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8026:4:18"}]},{"nodeType":"YulAssignment","src":"8100:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8112:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"8118:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8108:3:18"},"nodeType":"YulFunctionCall","src":"8108:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8100:4:18"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7873:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7884:4:18","type":""}],"src":"7822:308:18"},{"body":{"nodeType":"YulBlock","src":"8200:82:18","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8223:3:18"},{"name":"src","nodeType":"YulIdentifier","src":"8228:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"8233:6:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8210:12:18"},"nodeType":"YulFunctionCall","src":"8210:30:18"},"nodeType":"YulExpressionStatement","src":"8210:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8260:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"8265:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8256:3:18"},"nodeType":"YulFunctionCall","src":"8256:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"8274:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8249:6:18"},"nodeType":"YulFunctionCall","src":"8249:27:18"},"nodeType":"YulExpressionStatement","src":"8249:27:18"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8182:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8187:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"8192:6:18","type":""}],"src":"8136:146:18"},{"body":{"nodeType":"YulBlock","src":"8372:341:18","statements":[{"nodeType":"YulAssignment","src":"8382:75:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8449:6:18"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8407:41:18"},"nodeType":"YulFunctionCall","src":"8407:49:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8391:15:18"},"nodeType":"YulFunctionCall","src":"8391:66:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8382:5:18"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8473:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"8480:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8466:6:18"},"nodeType":"YulFunctionCall","src":"8466:21:18"},"nodeType":"YulExpressionStatement","src":"8466:21:18"},{"nodeType":"YulVariableDeclaration","src":"8496:27:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8511:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"8518:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8507:3:18"},"nodeType":"YulFunctionCall","src":"8507:16:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8500:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"8561:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8563:77:18"},"nodeType":"YulFunctionCall","src":"8563:79:18"},"nodeType":"YulExpressionStatement","src":"8563:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8542:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"8547:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8538:3:18"},"nodeType":"YulFunctionCall","src":"8538:16:18"},{"name":"end","nodeType":"YulIdentifier","src":"8556:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8535:2:18"},"nodeType":"YulFunctionCall","src":"8535:25:18"},"nodeType":"YulIf","src":"8532:112:18"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8690:3:18"},{"name":"dst","nodeType":"YulIdentifier","src":"8695:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"8700:6:18"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8653:36:18"},"nodeType":"YulFunctionCall","src":"8653:54:18"},"nodeType":"YulExpressionStatement","src":"8653:54:18"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8345:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"8350:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"8358:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8366:5:18","type":""}],"src":"8288:425:18"},{"body":{"nodeType":"YulBlock","src":"8795:278:18","statements":[{"body":{"nodeType":"YulBlock","src":"8844:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8846:77:18"},"nodeType":"YulFunctionCall","src":"8846:79:18"},"nodeType":"YulExpressionStatement","src":"8846:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8823:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8831:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8819:3:18"},"nodeType":"YulFunctionCall","src":"8819:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"8838:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8815:3:18"},"nodeType":"YulFunctionCall","src":"8815:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8808:6:18"},"nodeType":"YulFunctionCall","src":"8808:35:18"},"nodeType":"YulIf","src":"8805:122:18"},{"nodeType":"YulVariableDeclaration","src":"8936:34:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8963:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8950:12:18"},"nodeType":"YulFunctionCall","src":"8950:20:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8940:6:18","type":""}]},{"nodeType":"YulAssignment","src":"8979:88:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9040:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9048:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9036:3:18"},"nodeType":"YulFunctionCall","src":"9036:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"9055:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"9063:3:18"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8988:47:18"},"nodeType":"YulFunctionCall","src":"8988:79:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8979:5:18"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8773:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"8781:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8789:5:18","type":""}],"src":"8733:340:18"},{"body":{"nodeType":"YulBlock","src":"9155:433:18","statements":[{"body":{"nodeType":"YulBlock","src":"9201:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9203:77:18"},"nodeType":"YulFunctionCall","src":"9203:79:18"},"nodeType":"YulExpressionStatement","src":"9203:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9176:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"9185:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9172:3:18"},"nodeType":"YulFunctionCall","src":"9172:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"9197:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9168:3:18"},"nodeType":"YulFunctionCall","src":"9168:32:18"},"nodeType":"YulIf","src":"9165:119:18"},{"nodeType":"YulBlock","src":"9294:287:18","statements":[{"nodeType":"YulVariableDeclaration","src":"9309:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9340:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9351:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9336:3:18"},"nodeType":"YulFunctionCall","src":"9336:17:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9323:12:18"},"nodeType":"YulFunctionCall","src":"9323:31:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9313:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"9401:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9403:77:18"},"nodeType":"YulFunctionCall","src":"9403:79:18"},"nodeType":"YulExpressionStatement","src":"9403:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9373:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9381:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9370:2:18"},"nodeType":"YulFunctionCall","src":"9370:30:18"},"nodeType":"YulIf","src":"9367:117:18"},{"nodeType":"YulAssignment","src":"9498:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9543:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"9554:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9539:3:18"},"nodeType":"YulFunctionCall","src":"9539:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9563:7:18"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9508:30:18"},"nodeType":"YulFunctionCall","src":"9508:63:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9498:6:18"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9125:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9136:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9148:6:18","type":""}],"src":"9079:509:18"},{"body":{"nodeType":"YulBlock","src":"9634:76:18","statements":[{"body":{"nodeType":"YulBlock","src":"9688:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9697:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9700:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9690:6:18"},"nodeType":"YulFunctionCall","src":"9690:12:18"},"nodeType":"YulExpressionStatement","src":"9690:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9657:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9679:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9664:14:18"},"nodeType":"YulFunctionCall","src":"9664:21:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9654:2:18"},"nodeType":"YulFunctionCall","src":"9654:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9647:6:18"},"nodeType":"YulFunctionCall","src":"9647:40:18"},"nodeType":"YulIf","src":"9644:60:18"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9627:5:18","type":""}],"src":"9594:116:18"},{"body":{"nodeType":"YulBlock","src":"9765:84:18","statements":[{"nodeType":"YulAssignment","src":"9775:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9797:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9784:12:18"},"nodeType":"YulFunctionCall","src":"9784:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9775:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9837:5:18"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"9813:23:18"},"nodeType":"YulFunctionCall","src":"9813:30:18"},"nodeType":"YulExpressionStatement","src":"9813:30:18"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9743:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"9751:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9759:5:18","type":""}],"src":"9716:133:18"},{"body":{"nodeType":"YulBlock","src":"9935:388:18","statements":[{"body":{"nodeType":"YulBlock","src":"9981:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9983:77:18"},"nodeType":"YulFunctionCall","src":"9983:79:18"},"nodeType":"YulExpressionStatement","src":"9983:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9956:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"9965:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9952:3:18"},"nodeType":"YulFunctionCall","src":"9952:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"9977:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9948:3:18"},"nodeType":"YulFunctionCall","src":"9948:32:18"},"nodeType":"YulIf","src":"9945:119:18"},{"nodeType":"YulBlock","src":"10074:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10089:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"10103:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10093:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10118:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10153:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10164:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10149:3:18"},"nodeType":"YulFunctionCall","src":"10149:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10173:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10128:20:18"},"nodeType":"YulFunctionCall","src":"10128:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10118:6:18"}]}]},{"nodeType":"YulBlock","src":"10201:115:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10216:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"10230:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10220:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10246:60:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10278:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10289:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10274:3:18"},"nodeType":"YulFunctionCall","src":"10274:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10298:7:18"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"10256:17:18"},"nodeType":"YulFunctionCall","src":"10256:50:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10246:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9897:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9908:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9920:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9928:6:18","type":""}],"src":"9855:468:18"},{"body":{"nodeType":"YulBlock","src":"10395:241:18","statements":[{"body":{"nodeType":"YulBlock","src":"10500:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10502:16:18"},"nodeType":"YulFunctionCall","src":"10502:18:18"},"nodeType":"YulExpressionStatement","src":"10502:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10472:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"10480:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10469:2:18"},"nodeType":"YulFunctionCall","src":"10469:30:18"},"nodeType":"YulIf","src":"10466:56:18"},{"nodeType":"YulAssignment","src":"10532:37:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10562:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10540:21:18"},"nodeType":"YulFunctionCall","src":"10540:29:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10532:4:18"}]},{"nodeType":"YulAssignment","src":"10606:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10618:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"10624:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10614:3:18"},"nodeType":"YulFunctionCall","src":"10614:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10606:4:18"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10379:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10390:4:18","type":""}],"src":"10329:307:18"},{"body":{"nodeType":"YulBlock","src":"10725:340:18","statements":[{"nodeType":"YulAssignment","src":"10735:74:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10801:6:18"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10760:40:18"},"nodeType":"YulFunctionCall","src":"10760:48:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10744:15:18"},"nodeType":"YulFunctionCall","src":"10744:65:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10735:5:18"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10825:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"10832:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10818:6:18"},"nodeType":"YulFunctionCall","src":"10818:21:18"},"nodeType":"YulExpressionStatement","src":"10818:21:18"},{"nodeType":"YulVariableDeclaration","src":"10848:27:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10863:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"10870:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10859:3:18"},"nodeType":"YulFunctionCall","src":"10859:16:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"10852:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"10913:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"10915:77:18"},"nodeType":"YulFunctionCall","src":"10915:79:18"},"nodeType":"YulExpressionStatement","src":"10915:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10894:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"10899:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10890:3:18"},"nodeType":"YulFunctionCall","src":"10890:16:18"},{"name":"end","nodeType":"YulIdentifier","src":"10908:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10887:2:18"},"nodeType":"YulFunctionCall","src":"10887:25:18"},"nodeType":"YulIf","src":"10884:112:18"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11042:3:18"},{"name":"dst","nodeType":"YulIdentifier","src":"11047:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"11052:6:18"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11005:36:18"},"nodeType":"YulFunctionCall","src":"11005:54:18"},"nodeType":"YulExpressionStatement","src":"11005:54:18"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10698:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"10703:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"10711:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10719:5:18","type":""}],"src":"10642:423:18"},{"body":{"nodeType":"YulBlock","src":"11145:277:18","statements":[{"body":{"nodeType":"YulBlock","src":"11194:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"11196:77:18"},"nodeType":"YulFunctionCall","src":"11196:79:18"},"nodeType":"YulExpressionStatement","src":"11196:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11173:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"11181:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11169:3:18"},"nodeType":"YulFunctionCall","src":"11169:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"11188:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11165:3:18"},"nodeType":"YulFunctionCall","src":"11165:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11158:6:18"},"nodeType":"YulFunctionCall","src":"11158:35:18"},"nodeType":"YulIf","src":"11155:122:18"},{"nodeType":"YulVariableDeclaration","src":"11286:34:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11313:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11300:12:18"},"nodeType":"YulFunctionCall","src":"11300:20:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11290:6:18","type":""}]},{"nodeType":"YulAssignment","src":"11329:87:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11389:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"11397:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11385:3:18"},"nodeType":"YulFunctionCall","src":"11385:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"11404:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"11412:3:18"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11338:46:18"},"nodeType":"YulFunctionCall","src":"11338:78:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11329:5:18"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11123:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"11131:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11139:5:18","type":""}],"src":"11084:338:18"},{"body":{"nodeType":"YulBlock","src":"11554:817:18","statements":[{"body":{"nodeType":"YulBlock","src":"11601:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11603:77:18"},"nodeType":"YulFunctionCall","src":"11603:79:18"},"nodeType":"YulExpressionStatement","src":"11603:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11575:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"11584:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11571:3:18"},"nodeType":"YulFunctionCall","src":"11571:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"11596:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11567:3:18"},"nodeType":"YulFunctionCall","src":"11567:33:18"},"nodeType":"YulIf","src":"11564:120:18"},{"nodeType":"YulBlock","src":"11694:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11709:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"11723:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11713:6:18","type":""}]},{"nodeType":"YulAssignment","src":"11738:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11773:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"11784:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11769:3:18"},"nodeType":"YulFunctionCall","src":"11769:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11793:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11748:20:18"},"nodeType":"YulFunctionCall","src":"11748:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11738:6:18"}]}]},{"nodeType":"YulBlock","src":"11821:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11836:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"11850:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11840:6:18","type":""}]},{"nodeType":"YulAssignment","src":"11866:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11901:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"11912:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11897:3:18"},"nodeType":"YulFunctionCall","src":"11897:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11921:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11876:20:18"},"nodeType":"YulFunctionCall","src":"11876:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11866:6:18"}]}]},{"nodeType":"YulBlock","src":"11949:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11964:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"11978:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11968:6:18","type":""}]},{"nodeType":"YulAssignment","src":"11994:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12029:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"12040:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12025:3:18"},"nodeType":"YulFunctionCall","src":"12025:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12049:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12004:20:18"},"nodeType":"YulFunctionCall","src":"12004:53:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11994:6:18"}]}]},{"nodeType":"YulBlock","src":"12077:287:18","statements":[{"nodeType":"YulVariableDeclaration","src":"12092:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12123:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12134:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12119:3:18"},"nodeType":"YulFunctionCall","src":"12119:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12106:12:18"},"nodeType":"YulFunctionCall","src":"12106:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12096:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"12185:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12187:77:18"},"nodeType":"YulFunctionCall","src":"12187:79:18"},"nodeType":"YulExpressionStatement","src":"12187:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12157:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"12165:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12154:2:18"},"nodeType":"YulFunctionCall","src":"12154:30:18"},"nodeType":"YulIf","src":"12151:117:18"},{"nodeType":"YulAssignment","src":"12282:72:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12326:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"12337:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12322:3:18"},"nodeType":"YulFunctionCall","src":"12322:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12346:7:18"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12292:29:18"},"nodeType":"YulFunctionCall","src":"12292:62:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12282:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11500:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11511:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11523:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11531:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11539:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11547:6:18","type":""}],"src":"11428:943:18"},{"body":{"nodeType":"YulBlock","src":"12466:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12483:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12486:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12476:6:18"},"nodeType":"YulFunctionCall","src":"12476:12:18"},"nodeType":"YulExpressionStatement","src":"12476:12:18"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"12377:117:18"},{"body":{"nodeType":"YulBlock","src":"12589:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12606:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12609:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12599:6:18"},"nodeType":"YulFunctionCall","src":"12599:12:18"},"nodeType":"YulExpressionStatement","src":"12599:12:18"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"12500:117:18"},{"body":{"nodeType":"YulBlock","src":"12710:478:18","statements":[{"body":{"nodeType":"YulBlock","src":"12759:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"12761:77:18"},"nodeType":"YulFunctionCall","src":"12761:79:18"},"nodeType":"YulExpressionStatement","src":"12761:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12738:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"12746:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12734:3:18"},"nodeType":"YulFunctionCall","src":"12734:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"12753:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12730:3:18"},"nodeType":"YulFunctionCall","src":"12730:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12723:6:18"},"nodeType":"YulFunctionCall","src":"12723:35:18"},"nodeType":"YulIf","src":"12720:122:18"},{"nodeType":"YulAssignment","src":"12851:30:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12874:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12861:12:18"},"nodeType":"YulFunctionCall","src":"12861:20:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12851:6:18"}]},{"body":{"nodeType":"YulBlock","src":"12924:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"12926:77:18"},"nodeType":"YulFunctionCall","src":"12926:79:18"},"nodeType":"YulExpressionStatement","src":"12926:79:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12896:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"12904:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12893:2:18"},"nodeType":"YulFunctionCall","src":"12893:30:18"},"nodeType":"YulIf","src":"12890:117:18"},{"nodeType":"YulAssignment","src":"13016:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13032:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"13040:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13028:3:18"},"nodeType":"YulFunctionCall","src":"13028:17:18"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"13016:8:18"}]},{"body":{"nodeType":"YulBlock","src":"13099:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"13101:77:18"},"nodeType":"YulFunctionCall","src":"13101:79:18"},"nodeType":"YulExpressionStatement","src":"13101:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"13064:8:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13078:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"13086:4:18","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13074:3:18"},"nodeType":"YulFunctionCall","src":"13074:17:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13060:3:18"},"nodeType":"YulFunctionCall","src":"13060:32:18"},{"name":"end","nodeType":"YulIdentifier","src":"13094:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13057:2:18"},"nodeType":"YulFunctionCall","src":"13057:41:18"},"nodeType":"YulIf","src":"13054:128:18"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12677:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"12685:3:18","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"12693:8:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"12703:6:18","type":""}],"src":"12636:552:18"},{"body":{"nodeType":"YulBlock","src":"13279:442:18","statements":[{"body":{"nodeType":"YulBlock","src":"13325:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13327:77:18"},"nodeType":"YulFunctionCall","src":"13327:79:18"},"nodeType":"YulExpressionStatement","src":"13327:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13300:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"13309:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13296:3:18"},"nodeType":"YulFunctionCall","src":"13296:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"13321:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13292:3:18"},"nodeType":"YulFunctionCall","src":"13292:32:18"},"nodeType":"YulIf","src":"13289:119:18"},{"nodeType":"YulBlock","src":"13418:296:18","statements":[{"nodeType":"YulVariableDeclaration","src":"13433:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13464:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13475:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13460:3:18"},"nodeType":"YulFunctionCall","src":"13460:17:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13447:12:18"},"nodeType":"YulFunctionCall","src":"13447:31:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13437:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"13525:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13527:77:18"},"nodeType":"YulFunctionCall","src":"13527:79:18"},"nodeType":"YulExpressionStatement","src":"13527:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13497:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"13505:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13494:2:18"},"nodeType":"YulFunctionCall","src":"13494:30:18"},"nodeType":"YulIf","src":"13491:117:18"},{"nodeType":"YulAssignment","src":"13622:82:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13676:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"13687:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13672:3:18"},"nodeType":"YulFunctionCall","src":"13672:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13696:7:18"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"13640:31:18"},"nodeType":"YulFunctionCall","src":"13640:64:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13622:6:18"},{"name":"value1","nodeType":"YulIdentifier","src":"13630:6:18"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13241:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13252:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13264:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13272:6:18","type":""}],"src":"13194:527:18"},{"body":{"nodeType":"YulBlock","src":"13770:43:18","statements":[{"nodeType":"YulAssignment","src":"13780:27:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13795:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"13802:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13791:3:18"},"nodeType":"YulFunctionCall","src":"13791:16:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13780:7:18"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13752:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13762:7:18","type":""}],"src":"13727:86:18"},{"body":{"nodeType":"YulBlock","src":"13880:51:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13897:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13918:5:18"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"13902:15:18"},"nodeType":"YulFunctionCall","src":"13902:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13890:6:18"},"nodeType":"YulFunctionCall","src":"13890:35:18"},"nodeType":"YulExpressionStatement","src":"13890:35:18"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13868:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13875:3:18","type":""}],"src":"13819:112:18"},{"body":{"nodeType":"YulBlock","src":"14031:120:18","statements":[{"nodeType":"YulAssignment","src":"14041:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14053:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14064:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14049:3:18"},"nodeType":"YulFunctionCall","src":"14049:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14041:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14117:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14130:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14141:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14126:3:18"},"nodeType":"YulFunctionCall","src":"14126:17:18"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"14077:39:18"},"nodeType":"YulFunctionCall","src":"14077:67:18"},"nodeType":"YulExpressionStatement","src":"14077:67:18"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14003:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14015:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14026:4:18","type":""}],"src":"13937:214:18"},{"body":{"nodeType":"YulBlock","src":"14240:391:18","statements":[{"body":{"nodeType":"YulBlock","src":"14286:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14288:77:18"},"nodeType":"YulFunctionCall","src":"14288:79:18"},"nodeType":"YulExpressionStatement","src":"14288:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14261:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"14270:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14257:3:18"},"nodeType":"YulFunctionCall","src":"14257:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"14282:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14253:3:18"},"nodeType":"YulFunctionCall","src":"14253:32:18"},"nodeType":"YulIf","src":"14250:119:18"},{"nodeType":"YulBlock","src":"14379:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"14394:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"14408:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14398:6:18","type":""}]},{"nodeType":"YulAssignment","src":"14423:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14458:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"14469:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14454:3:18"},"nodeType":"YulFunctionCall","src":"14454:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14478:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14433:20:18"},"nodeType":"YulFunctionCall","src":"14433:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14423:6:18"}]}]},{"nodeType":"YulBlock","src":"14506:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"14521:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"14535:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14525:6:18","type":""}]},{"nodeType":"YulAssignment","src":"14551:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14586:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"14597:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14582:3:18"},"nodeType":"YulFunctionCall","src":"14582:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14606:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14561:20:18"},"nodeType":"YulFunctionCall","src":"14561:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14551:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14202:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14213:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14225:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14233:6:18","type":""}],"src":"14157:474:18"},{"body":{"nodeType":"YulBlock","src":"14678:77:18","statements":[{"body":{"nodeType":"YulBlock","src":"14733:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14742:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14745:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14735:6:18"},"nodeType":"YulFunctionCall","src":"14735:12:18"},"nodeType":"YulExpressionStatement","src":"14735:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14701:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14724:5:18"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"14708:15:18"},"nodeType":"YulFunctionCall","src":"14708:22:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14698:2:18"},"nodeType":"YulFunctionCall","src":"14698:33:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14691:6:18"},"nodeType":"YulFunctionCall","src":"14691:41:18"},"nodeType":"YulIf","src":"14688:61:18"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14671:5:18","type":""}],"src":"14637:118:18"},{"body":{"nodeType":"YulBlock","src":"14811:85:18","statements":[{"nodeType":"YulAssignment","src":"14821:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14843:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14830:12:18"},"nodeType":"YulFunctionCall","src":"14830:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14821:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14884:5:18"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"14859:24:18"},"nodeType":"YulFunctionCall","src":"14859:31:18"},"nodeType":"YulExpressionStatement","src":"14859:31:18"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14789:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"14797:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14805:5:18","type":""}],"src":"14761:135:18"},{"body":{"nodeType":"YulBlock","src":"14983:389:18","statements":[{"body":{"nodeType":"YulBlock","src":"15029:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15031:77:18"},"nodeType":"YulFunctionCall","src":"15031:79:18"},"nodeType":"YulExpressionStatement","src":"15031:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15004:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"15013:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15000:3:18"},"nodeType":"YulFunctionCall","src":"15000:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"15025:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14996:3:18"},"nodeType":"YulFunctionCall","src":"14996:32:18"},"nodeType":"YulIf","src":"14993:119:18"},{"nodeType":"YulBlock","src":"15122:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"15137:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"15151:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15141:6:18","type":""}]},{"nodeType":"YulAssignment","src":"15166:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15201:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"15212:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15197:3:18"},"nodeType":"YulFunctionCall","src":"15197:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15221:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15176:20:18"},"nodeType":"YulFunctionCall","src":"15176:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15166:6:18"}]}]},{"nodeType":"YulBlock","src":"15249:116:18","statements":[{"nodeType":"YulVariableDeclaration","src":"15264:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"15278:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15268:6:18","type":""}]},{"nodeType":"YulAssignment","src":"15294:61:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15327:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"15338:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15323:3:18"},"nodeType":"YulFunctionCall","src":"15323:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15347:7:18"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"15304:18:18"},"nodeType":"YulFunctionCall","src":"15304:51:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15294:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14945:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14956:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14968:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14976:6:18","type":""}],"src":"14902:470:18"},{"body":{"nodeType":"YulBlock","src":"15406:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15423:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15426:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15416:6:18"},"nodeType":"YulFunctionCall","src":"15416:88:18"},"nodeType":"YulExpressionStatement","src":"15416:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15520:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15523:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15513:6:18"},"nodeType":"YulFunctionCall","src":"15513:15:18"},"nodeType":"YulExpressionStatement","src":"15513:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15544:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15547:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15537:6:18"},"nodeType":"YulFunctionCall","src":"15537:15:18"},"nodeType":"YulExpressionStatement","src":"15537:15:18"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"15378:180:18"},{"body":{"nodeType":"YulBlock","src":"15615:269:18","statements":[{"nodeType":"YulAssignment","src":"15625:22:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15639:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"15645:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15635:3:18"},"nodeType":"YulFunctionCall","src":"15635:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15625:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"15656:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15686:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"15692:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15682:3:18"},"nodeType":"YulFunctionCall","src":"15682:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15660:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"15733:51:18","statements":[{"nodeType":"YulAssignment","src":"15747:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15761:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"15769:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15757:3:18"},"nodeType":"YulFunctionCall","src":"15757:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15747:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15713:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15706:6:18"},"nodeType":"YulFunctionCall","src":"15706:26:18"},"nodeType":"YulIf","src":"15703:81:18"},{"body":{"nodeType":"YulBlock","src":"15836:42:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"15850:16:18"},"nodeType":"YulFunctionCall","src":"15850:18:18"},"nodeType":"YulExpressionStatement","src":"15850:18:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15800:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15823:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"15831:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15820:2:18"},"nodeType":"YulFunctionCall","src":"15820:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15797:2:18"},"nodeType":"YulFunctionCall","src":"15797:38:18"},"nodeType":"YulIf","src":"15794:84:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15599:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15608:6:18","type":""}],"src":"15564:320:18"},{"body":{"nodeType":"YulBlock","src":"16044:288:18","statements":[{"nodeType":"YulAssignment","src":"16054:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16066:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16077:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16062:3:18"},"nodeType":"YulFunctionCall","src":"16062:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16054:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16134:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16147:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16158:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16143:3:18"},"nodeType":"YulFunctionCall","src":"16143:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16090:43:18"},"nodeType":"YulFunctionCall","src":"16090:71:18"},"nodeType":"YulExpressionStatement","src":"16090:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16215:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16228:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16239:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16224:3:18"},"nodeType":"YulFunctionCall","src":"16224:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16171:43:18"},"nodeType":"YulFunctionCall","src":"16171:72:18"},"nodeType":"YulExpressionStatement","src":"16171:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16297:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16310:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16321:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16306:3:18"},"nodeType":"YulFunctionCall","src":"16306:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16253:43:18"},"nodeType":"YulFunctionCall","src":"16253:72:18"},"nodeType":"YulExpressionStatement","src":"16253:72:18"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16000:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16012:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16020:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16028:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16039:4:18","type":""}],"src":"15890:442:18"},{"body":{"nodeType":"YulBlock","src":"16444:55:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16466:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"16474:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16462:3:18"},"nodeType":"YulFunctionCall","src":"16462:14:18"},{"hexValue":"696e76616c696420717479","kind":"string","nodeType":"YulLiteral","src":"16478:13:18","type":"","value":"invalid qty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16455:6:18"},"nodeType":"YulFunctionCall","src":"16455:37:18"},"nodeType":"YulExpressionStatement","src":"16455:37:18"}]},"name":"store_literal_in_memory_3a9e59314a78d25b237b9f5f22b78aeb6280107de0a7d9b9b3d2d4f880e56b06","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16436:6:18","type":""}],"src":"16338:161:18"},{"body":{"nodeType":"YulBlock","src":"16651:220:18","statements":[{"nodeType":"YulAssignment","src":"16661:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16727:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16732:2:18","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16668:58:18"},"nodeType":"YulFunctionCall","src":"16668:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16661:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16833:3:18"}],"functionName":{"name":"store_literal_in_memory_3a9e59314a78d25b237b9f5f22b78aeb6280107de0a7d9b9b3d2d4f880e56b06","nodeType":"YulIdentifier","src":"16744:88:18"},"nodeType":"YulFunctionCall","src":"16744:93:18"},"nodeType":"YulExpressionStatement","src":"16744:93:18"},{"nodeType":"YulAssignment","src":"16846:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16857:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16862:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16853:3:18"},"nodeType":"YulFunctionCall","src":"16853:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16846:3:18"}]}]},"name":"abi_encode_t_stringliteral_3a9e59314a78d25b237b9f5f22b78aeb6280107de0a7d9b9b3d2d4f880e56b06_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16639:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16647:3:18","type":""}],"src":"16505:366:18"},{"body":{"nodeType":"YulBlock","src":"17048:248:18","statements":[{"nodeType":"YulAssignment","src":"17058:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17070:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17081:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17066:3:18"},"nodeType":"YulFunctionCall","src":"17066:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17058:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17105:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17116:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17101:3:18"},"nodeType":"YulFunctionCall","src":"17101:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17124:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"17130:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17120:3:18"},"nodeType":"YulFunctionCall","src":"17120:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17094:6:18"},"nodeType":"YulFunctionCall","src":"17094:47:18"},"nodeType":"YulExpressionStatement","src":"17094:47:18"},{"nodeType":"YulAssignment","src":"17150:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17284:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_3a9e59314a78d25b237b9f5f22b78aeb6280107de0a7d9b9b3d2d4f880e56b06_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17158:124:18"},"nodeType":"YulFunctionCall","src":"17158:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17150:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_3a9e59314a78d25b237b9f5f22b78aeb6280107de0a7d9b9b3d2d4f880e56b06__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17028:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17043:4:18","type":""}],"src":"16877:419:18"},{"body":{"nodeType":"YulBlock","src":"17330:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17347:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17350:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17340:6:18"},"nodeType":"YulFunctionCall","src":"17340:88:18"},"nodeType":"YulExpressionStatement","src":"17340:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17444:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17447:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17437:6:18"},"nodeType":"YulFunctionCall","src":"17437:15:18"},"nodeType":"YulExpressionStatement","src":"17437:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17468:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17471:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17461:6:18"},"nodeType":"YulFunctionCall","src":"17461:15:18"},"nodeType":"YulExpressionStatement","src":"17461:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"17302:180:18"},{"body":{"nodeType":"YulBlock","src":"17532:147:18","statements":[{"nodeType":"YulAssignment","src":"17542:25:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17565:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17547:17:18"},"nodeType":"YulFunctionCall","src":"17547:20:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17542:1:18"}]},{"nodeType":"YulAssignment","src":"17576:25:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17599:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17581:17:18"},"nodeType":"YulFunctionCall","src":"17581:20:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17576:1:18"}]},{"nodeType":"YulAssignment","src":"17610:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17621:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"17624:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17617:3:18"},"nodeType":"YulFunctionCall","src":"17617:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17610:3:18"}]},{"body":{"nodeType":"YulBlock","src":"17650:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17652:16:18"},"nodeType":"YulFunctionCall","src":"17652:18:18"},"nodeType":"YulExpressionStatement","src":"17652:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17642:1:18"},{"name":"sum","nodeType":"YulIdentifier","src":"17645:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17639:2:18"},"nodeType":"YulFunctionCall","src":"17639:10:18"},"nodeType":"YulIf","src":"17636:36:18"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17519:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"17522:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17528:3:18","type":""}],"src":"17488:191:18"},{"body":{"nodeType":"YulBlock","src":"17791:59:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17813:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"17821:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17809:3:18"},"nodeType":"YulFunctionCall","src":"17809:14:18"},{"hexValue":"7075626c696320736f6c64206f7574","kind":"string","nodeType":"YulLiteral","src":"17825:17:18","type":"","value":"public sold out"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17802:6:18"},"nodeType":"YulFunctionCall","src":"17802:41:18"},"nodeType":"YulExpressionStatement","src":"17802:41:18"}]},"name":"store_literal_in_memory_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17783:6:18","type":""}],"src":"17685:165:18"},{"body":{"nodeType":"YulBlock","src":"18002:220:18","statements":[{"nodeType":"YulAssignment","src":"18012:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18078:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18083:2:18","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18019:58:18"},"nodeType":"YulFunctionCall","src":"18019:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18012:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18184:3:18"}],"functionName":{"name":"store_literal_in_memory_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d","nodeType":"YulIdentifier","src":"18095:88:18"},"nodeType":"YulFunctionCall","src":"18095:93:18"},"nodeType":"YulExpressionStatement","src":"18095:93:18"},{"nodeType":"YulAssignment","src":"18197:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18208:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18213:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18204:3:18"},"nodeType":"YulFunctionCall","src":"18204:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18197:3:18"}]}]},"name":"abi_encode_t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17990:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17998:3:18","type":""}],"src":"17856:366:18"},{"body":{"nodeType":"YulBlock","src":"18399:248:18","statements":[{"nodeType":"YulAssignment","src":"18409:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18421:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18432:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18417:3:18"},"nodeType":"YulFunctionCall","src":"18417:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18409:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18456:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18467:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18452:3:18"},"nodeType":"YulFunctionCall","src":"18452:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18475:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"18481:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18471:3:18"},"nodeType":"YulFunctionCall","src":"18471:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18445:6:18"},"nodeType":"YulFunctionCall","src":"18445:47:18"},"nodeType":"YulExpressionStatement","src":"18445:47:18"},{"nodeType":"YulAssignment","src":"18501:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18635:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18509:124:18"},"nodeType":"YulFunctionCall","src":"18509:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18501:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18379:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18394:4:18","type":""}],"src":"18228:419:18"},{"body":{"nodeType":"YulBlock","src":"18701:362:18","statements":[{"nodeType":"YulAssignment","src":"18711:25:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18734:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18716:17:18"},"nodeType":"YulFunctionCall","src":"18716:20:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18711:1:18"}]},{"nodeType":"YulAssignment","src":"18745:25:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18768:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18750:17:18"},"nodeType":"YulFunctionCall","src":"18750:20:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18745:1:18"}]},{"nodeType":"YulVariableDeclaration","src":"18779:28:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18802:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"18805:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18798:3:18"},"nodeType":"YulFunctionCall","src":"18798:9:18"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"18783:11:18","type":""}]},{"nodeType":"YulAssignment","src":"18816:41:18","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"18845:11:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18827:17:18"},"nodeType":"YulFunctionCall","src":"18827:30:18"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"18816:7:18"}]},{"body":{"nodeType":"YulBlock","src":"19034:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19036:16:18"},"nodeType":"YulFunctionCall","src":"19036:18:18"},"nodeType":"YulExpressionStatement","src":"19036:18:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18967:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18960:6:18"},"nodeType":"YulFunctionCall","src":"18960:9:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18990:1:18"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"18997:7:18"},{"name":"x","nodeType":"YulIdentifier","src":"19006:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18993:3:18"},"nodeType":"YulFunctionCall","src":"18993:15:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18987:2:18"},"nodeType":"YulFunctionCall","src":"18987:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18940:2:18"},"nodeType":"YulFunctionCall","src":"18940:83:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18920:6:18"},"nodeType":"YulFunctionCall","src":"18920:113:18"},"nodeType":"YulIf","src":"18917:139:18"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18684:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"18687:1:18","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"18693:7:18","type":""}],"src":"18653:410:18"},{"body":{"nodeType":"YulBlock","src":"19175:61:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19197:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"19205:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19193:3:18"},"nodeType":"YulFunctionCall","src":"19193:14:18"},{"hexValue":"696e636f7272656374207061796d656e74","kind":"string","nodeType":"YulLiteral","src":"19209:19:18","type":"","value":"incorrect payment"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19186:6:18"},"nodeType":"YulFunctionCall","src":"19186:43:18"},"nodeType":"YulExpressionStatement","src":"19186:43:18"}]},"name":"store_literal_in_memory_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19167:6:18","type":""}],"src":"19069:167:18"},{"body":{"nodeType":"YulBlock","src":"19388:220:18","statements":[{"nodeType":"YulAssignment","src":"19398:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19464:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"19469:2:18","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19405:58:18"},"nodeType":"YulFunctionCall","src":"19405:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19398:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19570:3:18"}],"functionName":{"name":"store_literal_in_memory_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877","nodeType":"YulIdentifier","src":"19481:88:18"},"nodeType":"YulFunctionCall","src":"19481:93:18"},"nodeType":"YulExpressionStatement","src":"19481:93:18"},{"nodeType":"YulAssignment","src":"19583:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19594:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"19599:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19590:3:18"},"nodeType":"YulFunctionCall","src":"19590:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19583:3:18"}]}]},"name":"abi_encode_t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19376:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19384:3:18","type":""}],"src":"19242:366:18"},{"body":{"nodeType":"YulBlock","src":"19785:248:18","statements":[{"nodeType":"YulAssignment","src":"19795:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19807:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19818:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19803:3:18"},"nodeType":"YulFunctionCall","src":"19803:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19795:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19842:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19853:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19838:3:18"},"nodeType":"YulFunctionCall","src":"19838:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19861:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"19867:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19857:3:18"},"nodeType":"YulFunctionCall","src":"19857:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19831:6:18"},"nodeType":"YulFunctionCall","src":"19831:47:18"},"nodeType":"YulExpressionStatement","src":"19831:47:18"},{"nodeType":"YulAssignment","src":"19887:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20021:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19895:124:18"},"nodeType":"YulFunctionCall","src":"19895:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19887:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19765:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19780:4:18","type":""}],"src":"19614:419:18"},{"body":{"nodeType":"YulBlock","src":"20082:190:18","statements":[{"nodeType":"YulAssignment","src":"20092:33:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20119:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20101:17:18"},"nodeType":"YulFunctionCall","src":"20101:24:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20092:5:18"}]},{"body":{"nodeType":"YulBlock","src":"20215:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20217:16:18"},"nodeType":"YulFunctionCall","src":"20217:18:18"},"nodeType":"YulExpressionStatement","src":"20217:18:18"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20140:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"20147:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20137:2:18"},"nodeType":"YulFunctionCall","src":"20137:77:18"},"nodeType":"YulIf","src":"20134:103:18"},{"nodeType":"YulAssignment","src":"20246:20:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20257:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"20264:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20253:3:18"},"nodeType":"YulFunctionCall","src":"20253:13:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20246:3:18"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20068:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"20078:3:18","type":""}],"src":"20039:233:18"},{"body":{"nodeType":"YulBlock","src":"20384:59:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20406:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"20414:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20402:3:18"},"nodeType":"YulFunctionCall","src":"20402:14:18"},{"hexValue":"696e76616c69642061646472657373","kind":"string","nodeType":"YulLiteral","src":"20418:17:18","type":"","value":"invalid address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20395:6:18"},"nodeType":"YulFunctionCall","src":"20395:41:18"},"nodeType":"YulExpressionStatement","src":"20395:41:18"}]},"name":"store_literal_in_memory_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20376:6:18","type":""}],"src":"20278:165:18"},{"body":{"nodeType":"YulBlock","src":"20595:220:18","statements":[{"nodeType":"YulAssignment","src":"20605:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20671:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"20676:2:18","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20612:58:18"},"nodeType":"YulFunctionCall","src":"20612:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20605:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20777:3:18"}],"functionName":{"name":"store_literal_in_memory_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225","nodeType":"YulIdentifier","src":"20688:88:18"},"nodeType":"YulFunctionCall","src":"20688:93:18"},"nodeType":"YulExpressionStatement","src":"20688:93:18"},{"nodeType":"YulAssignment","src":"20790:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20801:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"20806:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20797:3:18"},"nodeType":"YulFunctionCall","src":"20797:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20790:3:18"}]}]},"name":"abi_encode_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20583:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20591:3:18","type":""}],"src":"20449:366:18"},{"body":{"nodeType":"YulBlock","src":"20992:248:18","statements":[{"nodeType":"YulAssignment","src":"21002:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21014:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21025:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21010:3:18"},"nodeType":"YulFunctionCall","src":"21010:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21002:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21049:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21060:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21045:3:18"},"nodeType":"YulFunctionCall","src":"21045:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21068:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"21074:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21064:3:18"},"nodeType":"YulFunctionCall","src":"21064:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21038:6:18"},"nodeType":"YulFunctionCall","src":"21038:47:18"},"nodeType":"YulExpressionStatement","src":"21038:47:18"},{"nodeType":"YulAssignment","src":"21094:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21228:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21102:124:18"},"nodeType":"YulFunctionCall","src":"21102:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21094:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20972:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20987:4:18","type":""}],"src":"20821:419:18"},{"body":{"nodeType":"YulBlock","src":"21352:52:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21374:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"21382:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21370:3:18"},"nodeType":"YulFunctionCall","src":"21370:14:18"},{"hexValue":"6e6f2066756e6473","kind":"string","nodeType":"YulLiteral","src":"21386:10:18","type":"","value":"no funds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21363:6:18"},"nodeType":"YulFunctionCall","src":"21363:34:18"},"nodeType":"YulExpressionStatement","src":"21363:34:18"}]},"name":"store_literal_in_memory_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21344:6:18","type":""}],"src":"21246:158:18"},{"body":{"nodeType":"YulBlock","src":"21556:219:18","statements":[{"nodeType":"YulAssignment","src":"21566:73:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21632:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"21637:1:18","type":"","value":"8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21573:58:18"},"nodeType":"YulFunctionCall","src":"21573:66:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21566:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21737:3:18"}],"functionName":{"name":"store_literal_in_memory_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920","nodeType":"YulIdentifier","src":"21648:88:18"},"nodeType":"YulFunctionCall","src":"21648:93:18"},"nodeType":"YulExpressionStatement","src":"21648:93:18"},{"nodeType":"YulAssignment","src":"21750:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21761:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"21766:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21757:3:18"},"nodeType":"YulFunctionCall","src":"21757:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21750:3:18"}]}]},"name":"abi_encode_t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21544:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21552:3:18","type":""}],"src":"21410:365:18"},{"body":{"nodeType":"YulBlock","src":"21952:248:18","statements":[{"nodeType":"YulAssignment","src":"21962:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21974:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21985:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21970:3:18"},"nodeType":"YulFunctionCall","src":"21970:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21962:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22009:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22020:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22005:3:18"},"nodeType":"YulFunctionCall","src":"22005:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22028:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"22034:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22024:3:18"},"nodeType":"YulFunctionCall","src":"22024:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21998:6:18"},"nodeType":"YulFunctionCall","src":"21998:47:18"},"nodeType":"YulExpressionStatement","src":"21998:47:18"},{"nodeType":"YulAssignment","src":"22054:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22188:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22062:124:18"},"nodeType":"YulFunctionCall","src":"22062:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22054:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21932:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21947:4:18","type":""}],"src":"21781:419:18"},{"body":{"nodeType":"YulBlock","src":"22260:87:18","statements":[{"nodeType":"YulAssignment","src":"22270:11:18","value":{"name":"ptr","nodeType":"YulIdentifier","src":"22278:3:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"22270:4:18"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22298:1:18","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"22301:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22291:6:18"},"nodeType":"YulFunctionCall","src":"22291:14:18"},"nodeType":"YulExpressionStatement","src":"22291:14:18"},{"nodeType":"YulAssignment","src":"22314:26:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22332:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22335:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"22322:9:18"},"nodeType":"YulFunctionCall","src":"22322:18:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"22314:4:18"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"22247:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"22255:4:18","type":""}],"src":"22206:141:18"},{"body":{"nodeType":"YulBlock","src":"22397:49:18","statements":[{"nodeType":"YulAssignment","src":"22407:33:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22425:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"22432:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22421:3:18"},"nodeType":"YulFunctionCall","src":"22421:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"22437:2:18","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"22417:3:18"},"nodeType":"YulFunctionCall","src":"22417:23:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"22407:6:18"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22380:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"22390:6:18","type":""}],"src":"22353:93:18"},{"body":{"nodeType":"YulBlock","src":"22505:54:18","statements":[{"nodeType":"YulAssignment","src":"22515:37:18","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"22540:4:18"},{"name":"value","nodeType":"YulIdentifier","src":"22546:5:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22536:3:18"},"nodeType":"YulFunctionCall","src":"22536:16:18"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"22515:8:18"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"22480:4:18","type":""},{"name":"value","nodeType":"YulTypedName","src":"22486:5:18","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"22496:8:18","type":""}],"src":"22452:107:18"},{"body":{"nodeType":"YulBlock","src":"22641:317:18","statements":[{"nodeType":"YulVariableDeclaration","src":"22651:35:18","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"22672:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"22684:1:18","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22668:3:18"},"nodeType":"YulFunctionCall","src":"22668:18:18"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"22655:9:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22695:109:18","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"22726:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22737:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"22707:18:18"},"nodeType":"YulFunctionCall","src":"22707:97:18"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"22699:4:18","type":""}]},{"nodeType":"YulAssignment","src":"22813:51:18","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"22844:9:18"},{"name":"toInsert","nodeType":"YulIdentifier","src":"22855:8:18"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"22825:18:18"},"nodeType":"YulFunctionCall","src":"22825:39:18"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"22813:8:18"}]},{"nodeType":"YulAssignment","src":"22873:30:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22886:5:18"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"22897:4:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22893:3:18"},"nodeType":"YulFunctionCall","src":"22893:9:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22882:3:18"},"nodeType":"YulFunctionCall","src":"22882:21:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22873:5:18"}]},{"nodeType":"YulAssignment","src":"22912:40:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22925:5:18"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"22936:8:18"},{"name":"mask","nodeType":"YulIdentifier","src":"22946:4:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22932:3:18"},"nodeType":"YulFunctionCall","src":"22932:19:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"22922:2:18"},"nodeType":"YulFunctionCall","src":"22922:30:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"22912:6:18"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22602:5:18","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"22609:10:18","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"22621:8:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"22634:6:18","type":""}],"src":"22565:393:18"},{"body":{"nodeType":"YulBlock","src":"22996:28:18","statements":[{"nodeType":"YulAssignment","src":"23006:12:18","value":{"name":"value","nodeType":"YulIdentifier","src":"23013:5:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23006:3:18"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22982:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"22992:3:18","type":""}],"src":"22964:60:18"},{"body":{"nodeType":"YulBlock","src":"23090:82:18","statements":[{"nodeType":"YulAssignment","src":"23100:66:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23158:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23140:17:18"},"nodeType":"YulFunctionCall","src":"23140:24:18"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"23131:8:18"},"nodeType":"YulFunctionCall","src":"23131:34:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23113:17:18"},"nodeType":"YulFunctionCall","src":"23113:53:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"23100:9:18"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23070:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"23080:9:18","type":""}],"src":"23030:142:18"},{"body":{"nodeType":"YulBlock","src":"23225:28:18","statements":[{"nodeType":"YulAssignment","src":"23235:12:18","value":{"name":"value","nodeType":"YulIdentifier","src":"23242:5:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23235:3:18"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23211:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23221:3:18","type":""}],"src":"23178:75:18"},{"body":{"nodeType":"YulBlock","src":"23335:193:18","statements":[{"nodeType":"YulVariableDeclaration","src":"23345:63:18","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"23400:7:18"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"23369:30:18"},"nodeType":"YulFunctionCall","src":"23369:39:18"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"23349:16:18","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23424:4:18"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23464:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"23458:5:18"},"nodeType":"YulFunctionCall","src":"23458:11:18"},{"name":"offset","nodeType":"YulIdentifier","src":"23471:6:18"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"23503:16:18"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"23479:23:18"},"nodeType":"YulFunctionCall","src":"23479:41:18"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"23430:27:18"},"nodeType":"YulFunctionCall","src":"23430:91:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23417:6:18"},"nodeType":"YulFunctionCall","src":"23417:105:18"},"nodeType":"YulExpressionStatement","src":"23417:105:18"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"23312:4:18","type":""},{"name":"offset","nodeType":"YulTypedName","src":"23318:6:18","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"23326:7:18","type":""}],"src":"23259:269:18"},{"body":{"nodeType":"YulBlock","src":"23583:24:18","statements":[{"nodeType":"YulAssignment","src":"23593:8:18","value":{"kind":"number","nodeType":"YulLiteral","src":"23600:1:18","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23593:3:18"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23579:3:18","type":""}],"src":"23534:73:18"},{"body":{"nodeType":"YulBlock","src":"23666:136:18","statements":[{"nodeType":"YulVariableDeclaration","src":"23676:46:18","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"23690:30:18"},"nodeType":"YulFunctionCall","src":"23690:32:18"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"23680:6:18","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23775:4:18"},{"name":"offset","nodeType":"YulIdentifier","src":"23781:6:18"},{"name":"zero_0","nodeType":"YulIdentifier","src":"23789:6:18"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"23731:43:18"},"nodeType":"YulFunctionCall","src":"23731:65:18"},"nodeType":"YulExpressionStatement","src":"23731:65:18"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"23652:4:18","type":""},{"name":"offset","nodeType":"YulTypedName","src":"23658:6:18","type":""}],"src":"23613:189:18"},{"body":{"nodeType":"YulBlock","src":"23858:136:18","statements":[{"body":{"nodeType":"YulBlock","src":"23925:63:18","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"23969:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"23976:1:18","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"23939:29:18"},"nodeType":"YulFunctionCall","src":"23939:39:18"},"nodeType":"YulExpressionStatement","src":"23939:39:18"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"23878:5:18"},{"name":"end","nodeType":"YulIdentifier","src":"23885:3:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23875:2:18"},"nodeType":"YulFunctionCall","src":"23875:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23890:26:18","statements":[{"nodeType":"YulAssignment","src":"23892:22:18","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"23905:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"23912:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23901:3:18"},"nodeType":"YulFunctionCall","src":"23901:13:18"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"23892:5:18"}]}]},"pre":{"nodeType":"YulBlock","src":"23872:2:18","statements":[]},"src":"23868:120:18"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"23846:5:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"23853:3:18","type":""}],"src":"23808:186:18"},{"body":{"nodeType":"YulBlock","src":"24079:464:18","statements":[{"body":{"nodeType":"YulBlock","src":"24105:431:18","statements":[{"nodeType":"YulVariableDeclaration","src":"24119:54:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"24167:5:18"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"24135:31:18"},"nodeType":"YulFunctionCall","src":"24135:38:18"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"24123:8:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24186:63:18","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"24209:8:18"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"24237:10:18"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"24219:17:18"},"nodeType":"YulFunctionCall","src":"24219:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24205:3:18"},"nodeType":"YulFunctionCall","src":"24205:44:18"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"24190:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"24406:27:18","statements":[{"nodeType":"YulAssignment","src":"24408:23:18","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"24423:8:18"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"24408:11:18"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"24390:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"24402:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24387:2:18"},"nodeType":"YulFunctionCall","src":"24387:18:18"},"nodeType":"YulIf","src":"24384:49:18"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"24475:11:18"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"24492:8:18"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"24520:3:18"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"24502:17:18"},"nodeType":"YulFunctionCall","src":"24502:22:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24488:3:18"},"nodeType":"YulFunctionCall","src":"24488:37:18"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"24446:28:18"},"nodeType":"YulFunctionCall","src":"24446:80:18"},"nodeType":"YulExpressionStatement","src":"24446:80:18"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"24096:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"24101:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24093:2:18"},"nodeType":"YulFunctionCall","src":"24093:11:18"},"nodeType":"YulIf","src":"24090:446:18"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"24055:5:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"24062:3:18","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"24067:10:18","type":""}],"src":"24000:543:18"},{"body":{"nodeType":"YulBlock","src":"24612:54:18","statements":[{"nodeType":"YulAssignment","src":"24622:37:18","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"24647:4:18"},{"name":"value","nodeType":"YulIdentifier","src":"24653:5:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"24643:3:18"},"nodeType":"YulFunctionCall","src":"24643:16:18"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"24622:8:18"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"24587:4:18","type":""},{"name":"value","nodeType":"YulTypedName","src":"24593:5:18","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"24603:8:18","type":""}],"src":"24549:117:18"},{"body":{"nodeType":"YulBlock","src":"24723:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"24733:68:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24782:1:18","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"24785:5:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24778:3:18"},"nodeType":"YulFunctionCall","src":"24778:13:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24797:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24793:3:18"},"nodeType":"YulFunctionCall","src":"24793:6:18"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"24749:28:18"},"nodeType":"YulFunctionCall","src":"24749:51:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24745:3:18"},"nodeType":"YulFunctionCall","src":"24745:56:18"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"24737:4:18","type":""}]},{"nodeType":"YulAssignment","src":"24810:25:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"24824:4:18"},{"name":"mask","nodeType":"YulIdentifier","src":"24830:4:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24820:3:18"},"nodeType":"YulFunctionCall","src":"24820:15:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"24810:6:18"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"24700:4:18","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"24706:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"24716:6:18","type":""}],"src":"24672:169:18"},{"body":{"nodeType":"YulBlock","src":"24927:214:18","statements":[{"nodeType":"YulAssignment","src":"25060:37:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"25087:4:18"},{"name":"len","nodeType":"YulIdentifier","src":"25093:3:18"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"25068:18:18"},"nodeType":"YulFunctionCall","src":"25068:29:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"25060:4:18"}]},{"nodeType":"YulAssignment","src":"25106:29:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"25117:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25127:1:18","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"25130:3:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25123:3:18"},"nodeType":"YulFunctionCall","src":"25123:11:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"25114:2:18"},"nodeType":"YulFunctionCall","src":"25114:21:18"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"25106:4:18"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"24908:4:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"24914:3:18","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"24922:4:18","type":""}],"src":"24846:295:18"},{"body":{"nodeType":"YulBlock","src":"25238:1303:18","statements":[{"nodeType":"YulVariableDeclaration","src":"25249:51:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25296:3:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25263:32:18"},"nodeType":"YulFunctionCall","src":"25263:37:18"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"25253:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"25385:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"25387:16:18"},"nodeType":"YulFunctionCall","src":"25387:18:18"},"nodeType":"YulExpressionStatement","src":"25387:18:18"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"25357:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"25365:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25354:2:18"},"nodeType":"YulFunctionCall","src":"25354:30:18"},"nodeType":"YulIf","src":"25351:56:18"},{"nodeType":"YulVariableDeclaration","src":"25417:52:18","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"25463:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"25457:5:18"},"nodeType":"YulFunctionCall","src":"25457:11:18"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"25431:25:18"},"nodeType":"YulFunctionCall","src":"25431:38:18"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"25421:6:18","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"25562:4:18"},{"name":"oldLen","nodeType":"YulIdentifier","src":"25568:6:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"25576:6:18"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"25516:45:18"},"nodeType":"YulFunctionCall","src":"25516:67:18"},"nodeType":"YulExpressionStatement","src":"25516:67:18"},{"nodeType":"YulVariableDeclaration","src":"25593:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"25610:1:18","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"25597:9:18","type":""}]},{"nodeType":"YulAssignment","src":"25621:17:18","value":{"kind":"number","nodeType":"YulLiteral","src":"25634:4:18","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"25621:9:18"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"25685:611:18","statements":[{"nodeType":"YulVariableDeclaration","src":"25699:37:18","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"25718:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25730:4:18","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"25726:3:18"},"nodeType":"YulFunctionCall","src":"25726:9:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25714:3:18"},"nodeType":"YulFunctionCall","src":"25714:22:18"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"25703:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25750:51:18","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"25796:4:18"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"25764:31:18"},"nodeType":"YulFunctionCall","src":"25764:37:18"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"25754:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25814:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"25823:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"25818:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"25882:163:18","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"25907:6:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25925:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"25930:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25921:3:18"},"nodeType":"YulFunctionCall","src":"25921:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25915:5:18"},"nodeType":"YulFunctionCall","src":"25915:26:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"25900:6:18"},"nodeType":"YulFunctionCall","src":"25900:42:18"},"nodeType":"YulExpressionStatement","src":"25900:42:18"},{"nodeType":"YulAssignment","src":"25959:24:18","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"25973:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"25981:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25969:3:18"},"nodeType":"YulFunctionCall","src":"25969:14:18"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"25959:6:18"}]},{"nodeType":"YulAssignment","src":"26000:31:18","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"26017:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26028:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26013:3:18"},"nodeType":"YulFunctionCall","src":"26013:18:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"26000:9:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25848:1:18"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"25851:7:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25845:2:18"},"nodeType":"YulFunctionCall","src":"25845:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"25860:21:18","statements":[{"nodeType":"YulAssignment","src":"25862:17:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"25871:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"25874:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25867:3:18"},"nodeType":"YulFunctionCall","src":"25867:12:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"25862:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"25841:3:18","statements":[]},"src":"25837:208:18"},{"body":{"nodeType":"YulBlock","src":"26081:156:18","statements":[{"nodeType":"YulVariableDeclaration","src":"26099:43:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"26126:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"26131:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26122:3:18"},"nodeType":"YulFunctionCall","src":"26122:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26116:5:18"},"nodeType":"YulFunctionCall","src":"26116:26:18"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"26103:9:18","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"26166:6:18"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"26193:9:18"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"26208:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"26216:4:18","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26204:3:18"},"nodeType":"YulFunctionCall","src":"26204:17:18"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"26174:18:18"},"nodeType":"YulFunctionCall","src":"26174:48:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"26159:6:18"},"nodeType":"YulFunctionCall","src":"26159:64:18"},"nodeType":"YulExpressionStatement","src":"26159:64:18"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"26064:7:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"26073:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26061:2:18"},"nodeType":"YulFunctionCall","src":"26061:19:18"},"nodeType":"YulIf","src":"26058:179:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26257:4:18"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"26271:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"26279:1:18","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"26267:3:18"},"nodeType":"YulFunctionCall","src":"26267:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"26283:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26263:3:18"},"nodeType":"YulFunctionCall","src":"26263:22:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"26250:6:18"},"nodeType":"YulFunctionCall","src":"26250:36:18"},"nodeType":"YulExpressionStatement","src":"26250:36:18"}]},"nodeType":"YulCase","src":"25678:618:18","value":{"kind":"number","nodeType":"YulLiteral","src":"25683:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"26313:222:18","statements":[{"nodeType":"YulVariableDeclaration","src":"26327:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"26340:1:18","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"26331:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"26364:67:18","statements":[{"nodeType":"YulAssignment","src":"26382:35:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"26401:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"26406:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26397:3:18"},"nodeType":"YulFunctionCall","src":"26397:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26391:5:18"},"nodeType":"YulFunctionCall","src":"26391:26:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"26382:5:18"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"26357:6:18"},"nodeType":"YulIf","src":"26354:77:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26451:4:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26510:5:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"26517:6:18"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"26457:52:18"},"nodeType":"YulFunctionCall","src":"26457:67:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"26444:6:18"},"nodeType":"YulFunctionCall","src":"26444:81:18"},"nodeType":"YulExpressionStatement","src":"26444:81:18"}]},"nodeType":"YulCase","src":"26305:230:18","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"25658:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"25666:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25655:2:18"},"nodeType":"YulFunctionCall","src":"25655:14:18"},"nodeType":"YulSwitch","src":"25648:887:18"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"25227:4:18","type":""},{"name":"src","nodeType":"YulTypedName","src":"25233:3:18","type":""}],"src":"25146:1395:18"},{"body":{"nodeType":"YulBlock","src":"26653:66:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26675:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"26683:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26671:3:18"},"nodeType":"YulFunctionCall","src":"26671:14:18"},{"hexValue":"74727573746564207369676e6572206e6f7420736574","kind":"string","nodeType":"YulLiteral","src":"26687:24:18","type":"","value":"trusted signer not set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26664:6:18"},"nodeType":"YulFunctionCall","src":"26664:48:18"},"nodeType":"YulExpressionStatement","src":"26664:48:18"}]},"name":"store_literal_in_memory_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26645:6:18","type":""}],"src":"26547:172:18"},{"body":{"nodeType":"YulBlock","src":"26871:220:18","statements":[{"nodeType":"YulAssignment","src":"26881:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26947:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"26952:2:18","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26888:58:18"},"nodeType":"YulFunctionCall","src":"26888:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26881:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27053:3:18"}],"functionName":{"name":"store_literal_in_memory_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1","nodeType":"YulIdentifier","src":"26964:88:18"},"nodeType":"YulFunctionCall","src":"26964:93:18"},"nodeType":"YulExpressionStatement","src":"26964:93:18"},{"nodeType":"YulAssignment","src":"27066:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27077:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"27082:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27073:3:18"},"nodeType":"YulFunctionCall","src":"27073:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27066:3:18"}]}]},"name":"abi_encode_t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26859:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26867:3:18","type":""}],"src":"26725:366:18"},{"body":{"nodeType":"YulBlock","src":"27268:248:18","statements":[{"nodeType":"YulAssignment","src":"27278:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27290:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27301:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27286:3:18"},"nodeType":"YulFunctionCall","src":"27286:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27278:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27325:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27336:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27321:3:18"},"nodeType":"YulFunctionCall","src":"27321:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27344:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"27350:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27340:3:18"},"nodeType":"YulFunctionCall","src":"27340:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27314:6:18"},"nodeType":"YulFunctionCall","src":"27314:47:18"},"nodeType":"YulExpressionStatement","src":"27314:47:18"},{"nodeType":"YulAssignment","src":"27370:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27504:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27378:124:18"},"nodeType":"YulFunctionCall","src":"27378:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27370:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27248:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27263:4:18","type":""}],"src":"27097:419:18"},{"body":{"nodeType":"YulBlock","src":"27628:68:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27650:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"27658:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27646:3:18"},"nodeType":"YulFunctionCall","src":"27646:14:18"},{"hexValue":"616c726561647920636c61696d6564206f6e2d636861696e","kind":"string","nodeType":"YulLiteral","src":"27662:26:18","type":"","value":"already claimed on-chain"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27639:6:18"},"nodeType":"YulFunctionCall","src":"27639:50:18"},"nodeType":"YulExpressionStatement","src":"27639:50:18"}]},"name":"store_literal_in_memory_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27620:6:18","type":""}],"src":"27522:174:18"},{"body":{"nodeType":"YulBlock","src":"27848:220:18","statements":[{"nodeType":"YulAssignment","src":"27858:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27924:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"27929:2:18","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27865:58:18"},"nodeType":"YulFunctionCall","src":"27865:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27858:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28030:3:18"}],"functionName":{"name":"store_literal_in_memory_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3","nodeType":"YulIdentifier","src":"27941:88:18"},"nodeType":"YulFunctionCall","src":"27941:93:18"},"nodeType":"YulExpressionStatement","src":"27941:93:18"},{"nodeType":"YulAssignment","src":"28043:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28054:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"28059:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28050:3:18"},"nodeType":"YulFunctionCall","src":"28050:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28043:3:18"}]}]},"name":"abi_encode_t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27836:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27844:3:18","type":""}],"src":"27702:366:18"},{"body":{"nodeType":"YulBlock","src":"28245:248:18","statements":[{"nodeType":"YulAssignment","src":"28255:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28267:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28278:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28263:3:18"},"nodeType":"YulFunctionCall","src":"28263:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28255:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28302:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28313:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28298:3:18"},"nodeType":"YulFunctionCall","src":"28298:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28321:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"28327:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28317:3:18"},"nodeType":"YulFunctionCall","src":"28317:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28291:6:18"},"nodeType":"YulFunctionCall","src":"28291:47:18"},"nodeType":"YulExpressionStatement","src":"28291:47:18"},{"nodeType":"YulAssignment","src":"28347:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28481:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28355:124:18"},"nodeType":"YulFunctionCall","src":"28355:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28347:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28225:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28240:4:18","type":""}],"src":"28074:419:18"},{"body":{"nodeType":"YulBlock","src":"28541:52:18","statements":[{"nodeType":"YulAssignment","src":"28551:35:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28576:2:18","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"28580:5:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28572:3:18"},"nodeType":"YulFunctionCall","src":"28572:14:18"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"28551:8:18"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28522:5:18","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"28532:8:18","type":""}],"src":"28499:94:18"},{"body":{"nodeType":"YulBlock","src":"28646:47:18","statements":[{"nodeType":"YulAssignment","src":"28656:31:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28681:5:18"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"28667:13:18"},"nodeType":"YulFunctionCall","src":"28667:20:18"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"28656:7:18"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28628:5:18","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"28638:7:18","type":""}],"src":"28599:94:18"},{"body":{"nodeType":"YulBlock","src":"28746:53:18","statements":[{"nodeType":"YulAssignment","src":"28756:37:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28787:5:18"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"28767:19:18"},"nodeType":"YulFunctionCall","src":"28767:26:18"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"28756:7:18"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28728:5:18","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"28738:7:18","type":""}],"src":"28699:100:18"},{"body":{"nodeType":"YulBlock","src":"28888:74:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28905:3:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28948:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"28930:17:18"},"nodeType":"YulFunctionCall","src":"28930:24:18"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"28910:19:18"},"nodeType":"YulFunctionCall","src":"28910:45:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28898:6:18"},"nodeType":"YulFunctionCall","src":"28898:58:18"},"nodeType":"YulExpressionStatement","src":"28898:58:18"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28876:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"28883:3:18","type":""}],"src":"28805:157:18"},{"body":{"nodeType":"YulBlock","src":"29015:32:18","statements":[{"nodeType":"YulAssignment","src":"29025:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"29036:5:18"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"29025:7:18"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28997:5:18","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"29007:7:18","type":""}],"src":"28968:79:18"},{"body":{"nodeType":"YulBlock","src":"29136:74:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29153:3:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29196:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29178:17:18"},"nodeType":"YulFunctionCall","src":"29178:24:18"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"29158:19:18"},"nodeType":"YulFunctionCall","src":"29158:45:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29146:6:18"},"nodeType":"YulFunctionCall","src":"29146:58:18"},"nodeType":"YulExpressionStatement","src":"29146:58:18"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29124:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29131:3:18","type":""}],"src":"29053:157:18"},{"body":{"nodeType":"YulBlock","src":"29388:366:18","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29461:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"29470:3:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"29399:61:18"},"nodeType":"YulFunctionCall","src":"29399:75:18"},"nodeType":"YulExpressionStatement","src":"29399:75:18"},{"nodeType":"YulAssignment","src":"29483:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29494:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"29499:2:18","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29490:3:18"},"nodeType":"YulFunctionCall","src":"29490:12:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29483:3:18"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29574:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"29583:3:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"29512:61:18"},"nodeType":"YulFunctionCall","src":"29512:75:18"},"nodeType":"YulExpressionStatement","src":"29512:75:18"},{"nodeType":"YulAssignment","src":"29596:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29607:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"29612:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29603:3:18"},"nodeType":"YulFunctionCall","src":"29603:12:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29596:3:18"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"29687:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"29696:3:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"29625:61:18"},"nodeType":"YulFunctionCall","src":"29625:75:18"},"nodeType":"YulExpressionStatement","src":"29625:75:18"},{"nodeType":"YulAssignment","src":"29709:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29720:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"29725:2:18","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29716:3:18"},"nodeType":"YulFunctionCall","src":"29716:12:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29709:3:18"}]},{"nodeType":"YulAssignment","src":"29738:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"29745:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29738:3:18"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29351:3:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29357:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29365:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29373:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29384:3:18","type":""}],"src":"29216:538:18"},{"body":{"nodeType":"YulBlock","src":"29866:61:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29888:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"29896:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29884:3:18"},"nodeType":"YulFunctionCall","src":"29884:14:18"},{"hexValue":"696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"29900:19:18","type":"","value":"invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29877:6:18"},"nodeType":"YulFunctionCall","src":"29877:43:18"},"nodeType":"YulExpressionStatement","src":"29877:43:18"}]},"name":"store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29858:6:18","type":""}],"src":"29760:167:18"},{"body":{"nodeType":"YulBlock","src":"30079:220:18","statements":[{"nodeType":"YulAssignment","src":"30089:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30155:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"30160:2:18","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30096:58:18"},"nodeType":"YulFunctionCall","src":"30096:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30089:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30261:3:18"}],"functionName":{"name":"store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","nodeType":"YulIdentifier","src":"30172:88:18"},"nodeType":"YulFunctionCall","src":"30172:93:18"},"nodeType":"YulExpressionStatement","src":"30172:93:18"},{"nodeType":"YulAssignment","src":"30274:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30285:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"30290:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30281:3:18"},"nodeType":"YulFunctionCall","src":"30281:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30274:3:18"}]}]},"name":"abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30067:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30075:3:18","type":""}],"src":"29933:366:18"},{"body":{"nodeType":"YulBlock","src":"30476:248:18","statements":[{"nodeType":"YulAssignment","src":"30486:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30498:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"30509:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30494:3:18"},"nodeType":"YulFunctionCall","src":"30494:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30486:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30533:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"30544:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30529:3:18"},"nodeType":"YulFunctionCall","src":"30529:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30552:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"30558:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30548:3:18"},"nodeType":"YulFunctionCall","src":"30548:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30522:6:18"},"nodeType":"YulFunctionCall","src":"30522:47:18"},"nodeType":"YulExpressionStatement","src":"30522:47:18"},{"nodeType":"YulAssignment","src":"30578:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30712:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30586:124:18"},"nodeType":"YulFunctionCall","src":"30586:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30578:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30456:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30471:4:18","type":""}],"src":"30305:419:18"},{"body":{"nodeType":"YulBlock","src":"30844:34:18","statements":[{"nodeType":"YulAssignment","src":"30854:18:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"30869:3:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"30854:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30816:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"30821:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"30832:11:18","type":""}],"src":"30730:148:18"},{"body":{"nodeType":"YulBlock","src":"30994:280:18","statements":[{"nodeType":"YulVariableDeclaration","src":"31004:53:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31051:5:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"31018:32:18"},"nodeType":"YulFunctionCall","src":"31018:39:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"31008:6:18","type":""}]},{"nodeType":"YulAssignment","src":"31066:96:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31150:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"31155:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31073:76:18"},"nodeType":"YulFunctionCall","src":"31073:89:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31066:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31210:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"31217:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31206:3:18"},"nodeType":"YulFunctionCall","src":"31206:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"31224:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"31229:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"31171:34:18"},"nodeType":"YulFunctionCall","src":"31171:65:18"},"nodeType":"YulExpressionStatement","src":"31171:65:18"},{"nodeType":"YulAssignment","src":"31245:23:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31256:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"31261:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31252:3:18"},"nodeType":"YulFunctionCall","src":"31252:16:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31245:3:18"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30975:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"30982:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30990:3:18","type":""}],"src":"30884:390:18"},{"body":{"nodeType":"YulBlock","src":"31464:251:18","statements":[{"nodeType":"YulAssignment","src":"31475:102:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31564:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"31573:3:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31482:81:18"},"nodeType":"YulFunctionCall","src":"31482:95:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31475:3:18"}]},{"nodeType":"YulAssignment","src":"31587:102:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31676:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"31685:3:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31594:81:18"},"nodeType":"YulFunctionCall","src":"31594:95:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31587:3:18"}]},{"nodeType":"YulAssignment","src":"31699:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"31706:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31699:3:18"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31435:3:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31441:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31449:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31460:3:18","type":""}],"src":"31280:435:18"},{"body":{"nodeType":"YulBlock","src":"31827:59:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31849:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"31857:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31845:3:18"},"nodeType":"YulFunctionCall","src":"31845:14:18"},{"hexValue":"696e76616c69642076617269616e74","kind":"string","nodeType":"YulLiteral","src":"31861:17:18","type":"","value":"invalid variant"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31838:6:18"},"nodeType":"YulFunctionCall","src":"31838:41:18"},"nodeType":"YulExpressionStatement","src":"31838:41:18"}]},"name":"store_literal_in_memory_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31819:6:18","type":""}],"src":"31721:165:18"},{"body":{"nodeType":"YulBlock","src":"32038:220:18","statements":[{"nodeType":"YulAssignment","src":"32048:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32114:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"32119:2:18","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32055:58:18"},"nodeType":"YulFunctionCall","src":"32055:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32048:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32220:3:18"}],"functionName":{"name":"store_literal_in_memory_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662","nodeType":"YulIdentifier","src":"32131:88:18"},"nodeType":"YulFunctionCall","src":"32131:93:18"},"nodeType":"YulExpressionStatement","src":"32131:93:18"},{"nodeType":"YulAssignment","src":"32233:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32244:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"32249:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32240:3:18"},"nodeType":"YulFunctionCall","src":"32240:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32233:3:18"}]}]},"name":"abi_encode_t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32026:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32034:3:18","type":""}],"src":"31892:366:18"},{"body":{"nodeType":"YulBlock","src":"32435:248:18","statements":[{"nodeType":"YulAssignment","src":"32445:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32457:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32468:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32453:3:18"},"nodeType":"YulFunctionCall","src":"32453:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32445:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32492:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32503:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32488:3:18"},"nodeType":"YulFunctionCall","src":"32488:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32511:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"32517:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32507:3:18"},"nodeType":"YulFunctionCall","src":"32507:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32481:6:18"},"nodeType":"YulFunctionCall","src":"32481:47:18"},"nodeType":"YulExpressionStatement","src":"32481:47:18"},{"nodeType":"YulAssignment","src":"32537:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32671:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32545:124:18"},"nodeType":"YulFunctionCall","src":"32545:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32537:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32415:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32430:4:18","type":""}],"src":"32264:419:18"},{"body":{"nodeType":"YulBlock","src":"32795:53:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32817:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"32825:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32813:3:18"},"nodeType":"YulFunctionCall","src":"32813:14:18"},{"hexValue":"6e6f74206f776e6572","kind":"string","nodeType":"YulLiteral","src":"32829:11:18","type":"","value":"not owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32806:6:18"},"nodeType":"YulFunctionCall","src":"32806:35:18"},"nodeType":"YulExpressionStatement","src":"32806:35:18"}]},"name":"store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32787:6:18","type":""}],"src":"32689:159:18"},{"body":{"nodeType":"YulBlock","src":"33000:219:18","statements":[{"nodeType":"YulAssignment","src":"33010:73:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33076:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"33081:1:18","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33017:58:18"},"nodeType":"YulFunctionCall","src":"33017:66:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33010:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33181:3:18"}],"functionName":{"name":"store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e","nodeType":"YulIdentifier","src":"33092:88:18"},"nodeType":"YulFunctionCall","src":"33092:93:18"},"nodeType":"YulExpressionStatement","src":"33092:93:18"},{"nodeType":"YulAssignment","src":"33194:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33205:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"33210:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33201:3:18"},"nodeType":"YulFunctionCall","src":"33201:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33194:3:18"}]}]},"name":"abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32988:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32996:3:18","type":""}],"src":"32854:365:18"},{"body":{"nodeType":"YulBlock","src":"33396:248:18","statements":[{"nodeType":"YulAssignment","src":"33406:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33418:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33429:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33414:3:18"},"nodeType":"YulFunctionCall","src":"33414:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33406:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33453:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33464:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33449:3:18"},"nodeType":"YulFunctionCall","src":"33449:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33472:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"33478:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33468:3:18"},"nodeType":"YulFunctionCall","src":"33468:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33442:6:18"},"nodeType":"YulFunctionCall","src":"33442:47:18"},"nodeType":"YulExpressionStatement","src":"33442:47:18"},{"nodeType":"YulAssignment","src":"33498:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33632:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33506:124:18"},"nodeType":"YulFunctionCall","src":"33506:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33498:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33376:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33391:4:18","type":""}],"src":"33225:419:18"},{"body":{"nodeType":"YulBlock","src":"33756:119:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33778:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"33786:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33774:3:18"},"nodeType":"YulFunctionCall","src":"33774:14:18"},{"hexValue":"6f6e6c79206e65757472616c20746f6b656e732063616e206265207472616e73","kind":"string","nodeType":"YulLiteral","src":"33790:34:18","type":"","value":"only neutral tokens can be trans"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33767:6:18"},"nodeType":"YulFunctionCall","src":"33767:58:18"},"nodeType":"YulExpressionStatement","src":"33767:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33846:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"33854:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33842:3:18"},"nodeType":"YulFunctionCall","src":"33842:15:18"},{"hexValue":"666f726d6564","kind":"string","nodeType":"YulLiteral","src":"33859:8:18","type":"","value":"formed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33835:6:18"},"nodeType":"YulFunctionCall","src":"33835:33:18"},"nodeType":"YulExpressionStatement","src":"33835:33:18"}]},"name":"store_literal_in_memory_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33748:6:18","type":""}],"src":"33650:225:18"},{"body":{"nodeType":"YulBlock","src":"34027:220:18","statements":[{"nodeType":"YulAssignment","src":"34037:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34103:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"34108:2:18","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34044:58:18"},"nodeType":"YulFunctionCall","src":"34044:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34037:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34209:3:18"}],"functionName":{"name":"store_literal_in_memory_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277","nodeType":"YulIdentifier","src":"34120:88:18"},"nodeType":"YulFunctionCall","src":"34120:93:18"},"nodeType":"YulExpressionStatement","src":"34120:93:18"},{"nodeType":"YulAssignment","src":"34222:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34233:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"34238:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34229:3:18"},"nodeType":"YulFunctionCall","src":"34229:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34222:3:18"}]}]},"name":"abi_encode_t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34015:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34023:3:18","type":""}],"src":"33881:366:18"},{"body":{"nodeType":"YulBlock","src":"34424:248:18","statements":[{"nodeType":"YulAssignment","src":"34434:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34446:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"34457:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34442:3:18"},"nodeType":"YulFunctionCall","src":"34442:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34434:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34481:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"34492:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34477:3:18"},"nodeType":"YulFunctionCall","src":"34477:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34500:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"34506:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34496:3:18"},"nodeType":"YulFunctionCall","src":"34496:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34470:6:18"},"nodeType":"YulFunctionCall","src":"34470:47:18"},"nodeType":"YulExpressionStatement","src":"34470:47:18"},{"nodeType":"YulAssignment","src":"34526:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34660:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34534:124:18"},"nodeType":"YulFunctionCall","src":"34534:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34526:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34404:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34419:4:18","type":""}],"src":"34253:419:18"},{"body":{"nodeType":"YulBlock","src":"34736:40:18","statements":[{"nodeType":"YulAssignment","src":"34747:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34763:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34757:5:18"},"nodeType":"YulFunctionCall","src":"34757:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"34747:6:18"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34719:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"34729:6:18","type":""}],"src":"34678:98:18"},{"body":{"nodeType":"YulBlock","src":"34877:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34894:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"34899:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34887:6:18"},"nodeType":"YulFunctionCall","src":"34887:19:18"},"nodeType":"YulExpressionStatement","src":"34887:19:18"},{"nodeType":"YulAssignment","src":"34915:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34934:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"34939:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34930:3:18"},"nodeType":"YulFunctionCall","src":"34930:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"34915:11:18"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34849:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"34854:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"34865:11:18","type":""}],"src":"34782:168:18"},{"body":{"nodeType":"YulBlock","src":"35046:283:18","statements":[{"nodeType":"YulVariableDeclaration","src":"35056:52:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35102:5:18"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"35070:31:18"},"nodeType":"YulFunctionCall","src":"35070:38:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"35060:6:18","type":""}]},{"nodeType":"YulAssignment","src":"35117:77:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35182:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"35187:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35124:57:18"},"nodeType":"YulFunctionCall","src":"35124:70:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35117:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35242:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"35249:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35238:3:18"},"nodeType":"YulFunctionCall","src":"35238:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"35256:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"35261:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"35203:34:18"},"nodeType":"YulFunctionCall","src":"35203:65:18"},"nodeType":"YulExpressionStatement","src":"35203:65:18"},{"nodeType":"YulAssignment","src":"35277:46:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35288:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35315:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"35293:21:18"},"nodeType":"YulFunctionCall","src":"35293:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35284:3:18"},"nodeType":"YulFunctionCall","src":"35284:39:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35277:3:18"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35027:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35034:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35042:3:18","type":""}],"src":"34956:373:18"},{"body":{"nodeType":"YulBlock","src":"35535:440:18","statements":[{"nodeType":"YulAssignment","src":"35545:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35557:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35568:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35553:3:18"},"nodeType":"YulFunctionCall","src":"35553:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35545:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35626:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35639:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35650:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35635:3:18"},"nodeType":"YulFunctionCall","src":"35635:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35582:43:18"},"nodeType":"YulFunctionCall","src":"35582:71:18"},"nodeType":"YulExpressionStatement","src":"35582:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35707:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35720:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35731:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35716:3:18"},"nodeType":"YulFunctionCall","src":"35716:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35663:43:18"},"nodeType":"YulFunctionCall","src":"35663:72:18"},"nodeType":"YulExpressionStatement","src":"35663:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"35789:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35802:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35813:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35798:3:18"},"nodeType":"YulFunctionCall","src":"35798:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"35745:43:18"},"nodeType":"YulFunctionCall","src":"35745:72:18"},"nodeType":"YulExpressionStatement","src":"35745:72:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35838:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35849:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35834:3:18"},"nodeType":"YulFunctionCall","src":"35834:18:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35858:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"35864:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35854:3:18"},"nodeType":"YulFunctionCall","src":"35854:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35827:6:18"},"nodeType":"YulFunctionCall","src":"35827:48:18"},"nodeType":"YulExpressionStatement","src":"35827:48:18"},{"nodeType":"YulAssignment","src":"35884:84:18","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"35954:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"35963:4:18"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35892:61:18"},"nodeType":"YulFunctionCall","src":"35892:76:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35884:4:18"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35483:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"35495:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35503:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35511:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35519:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35530:4:18","type":""}],"src":"35335:640:18"},{"body":{"nodeType":"YulBlock","src":"36043:79:18","statements":[{"nodeType":"YulAssignment","src":"36053:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"36068:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36062:5:18"},"nodeType":"YulFunctionCall","src":"36062:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"36053:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36110:5:18"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"36084:25:18"},"nodeType":"YulFunctionCall","src":"36084:32:18"},"nodeType":"YulExpressionStatement","src":"36084:32:18"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"36021:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"36029:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"36037:5:18","type":""}],"src":"35981:141:18"},{"body":{"nodeType":"YulBlock","src":"36204:273:18","statements":[{"body":{"nodeType":"YulBlock","src":"36250:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"36252:77:18"},"nodeType":"YulFunctionCall","src":"36252:79:18"},"nodeType":"YulExpressionStatement","src":"36252:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"36225:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"36234:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36221:3:18"},"nodeType":"YulFunctionCall","src":"36221:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"36246:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"36217:3:18"},"nodeType":"YulFunctionCall","src":"36217:32:18"},"nodeType":"YulIf","src":"36214:119:18"},{"nodeType":"YulBlock","src":"36343:127:18","statements":[{"nodeType":"YulVariableDeclaration","src":"36358:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"36372:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"36362:6:18","type":""}]},{"nodeType":"YulAssignment","src":"36387:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36432:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"36443:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36428:3:18"},"nodeType":"YulFunctionCall","src":"36428:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"36452:7:18"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"36397:30:18"},"nodeType":"YulFunctionCall","src":"36397:63:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"36387:6:18"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36174:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"36185:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"36197:6:18","type":""}],"src":"36128:349:18"},{"body":{"nodeType":"YulBlock","src":"36609:206:18","statements":[{"nodeType":"YulAssignment","src":"36619:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36631:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"36642:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36627:3:18"},"nodeType":"YulFunctionCall","src":"36627:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36619:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36699:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36712:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"36723:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36708:3:18"},"nodeType":"YulFunctionCall","src":"36708:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"36655:43:18"},"nodeType":"YulFunctionCall","src":"36655:71:18"},"nodeType":"YulExpressionStatement","src":"36655:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36780:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36793:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"36804:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36789:3:18"},"nodeType":"YulFunctionCall","src":"36789:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36736:43:18"},"nodeType":"YulFunctionCall","src":"36736:72:18"},"nodeType":"YulExpressionStatement","src":"36736:72:18"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36573:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36585:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36593:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36604:4:18","type":""}],"src":"36483:332:18"},{"body":{"nodeType":"YulBlock","src":"36849:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36866:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36869:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36859:6:18"},"nodeType":"YulFunctionCall","src":"36859:88:18"},"nodeType":"YulExpressionStatement","src":"36859:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36963:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"36966:4:18","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36956:6:18"},"nodeType":"YulFunctionCall","src":"36956:15:18"},"nodeType":"YulExpressionStatement","src":"36956:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36987:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36990:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"36980:6:18"},"nodeType":"YulFunctionCall","src":"36980:15:18"},"nodeType":"YulExpressionStatement","src":"36980:15:18"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"36821:180:18"},{"body":{"nodeType":"YulBlock","src":"37052:32:18","statements":[{"nodeType":"YulAssignment","src":"37062:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"37073:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"37062:7:18"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37034:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"37044:7:18","type":""}],"src":"37007:77:18"},{"body":{"nodeType":"YulBlock","src":"37155:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37172:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37195:5:18"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"37177:17:18"},"nodeType":"YulFunctionCall","src":"37177:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37165:6:18"},"nodeType":"YulFunctionCall","src":"37165:37:18"},"nodeType":"YulExpressionStatement","src":"37165:37:18"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37143:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"37150:3:18","type":""}],"src":"37090:118:18"},{"body":{"nodeType":"YulBlock","src":"37312:124:18","statements":[{"nodeType":"YulAssignment","src":"37322:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37334:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"37345:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37330:3:18"},"nodeType":"YulFunctionCall","src":"37330:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37322:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37402:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37415:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"37426:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37411:3:18"},"nodeType":"YulFunctionCall","src":"37411:17:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37358:43:18"},"nodeType":"YulFunctionCall","src":"37358:71:18"},"nodeType":"YulExpressionStatement","src":"37358:71:18"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37284:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37296:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37307:4:18","type":""}],"src":"37214:222:18"},{"body":{"nodeType":"YulBlock","src":"37620:367:18","statements":[{"nodeType":"YulAssignment","src":"37630:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37642:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"37653:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37638:3:18"},"nodeType":"YulFunctionCall","src":"37638:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37630:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37711:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37724:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"37735:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37720:3:18"},"nodeType":"YulFunctionCall","src":"37720:17:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37667:43:18"},"nodeType":"YulFunctionCall","src":"37667:71:18"},"nodeType":"YulExpressionStatement","src":"37667:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37788:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37801:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"37812:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37797:3:18"},"nodeType":"YulFunctionCall","src":"37797:18:18"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"37748:39:18"},"nodeType":"YulFunctionCall","src":"37748:68:18"},"nodeType":"YulExpressionStatement","src":"37748:68:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"37870:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37883:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"37894:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37879:3:18"},"nodeType":"YulFunctionCall","src":"37879:18:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37826:43:18"},"nodeType":"YulFunctionCall","src":"37826:72:18"},"nodeType":"YulExpressionStatement","src":"37826:72:18"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"37952:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37965:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"37976:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37961:3:18"},"nodeType":"YulFunctionCall","src":"37961:18:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37908:43:18"},"nodeType":"YulFunctionCall","src":"37908:72:18"},"nodeType":"YulExpressionStatement","src":"37908:72:18"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37568:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37580:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37588:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37596:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37604:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37615:4:18","type":""}],"src":"37442:545:18"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint8(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_3a9e59314a78d25b237b9f5f22b78aeb6280107de0a7d9b9b3d2d4f880e56b06(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid qty\")\n\n    }\n\n    function abi_encode_t_stringliteral_3a9e59314a78d25b237b9f5f22b78aeb6280107de0a7d9b9b3d2d4f880e56b06_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_3a9e59314a78d25b237b9f5f22b78aeb6280107de0a7d9b9b3d2d4f880e56b06(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3a9e59314a78d25b237b9f5f22b78aeb6280107de0a7d9b9b3d2d4f880e56b06__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3a9e59314a78d25b237b9f5f22b78aeb6280107de0a7d9b9b3d2d4f880e56b06_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d(memPtr) {\n\n        mstore(add(memPtr, 0), \"public sold out\")\n\n    }\n\n    function abi_encode_t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877(memPtr) {\n\n        mstore(add(memPtr, 0), \"incorrect payment\")\n\n    }\n\n    function abi_encode_t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920(memPtr) {\n\n        mstore(add(memPtr, 0), \"no funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1(memPtr) {\n\n        mstore(add(memPtr, 0), \"trusted signer not set\")\n\n    }\n\n    function abi_encode_t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3(memPtr) {\n\n        mstore(add(memPtr, 0), \"already claimed on-chain\")\n\n    }\n\n    function abi_encode_t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid variant\")\n\n    }\n\n    function abi_encode_t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e(memPtr) {\n\n        mstore(add(memPtr, 0), \"not owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277(memPtr) {\n\n        mstore(add(memPtr, 0), \"only neutral tokens can be trans\")\n\n        mstore(add(memPtr, 32), \"formed\")\n\n    }\n\n    function abi_encode_t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101c25760003560e01c8063715018a6116100f7578063bcea0fec11610095578063e985e9c511610064578063e985e9c514610643578063f2fde38b14610680578063f74d5480146106a9578063f78f647c146106d4576101c2565b8063bcea0fec14610575578063c87b56dd1461059e578063dd46edb8146105db578063e00dd16114610618576101c2565b8063a22cb465116100d1578063a22cb465146104cd578063a4f4f8af146104f6578063b7ec208614610521578063b88d4fde1461054c576101c2565b8063715018a6146104605780638da5cb5b1461047757806395d89b41146104a2576101c2565b80632db115441161016457806355f804b31161013e57806355f804b31461039457806356a1c701146103bd5780636352211e146103e657806370a0823114610423576101c2565b80632db115441461032657806342842e0e1461034257806351cff8d91461036b576101c2565b8063095ea7b3116101a0578063095ea7b31461026c5780631a02b69e1461029557806323b872dd146102d257806326a74d8e146102fb576101c2565b806301ffc9a7146101c757806306fdde0314610204578063081812fc1461022f575b600080fd5b3480156101d357600080fd5b506101ee60048036038101906101e991906127d5565b6106fd565b6040516101fb919061281d565b60405180910390f35b34801561021057600080fd5b506102196107df565b60405161022691906128c8565b60405180910390f35b34801561023b57600080fd5b5061025660048036038101906102519190612920565b610871565b604051610263919061298e565b60405180910390f35b34801561027857600080fd5b50610293600480360381019061028e91906129d5565b61088d565b005b3480156102a157600080fd5b506102bc60048036038101906102b79190612a15565b6108a3565b6040516102c9919061281d565b60405180910390f35b3480156102de57600080fd5b506102f960048036038101906102f49190612a42565b6108c3565b005b34801561030757600080fd5b506103106109c5565b60405161031d9190612aa4565b60405180910390f35b610340600480360381019061033b9190612920565b6109cb565b005b34801561034e57600080fd5b5061036960048036038101906103649190612a42565b610b8e565b005b34801561037757600080fd5b50610392600480360381019061038d9190612afd565b610bae565b005b3480156103a057600080fd5b506103bb60048036038101906103b69190612c5f565b610cb8565b005b3480156103c957600080fd5b506103e460048036038101906103df9190612a15565b610cd3565b005b3480156103f257600080fd5b5061040d60048036038101906104089190612920565b610d1f565b60405161041a919061298e565b60405180910390f35b34801561042f57600080fd5b5061044a60048036038101906104459190612a15565b610d31565b6040516104579190612aa4565b60405180910390f35b34801561046c57600080fd5b50610475610deb565b005b34801561048357600080fd5b5061048c610dff565b604051610499919061298e565b60405180910390f35b3480156104ae57600080fd5b506104b7610e29565b6040516104c491906128c8565b60405180910390f35b3480156104d957600080fd5b506104f460048036038101906104ef9190612cd4565b610ebb565b005b34801561050257600080fd5b5061050b610ed1565b6040516105189190612aa4565b60405180910390f35b34801561052d57600080fd5b50610536610ed7565b6040516105439190612aa4565b60405180910390f35b34801561055857600080fd5b50610573600480360381019061056e9190612db5565b610edd565b005b34801561058157600080fd5b5061059c60048036038101906105979190612e98565b610f02565b005b3480156105aa57600080fd5b506105c560048036038101906105c09190612920565b611234565b6040516105d291906128c8565b60405180910390f35b3480156105e757600080fd5b5061060260048036038101906105fd9190612920565b611364565b60405161060f9190612f01565b60405180910390f35b34801561062457600080fd5b5061062d611384565b60405161063a9190612aa4565b60405180910390f35b34801561064f57600080fd5b5061066a60048036038101906106659190612f1c565b61138a565b604051610677919061281d565b60405180910390f35b34801561068c57600080fd5b506106a760048036038101906106a29190612a15565b61141e565b005b3480156106b557600080fd5b506106be6114a4565b6040516106cb919061298e565b60405180910390f35b3480156106e057600080fd5b506106fb60048036038101906106f69190612f88565b6114ca565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806107c857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806107d857506107d7826116a9565b5b9050919050565b6060600080546107ee90612ff7565b80601f016020809104026020016040519081016040528092919081815260200182805461081a90612ff7565b80156108675780601f1061083c57610100808354040283529160200191610867565b820191906000526020600020905b81548152906001019060200180831161084a57829003601f168201915b5050505050905090565b600061087c82611713565b506108868261179b565b9050919050565b61089f828261089a6117d8565b6117e0565b5050565b600c6020528060005260406000206000915054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109355760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161092c919061298e565b60405180910390fd5b600061094983836109446117d8565b6117f2565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109bf578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016109b693929190613028565b60405180910390fd5b50505050565b60085481565b6000811180156109dc5750600a8111155b610a1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a12906130ab565b60405180910390fd5b60085481600954610a2c91906130fa565b1115610a6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a649061317a565b60405180910390fd5b80600a54610a7b919061319a565b3414610abc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab390613228565b60405180910390fd5b60005b81811015610b7157600060076000815480929190610adc90613248565b919050559050610aec3382611a0c565b6000600d600083815260200190815260200160002060006101000a81548160ff021916908360ff160217905550803373ffffffffffffffffffffffffffffffffffffffff167f748a2986091c2034d6e93b6f44f771a79f0e1d6acd8a60c68c17d4e1e2feaed260405160405180910390a3508080610b6990613248565b915050610abf565b508060096000828254610b8491906130fa565b9250508190555050565b610ba983838360405180602001604052806000815250610edd565b505050565b610bb6611a2a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1c906132dc565b60405180910390fd5b600047905060008111610c6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6490613348565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610cb3573d6000803e3d6000fd5b505050565b610cc0611a2a565b80600e9081610ccf9190613514565b5050565b610cdb611a2a565b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610d2a82611713565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610da45760006040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610d9b919061298e565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610df3611a2a565b610dfd6000611ab1565b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610e3890612ff7565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6490612ff7565b8015610eb15780601f10610e8657610100808354040283529160200191610eb1565b820191906000526020600020905b815481529060010190602001808311610e9457829003601f168201915b5050505050905090565b610ecd610ec66117d8565b8383611b77565b5050565b60095481565b600a5481565b610ee88484846108c3565b610efc610ef36117d8565b85858585611ce6565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610f93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8a90613632565b60405180910390fd5b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611020576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110179061369e565b60405180910390fd5b600030463360405160200161103793929190613727565b604051602081830303815290604052805190602001209050600061105a82611e97565b905060006110ac8286868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611ecd565b9050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461113e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611135906137b0565b60405180910390fd5b6001600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600760008154809291906111ab90613248565b9190505590506111bb3382611a0c565b6000600d600083815260200190815260200160002060006101000a81548160ff021916908360ff160217905550803373ffffffffffffffffffffffffffffffffffffffff167fe9a10c23ea49d40011e019f115185f0bc29740208a504d35f951dca74ba37eac60405160405180910390a3505050505050565b606061123f82611713565b50600061124a611ef9565b90506000600d600085815260200190815260200160002060009054906101000a900460ff16905060006040518060400160405280600c81526020017f6e65757472616c2e6a736f6e0000000000000000000000000000000000000000815250905060018260ff16036112f3576040518060400160405280600a81526020017f616e67656c2e6a736f6e000000000000000000000000000000000000000000008152509050611338565b60028260ff1603611337576040518060400160405280600a81526020017f646576696c2e6a736f6e0000000000000000000000000000000000000000000081525090505b5b828160405160200161134b92919061380c565b6040516020818303038152906040529350505050919050565b600d6020528060005260406000206000915054906101000a900460ff1681565b60075481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611426611a2a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114985760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161148f919061298e565b60405180910390fd5b6114a181611ab1565b50565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018160ff1614806114df575060028160ff16145b61151e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115159061387c565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1661153e83610d1f565b73ffffffffffffffffffffffffffffffffffffffff1614611594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158b906138e8565b60405180910390fd5b6000600d600084815260200190815260200160002060009054906101000a900460ff1660ff16146115fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f19061397a565b60405180910390fd5b61160382611f8b565b60006007600081548092919061161890613248565b9190505590506116283382611a0c565b81600d600083815260200190815260200160002060006101000a81548160ff021916908360ff16021790555080833373ffffffffffffffffffffffffffffffffffffffff167f598067bc48ef38b7785eda047c375b2d45f2b845404b58dcdfccf40e7f38d8698560405161169c9190612f01565b60405180910390a4505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008061171f83612011565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361179257826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117899190612aa4565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b6117ed838383600161204e565b505050565b6000806117fe84612011565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146118405761183f818486612213565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146118d15761188260008560008061204e565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611954576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b611a268282604051806020016040528060008152506122d7565b5050565b611a326117d8565b73ffffffffffffffffffffffffffffffffffffffff16611a50610dff565b73ffffffffffffffffffffffffffffffffffffffff1614611aaf57611a736117d8565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611aa6919061298e565b60405180910390fd5b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611be857816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401611bdf919061298e565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611cd9919061281d565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611e90578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401611d4594939291906139ef565b6020604051808303816000875af1925050508015611d8157506040513d601f19601f82011682018060405250810190611d7e9190613a50565b60015b611e05573d8060008114611db1576040519150601f19603f3d011682016040523d82523d6000602084013e611db6565b606091505b506000815103611dfd57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611df4919061298e565b60405180910390fd5b805160208201fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611e8e57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611e85919061298e565b60405180910390fd5b505b5050505050565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b600080600080611edd86866122fb565b925092509250611eed8282612357565b82935050505092915050565b6060600e8054611f0890612ff7565b80601f0160208091040260200160405190810160405280929190818152602001828054611f3490612ff7565b8015611f815780601f10611f5657610100808354040283529160200191611f81565b820191906000526020600020905b815481529060010190602001808311611f6457829003601f168201915b5050505050905090565b6000611f9a60008360006117f2565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361200d57816040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016120049190612aa4565b60405180910390fd5b5050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806120875750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156121bb57600061209784611713565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561210257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156121155750612113818461138a565b155b1561215757826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161214e919061298e565b60405180910390fd5b81156121b957838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61221e8383836124bb565b6122d257600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361229357806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161228a9190612aa4565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016122c9929190613a7d565b60405180910390fd5b505050565b6122e1838361257c565b6122f66122ec6117d8565b6000858585611ce6565b505050565b600080600060418451036123405760008060006020870151925060408701519150606087015160001a905061233288828585612675565b955095509550505050612350565b60006002855160001b9250925092505b9250925092565b6000600381111561236b5761236a613aa6565b5b82600381111561237e5761237d613aa6565b5b03156124b7576001600381111561239857612397613aa6565b5b8260038111156123ab576123aa613aa6565b5b036123e2576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156123f6576123f5613aa6565b5b82600381111561240957612408613aa6565b5b0361244e578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016124459190612aa4565b60405180910390fd5b60038081111561246157612460613aa6565b5b82600381111561247457612473613aa6565b5b036124b657806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016124ad9190613aee565b60405180910390fd5b5b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561257357508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806125345750612533848461138a565b5b8061257257508273ffffffffffffffffffffffffffffffffffffffff1661255a8361179b565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036125ee5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016125e5919061298e565b60405180910390fd5b60006125fc838360006117f2565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146126705760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401612667919061298e565b60405180910390fd5b505050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156126b557600060038592509250925061275f565b6000600188888888604051600081526020016040526040516126da9493929190613b09565b6020604051602081039080840390855afa1580156126fc573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361275057600060016000801b9350935093505061275f565b8060008060001b935093509350505b9450945094915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6127b28161277d565b81146127bd57600080fd5b50565b6000813590506127cf816127a9565b92915050565b6000602082840312156127eb576127ea612773565b5b60006127f9848285016127c0565b91505092915050565b60008115159050919050565b61281781612802565b82525050565b6000602082019050612832600083018461280e565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612872578082015181840152602081019050612857565b60008484015250505050565b6000601f19601f8301169050919050565b600061289a82612838565b6128a48185612843565b93506128b4818560208601612854565b6128bd8161287e565b840191505092915050565b600060208201905081810360008301526128e2818461288f565b905092915050565b6000819050919050565b6128fd816128ea565b811461290857600080fd5b50565b60008135905061291a816128f4565b92915050565b60006020828403121561293657612935612773565b5b60006129448482850161290b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006129788261294d565b9050919050565b6129888161296d565b82525050565b60006020820190506129a3600083018461297f565b92915050565b6129b28161296d565b81146129bd57600080fd5b50565b6000813590506129cf816129a9565b92915050565b600080604083850312156129ec576129eb612773565b5b60006129fa858286016129c0565b9250506020612a0b8582860161290b565b9150509250929050565b600060208284031215612a2b57612a2a612773565b5b6000612a39848285016129c0565b91505092915050565b600080600060608486031215612a5b57612a5a612773565b5b6000612a69868287016129c0565b9350506020612a7a868287016129c0565b9250506040612a8b8682870161290b565b9150509250925092565b612a9e816128ea565b82525050565b6000602082019050612ab96000830184612a95565b92915050565b6000612aca8261294d565b9050919050565b612ada81612abf565b8114612ae557600080fd5b50565b600081359050612af781612ad1565b92915050565b600060208284031215612b1357612b12612773565b5b6000612b2184828501612ae8565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612b6c8261287e565b810181811067ffffffffffffffff82111715612b8b57612b8a612b34565b5b80604052505050565b6000612b9e612769565b9050612baa8282612b63565b919050565b600067ffffffffffffffff821115612bca57612bc9612b34565b5b612bd38261287e565b9050602081019050919050565b82818337600083830152505050565b6000612c02612bfd84612baf565b612b94565b905082815260208101848484011115612c1e57612c1d612b2f565b5b612c29848285612be0565b509392505050565b600082601f830112612c4657612c45612b2a565b5b8135612c56848260208601612bef565b91505092915050565b600060208284031215612c7557612c74612773565b5b600082013567ffffffffffffffff811115612c9357612c92612778565b5b612c9f84828501612c31565b91505092915050565b612cb181612802565b8114612cbc57600080fd5b50565b600081359050612cce81612ca8565b92915050565b60008060408385031215612ceb57612cea612773565b5b6000612cf9858286016129c0565b9250506020612d0a85828601612cbf565b9150509250929050565b600067ffffffffffffffff821115612d2f57612d2e612b34565b5b612d388261287e565b9050602081019050919050565b6000612d58612d5384612d14565b612b94565b905082815260208101848484011115612d7457612d73612b2f565b5b612d7f848285612be0565b509392505050565b600082601f830112612d9c57612d9b612b2a565b5b8135612dac848260208601612d45565b91505092915050565b60008060008060808587031215612dcf57612dce612773565b5b6000612ddd878288016129c0565b9450506020612dee878288016129c0565b9350506040612dff8782880161290b565b925050606085013567ffffffffffffffff811115612e2057612e1f612778565b5b612e2c87828801612d87565b91505092959194509250565b600080fd5b600080fd5b60008083601f840112612e5857612e57612b2a565b5b8235905067ffffffffffffffff811115612e7557612e74612e38565b5b602083019150836001820283011115612e9157612e90612e3d565b5b9250929050565b60008060208385031215612eaf57612eae612773565b5b600083013567ffffffffffffffff811115612ecd57612ecc612778565b5b612ed985828601612e42565b92509250509250929050565b600060ff82169050919050565b612efb81612ee5565b82525050565b6000602082019050612f166000830184612ef2565b92915050565b60008060408385031215612f3357612f32612773565b5b6000612f41858286016129c0565b9250506020612f52858286016129c0565b9150509250929050565b612f6581612ee5565b8114612f7057600080fd5b50565b600081359050612f8281612f5c565b92915050565b60008060408385031215612f9f57612f9e612773565b5b6000612fad8582860161290b565b9250506020612fbe85828601612f73565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061300f57607f821691505b60208210810361302257613021612fc8565b5b50919050565b600060608201905061303d600083018661297f565b61304a6020830185612a95565b613057604083018461297f565b949350505050565b7f696e76616c696420717479000000000000000000000000000000000000000000600082015250565b6000613095600b83612843565b91506130a08261305f565b602082019050919050565b600060208201905081810360008301526130c481613088565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613105826128ea565b9150613110836128ea565b9250828201905080821115613128576131276130cb565b5b92915050565b7f7075626c696320736f6c64206f75740000000000000000000000000000000000600082015250565b6000613164600f83612843565b915061316f8261312e565b602082019050919050565b6000602082019050818103600083015261319381613157565b9050919050565b60006131a5826128ea565b91506131b0836128ea565b92508282026131be816128ea565b915082820484148315176131d5576131d46130cb565b5b5092915050565b7f696e636f7272656374207061796d656e74000000000000000000000000000000600082015250565b6000613212601183612843565b915061321d826131dc565b602082019050919050565b6000602082019050818103600083015261324181613205565b9050919050565b6000613253826128ea565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613285576132846130cb565b5b600182019050919050565b7f696e76616c696420616464726573730000000000000000000000000000000000600082015250565b60006132c6600f83612843565b91506132d182613290565b602082019050919050565b600060208201905081810360008301526132f5816132b9565b9050919050565b7f6e6f2066756e6473000000000000000000000000000000000000000000000000600082015250565b6000613332600883612843565b915061333d826132fc565b602082019050919050565b6000602082019050818103600083015261336181613325565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026133ca7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261338d565b6133d4868361338d565b95508019841693508086168417925050509392505050565b6000819050919050565b600061341161340c613407846128ea565b6133ec565b6128ea565b9050919050565b6000819050919050565b61342b836133f6565b61343f61343782613418565b84845461339a565b825550505050565b600090565b613454613447565b61345f818484613422565b505050565b5b818110156134835761347860008261344c565b600181019050613465565b5050565b601f8211156134c85761349981613368565b6134a28461337d565b810160208510156134b1578190505b6134c56134bd8561337d565b830182613464565b50505b505050565b600082821c905092915050565b60006134eb600019846008026134cd565b1980831691505092915050565b600061350483836134da565b9150826002028217905092915050565b61351d82612838565b67ffffffffffffffff81111561353657613535612b34565b5b6135408254612ff7565b61354b828285613487565b600060209050601f83116001811461357e576000841561356c578287015190505b61357685826134f8565b8655506135de565b601f19841661358c86613368565b60005b828110156135b45784890151825560018201915060208501945060208101905061358f565b868310156135d157848901516135cd601f8916826134da565b8355505b6001600288020188555050505b505050505050565b7f74727573746564207369676e6572206e6f742073657400000000000000000000600082015250565b600061361c601683612843565b9150613627826135e6565b602082019050919050565b6000602082019050818103600083015261364b8161360f565b9050919050565b7f616c726561647920636c61696d6564206f6e2d636861696e0000000000000000600082015250565b6000613688601883612843565b915061369382613652565b602082019050919050565b600060208201905081810360008301526136b78161367b565b9050919050565b60008160601b9050919050565b60006136d6826136be565b9050919050565b60006136e8826136cb565b9050919050565b6137006136fb8261296d565b6136dd565b82525050565b6000819050919050565b61372161371c826128ea565b613706565b82525050565b600061373382866136ef565b6014820191506137438285613710565b60208201915061375382846136ef565b601482019150819050949350505050565b7f696e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b600061379a601183612843565b91506137a582613764565b602082019050919050565b600060208201905081810360008301526137c98161378d565b9050919050565b600081905092915050565b60006137e682612838565b6137f081856137d0565b9350613800818560208601612854565b80840191505092915050565b600061381882856137db565b915061382482846137db565b91508190509392505050565b7f696e76616c69642076617269616e740000000000000000000000000000000000600082015250565b6000613866600f83612843565b915061387182613830565b602082019050919050565b6000602082019050818103600083015261389581613859565b9050919050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006138d2600983612843565b91506138dd8261389c565b602082019050919050565b60006020820190508181036000830152613901816138c5565b9050919050565b7f6f6e6c79206e65757472616c20746f6b656e732063616e206265207472616e7360008201527f666f726d65640000000000000000000000000000000000000000000000000000602082015250565b6000613964602683612843565b915061396f82613908565b604082019050919050565b6000602082019050818103600083015261399381613957565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006139c18261399a565b6139cb81856139a5565b93506139db818560208601612854565b6139e48161287e565b840191505092915050565b6000608082019050613a04600083018761297f565b613a11602083018661297f565b613a1e6040830185612a95565b8181036060830152613a3081846139b6565b905095945050505050565b600081519050613a4a816127a9565b92915050565b600060208284031215613a6657613a65612773565b5b6000613a7484828501613a3b565b91505092915050565b6000604082019050613a92600083018561297f565b613a9f6020830184612a95565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000819050919050565b613ae881613ad5565b82525050565b6000602082019050613b036000830184613adf565b92915050565b6000608082019050613b1e6000830187613adf565b613b2b6020830186612ef2565b613b386040830185613adf565b613b456060830184613adf565b9594505050505056fea2646970667358221220010b4afe7d5218fc83b2dae60f9b5fe21de5c1618621f0a253dfc39b9a9eee8f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xBCEA0FEC GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x680 JUMPI DUP1 PUSH4 0xF74D5480 EQ PUSH2 0x6A9 JUMPI DUP1 PUSH4 0xF78F647C EQ PUSH2 0x6D4 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xBCEA0FEC EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xDD46EDB8 EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0xE00DD161 EQ PUSH2 0x618 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xA22CB465 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xA4F4F8AF EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0xB7EC2086 EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x54C JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A2 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x2DB11544 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x55F804B3 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x56A1C701 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x423 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x2DB11544 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x36B JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x1A02B69E EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x26A74D8E EQ PUSH2 0x2FB JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x22F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x219 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x2920 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x29D5 JUMP JUMPDEST PUSH2 0x88D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x2A15 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x2A42 JUMP JUMPDEST PUSH2 0x8C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x310 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x2920 JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x2A42 JUMP JUMPDEST PUSH2 0xB8E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x2AFD JUMP JUMPDEST PUSH2 0xBAE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x2C5F JUMP JUMPDEST PUSH2 0xCB8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x2A15 JUMP JUMPDEST PUSH2 0xCD3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x2920 JUMP JUMPDEST PUSH2 0xD1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x2A15 JUMP JUMPDEST PUSH2 0xD31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH2 0xDEB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48C PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B7 PUSH2 0xE29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0xEBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50B PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x536 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x573 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x2DB5 JUMP JUMPDEST PUSH2 0xEDD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x2E98 JUMP JUMPDEST PUSH2 0xF02 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x2920 JUMP JUMPDEST PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x602 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x2920 JUMP JUMPDEST PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x2F01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62D PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x2F1C JUMP JUMPDEST PUSH2 0x138A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A2 SWAP2 SWAP1 PUSH2 0x2A15 JUMP JUMPDEST PUSH2 0x141E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BE PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0x2F88 JUMP JUMPDEST PUSH2 0x14CA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x7C8 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x7D8 JUMPI POP PUSH2 0x7D7 DUP3 PUSH2 0x16A9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x7EE SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x81A SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x867 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x83C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x867 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x84A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87C DUP3 PUSH2 0x1713 JUMP JUMPDEST POP PUSH2 0x886 DUP3 PUSH2 0x179B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x89F DUP3 DUP3 PUSH2 0x89A PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0x17E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x935 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x949 DUP4 DUP4 PUSH2 0x944 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0x17F2 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9BF JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3028 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x9DC JUMPI POP PUSH1 0xA DUP2 GT ISZERO JUMPDEST PUSH2 0xA1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA12 SWAP1 PUSH2 0x30AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH1 0x9 SLOAD PUSH2 0xA2C SWAP2 SWAP1 PUSH2 0x30FA JUMP JUMPDEST GT ISZERO PUSH2 0xA6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA64 SWAP1 PUSH2 0x317A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA SLOAD PUSH2 0xA7B SWAP2 SWAP1 PUSH2 0x319A JUMP JUMPDEST CALLVALUE EQ PUSH2 0xABC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB3 SWAP1 PUSH2 0x3228 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB71 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xADC SWAP1 PUSH2 0x3248 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0xAEC CALLER DUP3 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x748A2986091C2034D6E93B6F44F771A79F0E1D6ACD8A60C68C17D4E1E2FEAED2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP1 DUP1 PUSH2 0xB69 SWAP1 PUSH2 0x3248 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xABF JUMP JUMPDEST POP DUP1 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB84 SWAP2 SWAP1 PUSH2 0x30FA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xBA9 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xEDD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBB6 PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1C SWAP1 PUSH2 0x32DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xC6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC64 SWAP1 PUSH2 0x3348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xCC0 PUSH2 0x1A2A JUMP JUMPDEST DUP1 PUSH1 0xE SWAP1 DUP2 PUSH2 0xCCF SWAP2 SWAP1 PUSH2 0x3514 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCDB PUSH2 0x1A2A JUMP JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2A DUP3 PUSH2 0x1713 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9B SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF3 PUSH2 0x1A2A JUMP JUMPDEST PUSH2 0xDFD PUSH1 0x0 PUSH2 0x1AB1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xE38 SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE64 SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEB1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE86 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEB1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE94 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xECD PUSH2 0xEC6 PUSH2 0x17D8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1B77 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0xEE8 DUP5 DUP5 DUP5 PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0xEFC PUSH2 0xEF3 PUSH2 0x17D8 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8A SWAP1 PUSH2 0x3632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1020 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1017 SWAP1 PUSH2 0x369E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ADDRESS CHAINID CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1037 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x105A DUP3 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10AC DUP3 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x1ECD JUMP JUMPDEST SWAP1 POP PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x113E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1135 SWAP1 PUSH2 0x37B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x11AB SWAP1 PUSH2 0x3248 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x11BB CALLER DUP3 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE9A10C23EA49D40011E019F115185F0BC29740208A504D35F951DCA74BA37EAC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x123F DUP3 PUSH2 0x1713 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x124A PUSH2 0x1EF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E65757472616C2E6A736F6E0000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x1 DUP3 PUSH1 0xFF AND SUB PUSH2 0x12F3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x616E67656C2E6A736F6E00000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1338 JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0xFF AND SUB PUSH2 0x1337 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646576696C2E6A736F6E00000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST JUMPDEST DUP3 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x134B SWAP3 SWAP2 SWAP1 PUSH2 0x380C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1426 PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1498 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148F SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14A1 DUP2 PUSH2 0x1AB1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xFF AND EQ DUP1 PUSH2 0x14DF JUMPI POP PUSH1 0x2 DUP2 PUSH1 0xFF AND EQ JUMPDEST PUSH2 0x151E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1515 SWAP1 PUSH2 0x387C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x153E DUP4 PUSH2 0xD1F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1594 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x158B SWAP1 PUSH2 0x38E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x15FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F1 SWAP1 PUSH2 0x397A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1603 DUP3 PUSH2 0x1F8B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1618 SWAP1 PUSH2 0x3248 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x1628 CALLER DUP3 PUSH2 0x1A0C JUMP JUMPDEST DUP2 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x598067BC48EF38B7785EDA047C375B2D45F2B845404B58DCDFCCF40E7F38D869 DUP6 PUSH1 0x40 MLOAD PUSH2 0x169C SWAP2 SWAP1 PUSH2 0x2F01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x171F DUP4 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1792 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1789 SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x17ED DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x204E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x17FE DUP5 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1840 JUMPI PUSH2 0x183F DUP2 DUP5 DUP7 PUSH2 0x2213 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18D1 JUMPI PUSH2 0x1882 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x204E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1954 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A26 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x22D7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1A32 PUSH2 0x17D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A50 PUSH2 0xDFF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AAF JUMPI PUSH2 0x1A73 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA6 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BE8 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDF SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CD9 SWAP2 SWAP1 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1E90 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D45 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1D81 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D7E SWAP2 SWAP1 PUSH2 0x3A50 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1E05 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DB1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1DFD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DF4 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1E8E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E85 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1EDD DUP7 DUP7 PUSH2 0x22FB JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1EED DUP3 DUP3 PUSH2 0x2357 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE DUP1 SLOAD PUSH2 0x1F08 SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F34 SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F81 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F56 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F81 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F64 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9A PUSH1 0x0 DUP4 PUSH1 0x0 PUSH2 0x17F2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x200D JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2004 SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2087 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x21BB JUMPI PUSH1 0x0 PUSH2 0x2097 DUP5 PUSH2 0x1713 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2102 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2115 JUMPI POP PUSH2 0x2113 DUP2 DUP5 PUSH2 0x138A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2157 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214E SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x21B9 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x221E DUP4 DUP4 DUP4 PUSH2 0x24BB JUMP JUMPDEST PUSH2 0x22D2 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2293 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x228A SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C9 SWAP3 SWAP2 SWAP1 PUSH2 0x3A7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x22E1 DUP4 DUP4 PUSH2 0x257C JUMP JUMPDEST PUSH2 0x22F6 PUSH2 0x22EC PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x1CE6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x2340 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x2332 DUP9 DUP3 DUP6 DUP6 PUSH2 0x2675 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x236B JUMPI PUSH2 0x236A PUSH2 0x3AA6 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x237E JUMPI PUSH2 0x237D PUSH2 0x3AA6 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x24B7 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2398 JUMPI PUSH2 0x2397 PUSH2 0x3AA6 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23AB JUMPI PUSH2 0x23AA PUSH2 0x3AA6 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x23E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23F6 JUMPI PUSH2 0x23F5 PUSH2 0x3AA6 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2409 JUMPI PUSH2 0x2408 PUSH2 0x3AA6 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x244E JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2445 SWAP2 SWAP1 PUSH2 0x2AA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2461 JUMPI PUSH2 0x2460 PUSH2 0x3AA6 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2474 JUMPI PUSH2 0x2473 PUSH2 0x3AA6 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x24B6 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24AD SWAP2 SWAP1 PUSH2 0x3AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2573 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2534 JUMPI POP PUSH2 0x2533 DUP5 DUP5 PUSH2 0x138A JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2572 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x255A DUP4 PUSH2 0x179B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x25EE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25E5 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25FC DUP4 DUP4 PUSH1 0x0 PUSH2 0x17F2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2670 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2667 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x26B5 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x275F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x26DA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B09 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2750 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x275F JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27B2 DUP2 PUSH2 0x277D JUMP JUMPDEST DUP2 EQ PUSH2 0x27BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27CF DUP2 PUSH2 0x27A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27EB JUMPI PUSH2 0x27EA PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27F9 DUP5 DUP3 DUP6 ADD PUSH2 0x27C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2817 DUP2 PUSH2 0x2802 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2832 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x280E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2872 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2857 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289A DUP3 PUSH2 0x2838 JUMP JUMPDEST PUSH2 0x28A4 DUP2 DUP6 PUSH2 0x2843 JUMP JUMPDEST SWAP4 POP PUSH2 0x28B4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2854 JUMP JUMPDEST PUSH2 0x28BD DUP2 PUSH2 0x287E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28E2 DUP2 DUP5 PUSH2 0x288F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28FD DUP2 PUSH2 0x28EA JUMP JUMPDEST DUP2 EQ PUSH2 0x2908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x291A DUP2 PUSH2 0x28F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2936 JUMPI PUSH2 0x2935 PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2944 DUP5 DUP3 DUP6 ADD PUSH2 0x290B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2978 DUP3 PUSH2 0x294D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2988 DUP2 PUSH2 0x296D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x297F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29B2 DUP2 PUSH2 0x296D JUMP JUMPDEST DUP2 EQ PUSH2 0x29BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29CF DUP2 PUSH2 0x29A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29EC JUMPI PUSH2 0x29EB PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29FA DUP6 DUP3 DUP7 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A0B DUP6 DUP3 DUP7 ADD PUSH2 0x290B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A2B JUMPI PUSH2 0x2A2A PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A39 DUP5 DUP3 DUP6 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A5B JUMPI PUSH2 0x2A5A PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A69 DUP7 DUP3 DUP8 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2A7A DUP7 DUP3 DUP8 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2A8B DUP7 DUP3 DUP8 ADD PUSH2 0x290B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2A9E DUP2 PUSH2 0x28EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AB9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ACA DUP3 PUSH2 0x294D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2ADA DUP2 PUSH2 0x2ABF JUMP JUMPDEST DUP2 EQ PUSH2 0x2AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AF7 DUP2 PUSH2 0x2AD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B13 JUMPI PUSH2 0x2B12 PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B21 DUP5 DUP3 DUP6 ADD PUSH2 0x2AE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2B6C DUP3 PUSH2 0x287E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B8B JUMPI PUSH2 0x2B8A PUSH2 0x2B34 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B9E PUSH2 0x2769 JUMP JUMPDEST SWAP1 POP PUSH2 0x2BAA DUP3 DUP3 PUSH2 0x2B63 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BCA JUMPI PUSH2 0x2BC9 PUSH2 0x2B34 JUMP JUMPDEST JUMPDEST PUSH2 0x2BD3 DUP3 PUSH2 0x287E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C02 PUSH2 0x2BFD DUP5 PUSH2 0x2BAF JUMP JUMPDEST PUSH2 0x2B94 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2C1E JUMPI PUSH2 0x2C1D PUSH2 0x2B2F JUMP JUMPDEST JUMPDEST PUSH2 0x2C29 DUP5 DUP3 DUP6 PUSH2 0x2BE0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C46 JUMPI PUSH2 0x2C45 PUSH2 0x2B2A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C56 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2BEF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C75 JUMPI PUSH2 0x2C74 PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C93 JUMPI PUSH2 0x2C92 PUSH2 0x2778 JUMP JUMPDEST JUMPDEST PUSH2 0x2C9F DUP5 DUP3 DUP6 ADD PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CB1 DUP2 PUSH2 0x2802 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CCE DUP2 PUSH2 0x2CA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CEB JUMPI PUSH2 0x2CEA PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CF9 DUP6 DUP3 DUP7 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D0A DUP6 DUP3 DUP7 ADD PUSH2 0x2CBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2D2F JUMPI PUSH2 0x2D2E PUSH2 0x2B34 JUMP JUMPDEST JUMPDEST PUSH2 0x2D38 DUP3 PUSH2 0x287E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D58 PUSH2 0x2D53 DUP5 PUSH2 0x2D14 JUMP JUMPDEST PUSH2 0x2B94 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2D74 JUMPI PUSH2 0x2D73 PUSH2 0x2B2F JUMP JUMPDEST JUMPDEST PUSH2 0x2D7F DUP5 DUP3 DUP6 PUSH2 0x2BE0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D9C JUMPI PUSH2 0x2D9B PUSH2 0x2B2A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2DAC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2D45 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2DCF JUMPI PUSH2 0x2DCE PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DDD DUP8 DUP3 DUP9 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2DEE DUP8 DUP3 DUP9 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2DFF DUP8 DUP3 DUP9 ADD PUSH2 0x290B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E20 JUMPI PUSH2 0x2E1F PUSH2 0x2778 JUMP JUMPDEST JUMPDEST PUSH2 0x2E2C DUP8 DUP3 DUP9 ADD PUSH2 0x2D87 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2E58 JUMPI PUSH2 0x2E57 PUSH2 0x2B2A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E75 JUMPI PUSH2 0x2E74 PUSH2 0x2E38 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2E91 JUMPI PUSH2 0x2E90 PUSH2 0x2E3D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2EAF JUMPI PUSH2 0x2EAE PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2ECD JUMPI PUSH2 0x2ECC PUSH2 0x2778 JUMP JUMPDEST JUMPDEST PUSH2 0x2ED9 DUP6 DUP3 DUP7 ADD PUSH2 0x2E42 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EFB DUP2 PUSH2 0x2EE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F16 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F33 JUMPI PUSH2 0x2F32 PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F41 DUP6 DUP3 DUP7 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F52 DUP6 DUP3 DUP7 ADD PUSH2 0x29C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F65 DUP2 PUSH2 0x2EE5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F82 DUP2 PUSH2 0x2F5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F9F JUMPI PUSH2 0x2F9E PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FAD DUP6 DUP3 DUP7 ADD PUSH2 0x290B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2FBE DUP6 DUP3 DUP7 ADD PUSH2 0x2F73 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x300F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3022 JUMPI PUSH2 0x3021 PUSH2 0x2FC8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x303D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x297F JUMP JUMPDEST PUSH2 0x304A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2A95 JUMP JUMPDEST PUSH2 0x3057 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x297F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C696420717479000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3095 PUSH1 0xB DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x30A0 DUP3 PUSH2 0x305F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30C4 DUP2 PUSH2 0x3088 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3105 DUP3 PUSH2 0x28EA JUMP JUMPDEST SWAP2 POP PUSH2 0x3110 DUP4 PUSH2 0x28EA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3128 JUMPI PUSH2 0x3127 PUSH2 0x30CB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7075626C696320736F6C64206F75740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3164 PUSH1 0xF DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x316F DUP3 PUSH2 0x312E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3193 DUP2 PUSH2 0x3157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31A5 DUP3 PUSH2 0x28EA JUMP JUMPDEST SWAP2 POP PUSH2 0x31B0 DUP4 PUSH2 0x28EA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x31BE DUP2 PUSH2 0x28EA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x31D5 JUMPI PUSH2 0x31D4 PUSH2 0x30CB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E636F7272656374207061796D656E74000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3212 PUSH1 0x11 DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x321D DUP3 PUSH2 0x31DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3241 DUP2 PUSH2 0x3205 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3253 DUP3 PUSH2 0x28EA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3285 JUMPI PUSH2 0x3284 PUSH2 0x30CB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C6 PUSH1 0xF DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x32D1 DUP3 PUSH2 0x3290 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32F5 DUP2 PUSH2 0x32B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F2066756E6473000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3332 PUSH1 0x8 DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x333D DUP3 PUSH2 0x32FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3361 DUP2 PUSH2 0x3325 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x33CA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x338D JUMP JUMPDEST PUSH2 0x33D4 DUP7 DUP4 PUSH2 0x338D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3411 PUSH2 0x340C PUSH2 0x3407 DUP5 PUSH2 0x28EA JUMP JUMPDEST PUSH2 0x33EC JUMP JUMPDEST PUSH2 0x28EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x342B DUP4 PUSH2 0x33F6 JUMP JUMPDEST PUSH2 0x343F PUSH2 0x3437 DUP3 PUSH2 0x3418 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x339A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3454 PUSH2 0x3447 JUMP JUMPDEST PUSH2 0x345F DUP2 DUP5 DUP5 PUSH2 0x3422 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3483 JUMPI PUSH2 0x3478 PUSH1 0x0 DUP3 PUSH2 0x344C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3465 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x34C8 JUMPI PUSH2 0x3499 DUP2 PUSH2 0x3368 JUMP JUMPDEST PUSH2 0x34A2 DUP5 PUSH2 0x337D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x34B1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x34C5 PUSH2 0x34BD DUP6 PUSH2 0x337D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3464 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34EB PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x34CD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3504 DUP4 DUP4 PUSH2 0x34DA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x351D DUP3 PUSH2 0x2838 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3536 JUMPI PUSH2 0x3535 PUSH2 0x2B34 JUMP JUMPDEST JUMPDEST PUSH2 0x3540 DUP3 SLOAD PUSH2 0x2FF7 JUMP JUMPDEST PUSH2 0x354B DUP3 DUP3 DUP6 PUSH2 0x3487 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x357E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x356C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3576 DUP6 DUP3 PUSH2 0x34F8 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x35DE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x358C DUP7 PUSH2 0x3368 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x35B4 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x358F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x35D1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x35CD PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x34DA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x74727573746564207369676E6572206E6F742073657400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x361C PUSH1 0x16 DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x3627 DUP3 PUSH2 0x35E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x364B DUP2 PUSH2 0x360F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C726561647920636C61696D6564206F6E2D636861696E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3688 PUSH1 0x18 DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x3693 DUP3 PUSH2 0x3652 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36B7 DUP2 PUSH2 0x367B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D6 DUP3 PUSH2 0x36BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36E8 DUP3 PUSH2 0x36CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3700 PUSH2 0x36FB DUP3 PUSH2 0x296D JUMP JUMPDEST PUSH2 0x36DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3721 PUSH2 0x371C DUP3 PUSH2 0x28EA JUMP JUMPDEST PUSH2 0x3706 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3733 DUP3 DUP7 PUSH2 0x36EF JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x3743 DUP3 DUP6 PUSH2 0x3710 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x3753 DUP3 DUP5 PUSH2 0x36EF JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x379A PUSH1 0x11 DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x37A5 DUP3 PUSH2 0x3764 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37C9 DUP2 PUSH2 0x378D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E6 DUP3 PUSH2 0x2838 JUMP JUMPDEST PUSH2 0x37F0 DUP2 DUP6 PUSH2 0x37D0 JUMP JUMPDEST SWAP4 POP PUSH2 0x3800 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2854 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3818 DUP3 DUP6 PUSH2 0x37DB JUMP JUMPDEST SWAP2 POP PUSH2 0x3824 DUP3 DUP5 PUSH2 0x37DB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C69642076617269616E740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3866 PUSH1 0xF DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x3871 DUP3 PUSH2 0x3830 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3895 DUP2 PUSH2 0x3859 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38D2 PUSH1 0x9 DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x38DD DUP3 PUSH2 0x389C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3901 DUP2 PUSH2 0x38C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6F6E6C79206E65757472616C20746F6B656E732063616E206265207472616E73 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x666F726D65640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3964 PUSH1 0x26 DUP4 PUSH2 0x2843 JUMP JUMPDEST SWAP2 POP PUSH2 0x396F DUP3 PUSH2 0x3908 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3993 DUP2 PUSH2 0x3957 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C1 DUP3 PUSH2 0x399A JUMP JUMPDEST PUSH2 0x39CB DUP2 DUP6 PUSH2 0x39A5 JUMP JUMPDEST SWAP4 POP PUSH2 0x39DB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2854 JUMP JUMPDEST PUSH2 0x39E4 DUP2 PUSH2 0x287E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3A04 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x297F JUMP JUMPDEST PUSH2 0x3A11 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x297F JUMP JUMPDEST PUSH2 0x3A1E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2A95 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3A30 DUP2 DUP5 PUSH2 0x39B6 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3A4A DUP2 PUSH2 0x27A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A66 JUMPI PUSH2 0x3A65 PUSH2 0x2773 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A74 DUP5 DUP3 DUP6 ADD PUSH2 0x3A3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A92 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x297F JUMP JUMPDEST PUSH2 0x3A9F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2A95 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AE8 DUP2 PUSH2 0x3AD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3B03 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3ADF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3B1E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3ADF JUMP JUMPDEST PUSH2 0x3B2B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2EF2 JUMP JUMPDEST PUSH2 0x3B38 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3ADF JUMP JUMPDEST PUSH2 0x3B45 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3ADF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD SIGNEXTEND 0x4A INVALID PUSH30 0x5218FC83B2DAE60F9B5FE21DE5C1618621F0A253DFC39B9A9EEE8F64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"307:4551:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1527:300:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2263:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3152:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;630:49:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3852:578:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;385:30:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2353:555;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4464:132:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4629:227:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1502:90;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1406;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2103:118:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1861:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2394:93:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3487:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;421:27:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;454:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4630:233:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3043:819:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1812:509;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;742:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;355:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3665:153:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;550:28:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4014:560;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1527:300:2;1629:4;1679:25;1664:40;;;:11;:40;;;;:104;;;;1735:33;1720:48;;;:11;:48;;;;1664:104;:156;;;;1784:36;1808:11;1784:23;:36::i;:::-;1664:156;1645:175;;1527:300;;;:::o;2263:89::-;2308:13;2340:5;2333:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2263:89;:::o;3299:154::-;3366:7;3385:22;3399:7;3385:13;:22::i;:::-;;3425:21;3438:7;3425:12;:21::i;:::-;3418:28;;3299:154;;;:::o;3152:113::-;3223:35;3232:2;3236:7;3245:12;:10;:12::i;:::-;3223:8;:35::i;:::-;3152:113;;:::o;630:49:17:-;;;;;;;;;;;;;;;;;;;;;;:::o;3852:578:2:-;3960:1;3946:16;;:2;:16;;;3942:87;;4015:1;3985:33;;;;;;;;;;;:::i;:::-;;;;;;;;3942:87;4247:21;4271:34;4279:2;4283:7;4292:12;:10;:12::i;:::-;4271:7;:34::i;:::-;4247:58;;4336:4;4319:21;;:13;:21;;;4315:109;;4384:4;4390:7;4399:13;4363:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4315:109;3932:498;3852:578;;;:::o;385:30:17:-;;;;:::o;2353:555::-;2427:1;2421:3;:7;:20;;;;;2439:2;2432:3;:9;;2421:20;2413:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;2497:15;;2490:3;2475:12;;:18;;;;:::i;:::-;:37;;2467:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2574:3;2563:8;;:14;;;;:::i;:::-;2550:9;:27;2542:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2615:9;2610:263;2634:3;2630:1;:7;2610:263;;;2658:15;2676:9;;:11;;;;;;;;;:::i;:::-;;;;;2658:29;;2701:30;2711:10;2723:7;2701:9;:30::i;:::-;2811:1;2787:12;:21;2800:7;2787:21;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;2854:7;2842:10;2831:31;;;;;;;;;;;;2644:229;2639:3;;;;;:::i;:::-;;;;2610:263;;;;2898:3;2882:12;;:19;;;;;;;:::i;:::-;;;;;;;;2353:555;:::o;4464:132:2:-;4550:39;4567:4;4573:2;4577:7;4550:39;;;;;;;;;;;;:16;:39::i;:::-;4464:132;;;:::o;4629:227:17:-;1531:13:0;:11;:13::i;:::-;4718:1:17::1;4704:16;;:2;:16;;::::0;4696:44:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4750:11;4764:21;4750:35;;4809:1;4803:3;:7;4795:28;;;;;;;;;;;;:::i;:::-;;;;;;;;;4833:2;:11;;:16;4845:3;4833:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;4686:170;4629:227:::0;:::o;1502:90::-;1531:13:0;:11;:13::i;:::-;1584:1:17::1;1568:13;:17;;;;;;:::i;:::-;;1502:90:::0;:::o;1406:::-;1531:13:0;:11;:13::i;:::-;1488:1:17::1;1472:13;;:17;;;;;;;;;;;;;;;;;;1406:90:::0;:::o;2103:118:2:-;2166:7;2192:22;2206:7;2192:13;:22::i;:::-;2185:29;;2103:118;;;:::o;1861:208::-;1924:7;1964:1;1947:19;;:5;:19;;;1943:87;;2016:1;1989:30;;;;;;;;;;;:::i;:::-;;;;;;;;1943:87;2046:9;:16;2056:5;2046:16;;;;;;;;;;;;;;;;2039:23;;1861:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2394:93:2:-;2441:13;2473:7;2466:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2394:93;:::o;3487:144::-;3572:52;3591:12;:10;:12::i;:::-;3605:8;3615;3572:18;:52::i;:::-;3487:144;;:::o;421:27:17:-;;;;:::o;454:23::-;;;;:::o;4630:233:2:-;4743:31;4756:4;4762:2;4766:7;4743:12;:31::i;:::-;4784:72;4818:12;:10;:12::i;:::-;4832:4;4838:2;4842:7;4851:4;4784:33;:72::i;:::-;4630:233;;;;:::o;3043:819:17:-;3149:1;3124:27;;:13;;;;;;;;;;;:27;;;3116:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3197:17;:29;3215:10;3197:29;;;;;;;;;;;;;;;;;;;;;;;;;3196:30;3188:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;3262:14;3314:4;3321:13;3336:10;3289:58;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3279:69;;;;;;3262:86;;3427:16;3446:47;3486:6;3446:39;:47::i;:::-;3427:66;;3499:14;3516:34;3530:8;3540:9;;3516:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:34::i;:::-;3499:51;;3578:13;;;;;;;;;;;3568:23;;:6;:23;;;3560:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3656:4;3624:17;:29;3642:10;3624:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;3670:15;3688:9;;:11;;;;;;;;;:::i;:::-;;;;;3670:29;;3709:30;3719:10;3731:7;3709:9;:30::i;:::-;3803:1;3779:12;:21;3792:7;3779:21;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;3847:7;3835:10;3819:36;;;;;;;;;;;;3106:756;;;;3043:819;;:::o;1812:509::-;1877:13;1969:22;1983:7;1969:13;:22::i;:::-;;2001:18;2022:10;:8;:10::i;:::-;2001:31;;2042:7;2052:12;:21;2065:7;2052:21;;;;;;;;;;;;;;;;;;;;;2042:31;;2083:22;:39;;;;;;;;;;;;;;;;;;;2141:1;2136;:6;;;2132:126;;2158:23;;;;;;;;;;;;;;;;;;;2132:126;;;2207:1;2202;:6;;;2198:60;;2224:23;;;;;;;;;;;;;;;;;;;2198:60;2132:126;2298:4;2304:8;2281:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2267:47;;;;;1812:509;;;:::o;742:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;355:24::-;;;;:::o;3665:153:2:-;3753:4;3776:18;:25;3795:5;3776:25;;;;;;;;;;;;;;;:35;3802:8;3776:35;;;;;;;;;;;;;;;;;;;;;;;;;3769:42;;3665:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;550:28:17:-;;;;;;;;;;;;;:::o;4014:560::-;4103:1;4092:7;:12;;;:28;;;;4119:1;4108:7;:12;;;4092:28;4084:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;4178:10;4158:30;;:16;4166:7;4158;:16::i;:::-;:30;;;4150:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4245:1;4220:12;:21;4233:7;4220:21;;;;;;;;;;;;;;;;;;;;;:26;;;4212:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;4334:14;4340:7;4334:5;:14::i;:::-;4401:13;4417:9;;:11;;;;;;;;;:::i;:::-;;;;;4401:27;;4438:28;4448:10;4460:5;4438:9;:28::i;:::-;4498:7;4476:12;:19;4489:5;4476:19;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4552:5;4543:7;4531:10;4521:46;;;4559:7;4521:46;;;;;;:::i;:::-;;;;;;;;4074:500;4014:560;;:::o;730:146:12:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;15858:241:2:-;15921:7;15940:13;15956:17;15965:7;15956:8;:17::i;:::-;15940:33;;16004:1;15987:19;;:5;:19;;;15983:88;;16052:7;16029:31;;;;;;;;;;;:::i;:::-;;;;;;;;15983:88;16087:5;16080:12;;;15858:241;;;:::o;5609:127::-;5679:7;5705:15;:24;5721:7;5705:24;;;;;;;;;;;;;;;;;;;;;5698:31;;5609:127;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;14138:120:2:-;14218:33;14227:2;14231:7;14240:4;14246;14218:8;:33::i;:::-;14138:120;;;:::o;8507:795::-;8593:7;8612:12;8627:17;8636:7;8627:8;:17::i;:::-;8612:32;;8720:1;8704:18;;:4;:18;;;8700:86;;8738:37;8755:4;8761;8767:7;8738:16;:37::i;:::-;8700:86;8846:1;8830:18;;:4;:18;;;8826:256;;8946:48;8963:1;8967:7;8984:1;8988:5;8946:8;:48::i;:::-;9056:1;9037:9;:15;9047:4;9037:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;8826:256;9110:1;9096:16;;:2;:16;;;9092:107;;9173:1;9156:9;:13;9166:2;9156:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9092:107;9228:2;9209:7;:16;9217:7;9209:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9265:7;9261:2;9246:27;;9255:4;9246:27;;;;;;;;;;;;9291:4;9284:11;;;8507:795;;;;;:::o;10302:100::-;10369:26;10379:2;10383:7;10369:26;;;;;;;;;;;;:9;:26::i;:::-;10302:100;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15311:312:2:-;15438:1;15418:22;;:8;:22;;;15414:91;;15485:8;15463:31;;;;;;;;;;;:::i;:::-;;;;;;;;15414:91;15552:8;15514:18;:25;15533:5;15514:25;;;;;;;;;;;;;;;:35;15540:8;15514:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15597:8;15575:41;;15590:5;15575:41;;;15607:8;15575:41;;;;;;:::i;:::-;;;;;;;;15311:312;;;:::o;993:926:6:-;1190:1;1173:2;:14;;;:18;1169:744;;;1227:2;1211:36;;;1248:8;1258:4;1264:7;1273:4;1211:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1207:696;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:1;1568:6;:13;:18;1564:325;;1708:2;1672:39;;;;;;;;;;;:::i;:::-;;;;;;;;1564:325;1841:6;1835:13;1828:4;1820:6;1816:17;1809:40;1207:696;1335:41;;;1325:51;;;:6;:51;;;;1321:182;;1481:2;1445:39;;;;;;;;;;;:::i;:::-;;;;;;;;1321:182;1279:238;1169:744;993:926;;;;;:::o;1247:433:11:-;1323:14;1401:34;1395:4;1388:48;1503:11;1497:4;1490:25;1595:4;1589;1579:21;1569:31;;1247:433;;;:::o;3714:255:10:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;3953:9;3946:16;;;;;3714:255;;;;:::o;1598:104:17:-;1650:13;1682;1675:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1598:104;:::o;11156:227:2:-;11207:21;11231:40;11247:1;11251:7;11268:1;11231:7;:40::i;:::-;11207:64;;11310:1;11285:27;;:13;:27;;;11281:96;;11358:7;11335:31;;;;;;;;;;;:::i;:::-;;;;;;;;11281:96;11197:186;11156:227;:::o;5378:115::-;5444:7;5470;:16;5478:7;5470:16;;;;;;;;;;;;;;;;;;;;;5463:23;;5378:115;;;:::o;14440:662::-;14600:9;:31;;;;14629:1;14613:18;;:4;:18;;;;14600:31;14596:460;;;14647:13;14663:22;14677:7;14663:13;:22::i;:::-;14647:38;;14829:1;14813:18;;:4;:18;;;;:35;;;;;14844:4;14835:13;;:5;:13;;;;14813:35;:69;;;;;14853:29;14870:5;14877:4;14853:16;:29::i;:::-;14852:30;14813:69;14809:142;;;14931:4;14909:27;;;;;;;;;;;:::i;:::-;;;;;;;;14809:142;14969:9;14965:81;;;15023:7;15019:2;15003:28;;15012:5;15003:28;;;;;;;;;;;;14965:81;14633:423;14596:460;15093:2;15066:15;:24;15082:7;15066:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14440:662;;;;:::o;6751:368::-;6863:38;6877:5;6884:7;6893;6863:13;:38::i;:::-;6858:255;;6938:1;6921:19;;:5;:19;;;6917:186;;6990:7;6967:31;;;;;;;;;;;:::i;:::-;;;;;;;;6917:186;7071:7;7080;7044:44;;;;;;;;;;;;:::i;:::-;;;;;;;;6858:255;6751:368;;;:::o;10623:207::-;10717:18;10723:2;10727:7;10717:5;:18::i;:::-;10745:78;10779:12;:10;:12::i;:::-;10801:1;10805:2;10809:7;10818:4;10745:33;:78::i;:::-;10623:207;;;:::o;2129:778:10:-;2232:17;2251:16;2269:14;2319:2;2299:9;:16;:22;2295:606;;2337:9;2360;2383:7;2604:4;2593:9;2589:20;2583:27;2578:32;;2653:4;2642:9;2638:20;2632:27;2627:32;;2710:4;2699:9;2695:20;2689:27;2686:1;2681:36;2676:41;;2751:25;2762:4;2768:1;2771;2774;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;2823:1;2827:35;2872:9;:16;2864:25;;2807:83;;;;;;2129:778;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;6047:272:2:-;6150:4;6204:1;6185:21;;:7;:21;;;;:127;;;;;6232:7;6223:16;;:5;:16;;;:52;;;;6243:32;6260:5;6267:7;6243:16;:32::i;:::-;6223:52;:88;;;;6304:7;6279:32;;:21;6292:7;6279:12;:21::i;:::-;:32;;;6223:88;6185:127;6166:146;;6047:272;;;;;:::o;9624:327::-;9705:1;9691:16;;:2;:16;;;9687:87;;9760:1;9730:33;;;;;;;;;;;:::i;:::-;;;;;;;;9687:87;9783:21;9807:32;9815:2;9819:7;9836:1;9807:7;:32::i;:::-;9783:56;;9878:1;9853:27;;:13;:27;;;9849:96;;9931:1;9903:31;;;;;;;;;;;:::i;:::-;;;;;;;;9849:96;9677:274;9624:327;;:::o;5203:1551:10:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;7:75:18:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:329::-;4949:6;4998:2;4986:9;4977:7;4973:23;4969:32;4966:119;;;5004:79;;:::i;:::-;4966:119;5124:1;5149:53;5194:7;5185:6;5174:9;5170:22;5149:53;:::i;:::-;5139:63;;5095:117;4890:329;;;;:::o;5225:619::-;5302:6;5310;5318;5367:2;5355:9;5346:7;5342:23;5338:32;5335:119;;;5373:79;;:::i;:::-;5335:119;5493:1;5518:53;5563:7;5554:6;5543:9;5539:22;5518:53;:::i;:::-;5508:63;;5464:117;5620:2;5646:53;5691:7;5682:6;5671:9;5667:22;5646:53;:::i;:::-;5636:63;;5591:118;5748:2;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5719:118;5225:619;;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:104::-;6247:7;6276:24;6294:5;6276:24;:::i;:::-;6265:35;;6202:104;;;:::o;6312:138::-;6393:32;6419:5;6393:32;:::i;:::-;6386:5;6383:43;6373:71;;6440:1;6437;6430:12;6373:71;6312:138;:::o;6456:155::-;6510:5;6548:6;6535:20;6526:29;;6564:41;6599:5;6564:41;:::i;:::-;6456:155;;;;:::o;6617:345::-;6684:6;6733:2;6721:9;6712:7;6708:23;6704:32;6701:119;;;6739:79;;:::i;:::-;6701:119;6859:1;6884:61;6937:7;6928:6;6917:9;6913:22;6884:61;:::i;:::-;6874:71;;6830:125;6617:345;;;;:::o;6968:117::-;7077:1;7074;7067:12;7091:117;7200:1;7197;7190:12;7214:180;7262:77;7259:1;7252:88;7359:4;7356:1;7349:15;7383:4;7380:1;7373:15;7400:281;7483:27;7505:4;7483:27;:::i;:::-;7475:6;7471:40;7613:6;7601:10;7598:22;7577:18;7565:10;7562:34;7559:62;7556:88;;;7624:18;;:::i;:::-;7556:88;7664:10;7660:2;7653:22;7443:238;7400:281;;:::o;7687:129::-;7721:6;7748:20;;:::i;:::-;7738:30;;7777:33;7805:4;7797:6;7777:33;:::i;:::-;7687:129;;;:::o;7822:308::-;7884:4;7974:18;7966:6;7963:30;7960:56;;;7996:18;;:::i;:::-;7960:56;8034:29;8056:6;8034:29;:::i;:::-;8026:37;;8118:4;8112;8108:15;8100:23;;7822:308;;;:::o;8136:146::-;8233:6;8228:3;8223;8210:30;8274:1;8265:6;8260:3;8256:16;8249:27;8136:146;;;:::o;8288:425::-;8366:5;8391:66;8407:49;8449:6;8407:49;:::i;:::-;8391:66;:::i;:::-;8382:75;;8480:6;8473:5;8466:21;8518:4;8511:5;8507:16;8556:3;8547:6;8542:3;8538:16;8535:25;8532:112;;;8563:79;;:::i;:::-;8532:112;8653:54;8700:6;8695:3;8690;8653:54;:::i;:::-;8372:341;8288:425;;;;;:::o;8733:340::-;8789:5;8838:3;8831:4;8823:6;8819:17;8815:27;8805:122;;8846:79;;:::i;:::-;8805:122;8963:6;8950:20;8988:79;9063:3;9055:6;9048:4;9040:6;9036:17;8988:79;:::i;:::-;8979:88;;8795:278;8733:340;;;;:::o;9079:509::-;9148:6;9197:2;9185:9;9176:7;9172:23;9168:32;9165:119;;;9203:79;;:::i;:::-;9165:119;9351:1;9340:9;9336:17;9323:31;9381:18;9373:6;9370:30;9367:117;;;9403:79;;:::i;:::-;9367:117;9508:63;9563:7;9554:6;9543:9;9539:22;9508:63;:::i;:::-;9498:73;;9294:287;9079:509;;;;:::o;9594:116::-;9664:21;9679:5;9664:21;:::i;:::-;9657:5;9654:32;9644:60;;9700:1;9697;9690:12;9644:60;9594:116;:::o;9716:133::-;9759:5;9797:6;9784:20;9775:29;;9813:30;9837:5;9813:30;:::i;:::-;9716:133;;;;:::o;9855:468::-;9920:6;9928;9977:2;9965:9;9956:7;9952:23;9948:32;9945:119;;;9983:79;;:::i;:::-;9945:119;10103:1;10128:53;10173:7;10164:6;10153:9;10149:22;10128:53;:::i;:::-;10118:63;;10074:117;10230:2;10256:50;10298:7;10289:6;10278:9;10274:22;10256:50;:::i;:::-;10246:60;;10201:115;9855:468;;;;;:::o;10329:307::-;10390:4;10480:18;10472:6;10469:30;10466:56;;;10502:18;;:::i;:::-;10466:56;10540:29;10562:6;10540:29;:::i;:::-;10532:37;;10624:4;10618;10614:15;10606:23;;10329:307;;;:::o;10642:423::-;10719:5;10744:65;10760:48;10801:6;10760:48;:::i;:::-;10744:65;:::i;:::-;10735:74;;10832:6;10825:5;10818:21;10870:4;10863:5;10859:16;10908:3;10899:6;10894:3;10890:16;10887:25;10884:112;;;10915:79;;:::i;:::-;10884:112;11005:54;11052:6;11047:3;11042;11005:54;:::i;:::-;10725:340;10642:423;;;;;:::o;11084:338::-;11139:5;11188:3;11181:4;11173:6;11169:17;11165:27;11155:122;;11196:79;;:::i;:::-;11155:122;11313:6;11300:20;11338:78;11412:3;11404:6;11397:4;11389:6;11385:17;11338:78;:::i;:::-;11329:87;;11145:277;11084:338;;;;:::o;11428:943::-;11523:6;11531;11539;11547;11596:3;11584:9;11575:7;11571:23;11567:33;11564:120;;;11603:79;;:::i;:::-;11564:120;11723:1;11748:53;11793:7;11784:6;11773:9;11769:22;11748:53;:::i;:::-;11738:63;;11694:117;11850:2;11876:53;11921:7;11912:6;11901:9;11897:22;11876:53;:::i;:::-;11866:63;;11821:118;11978:2;12004:53;12049:7;12040:6;12029:9;12025:22;12004:53;:::i;:::-;11994:63;;11949:118;12134:2;12123:9;12119:18;12106:32;12165:18;12157:6;12154:30;12151:117;;;12187:79;;:::i;:::-;12151:117;12292:62;12346:7;12337:6;12326:9;12322:22;12292:62;:::i;:::-;12282:72;;12077:287;11428:943;;;;;;;:::o;12377:117::-;12486:1;12483;12476:12;12500:117;12609:1;12606;12599:12;12636:552;12693:8;12703:6;12753:3;12746:4;12738:6;12734:17;12730:27;12720:122;;12761:79;;:::i;:::-;12720:122;12874:6;12861:20;12851:30;;12904:18;12896:6;12893:30;12890:117;;;12926:79;;:::i;:::-;12890:117;13040:4;13032:6;13028:17;13016:29;;13094:3;13086:4;13078:6;13074:17;13064:8;13060:32;13057:41;13054:128;;;13101:79;;:::i;:::-;13054:128;12636:552;;;;;:::o;13194:527::-;13264:6;13272;13321:2;13309:9;13300:7;13296:23;13292:32;13289:119;;;13327:79;;:::i;:::-;13289:119;13475:1;13464:9;13460:17;13447:31;13505:18;13497:6;13494:30;13491:117;;;13527:79;;:::i;:::-;13491:117;13640:64;13696:7;13687:6;13676:9;13672:22;13640:64;:::i;:::-;13622:82;;;;13418:296;13194:527;;;;;:::o;13727:86::-;13762:7;13802:4;13795:5;13791:16;13780:27;;13727:86;;;:::o;13819:112::-;13902:22;13918:5;13902:22;:::i;:::-;13897:3;13890:35;13819:112;;:::o;13937:214::-;14026:4;14064:2;14053:9;14049:18;14041:26;;14077:67;14141:1;14130:9;14126:17;14117:6;14077:67;:::i;:::-;13937:214;;;;:::o;14157:474::-;14225:6;14233;14282:2;14270:9;14261:7;14257:23;14253:32;14250:119;;;14288:79;;:::i;:::-;14250:119;14408:1;14433:53;14478:7;14469:6;14458:9;14454:22;14433:53;:::i;:::-;14423:63;;14379:117;14535:2;14561:53;14606:7;14597:6;14586:9;14582:22;14561:53;:::i;:::-;14551:63;;14506:118;14157:474;;;;;:::o;14637:118::-;14708:22;14724:5;14708:22;:::i;:::-;14701:5;14698:33;14688:61;;14745:1;14742;14735:12;14688:61;14637:118;:::o;14761:135::-;14805:5;14843:6;14830:20;14821:29;;14859:31;14884:5;14859:31;:::i;:::-;14761:135;;;;:::o;14902:470::-;14968:6;14976;15025:2;15013:9;15004:7;15000:23;14996:32;14993:119;;;15031:79;;:::i;:::-;14993:119;15151:1;15176:53;15221:7;15212:6;15201:9;15197:22;15176:53;:::i;:::-;15166:63;;15122:117;15278:2;15304:51;15347:7;15338:6;15327:9;15323:22;15304:51;:::i;:::-;15294:61;;15249:116;14902:470;;;;;:::o;15378:180::-;15426:77;15423:1;15416:88;15523:4;15520:1;15513:15;15547:4;15544:1;15537:15;15564:320;15608:6;15645:1;15639:4;15635:12;15625:22;;15692:1;15686:4;15682:12;15713:18;15703:81;;15769:4;15761:6;15757:17;15747:27;;15703:81;15831:2;15823:6;15820:14;15800:18;15797:38;15794:84;;15850:18;;:::i;:::-;15794:84;15615:269;15564:320;;;:::o;15890:442::-;16039:4;16077:2;16066:9;16062:18;16054:26;;16090:71;16158:1;16147:9;16143:17;16134:6;16090:71;:::i;:::-;16171:72;16239:2;16228:9;16224:18;16215:6;16171:72;:::i;:::-;16253;16321:2;16310:9;16306:18;16297:6;16253:72;:::i;:::-;15890:442;;;;;;:::o;16338:161::-;16478:13;16474:1;16466:6;16462:14;16455:37;16338:161;:::o;16505:366::-;16647:3;16668:67;16732:2;16727:3;16668:67;:::i;:::-;16661:74;;16744:93;16833:3;16744:93;:::i;:::-;16862:2;16857:3;16853:12;16846:19;;16505:366;;;:::o;16877:419::-;17043:4;17081:2;17070:9;17066:18;17058:26;;17130:9;17124:4;17120:20;17116:1;17105:9;17101:17;17094:47;17158:131;17284:4;17158:131;:::i;:::-;17150:139;;16877:419;;;:::o;17302:180::-;17350:77;17347:1;17340:88;17447:4;17444:1;17437:15;17471:4;17468:1;17461:15;17488:191;17528:3;17547:20;17565:1;17547:20;:::i;:::-;17542:25;;17581:20;17599:1;17581:20;:::i;:::-;17576:25;;17624:1;17621;17617:9;17610:16;;17645:3;17642:1;17639:10;17636:36;;;17652:18;;:::i;:::-;17636:36;17488:191;;;;:::o;17685:165::-;17825:17;17821:1;17813:6;17809:14;17802:41;17685:165;:::o;17856:366::-;17998:3;18019:67;18083:2;18078:3;18019:67;:::i;:::-;18012:74;;18095:93;18184:3;18095:93;:::i;:::-;18213:2;18208:3;18204:12;18197:19;;17856:366;;;:::o;18228:419::-;18394:4;18432:2;18421:9;18417:18;18409:26;;18481:9;18475:4;18471:20;18467:1;18456:9;18452:17;18445:47;18509:131;18635:4;18509:131;:::i;:::-;18501:139;;18228:419;;;:::o;18653:410::-;18693:7;18716:20;18734:1;18716:20;:::i;:::-;18711:25;;18750:20;18768:1;18750:20;:::i;:::-;18745:25;;18805:1;18802;18798:9;18827:30;18845:11;18827:30;:::i;:::-;18816:41;;19006:1;18997:7;18993:15;18990:1;18987:22;18967:1;18960:9;18940:83;18917:139;;19036:18;;:::i;:::-;18917:139;18701:362;18653:410;;;;:::o;19069:167::-;19209:19;19205:1;19197:6;19193:14;19186:43;19069:167;:::o;19242:366::-;19384:3;19405:67;19469:2;19464:3;19405:67;:::i;:::-;19398:74;;19481:93;19570:3;19481:93;:::i;:::-;19599:2;19594:3;19590:12;19583:19;;19242:366;;;:::o;19614:419::-;19780:4;19818:2;19807:9;19803:18;19795:26;;19867:9;19861:4;19857:20;19853:1;19842:9;19838:17;19831:47;19895:131;20021:4;19895:131;:::i;:::-;19887:139;;19614:419;;;:::o;20039:233::-;20078:3;20101:24;20119:5;20101:24;:::i;:::-;20092:33;;20147:66;20140:5;20137:77;20134:103;;20217:18;;:::i;:::-;20134:103;20264:1;20257:5;20253:13;20246:20;;20039:233;;;:::o;20278:165::-;20418:17;20414:1;20406:6;20402:14;20395:41;20278:165;:::o;20449:366::-;20591:3;20612:67;20676:2;20671:3;20612:67;:::i;:::-;20605:74;;20688:93;20777:3;20688:93;:::i;:::-;20806:2;20801:3;20797:12;20790:19;;20449:366;;;:::o;20821:419::-;20987:4;21025:2;21014:9;21010:18;21002:26;;21074:9;21068:4;21064:20;21060:1;21049:9;21045:17;21038:47;21102:131;21228:4;21102:131;:::i;:::-;21094:139;;20821:419;;;:::o;21246:158::-;21386:10;21382:1;21374:6;21370:14;21363:34;21246:158;:::o;21410:365::-;21552:3;21573:66;21637:1;21632:3;21573:66;:::i;:::-;21566:73;;21648:93;21737:3;21648:93;:::i;:::-;21766:2;21761:3;21757:12;21750:19;;21410:365;;;:::o;21781:419::-;21947:4;21985:2;21974:9;21970:18;21962:26;;22034:9;22028:4;22024:20;22020:1;22009:9;22005:17;21998:47;22062:131;22188:4;22062:131;:::i;:::-;22054:139;;21781:419;;;:::o;22206:141::-;22255:4;22278:3;22270:11;;22301:3;22298:1;22291:14;22335:4;22332:1;22322:18;22314:26;;22206:141;;;:::o;22353:93::-;22390:6;22437:2;22432;22425:5;22421:14;22417:23;22407:33;;22353:93;;;:::o;22452:107::-;22496:8;22546:5;22540:4;22536:16;22515:37;;22452:107;;;;:::o;22565:393::-;22634:6;22684:1;22672:10;22668:18;22707:97;22737:66;22726:9;22707:97;:::i;:::-;22825:39;22855:8;22844:9;22825:39;:::i;:::-;22813:51;;22897:4;22893:9;22886:5;22882:21;22873:30;;22946:4;22936:8;22932:19;22925:5;22922:30;22912:40;;22641:317;;22565:393;;;;;:::o;22964:60::-;22992:3;23013:5;23006:12;;22964:60;;;:::o;23030:142::-;23080:9;23113:53;23131:34;23140:24;23158:5;23140:24;:::i;:::-;23131:34;:::i;:::-;23113:53;:::i;:::-;23100:66;;23030:142;;;:::o;23178:75::-;23221:3;23242:5;23235:12;;23178:75;;;:::o;23259:269::-;23369:39;23400:7;23369:39;:::i;:::-;23430:91;23479:41;23503:16;23479:41;:::i;:::-;23471:6;23464:4;23458:11;23430:91;:::i;:::-;23424:4;23417:105;23335:193;23259:269;;;:::o;23534:73::-;23579:3;23534:73;:::o;23613:189::-;23690:32;;:::i;:::-;23731:65;23789:6;23781;23775:4;23731:65;:::i;:::-;23666:136;23613:189;;:::o;23808:186::-;23868:120;23885:3;23878:5;23875:14;23868:120;;;23939:39;23976:1;23969:5;23939:39;:::i;:::-;23912:1;23905:5;23901:13;23892:22;;23868:120;;;23808:186;;:::o;24000:543::-;24101:2;24096:3;24093:11;24090:446;;;24135:38;24167:5;24135:38;:::i;:::-;24219:29;24237:10;24219:29;:::i;:::-;24209:8;24205:44;24402:2;24390:10;24387:18;24384:49;;;24423:8;24408:23;;24384:49;24446:80;24502:22;24520:3;24502:22;:::i;:::-;24492:8;24488:37;24475:11;24446:80;:::i;:::-;24105:431;;24090:446;24000:543;;;:::o;24549:117::-;24603:8;24653:5;24647:4;24643:16;24622:37;;24549:117;;;;:::o;24672:169::-;24716:6;24749:51;24797:1;24793:6;24785:5;24782:1;24778:13;24749:51;:::i;:::-;24745:56;24830:4;24824;24820:15;24810:25;;24723:118;24672:169;;;;:::o;24846:295::-;24922:4;25068:29;25093:3;25087:4;25068:29;:::i;:::-;25060:37;;25130:3;25127:1;25123:11;25117:4;25114:21;25106:29;;24846:295;;;;:::o;25146:1395::-;25263:37;25296:3;25263:37;:::i;:::-;25365:18;25357:6;25354:30;25351:56;;;25387:18;;:::i;:::-;25351:56;25431:38;25463:4;25457:11;25431:38;:::i;:::-;25516:67;25576:6;25568;25562:4;25516:67;:::i;:::-;25610:1;25634:4;25621:17;;25666:2;25658:6;25655:14;25683:1;25678:618;;;;26340:1;26357:6;26354:77;;;26406:9;26401:3;26397:19;26391:26;26382:35;;26354:77;26457:67;26517:6;26510:5;26457:67;:::i;:::-;26451:4;26444:81;26313:222;25648:887;;25678:618;25730:4;25726:9;25718:6;25714:22;25764:37;25796:4;25764:37;:::i;:::-;25823:1;25837:208;25851:7;25848:1;25845:14;25837:208;;;25930:9;25925:3;25921:19;25915:26;25907:6;25900:42;25981:1;25973:6;25969:14;25959:24;;26028:2;26017:9;26013:18;26000:31;;25874:4;25871:1;25867:12;25862:17;;25837:208;;;26073:6;26064:7;26061:19;26058:179;;;26131:9;26126:3;26122:19;26116:26;26174:48;26216:4;26208:6;26204:17;26193:9;26174:48;:::i;:::-;26166:6;26159:64;26081:156;26058:179;26283:1;26279;26271:6;26267:14;26263:22;26257:4;26250:36;25685:611;;;25648:887;;25238:1303;;;25146:1395;;:::o;26547:172::-;26687:24;26683:1;26675:6;26671:14;26664:48;26547:172;:::o;26725:366::-;26867:3;26888:67;26952:2;26947:3;26888:67;:::i;:::-;26881:74;;26964:93;27053:3;26964:93;:::i;:::-;27082:2;27077:3;27073:12;27066:19;;26725:366;;;:::o;27097:419::-;27263:4;27301:2;27290:9;27286:18;27278:26;;27350:9;27344:4;27340:20;27336:1;27325:9;27321:17;27314:47;27378:131;27504:4;27378:131;:::i;:::-;27370:139;;27097:419;;;:::o;27522:174::-;27662:26;27658:1;27650:6;27646:14;27639:50;27522:174;:::o;27702:366::-;27844:3;27865:67;27929:2;27924:3;27865:67;:::i;:::-;27858:74;;27941:93;28030:3;27941:93;:::i;:::-;28059:2;28054:3;28050:12;28043:19;;27702:366;;;:::o;28074:419::-;28240:4;28278:2;28267:9;28263:18;28255:26;;28327:9;28321:4;28317:20;28313:1;28302:9;28298:17;28291:47;28355:131;28481:4;28355:131;:::i;:::-;28347:139;;28074:419;;;:::o;28499:94::-;28532:8;28580:5;28576:2;28572:14;28551:35;;28499:94;;;:::o;28599:::-;28638:7;28667:20;28681:5;28667:20;:::i;:::-;28656:31;;28599:94;;;:::o;28699:100::-;28738:7;28767:26;28787:5;28767:26;:::i;:::-;28756:37;;28699:100;;;:::o;28805:157::-;28910:45;28930:24;28948:5;28930:24;:::i;:::-;28910:45;:::i;:::-;28905:3;28898:58;28805:157;;:::o;28968:79::-;29007:7;29036:5;29025:16;;28968:79;;;:::o;29053:157::-;29158:45;29178:24;29196:5;29178:24;:::i;:::-;29158:45;:::i;:::-;29153:3;29146:58;29053:157;;:::o;29216:538::-;29384:3;29399:75;29470:3;29461:6;29399:75;:::i;:::-;29499:2;29494:3;29490:12;29483:19;;29512:75;29583:3;29574:6;29512:75;:::i;:::-;29612:2;29607:3;29603:12;29596:19;;29625:75;29696:3;29687:6;29625:75;:::i;:::-;29725:2;29720:3;29716:12;29709:19;;29745:3;29738:10;;29216:538;;;;;;:::o;29760:167::-;29900:19;29896:1;29888:6;29884:14;29877:43;29760:167;:::o;29933:366::-;30075:3;30096:67;30160:2;30155:3;30096:67;:::i;:::-;30089:74;;30172:93;30261:3;30172:93;:::i;:::-;30290:2;30285:3;30281:12;30274:19;;29933:366;;;:::o;30305:419::-;30471:4;30509:2;30498:9;30494:18;30486:26;;30558:9;30552:4;30548:20;30544:1;30533:9;30529:17;30522:47;30586:131;30712:4;30586:131;:::i;:::-;30578:139;;30305:419;;;:::o;30730:148::-;30832:11;30869:3;30854:18;;30730:148;;;;:::o;30884:390::-;30990:3;31018:39;31051:5;31018:39;:::i;:::-;31073:89;31155:6;31150:3;31073:89;:::i;:::-;31066:96;;31171:65;31229:6;31224:3;31217:4;31210:5;31206:16;31171:65;:::i;:::-;31261:6;31256:3;31252:16;31245:23;;30994:280;30884:390;;;;:::o;31280:435::-;31460:3;31482:95;31573:3;31564:6;31482:95;:::i;:::-;31475:102;;31594:95;31685:3;31676:6;31594:95;:::i;:::-;31587:102;;31706:3;31699:10;;31280:435;;;;;:::o;31721:165::-;31861:17;31857:1;31849:6;31845:14;31838:41;31721:165;:::o;31892:366::-;32034:3;32055:67;32119:2;32114:3;32055:67;:::i;:::-;32048:74;;32131:93;32220:3;32131:93;:::i;:::-;32249:2;32244:3;32240:12;32233:19;;31892:366;;;:::o;32264:419::-;32430:4;32468:2;32457:9;32453:18;32445:26;;32517:9;32511:4;32507:20;32503:1;32492:9;32488:17;32481:47;32545:131;32671:4;32545:131;:::i;:::-;32537:139;;32264:419;;;:::o;32689:159::-;32829:11;32825:1;32817:6;32813:14;32806:35;32689:159;:::o;32854:365::-;32996:3;33017:66;33081:1;33076:3;33017:66;:::i;:::-;33010:73;;33092:93;33181:3;33092:93;:::i;:::-;33210:2;33205:3;33201:12;33194:19;;32854:365;;;:::o;33225:419::-;33391:4;33429:2;33418:9;33414:18;33406:26;;33478:9;33472:4;33468:20;33464:1;33453:9;33449:17;33442:47;33506:131;33632:4;33506:131;:::i;:::-;33498:139;;33225:419;;;:::o;33650:225::-;33790:34;33786:1;33778:6;33774:14;33767:58;33859:8;33854:2;33846:6;33842:15;33835:33;33650:225;:::o;33881:366::-;34023:3;34044:67;34108:2;34103:3;34044:67;:::i;:::-;34037:74;;34120:93;34209:3;34120:93;:::i;:::-;34238:2;34233:3;34229:12;34222:19;;33881:366;;;:::o;34253:419::-;34419:4;34457:2;34446:9;34442:18;34434:26;;34506:9;34500:4;34496:20;34492:1;34481:9;34477:17;34470:47;34534:131;34660:4;34534:131;:::i;:::-;34526:139;;34253:419;;;:::o;34678:98::-;34729:6;34763:5;34757:12;34747:22;;34678:98;;;:::o;34782:168::-;34865:11;34899:6;34894:3;34887:19;34939:4;34934:3;34930:14;34915:29;;34782:168;;;;:::o;34956:373::-;35042:3;35070:38;35102:5;35070:38;:::i;:::-;35124:70;35187:6;35182:3;35124:70;:::i;:::-;35117:77;;35203:65;35261:6;35256:3;35249:4;35242:5;35238:16;35203:65;:::i;:::-;35293:29;35315:6;35293:29;:::i;:::-;35288:3;35284:39;35277:46;;35046:283;34956:373;;;;:::o;35335:640::-;35530:4;35568:3;35557:9;35553:19;35545:27;;35582:71;35650:1;35639:9;35635:17;35626:6;35582:71;:::i;:::-;35663:72;35731:2;35720:9;35716:18;35707:6;35663:72;:::i;:::-;35745;35813:2;35802:9;35798:18;35789:6;35745:72;:::i;:::-;35864:9;35858:4;35854:20;35849:2;35838:9;35834:18;35827:48;35892:76;35963:4;35954:6;35892:76;:::i;:::-;35884:84;;35335:640;;;;;;;:::o;35981:141::-;36037:5;36068:6;36062:13;36053:22;;36084:32;36110:5;36084:32;:::i;:::-;35981:141;;;;:::o;36128:349::-;36197:6;36246:2;36234:9;36225:7;36221:23;36217:32;36214:119;;;36252:79;;:::i;:::-;36214:119;36372:1;36397:63;36452:7;36443:6;36432:9;36428:22;36397:63;:::i;:::-;36387:73;;36343:127;36128:349;;;;:::o;36483:332::-;36604:4;36642:2;36631:9;36627:18;36619:26;;36655:71;36723:1;36712:9;36708:17;36699:6;36655:71;:::i;:::-;36736:72;36804:2;36793:9;36789:18;36780:6;36736:72;:::i;:::-;36483:332;;;;;:::o;36821:180::-;36869:77;36866:1;36859:88;36966:4;36963:1;36956:15;36990:4;36987:1;36980:15;37007:77;37044:7;37073:5;37062:16;;37007:77;;;:::o;37090:118::-;37177:24;37195:5;37177:24;:::i;:::-;37172:3;37165:37;37090:118;;:::o;37214:222::-;37307:4;37345:2;37334:9;37330:18;37322:26;;37358:71;37426:1;37415:9;37411:17;37402:6;37358:71;:::i;:::-;37214:222;;;;:::o;37442:545::-;37615:4;37653:3;37642:9;37638:19;37630:27;;37667:71;37735:1;37724:9;37720:17;37711:6;37667:71;:::i;:::-;37748:68;37812:2;37801:9;37797:18;37788:6;37748:68;:::i;:::-;37826:72;37894:2;37883:9;37879:18;37870:6;37826:72;:::i;:::-;37908;37976:2;37965:9;37961:18;37952:6;37908:72;:::i;:::-;37442:545;;;;;;;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","claimForSubscriber(bytes)":"bcea0fec","currentId()":"e00dd161","getApproved(uint256)":"081812fc","hasClaimedOnChain(address)":"1a02b69e","isApprovedForAll(address,address)":"e985e9c5","maxPublicSupply()":"26a74d8e","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","priceWei()":"b7ec2086","publicMint(uint256)":"2db11544","publicMinted()":"a4f4f8af","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","setTrustedSigner(address)":"56a1c701","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","tokenVariant(uint256)":"dd46edb8","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","transform(uint256,uint8)":"f78f647c","trustedSigner()":"f74d5480","withdraw(address)":"51cff8d9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxPublicSupply_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceWei_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"PublicMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SubscriberClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"burnedId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"variant\",\"type\":\"uint8\"}],\"name\":\"Transform\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"claimForSubscriber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimedOnChain\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPublicSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"}],\"name\":\"publicMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"b\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s\",\"type\":\"address\"}],\"name\":\"setTrustedSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenVariant\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"variant\",\"type\":\"uint8\"}],\"name\":\"transform\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NeutralHeart.sol\":\"NeutralHeart\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/NeutralHeart.sol\":{\"keccak256\":\"0xbf427577ec9de85d9e6b6d2b5f8f03884dfa4808ed4eebb11965ca54ba468d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33fe4b32c0829c29739069236795f77fc68209b67a1464ab154fc3191a29b17e\",\"dweb:/ipfs/QmVZbdb2qCJWXHywSfFuJRy26AJycmmfFmR8V8SYdBpWDb\"]}},\"version\":1}"}}}}}