{"id":"d28e4967549b9204b91ba88f12f6c9f2","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC2981.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     *\n     * NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n     * royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n"},"@openzeppelin/contracts/token/common/ERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/common/ERC2981.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC2981} from \"../../interfaces/IERC2981.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n *\n * Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n * specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n * fee is specified in basis points by default.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n */\nabstract contract ERC2981 is IERC2981, ERC165 {\n    struct RoyaltyInfo {\n        address receiver;\n        uint96 royaltyFraction;\n    }\n\n    RoyaltyInfo private _defaultRoyaltyInfo;\n    mapping(uint256 tokenId => RoyaltyInfo) private _tokenRoyaltyInfo;\n\n    /**\n     * @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidDefaultRoyalty(uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The default royalty receiver is invalid.\n     */\n    error ERC2981InvalidDefaultRoyaltyReceiver(address receiver);\n\n    /**\n     * @dev The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidTokenRoyalty(uint256 tokenId, uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The royalty receiver for `tokenId` is invalid.\n     */\n    error ERC2981InvalidTokenRoyaltyReceiver(uint256 tokenId, address receiver);\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC2981\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) public view virtual returns (address receiver, uint256 amount) {\n        RoyaltyInfo storage _royaltyInfo = _tokenRoyaltyInfo[tokenId];\n        address royaltyReceiver = _royaltyInfo.receiver;\n        uint96 royaltyFraction = _royaltyInfo.royaltyFraction;\n\n        if (royaltyReceiver == address(0)) {\n            royaltyReceiver = _defaultRoyaltyInfo.receiver;\n            royaltyFraction = _defaultRoyaltyInfo.royaltyFraction;\n        }\n\n        uint256 royaltyAmount = (salePrice * royaltyFraction) / _feeDenominator();\n\n        return (royaltyReceiver, royaltyAmount);\n    }\n\n    /**\n     * @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n     * fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n     * override.\n     */\n    function _feeDenominator() internal pure virtual returns (uint96) {\n        return 10000;\n    }\n\n    /**\n     * @dev Sets the royalty information that all ids in this contract will default to.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidDefaultRoyalty(feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidDefaultRoyaltyReceiver(address(0));\n        }\n\n        _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Removes default royalty information.\n     */\n    function _deleteDefaultRoyalty() internal virtual {\n        delete _defaultRoyaltyInfo;\n    }\n\n    /**\n     * @dev Sets the royalty information for a specific token id, overriding the global default.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) internal virtual {\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidTokenRoyalty(tokenId, feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidTokenRoyaltyReceiver(tokenId, address(0));\n        }\n\n        _tokenRoyaltyInfo[tokenId] = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Resets royalty information for the token id back to the global default.\n     */\n    function _resetTokenRoyalty(uint256 tokenId) internal virtual {\n        delete _tokenRoyaltyInfo[tokenId];\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Enumerable} from \"./IERC721Enumerable.sol\";\nimport {IERC165} from \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the ERC that adds enumerability\n * of all the token ids in the contract as well as all token ids owned by each account.\n *\n * CAUTION: {ERC721} extensions that implement custom `balanceOf` logic, such as {ERC721Consecutive},\n * interfere with enumerability and should not be used together with {ERC721Enumerable}.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\n\n    uint256[] private _allTokens;\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\n\n    /**\n     * @dev An `owner`'s token query was out of bounds for `index`.\n     *\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\n     */\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\n\n    /**\n     * @dev Batch mint is not allowed.\n     */\n    error ERC721EnumerableForbiddenBatchMint();\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721Enumerable\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\n        if (index >= balanceOf(owner)) {\n            revert ERC721OutOfBoundsIndex(owner, index);\n        }\n        return _ownedTokens[owner][index];\n    }\n\n    /// @inheritdoc IERC721Enumerable\n    function totalSupply() public view virtual returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /// @inheritdoc IERC721Enumerable\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\n        if (index >= totalSupply()) {\n            revert ERC721OutOfBoundsIndex(address(0), index);\n        }\n        return _allTokens[index];\n    }\n\n    /// @inheritdoc ERC721\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\n        address previousOwner = super._update(to, tokenId, auth);\n\n        if (previousOwner == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n\n        return previousOwner;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = balanceOf(to) - 1;\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = balanceOf(from);\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        mapping(uint256 index => uint256) storage _ownedTokensByOwner = _ownedTokens[from];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokensByOwner[lastTokenIndex];\n\n            _ownedTokensByOwner[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokensByOwner[lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n\n    /**\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\n     */\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\n        if (amount > 0) {\n            revert ERC721EnumerableForbiddenBatchMint();\n        }\n        super._increaseBalance(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/NeutralHeart.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/common/ERC2981.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\n\ncontract NeutralHeart is ERC721, ERC721Enumerable, Ownable, ReentrancyGuard, ERC2981 {\n    // Returns all tokenIds owned by an address (for wallets/frontends)\n    function tokensOfOwner(address owner) external view returns (uint256[] memory) {\n        uint256 balance = balanceOf(owner);\n        uint256[] memory tokens = new uint256[](balance);\n        for (uint256 i = 0; i < balance; i++) {\n            tokens[i] = tokenOfOwnerByIndex(owner, i);\n        }\n        return tokens;\n    }\n\n    uint256 public currentId;\n    uint256 public maxPublicSupply;\n    uint256 public publicMinted;\n    uint256 public priceWei;\n\n    // Signer address used by backend to sign subscriber vouchers\n    address public trustedSigner;\n\n    // Track claims on-chain as a safety net\n    mapping(address => bool) public hasClaimedOnChain;\n\n    // token variant: 0 = neutral, 1 = angel, 2 = devil\n    mapping(uint256 => uint8) public tokenVariant;\n\n    string private _baseTokenURI;\n\n    event PublicMint(address indexed to, uint256 indexed tokenId);\n    event SubscriberClaim(address indexed to, uint256 indexed tokenId);\n    event Transform(address indexed owner, uint256 indexed burnedId, uint256 indexed newId, uint8 variant);\n    event BaseURISet(string base);\n    event TrustedSignerSet(address indexed signer);\n    event ContractURISet(string contractURI);\n    event Withdraw(address indexed to, uint256 amount);\n\n    constructor(\n        uint256 maxPublicSupply_,\n        uint256 priceWei_\n    ) ERC721(\"NeutralHeart NFT (2025)\", \"NHRT25\") Ownable(msg.sender) {\n        maxPublicSupply = maxPublicSupply_;\n        priceWei = priceWei_;\n        currentId = 1; // start token ids at 1\n    }\n\n    // OWNER\n    function setTrustedSigner(address s) external onlyOwner {\n        trustedSigner = s;\n        emit TrustedSignerSet(s);\n    }\n\n    // set the base metadata URI\n    function setBaseURI(string memory b) external onlyOwner {\n        _baseTokenURI = b;\n        emit BaseURISet(b);\n    }\n\n    // contract-level metadata (optional) used by marketplaces\n    string private _contractURI;\n\n    function setContractURI(string memory uri) external onlyOwner {\n        _contractURI = uri;\n        emit ContractURISet(uri);\n    }\n\n    function contractURI() external view returns (string memory) {\n        return _contractURI;\n    }\n\n    function _baseURI() internal view override returns (string memory) {\n        return _baseTokenURI;\n    }\n\n    // Override tokenURI to return one of three JSON filenames (neutral.json / angel.json / devil.json)\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\n    // Ensure token exists using OpenZeppelin's internal check\n    _requireOwned(tokenId);\n        string memory base = _baseURI();\n        uint8 v = tokenVariant[tokenId];\n        string memory namePart = \"neutral.json\";\n        if (v == 1) {\n            namePart = \"angel.json\";\n        } else if (v == 2) {\n            namePart = \"devil.json\";\n        }\n        // Ensure base ends with a slash for correct concatenation\n        bytes memory b = bytes(base);\n        if (b.length == 0) {\n            return string(abi.encodePacked(namePart));\n        }\n        bytes1 last = b[b.length - 1];\n        if (last == bytes1('/')) {\n            return string(abi.encodePacked(base, namePart));\n        }\n        return string(abi.encodePacked(base, '/', namePart));\n    }\n\n    // PUBLIC MINT (paid)\n    function publicMint(uint256 qty) external payable nonReentrant {\n        // Restrict public mint to one token per transaction to avoid accidental multi-mints\n        require(qty == 1, \"only 1 token per tx\");\n        require(publicMinted + qty <= maxPublicSupply, \"public sold out\");\n        require(msg.value == priceWei * qty, \"incorrect payment\");\n\n        for (uint256 i = 0; i < qty; i++) {\n            uint256 tokenId = currentId++;\n            _safeMint(msg.sender, tokenId);\n            // default variant is neutral\n            tokenVariant[tokenId] = 0;\n            emit PublicMint(msg.sender, tokenId);\n        }\n        publicMinted += qty;\n    }\n\n    // OWNER: update price (in wei)\n    function setPrice(uint256 newPriceWei) external onlyOwner {\n        priceWei = newPriceWei;\n    }\n\n    // Subscriber free claim using backend signature\n    // signature signs the abi-encoded packed address and contract chain id\n    function claimForSubscriber(bytes calldata signature) external nonReentrant {\n        require(trustedSigner != address(0), \"trusted signer not set\");\n        require(!hasClaimedOnChain[msg.sender], \"already claimed on-chain\");\n\n    bytes32 digest = keccak256(abi.encodePacked(address(this), block.chainid, msg.sender));\n    // Use MessageHashUtils to compute the prefixed digest, then recover\n    bytes32 prefixed = MessageHashUtils.toEthSignedMessageHash(digest);\n    address signer = ECDSA.recover(prefixed, signature);\n        require(signer == trustedSigner, \"invalid signature\");\n\n        hasClaimedOnChain[msg.sender] = true;\n        uint256 tokenId = currentId++;\n        _safeMint(msg.sender, tokenId);\n        // default to neutral\n        tokenVariant[tokenId] = 0;\n        emit SubscriberClaim(msg.sender, tokenId);\n    }\n\n    // Transform a neutral token into a variant (1 = angel, 2 = devil)\n    // Burns the neutral token and mints a new token with the variant set.\n    function transform(uint256 tokenId, uint8 variant) external nonReentrant {\n        require(variant == 1 || variant == 2, \"invalid variant\");\n        require(ownerOf(tokenId) == msg.sender, \"not owner\");\n        require(tokenVariant[tokenId] == 0, \"only neutral tokens can be transformed\");\n\n        // burn the neutral token - this will call our overridden _burn which clears the variant\n        _burn(tokenId);\n\n        // mint new token and set variant\n        uint256 newId = currentId++;\n        _safeMint(msg.sender, newId);\n        tokenVariant[newId] = variant;\n\n        emit Transform(msg.sender, tokenId, newId, variant);\n    }\n\n    // Withdraw funds collected from public sale\n    function withdraw(address payable to) external onlyOwner nonReentrant {\n        require(to != address(0), \"invalid address\");\n        uint256 bal = address(this).balance;\n        require(bal > 0, \"no funds\");\n        (bool ok, ) = to.call{ value: bal }(\"\");\n        require(ok, \"withdraw failed\");\n        emit Withdraw(to, bal);\n    }\n\n    // set default royalty (ERC-2981)\n    function setDefaultRoyalty(address receiver, uint96 feeNumerator) external onlyOwner {\n        _setDefaultRoyalty(receiver, feeNumerator);\n    }\n\n    // The following functions are overrides required by Solidity for multiple inheritance (ERC721 + ERC721Enumerable)\n\n    // ensure tokenVariant storage is cleared when burning\n    // Provide required overrides for multiple inheritance (ERC721 + ERC721Enumerable)\n    function _increaseBalance(address account, uint128 value) internal virtual override(ERC721, ERC721Enumerable) {\n        super._increaseBalance(account, value);\n    }\n\n    // Intercept updates to detect burns (to == address(0)) and clear tokenVariant storage\n    function _update(address to, uint256 tokenId, address auth) internal virtual override(ERC721, ERC721Enumerable) returns (address) {\n        address previousOwner = super._update(to, tokenId, auth);\n        if (to == address(0)) {\n            // token burned — clear variant storage\n            delete tokenVariant[tokenId];\n        }\n        return previousOwner;\n    }\n\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721Enumerable, ERC2981) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2216],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2217,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2216,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2216],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","exportedSymbols":{"IERC165":[4209],"IERC2981":[167]},"id":168,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":168,"sourceUnit":4210,"src":"133:59:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"141:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":153,"name":"IERC165","nameLocations":["476:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":4209,"src":"476:7:1"},"id":154,"nodeType":"InheritanceSpecifier","src":"476:7:1"}],"canonicalName":"IERC2981","contractDependencies":[],"contractKind":"interface","documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"194:259:1","text":" @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants."},"fullyImplemented":false,"id":167,"linearizedBaseContracts":[167,4209],"name":"IERC2981","nameLocation":"464:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"490:473:1","text":" @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers."},"functionSelector":"2a55205a","id":166,"implemented":false,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"977:11:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"tokenId","nameLocation":"1006:7:1","nodeType":"VariableDeclaration","scope":166,"src":"998:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"salePrice","nameLocation":"1031:9:1","nodeType":"VariableDeclaration","scope":166,"src":"1023:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"988:58:1"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"receiver","nameLocation":"1078:8:1","nodeType":"VariableDeclaration","scope":166,"src":"1070:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1070:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"royaltyAmount","nameLocation":"1096:13:1","nodeType":"VariableDeclaration","scope":166,"src":"1088:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1069:41:1"},"scope":167,"src":"968:143:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":168,"src":"454:659:1","usedErrors":[],"usedEvents":[]}],"src":"107:1007:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[304],"IERC20Errors":[209],"IERC721Errors":[257]},"id":305,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":169,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"138:141:2","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":209,"linearizedBaseContracts":[209],"name":"IERC20Errors","nameLocation":"290:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"309:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":179,"name":"ERC20InsufficientBalance","nameLocation":"629:24:2","nodeType":"ErrorDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"sender","nameLocation":"662:6:2","nodeType":"VariableDeclaration","scope":179,"src":"654:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"balance","nameLocation":"678:7:2","nodeType":"VariableDeclaration","scope":179,"src":"670:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":177,"mutability":"mutable","name":"needed","nameLocation":"695:6:2","nodeType":"VariableDeclaration","scope":179,"src":"687:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":176,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:2"},"src":"623:80:2"},{"documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"709:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":184,"name":"ERC20InvalidSender","nameLocation":"872:18:2","nodeType":"ErrorDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"sender","nameLocation":"899:6:2","nodeType":"VariableDeclaration","scope":184,"src":"891:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:2"},"src":"866:41:2"},{"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"913:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":189,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:2","nodeType":"VariableDeclaration","scope":189,"src":"1104:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:2"},"src":"1077:45:2"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"1128:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":198,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:2","nodeType":"ErrorDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"spender","nameLocation":"1519:7:2","nodeType":"VariableDeclaration","scope":198,"src":"1511:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:2","nodeType":"VariableDeclaration","scope":198,"src":"1528:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":196,"mutability":"mutable","name":"needed","nameLocation":"1555:6:2","nodeType":"VariableDeclaration","scope":198,"src":"1547:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:2"},"src":"1478:85:2"},{"documentation":{"id":199,"nodeType":"StructuredDocumentation","src":"1569:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":203,"name":"ERC20InvalidApprover","nameLocation":"1754:20:2","nodeType":"ErrorDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"approver","nameLocation":"1783:8:2","nodeType":"VariableDeclaration","scope":203,"src":"1775:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:2"},"src":"1748:45:2"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"1799:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":208,"name":"ERC20InvalidSpender","nameLocation":"2005:19:2","nodeType":"ErrorDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"spender","nameLocation":"2033:7:2","nodeType":"VariableDeclaration","scope":208,"src":"2025:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:2"},"src":"1999:43:2"}],"scope":305,"src":"280:1764:2","usedErrors":[179,184,189,198,203,208],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"2046:143:2","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":257,"linearizedBaseContracts":[257],"name":"IERC721Errors","nameLocation":"2200:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"2220:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":215,"name":"ERC721InvalidOwner","nameLocation":"2450:18:2","nodeType":"ErrorDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"owner","nameLocation":"2477:5:2","nodeType":"VariableDeclaration","scope":215,"src":"2469:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:2"},"src":"2444:40:2"},{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2490:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":220,"name":"ERC721NonexistentToken","nameLocation":"2633:22:2","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:2","nodeType":"VariableDeclaration","scope":220,"src":"2656:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:2"},"src":"2627:46:2"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2679:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":229,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:2","nodeType":"ErrorDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"sender","nameLocation":"3008:6:2","nodeType":"VariableDeclaration","scope":229,"src":"3000:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:2","nodeType":"VariableDeclaration","scope":229,"src":"3016:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":227,"mutability":"mutable","name":"owner","nameLocation":"3041:5:2","nodeType":"VariableDeclaration","scope":229,"src":"3033:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:2"},"src":"2973:75:2"},{"documentation":{"id":230,"nodeType":"StructuredDocumentation","src":"3054:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":234,"name":"ERC721InvalidSender","nameLocation":"3217:19:2","nodeType":"ErrorDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"sender","nameLocation":"3245:6:2","nodeType":"VariableDeclaration","scope":234,"src":"3237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:2"},"src":"3211:42:2"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3259:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":239,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:2","nodeType":"ErrorDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:2","nodeType":"VariableDeclaration","scope":239,"src":"3451:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:2"},"src":"3423:46:2"},{"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3475:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":246,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:2","nodeType":"ErrorDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"operator","nameLocation":"3768:8:2","nodeType":"VariableDeclaration","scope":246,"src":"3760:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:2","nodeType":"VariableDeclaration","scope":246,"src":"3778:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:2"},"src":"3727:68:2"},{"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"3801:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":251,"name":"ERC721InvalidApprover","nameLocation":"3986:21:2","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"approver","nameLocation":"4016:8:2","nodeType":"VariableDeclaration","scope":251,"src":"4008:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:2"},"src":"3980:46:2"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"4032:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":256,"name":"ERC721InvalidOperator","nameLocation":"4240:21:2","nodeType":"ErrorDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"operator","nameLocation":"4270:8:2","nodeType":"VariableDeclaration","scope":256,"src":"4262:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:2"},"src":"4234:46:2"}],"scope":305,"src":"2190:2092:2","usedErrors":[215,220,229,234,239,246,251,256],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"4284:145:2","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":304,"linearizedBaseContracts":[304],"name":"IERC1155Errors","nameLocation":"4440:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"4461:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":269,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:2","nodeType":"ErrorDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"sender","nameLocation":"4868:6:2","nodeType":"VariableDeclaration","scope":269,"src":"4860:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"balance","nameLocation":"4884:7:2","nodeType":"VariableDeclaration","scope":269,"src":"4876:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"needed","nameLocation":"4901:6:2","nodeType":"VariableDeclaration","scope":269,"src":"4893:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:2","nodeType":"VariableDeclaration","scope":269,"src":"4909:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:2"},"src":"4827:99:2"},{"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"4932:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":274,"name":"ERC1155InvalidSender","nameLocation":"5095:20:2","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"sender","nameLocation":"5124:6:2","nodeType":"VariableDeclaration","scope":274,"src":"5116:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:2"},"src":"5089:43:2"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"5138:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":279,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:2","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:2","nodeType":"VariableDeclaration","scope":279,"src":"5331:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:2"},"src":"5302:47:2"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5355:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":286,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:2","nodeType":"ErrorDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"operator","nameLocation":"5659:8:2","nodeType":"VariableDeclaration","scope":286,"src":"5651:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"owner","nameLocation":"5677:5:2","nodeType":"VariableDeclaration","scope":286,"src":"5669:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:2"},"src":"5616:68:2"},{"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"5690:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":291,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:2","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"approver","nameLocation":"5906:8:2","nodeType":"VariableDeclaration","scope":291,"src":"5898:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:2"},"src":"5869:47:2"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5922:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":296,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:2","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"operator","nameLocation":"6161:8:2","nodeType":"VariableDeclaration","scope":296,"src":"6153:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:2"},"src":"6124:47:2"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"6177:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":303,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:2","nodeType":"ErrorDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:2","nodeType":"VariableDeclaration","scope":303,"src":"6494:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:2","nodeType":"VariableDeclaration","scope":303,"src":"6513:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:2"},"src":"6462:73:2"}],"scope":305,"src":"4430:2107:2","usedErrors":[269,274,279,286,291,296,303],"usedEvents":[]}],"src":"112:6426:2"},"id":2},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[2216],"ERC165":[4197],"ERC721":[1261],"ERC721Utils":[1919],"IERC165":[4209],"IERC721":[1378],"IERC721Errors":[257],"IERC721Metadata":[1842],"Strings":[3739]},"id":1262,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":306,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":308,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1262,"sourceUnit":1379,"src":"133:38:3","symbolAliases":[{"foreign":{"id":307,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"141:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":310,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1262,"sourceUnit":1843,"src":"172:65:3","symbolAliases":[{"foreign":{"id":309,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"180:15:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":312,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1262,"sourceUnit":1920,"src":"238:52:3","symbolAliases":[{"foreign":{"id":311,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"246:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":314,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1262,"sourceUnit":2217,"src":"291:48:3","symbolAliases":[{"foreign":{"id":313,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"299:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":316,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1262,"sourceUnit":3740,"src":"340:48:3","symbolAliases":[{"foreign":{"id":315,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"348:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1262,"sourceUnit":4198,"src":"389:69:3","symbolAliases":[{"foreign":{"id":317,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"397:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":318,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"406:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1262,"sourceUnit":305,"src":"459:66:3","symbolAliases":[{"foreign":{"id":320,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"467:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":323,"name":"Context","nameLocations":["803:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2216,"src":"803:7:3"},"id":324,"nodeType":"InheritanceSpecifier","src":"803:7:3"},{"baseName":{"id":325,"name":"ERC165","nameLocations":["812:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4197,"src":"812:6:3"},"id":326,"nodeType":"InheritanceSpecifier","src":"812:6:3"},{"baseName":{"id":327,"name":"IERC721","nameLocations":["820:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1378,"src":"820:7:3"},"id":328,"nodeType":"InheritanceSpecifier","src":"820:7:3"},{"baseName":{"id":329,"name":"IERC721Metadata","nameLocations":["829:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":1842,"src":"829:15:3"},"id":330,"nodeType":"InheritanceSpecifier","src":"829:15:3"},{"baseName":{"id":331,"name":"IERC721Errors","nameLocations":["846:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":257,"src":"846:13:3"},"id":332,"nodeType":"InheritanceSpecifier","src":"846:13:3"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"527:247:3","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1261,"linearizedBaseContracts":[1261,257,1842,1378,4197,4209,2216],"name":"ERC721","nameLocation":"793:6:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":335,"libraryName":{"id":333,"name":"Strings","nameLocations":["872:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":3739,"src":"872:7:3"},"nodeType":"UsingForDirective","src":"866:26:3","typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":337,"mutability":"mutable","name":"_name","nameLocation":"931:5:3","nodeType":"VariableDeclaration","scope":1261,"src":"916:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":336,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":339,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:3","nodeType":"VariableDeclaration","scope":1261,"src":"963:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":338,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":343,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:3","nodeType":"VariableDeclaration","scope":1261,"src":"992:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":342,"keyName":"tokenId","keyNameLocation":"1008:7:3","keyType":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":347,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:3","nodeType":"VariableDeclaration","scope":1261,"src":"1050:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":346,"keyName":"owner","keyNameLocation":"1066:5:3","keyType":{"id":344,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":351,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:3","nodeType":"VariableDeclaration","scope":1261,"src":"1108:59:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":350,"keyName":"tokenId","keyNameLocation":"1124:7:3","keyType":{"id":348,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":357,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:3","nodeType":"VariableDeclaration","scope":1261,"src":"1174:86:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":356,"keyName":"owner","keyNameLocation":"1190:5:3","keyType":{"id":352,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":355,"keyName":"operator","keyNameLocation":"1215:8:3","keyType":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":354,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":373,"nodeType":"Block","src":"1436:57:3","statements":[{"expression":{"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":365,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"1446:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":366,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"1454:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":368,"nodeType":"ExpressionStatement","src":"1446:13:3"},{"expression":{"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":369,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"1469:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":370,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"1479:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":372,"nodeType":"ExpressionStatement","src":"1469:17:3"}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"1267:108:3","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":374,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":360,"mutability":"mutable","name":"name_","nameLocation":"1406:5:3","nodeType":"VariableDeclaration","scope":374,"src":"1392:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":359,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:3","nodeType":"VariableDeclaration","scope":374,"src":"1413:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":361,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:3"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[],"src":"1436:0:3"},"scope":1261,"src":"1380:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4196,4208],"body":{"id":404,"nodeType":"Block","src":"1635:192:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":385,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"1664:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":387,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"1684:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1378_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1378_$","typeString":"type(contract IERC721)"}],"id":386,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1679:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1378","typeString":"type(contract IERC721)"}},"id":389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1693:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1679:25:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1664:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"1720:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":393,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"1740:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1842_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1842_$","typeString":"type(contract IERC721Metadata)"}],"id":392,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1735:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1842","typeString":"type(contract IERC721Metadata)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1757:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1735:33:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1720:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:104:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":400,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"1808:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":398,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1784:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1261_$","typeString":"type(contract super ERC721)"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4196,"src":"1784:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:156:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":384,"id":403,"nodeType":"Return","src":"1645:175:3"}]},"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"1499:23:3","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":405,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1536:17:3","nodeType":"FunctionDefinition","overrides":{"id":381,"nodeType":"OverrideSpecifier","overrides":[{"id":379,"name":"ERC165","nameLocations":["1603:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4197,"src":"1603:6:3"},{"id":380,"name":"IERC165","nameLocations":["1611:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":4209,"src":"1611:7:3"}],"src":"1594:25:3"},"parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"interfaceId","nameLocation":"1561:11:3","nodeType":"VariableDeclaration","scope":405,"src":"1554:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":376,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:20:3"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":405,"src":"1629:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":382,"name":"bool","nodeType":"ElementaryTypeName","src":"1629:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1628:6:3"},"scope":1261,"src":"1527:300:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1303],"body":{"id":432,"nodeType":"Block","src":"1933:136:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":413,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1947:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1964:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:3","typeDescriptions":{}}},"id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1947:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":427,"nodeType":"IfStatement","src":"1943:87:3","trueBody":{"id":426,"nodeType":"Block","src":"1968:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:3","typeDescriptions":{}}},"id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":419,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"1989:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":425,"nodeType":"RevertStatement","src":"1982:37:3"}]}},{"expression":{"baseExpression":{"id":428,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"2046:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":430,"indexExpression":{"id":429,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2056:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2046:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":412,"id":431,"nodeType":"Return","src":"2039:23:3"}]},"documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"1833:23:3","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":433,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1870:9:3","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"owner","nameLocation":"1888:5:3","nodeType":"VariableDeclaration","scope":433,"src":"1880:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:15:3"},"returnParameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":433,"src":"1924:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":410,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:9:3"},"scope":1261,"src":"1861:208:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1311],"body":{"id":445,"nodeType":"Block","src":"2175:46:3","statements":[{"expression":{"arguments":[{"id":442,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"2206:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":441,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"2192:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":440,"id":444,"nodeType":"Return","src":"2185:29:3"}]},"documentation":{"id":434,"nodeType":"StructuredDocumentation","src":"2075:23:3","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":446,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2112:7:3","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"tokenId","nameLocation":"2128:7:3","nodeType":"VariableDeclaration","scope":446,"src":"2120:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:17:3"},"returnParameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":446,"src":"2166:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2165:9:3"},"scope":1261,"src":"2103:118:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1827],"body":{"id":454,"nodeType":"Block","src":"2323:29:3","statements":[{"expression":{"id":452,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"2340:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":451,"id":453,"nodeType":"Return","src":"2333:12:3"}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"2227:31:3","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":455,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2272:4:3","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"2276:2:3"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":455,"src":"2308:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":449,"name":"string","nodeType":"ElementaryTypeName","src":"2308:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2307:15:3"},"scope":1261,"src":"2263:89:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1833],"body":{"id":463,"nodeType":"Block","src":"2456:31:3","statements":[{"expression":{"id":461,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"2473:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":460,"id":462,"nodeType":"Return","src":"2466:14:3"}]},"documentation":{"id":456,"nodeType":"StructuredDocumentation","src":"2358:31:3","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":464,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2403:6:3","nodeType":"FunctionDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[],"src":"2409:2:3"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":464,"src":"2441:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":458,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2440:15:3"},"scope":1261,"src":"2394:93:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1841],"body":{"id":499,"nodeType":"Block","src":"2608:176:3","statements":[{"expression":{"arguments":[{"id":473,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"2632:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":472,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"2618:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":475,"nodeType":"ExpressionStatement","src":"2618:22:3"},{"assignments":[477],"declarations":[{"constant":false,"id":477,"mutability":"mutable","name":"baseURI","nameLocation":"2665:7:3","nodeType":"VariableDeclaration","scope":499,"src":"2651:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":476,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":480,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":478,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"2675:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2651:34:3"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":483,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"2708:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":481,"name":"bytes","nodeType":"ElementaryTypeName","src":"2702:5:3","typeDescriptions":{}}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:3","memberName":"length","nodeType":"MemberAccess","src":"2702:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2702:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2702:75:3","trueExpression":{"arguments":[{"id":491,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"2744:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":492,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"2753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:3","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2451,"src":"2753:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":488,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:3","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:3","memberName":"concat","nodeType":"MemberAccess","src":"2730:13:3","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":471,"id":498,"nodeType":"Return","src":"2695:82:3"}]},"documentation":{"id":465,"nodeType":"StructuredDocumentation","src":"2493:31:3","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":500,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2538:8:3","nodeType":"FunctionDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":467,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:3","nodeType":"VariableDeclaration","scope":500,"src":"2547:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":466,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:17:3"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":500,"src":"2593:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":469,"name":"string","nodeType":"ElementaryTypeName","src":"2593:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2592:15:3"},"scope":1261,"src":"2529:255:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":508,"nodeType":"Block","src":"3092:26:3","statements":[{"expression":{"hexValue":"","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":505,"id":507,"nodeType":"Return","src":"3102:9:3"}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"2790:231:3","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":509,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3035:8:3","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[],"src":"3043:2:3"},"returnParameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":509,"src":"3077:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":503,"name":"string","nodeType":"ElementaryTypeName","src":"3077:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3076:15:3"},"scope":1261,"src":"3026:92:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1351],"body":{"id":524,"nodeType":"Block","src":"3213:52:3","statements":[{"expression":{"arguments":[{"id":518,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3232:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":519,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"3236:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":520,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"3245:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":517,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1128,1194],"referencedDeclaration":1128,"src":"3223:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"ExpressionStatement","src":"3223:35:3"}]},"documentation":{"id":510,"nodeType":"StructuredDocumentation","src":"3124:23:3","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":525,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3161:7:3","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"3177:2:3","nodeType":"VariableDeclaration","scope":525,"src":"3169:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"3169:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"tokenId","nameLocation":"3189:7:3","nodeType":"VariableDeclaration","scope":525,"src":"3181:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:29:3"},"returnParameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"3213:0:3"},"scope":1261,"src":"3152:113:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1367],"body":{"id":541,"nodeType":"Block","src":"3375:78:3","statements":[{"expression":{"arguments":[{"id":534,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"3399:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":533,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"3385:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":536,"nodeType":"ExpressionStatement","src":"3385:22:3"},{"expression":{"arguments":[{"id":538,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"3438:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":537,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"3425:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":532,"id":540,"nodeType":"Return","src":"3418:28:3"}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"3271:23:3","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":542,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3308:11:3","nodeType":"FunctionDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":528,"mutability":"mutable","name":"tokenId","nameLocation":"3328:7:3","nodeType":"VariableDeclaration","scope":542,"src":"3320:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:17:3"},"returnParameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":542,"src":"3366:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3365:9:3"},"scope":1261,"src":"3299:154:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1359],"body":{"id":557,"nodeType":"Block","src":"3562:69:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":551,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"3591:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":553,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"3605:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":554,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"3615:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":550,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"3572:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":556,"nodeType":"ExpressionStatement","src":"3572:52:3"}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"3459:23:3","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":558,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3496:17:3","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"operator","nameLocation":"3522:8:3","nodeType":"VariableDeclaration","scope":558,"src":"3514:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"approved","nameLocation":"3537:8:3","nodeType":"VariableDeclaration","scope":558,"src":"3532:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":546,"name":"bool","nodeType":"ElementaryTypeName","src":"3532:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3513:33:3"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[],"src":"3562:0:3"},"scope":1261,"src":"3487:144:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1377],"body":{"id":574,"nodeType":"Block","src":"3759:59:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":568,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"3776:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":570,"indexExpression":{"id":569,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"3795:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":572,"indexExpression":{"id":571,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"3802:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":567,"id":573,"nodeType":"Return","src":"3769:42:3"}]},"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"3637:23:3","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":575,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3674:16:3","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"owner","nameLocation":"3699:5:3","nodeType":"VariableDeclaration","scope":575,"src":"3691:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":563,"mutability":"mutable","name":"operator","nameLocation":"3714:8:3","nodeType":"VariableDeclaration","scope":575,"src":"3706:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":562,"name":"address","nodeType":"ElementaryTypeName","src":"3706:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3690:33:3"},"returnParameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":575,"src":"3753:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":565,"name":"bool","nodeType":"ElementaryTypeName","src":"3753:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3752:6:3"},"scope":1261,"src":"3665:153:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1343],"body":{"id":620,"nodeType":"Block","src":"3932:498:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":585,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"3946:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3952:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:3","typeDescriptions":{}}},"id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":599,"nodeType":"IfStatement","src":"3942:87:3","trueBody":{"id":598,"nodeType":"Block","src":"3964:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:3","typeDescriptions":{}}},"id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":591,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"3985:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":597,"nodeType":"RevertStatement","src":"3978:40:3"}]}},{"assignments":[601],"declarations":[{"constant":false,"id":601,"mutability":"mutable","name":"previousOwner","nameLocation":"4255:13:3","nodeType":"VariableDeclaration","scope":620,"src":"4247:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":608,"initialValue":{"arguments":[{"id":603,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"4279:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":604,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"4283:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":605,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"4292:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":602,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"4271:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4247:58:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":609,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"4319:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":610,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"4336:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":619,"nodeType":"IfStatement","src":"4315:109:3","trueBody":{"id":618,"nodeType":"Block","src":"4342:82:3","statements":[{"errorCall":{"arguments":[{"id":613,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"4384:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"4390:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":615,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"4399:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":612,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4363:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"RevertStatement","src":"4356:57:3"}]}}]},"documentation":{"id":576,"nodeType":"StructuredDocumentation","src":"3824:23:3","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":621,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3861:12:3","nodeType":"FunctionDefinition","parameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"from","nameLocation":"3882:4:3","nodeType":"VariableDeclaration","scope":621,"src":"3874:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"3874:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":580,"mutability":"mutable","name":"to","nameLocation":"3896:2:3","nodeType":"VariableDeclaration","scope":621,"src":"3888:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"tokenId","nameLocation":"3908:7:3","nodeType":"VariableDeclaration","scope":621,"src":"3900:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":581,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:43:3"},"returnParameters":{"id":584,"nodeType":"ParameterList","parameters":[],"src":"3932:0:3"},"scope":1261,"src":"3852:578:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1333],"body":{"id":638,"nodeType":"Block","src":"4540:56:3","statements":[{"expression":{"arguments":[{"id":632,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"4567:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"4573:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"4577:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":631,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[639,669],"referencedDeclaration":669,"src":"4550:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"ExpressionStatement","src":"4550:39:3"}]},"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"4436:23:3","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":639,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4473:16:3","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"from","nameLocation":"4498:4:3","nodeType":"VariableDeclaration","scope":639,"src":"4490:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"to","nameLocation":"4512:2:3","nodeType":"VariableDeclaration","scope":639,"src":"4504:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"tokenId","nameLocation":"4524:7:3","nodeType":"VariableDeclaration","scope":639,"src":"4516:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:43:3"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"4540:0:3"},"scope":1261,"src":"4464:132:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1323],"body":{"id":668,"nodeType":"Block","src":"4733:130:3","statements":[{"expression":{"arguments":[{"id":652,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"4756:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":653,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4762:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":654,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"4766:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":651,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"4743:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":656,"nodeType":"ExpressionStatement","src":"4743:31:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":660,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"4818:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":662,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"4832:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":663,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4838:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":664,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"4842:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":665,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"4851:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":657,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"4784:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1919_$","typeString":"type(library ERC721Utils)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4796:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1918,"src":"4784:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":667,"nodeType":"ExpressionStatement","src":"4784:72:3"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"4602:23:3","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":669,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4639:16:3","nodeType":"FunctionDefinition","parameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"from","nameLocation":"4664:4:3","nodeType":"VariableDeclaration","scope":669,"src":"4656:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"to","nameLocation":"4678:2:3","nodeType":"VariableDeclaration","scope":669,"src":"4670:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"tokenId","nameLocation":"4690:7:3","nodeType":"VariableDeclaration","scope":669,"src":"4682:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":648,"mutability":"mutable","name":"data","nameLocation":"4712:4:3","nodeType":"VariableDeclaration","scope":669,"src":"4699:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":647,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4655:62:3"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"4733:0:3"},"scope":1261,"src":"4630:233:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":681,"nodeType":"Block","src":"5453:40:3","statements":[{"expression":{"baseExpression":{"id":677,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"5470:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":679,"indexExpression":{"id":678,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"5478:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":676,"id":680,"nodeType":"Return","src":"5463:23:3"}]},"documentation":{"id":670,"nodeType":"StructuredDocumentation","src":"4869:504:3","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":682,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5387:8:3","nodeType":"FunctionDefinition","parameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:3","nodeType":"VariableDeclaration","scope":682,"src":"5396:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":671,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:3"},"returnParameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"5444:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:9:3"},"scope":1261,"src":"5378:115:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":694,"nodeType":"Block","src":"5688:48:3","statements":[{"expression":{"baseExpression":{"id":690,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"5705:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":692,"indexExpression":{"id":691,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"5721:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":689,"id":693,"nodeType":"Return","src":"5698:31:3"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"5499:105:3","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":695,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5618:12:3","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"tokenId","nameLocation":"5639:7:3","nodeType":"VariableDeclaration","scope":695,"src":"5631:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5630:17:3"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":695,"src":"5679:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":687,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:9:3"},"scope":1261,"src":"5609:127:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":730,"nodeType":"Block","src":"6156:163:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":707,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"6185:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6196:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:3","typeDescriptions":{}}},"id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":713,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"6223:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":714,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"6232:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6223:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":717,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"6260:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":718,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"6267:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":716,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"6243:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":722,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"6292:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":721,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"6279:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":724,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"6304:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:88:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6222:90:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:127:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":706,"id":729,"nodeType":"Return","src":"6166:146:3"}]},"documentation":{"id":696,"nodeType":"StructuredDocumentation","src":"5742:300:3","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":731,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6056:13:3","nodeType":"FunctionDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"owner","nameLocation":"6078:5:3","nodeType":"VariableDeclaration","scope":731,"src":"6070:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":697,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":700,"mutability":"mutable","name":"spender","nameLocation":"6093:7:3","nodeType":"VariableDeclaration","scope":731,"src":"6085:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"tokenId","nameLocation":"6110:7:3","nodeType":"VariableDeclaration","scope":731,"src":"6102:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":701,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6069:49:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":731,"src":"6150:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":704,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:3"},"scope":1261,"src":"6047:272:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":767,"nodeType":"Block","src":"6848:271:3","statements":[{"condition":{"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6862:39:3","subExpression":{"arguments":[{"id":742,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"6877:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"6884:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"6893:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"6863:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":766,"nodeType":"IfStatement","src":"6858:255:3","trueBody":{"id":765,"nodeType":"Block","src":"6903:210:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":747,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"6921:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6938:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6930:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:3","typeDescriptions":{}}},"id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6921:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":763,"nodeType":"Block","src":"7019:84:3","statements":[{"errorCall":{"arguments":[{"id":759,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"7071:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":760,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"7080:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":758,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"7044:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":762,"nodeType":"RevertStatement","src":"7037:51:3"}]},"id":764,"nodeType":"IfStatement","src":"6917:186:3","trueBody":{"id":757,"nodeType":"Block","src":"6942:71:3","statements":[{"errorCall":{"arguments":[{"id":754,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"6990:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":753,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6967:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":756,"nodeType":"RevertStatement","src":"6960:38:3"}]}}]}}]},"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"6325:421:3","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":768,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"6760:16:3","nodeType":"FunctionDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"owner","nameLocation":"6785:5:3","nodeType":"VariableDeclaration","scope":768,"src":"6777:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"spender","nameLocation":"6800:7:3","nodeType":"VariableDeclaration","scope":768,"src":"6792:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"6792:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":738,"mutability":"mutable","name":"tokenId","nameLocation":"6817:7:3","nodeType":"VariableDeclaration","scope":768,"src":"6809:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6776:49:3"},"returnParameters":{"id":740,"nodeType":"ParameterList","parameters":[],"src":"6848:0:3"},"scope":1261,"src":"6751:368:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":783,"nodeType":"Block","src":"7836:78:3","statements":[{"id":782,"nodeType":"UncheckedBlock","src":"7846:62:3","statements":[{"expression":{"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":776,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"7870:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":778,"indexExpression":{"id":777,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"7880:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7870:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7892:5:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7870:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":781,"nodeType":"ExpressionStatement","src":"7870:27:3"}]}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"7125:631:3","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7770:16:3","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"account","nameLocation":"7795:7:3","nodeType":"VariableDeclaration","scope":784,"src":"7787:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"7787:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"value","nameLocation":"7812:5:3","nodeType":"VariableDeclaration","scope":784,"src":"7804:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":772,"name":"uint128","nodeType":"ElementaryTypeName","src":"7804:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7786:32:3"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"7836:0:3"},"scope":1261,"src":"7761:153:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":873,"nodeType":"Block","src":"8602:700:3","statements":[{"assignments":[797],"declarations":[{"constant":false,"id":797,"mutability":"mutable","name":"from","nameLocation":"8620:4:3","nodeType":"VariableDeclaration","scope":873,"src":"8612:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":801,"initialValue":{"arguments":[{"id":799,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"8636:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":798,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"8627:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8627:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8612:32:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":802,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"8704:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8720:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:3","typeDescriptions":{}}},"id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8712:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8704:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":815,"nodeType":"IfStatement","src":"8700:86:3","trueBody":{"id":814,"nodeType":"Block","src":"8724:62:3","statements":[{"expression":{"arguments":[{"id":809,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"8755:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":810,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"8761:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":811,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"8767:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":808,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"8738:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":813,"nodeType":"ExpressionStatement","src":"8738:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":816,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"8830:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8846:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8838:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":817,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:3","typeDescriptions":{}}},"id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8830:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":843,"nodeType":"IfStatement","src":"8826:256:3","trueBody":{"id":842,"nodeType":"Block","src":"8850:232:3","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8955:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:3","typeDescriptions":{}}},"id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":827,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"8967:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8984:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:3","typeDescriptions":{}}},"id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":822,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1128,1194],"referencedDeclaration":1194,"src":"8946:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":834,"nodeType":"ExpressionStatement","src":"8946:48:3"},{"id":841,"nodeType":"UncheckedBlock","src":"9009:63:3","statements":[{"expression":{"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":835,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"9037:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":837,"indexExpression":{"id":836,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"9047:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9037:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":840,"nodeType":"ExpressionStatement","src":"9037:20:3"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":844,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"9096:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:3","typeDescriptions":{}}},"id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9102:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9096:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":858,"nodeType":"IfStatement","src":"9092:107:3","trueBody":{"id":857,"nodeType":"Block","src":"9114:85:3","statements":[{"id":856,"nodeType":"UncheckedBlock","src":"9128:61:3","statements":[{"expression":{"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":850,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"9156:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":852,"indexExpression":{"id":851,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"9166:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9156:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9156:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":855,"nodeType":"ExpressionStatement","src":"9156:18:3"}]}]}},{"expression":{"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":859,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"9209:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":861,"indexExpression":{"id":860,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"9217:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9209:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":862,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"9228:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9209:21:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":864,"nodeType":"ExpressionStatement","src":"9209:21:3"},{"eventCall":{"arguments":[{"id":866,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"9255:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":867,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"9261:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"9265:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":865,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"9246:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":870,"nodeType":"EmitStatement","src":"9241:32:3"},{"expression":{"id":871,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"9291:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":795,"id":872,"nodeType":"Return","src":"9284:11:3"}]},"documentation":{"id":785,"nodeType":"StructuredDocumentation","src":"7920:582:3","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":874,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8516:7:3","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"to","nameLocation":"8532:2:3","nodeType":"VariableDeclaration","scope":874,"src":"8524:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"8524:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"tokenId","nameLocation":"8544:7:3","nodeType":"VariableDeclaration","scope":874,"src":"8536:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"8536:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"auth","nameLocation":"8561:4:3","nodeType":"VariableDeclaration","scope":874,"src":"8553:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"8553:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8523:43:3"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":874,"src":"8593:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:3"},"scope":1261,"src":"8507:795:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":923,"nodeType":"Block","src":"9677:274:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":882,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"9691:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9705:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9697:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"9697:7:3","typeDescriptions":{}}},"id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":896,"nodeType":"IfStatement","src":"9687:87:3","trueBody":{"id":895,"nodeType":"Block","src":"9709:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9752:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"9752:7:3","typeDescriptions":{}}},"id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":888,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"9730:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":894,"nodeType":"RevertStatement","src":"9723:40:3"}]}},{"assignments":[898],"declarations":[{"constant":false,"id":898,"mutability":"mutable","name":"previousOwner","nameLocation":"9791:13:3","nodeType":"VariableDeclaration","scope":923,"src":"9783:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"9783:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":907,"initialValue":{"arguments":[{"id":900,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"9815:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"9819:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9828:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":902,"name":"address","nodeType":"ElementaryTypeName","src":"9828:7:3","typeDescriptions":{}}},"id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9828:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":899,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"9807:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9783:56:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":908,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"9853:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9878:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9870:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:3","typeDescriptions":{}}},"id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9870:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9853:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":922,"nodeType":"IfStatement","src":"9849:96:3","trueBody":{"id":921,"nodeType":"Block","src":"9882:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9931:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9923:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:3","typeDescriptions":{}}},"id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":914,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"9903:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":920,"nodeType":"RevertStatement","src":"9896:38:3"}]}}]},"documentation":{"id":875,"nodeType":"StructuredDocumentation","src":"9308:311:3","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":924,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9633:5:3","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"to","nameLocation":"9647:2:3","nodeType":"VariableDeclaration","scope":924,"src":"9639:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"9639:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":879,"mutability":"mutable","name":"tokenId","nameLocation":"9659:7:3","nodeType":"VariableDeclaration","scope":924,"src":"9651:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":878,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:29:3"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[],"src":"9677:0:3"},"scope":1261,"src":"9624:327:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":938,"nodeType":"Block","src":"10359:43:3","statements":[{"expression":{"arguments":[{"id":933,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"10379:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":934,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"10383:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10392:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":932,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[939,969],"referencedDeclaration":969,"src":"10369:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":937,"nodeType":"ExpressionStatement","src":"10369:26:3"}]},"documentation":{"id":925,"nodeType":"StructuredDocumentation","src":"9957:340:3","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":939,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10311:9:3","nodeType":"FunctionDefinition","parameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"to","nameLocation":"10329:2:3","nodeType":"VariableDeclaration","scope":939,"src":"10321:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"10321:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"tokenId","nameLocation":"10341:7:3","nodeType":"VariableDeclaration","scope":939,"src":"10333:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:29:3"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[],"src":"10359:0:3"},"scope":1261,"src":"10302:100:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":968,"nodeType":"Block","src":"10707:123:3","statements":[{"expression":{"arguments":[{"id":950,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"10723:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":951,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"10727:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":949,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"10717:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":953,"nodeType":"ExpressionStatement","src":"10717:18:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":957,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"10779:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10801:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"10793:7:3","typeDescriptions":{}}},"id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":963,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"10805:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":964,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"10809:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":965,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"10818:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":954,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"10745:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1919_$","typeString":"type(library ERC721Utils)"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10757:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1918,"src":"10745:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":967,"nodeType":"ExpressionStatement","src":"10745:78:3"}]},"documentation":{"id":940,"nodeType":"StructuredDocumentation","src":"10408:210:3","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":969,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10632:9:3","nodeType":"FunctionDefinition","parameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"to","nameLocation":"10650:2:3","nodeType":"VariableDeclaration","scope":969,"src":"10642:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":944,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:3","nodeType":"VariableDeclaration","scope":969,"src":"10654:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":946,"mutability":"mutable","name":"data","nameLocation":"10684:4:3","nodeType":"VariableDeclaration","scope":969,"src":"10671:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":945,"name":"bytes","nodeType":"ElementaryTypeName","src":"10671:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10641:48:3"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[],"src":"10707:0:3"},"scope":1261,"src":"10623:207:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1001,"nodeType":"Block","src":"11197:186:3","statements":[{"assignments":[976],"declarations":[{"constant":false,"id":976,"mutability":"mutable","name":"previousOwner","nameLocation":"11215:13:3","nodeType":"VariableDeclaration","scope":1001,"src":"11207:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":988,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11239:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:3","typeDescriptions":{}}},"id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":982,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"11251:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11268:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11260:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"11260:7:3","typeDescriptions":{}}},"id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11260:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":977,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"11231:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11207:64:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":989,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"11285:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11310:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11302:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"11302:7:3","typeDescriptions":{}}},"id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11302:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11285:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1000,"nodeType":"IfStatement","src":"11281:96:3","trueBody":{"id":999,"nodeType":"Block","src":"11314:63:3","statements":[{"errorCall":{"arguments":[{"id":996,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"11358:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":995,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"11335:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":998,"nodeType":"RevertStatement","src":"11328:38:3"}]}}]},"documentation":{"id":970,"nodeType":"StructuredDocumentation","src":"10836:315:3","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1002,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11165:5:3","nodeType":"FunctionDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"tokenId","nameLocation":"11179:7:3","nodeType":"VariableDeclaration","scope":1002,"src":"11171:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":971,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11170:17:3"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[],"src":"11197:0:3"},"scope":1261,"src":"11156:227:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1061,"nodeType":"Block","src":"11778:389:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1012,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"11792:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11806:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11798:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"11798:7:3","typeDescriptions":{}}},"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11798:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11792:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1026,"nodeType":"IfStatement","src":"11788:87:3","trueBody":{"id":1025,"nodeType":"Block","src":"11810:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11861:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11853:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"11853:7:3","typeDescriptions":{}}},"id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1018,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"11831:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11831:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1024,"nodeType":"RevertStatement","src":"11824:40:3"}]}},{"assignments":[1028],"declarations":[{"constant":false,"id":1028,"mutability":"mutable","name":"previousOwner","nameLocation":"11892:13:3","nodeType":"VariableDeclaration","scope":1061,"src":"11884:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"11884:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1037,"initialValue":{"arguments":[{"id":1030,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"11916:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1031,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"11920:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11937:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11929:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"11929:7:3","typeDescriptions":{}}},"id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1029,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"11908:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11908:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11884:56:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1038,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"11954:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:3","typeDescriptions":{}}},"id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11954:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1049,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"12056:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1050,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"12073:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12056:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1059,"nodeType":"IfStatement","src":"12052:109:3","trueBody":{"id":1058,"nodeType":"Block","src":"12079:82:3","statements":[{"errorCall":{"arguments":[{"id":1053,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"12121:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1054,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"12127:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1055,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"12136:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1052,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"12100:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1057,"nodeType":"RevertStatement","src":"12093:57:3"}]}},"id":1060,"nodeType":"IfStatement","src":"11950:211:3","trueBody":{"id":1048,"nodeType":"Block","src":"11983:63:3","statements":[{"errorCall":{"arguments":[{"id":1045,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"12027:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1044,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"12004:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1047,"nodeType":"RevertStatement","src":"11997:38:3"}]}}]},"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"11389:313:3","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1062,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11716:9:3","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"from","nameLocation":"11734:4:3","nodeType":"VariableDeclaration","scope":1062,"src":"11726:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"11726:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"to","nameLocation":"11748:2:3","nodeType":"VariableDeclaration","scope":1062,"src":"11740:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1009,"mutability":"mutable","name":"tokenId","nameLocation":"11760:7:3","nodeType":"VariableDeclaration","scope":1062,"src":"11752:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11725:43:3"},"returnParameters":{"id":1011,"nodeType":"ParameterList","parameters":[],"src":"11778:0:3"},"scope":1261,"src":"11707:460:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1079,"nodeType":"Block","src":"13176:53:3","statements":[{"expression":{"arguments":[{"id":1073,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"13200:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"13206:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"13210:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13219:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1072,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1080,1110],"referencedDeclaration":1110,"src":"13186:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1078,"nodeType":"ExpressionStatement","src":"13186:36:3"}]},"documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"12173:923:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1080,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13110:13:3","nodeType":"FunctionDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"from","nameLocation":"13132:4:3","nodeType":"VariableDeclaration","scope":1080,"src":"13124:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"to","nameLocation":"13146:2:3","nodeType":"VariableDeclaration","scope":1080,"src":"13138:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"13138:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"tokenId","nameLocation":"13158:7:3","nodeType":"VariableDeclaration","scope":1080,"src":"13150:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1068,"name":"uint256","nodeType":"ElementaryTypeName","src":"13150:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:43:3"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"13176:0:3"},"scope":1261,"src":"13101:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1109,"nodeType":"Block","src":"13568:127:3","statements":[{"expression":{"arguments":[{"id":1093,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"13588:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1094,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"13594:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1095,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"13598:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1092,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"13578:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1097,"nodeType":"ExpressionStatement","src":"13578:28:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1101,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"13650:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1103,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"13664:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1104,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"13670:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1105,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"13674:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1106,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"13683:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1098,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"13616:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1919_$","typeString":"type(library ERC721Utils)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1918,"src":"13616:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13616:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1108,"nodeType":"ExpressionStatement","src":"13616:72:3"}]},"documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"13235:226:3","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1110,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13475:13:3","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"from","nameLocation":"13497:4:3","nodeType":"VariableDeclaration","scope":1110,"src":"13489:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"13489:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"to","nameLocation":"13511:2:3","nodeType":"VariableDeclaration","scope":1110,"src":"13503:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"13503:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"tokenId","nameLocation":"13523:7:3","nodeType":"VariableDeclaration","scope":1110,"src":"13515:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1086,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"data","nameLocation":"13545:4:3","nodeType":"VariableDeclaration","scope":1110,"src":"13532:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1088,"name":"bytes","nodeType":"ElementaryTypeName","src":"13532:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13488:62:3"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[],"src":"13568:0:3"},"scope":1261,"src":"13466:229:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1127,"nodeType":"Block","src":"14208:50:3","statements":[{"expression":{"arguments":[{"id":1121,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"14227:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1122,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"14231:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1123,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"14240:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1120,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1128,1194],"referencedDeclaration":1194,"src":"14218:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1126,"nodeType":"ExpressionStatement","src":"14218:33:3"}]},"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"13701:432:3","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1128,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14147:8:3","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"to","nameLocation":"14164:2:3","nodeType":"VariableDeclaration","scope":1128,"src":"14156:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"tokenId","nameLocation":"14176:7:3","nodeType":"VariableDeclaration","scope":1128,"src":"14168:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"auth","nameLocation":"14193:4:3","nodeType":"VariableDeclaration","scope":1128,"src":"14185:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14155:43:3"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[],"src":"14208:0:3"},"scope":1261,"src":"14138:120:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1193,"nodeType":"Block","src":"14534:568:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1140,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"14600:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1141,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"14613:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:3","typeDescriptions":{}}},"id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14613:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14600:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1186,"nodeType":"IfStatement","src":"14596:460:3","trueBody":{"id":1185,"nodeType":"Block","src":"14633:423:3","statements":[{"assignments":[1149],"declarations":[{"constant":false,"id":1149,"mutability":"mutable","name":"owner","nameLocation":"14655:5:3","nodeType":"VariableDeclaration","scope":1185,"src":"14647:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"14647:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1153,"initialValue":{"arguments":[{"id":1151,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"14677:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1150,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"14663:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14663:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14647:38:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1154,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"14813:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14821:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"14821:7:3","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14813:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1160,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"14835:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1161,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"14844:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14835:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14852:30:3","subExpression":{"arguments":[{"id":1165,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"14870:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1166,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"14877:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1164,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"14853:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:69:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1175,"nodeType":"IfStatement","src":"14809:142:3","trueBody":{"id":1174,"nodeType":"Block","src":"14884:67:3","statements":[{"errorCall":{"arguments":[{"id":1171,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"14931:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1170,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"14909:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1173,"nodeType":"RevertStatement","src":"14902:34:3"}]}},{"condition":{"id":1176,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"14969:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1184,"nodeType":"IfStatement","src":"14965:81:3","trueBody":{"id":1183,"nodeType":"Block","src":"14980:66:3","statements":[{"eventCall":{"arguments":[{"id":1178,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"15012:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"15019:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1180,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"15023:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1177,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"15003:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"EmitStatement","src":"14998:33:3"}]}}]}},{"expression":{"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1187,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"15066:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1189,"indexExpression":{"id":1188,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"15082:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15066:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1190,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"15093:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15066:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1192,"nodeType":"ExpressionStatement","src":"15066:29:3"}]},"documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"14264:171:3","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1194,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14449:8:3","nodeType":"FunctionDefinition","parameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"to","nameLocation":"14466:2:3","nodeType":"VariableDeclaration","scope":1194,"src":"14458:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"tokenId","nameLocation":"14478:7:3","nodeType":"VariableDeclaration","scope":1194,"src":"14470:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"auth","nameLocation":"14495:4:3","nodeType":"VariableDeclaration","scope":1194,"src":"14487:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"14487:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"emitEvent","nameLocation":"14506:9:3","nodeType":"VariableDeclaration","scope":1194,"src":"14501:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1136,"name":"bool","nodeType":"ElementaryTypeName","src":"14501:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14457:59:3"},"returnParameters":{"id":1139,"nodeType":"ParameterList","parameters":[],"src":"14534:0:3"},"scope":1261,"src":"14440:662:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1230,"nodeType":"Block","src":"15404:219:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1204,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"15418:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15438:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15430:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"15430:7:3","typeDescriptions":{}}},"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15430:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15418:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1215,"nodeType":"IfStatement","src":"15414:91:3","trueBody":{"id":1214,"nodeType":"Block","src":"15442:63:3","statements":[{"errorCall":{"arguments":[{"id":1211,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"15485:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1210,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"15463:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1213,"nodeType":"RevertStatement","src":"15456:38:3"}]}},{"expression":{"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1216,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"15514:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1219,"indexExpression":{"id":1217,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"15533:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15514:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1220,"indexExpression":{"id":1218,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"15540:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15514:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1221,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"15552:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15514:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1223,"nodeType":"ExpressionStatement","src":"15514:46:3"},{"eventCall":{"arguments":[{"id":1225,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"15590:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1226,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"15597:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1227,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"15607:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1224,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"15575:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1229,"nodeType":"EmitStatement","src":"15570:46:3"}]},"documentation":{"id":1195,"nodeType":"StructuredDocumentation","src":"15108:198:3","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1231,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15320:18:3","nodeType":"FunctionDefinition","parameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"owner","nameLocation":"15347:5:3","nodeType":"VariableDeclaration","scope":1231,"src":"15339:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1196,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1199,"mutability":"mutable","name":"operator","nameLocation":"15362:8:3","nodeType":"VariableDeclaration","scope":1231,"src":"15354:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"approved","nameLocation":"15377:8:3","nodeType":"VariableDeclaration","scope":1231,"src":"15372:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1200,"name":"bool","nodeType":"ElementaryTypeName","src":"15372:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15338:48:3"},"returnParameters":{"id":1203,"nodeType":"ParameterList","parameters":[],"src":"15404:0:3"},"scope":1261,"src":"15311:312:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1259,"nodeType":"Block","src":"15930:169:3","statements":[{"assignments":[1240],"declarations":[{"constant":false,"id":1240,"mutability":"mutable","name":"owner","nameLocation":"15948:5:3","nodeType":"VariableDeclaration","scope":1259,"src":"15940:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1244,"initialValue":{"arguments":[{"id":1242,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"15965:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1241,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"15956:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15956:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15940:33:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1245,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"15987:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16004:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:3","typeDescriptions":{}}},"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15987:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1256,"nodeType":"IfStatement","src":"15983:88:3","trueBody":{"id":1255,"nodeType":"Block","src":"16008:63:3","statements":[{"errorCall":{"arguments":[{"id":1252,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"16052:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1251,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"16029:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1254,"nodeType":"RevertStatement","src":"16022:38:3"}]}},{"expression":{"id":1257,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"16087:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1238,"id":1258,"nodeType":"Return","src":"16080:12:3"}]},"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"15629:224:3","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1260,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"15867:13:3","nodeType":"FunctionDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"tokenId","nameLocation":"15889:7:3","nodeType":"VariableDeclaration","scope":1260,"src":"15881:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"15881:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15880:17:3"},"returnParameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1260,"src":"15921:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"15921:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15920:9:3"},"scope":1261,"src":"15858:241:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1262,"src":"775:15326:3","usedErrors":[215,220,229,234,239,246,251,256],"usedEvents":[1277,1286,1295]}],"src":"107:15995:3"},"id":3},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[4209],"IERC721":[1378]},"id":1379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1263,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1265,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1379,"sourceUnit":4210,"src":"134:62:4","symbolAliases":[{"foreign":{"id":1264,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"142:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1267,"name":"IERC165","nameLocations":["288:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":4209,"src":"288:7:4"},"id":1268,"nodeType":"InheritanceSpecifier","src":"288:7:4"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"198:68:4","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1378,"linearizedBaseContracts":[1378,4209],"name":"IERC721","nameLocation":"277:7:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1269,"nodeType":"StructuredDocumentation","src":"302:88:4","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1277,"name":"Transfer","nameLocation":"401:8:4","nodeType":"EventDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:4","nodeType":"VariableDeclaration","scope":1277,"src":"410:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1273,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:4","nodeType":"VariableDeclaration","scope":1277,"src":"432:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1275,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:4","nodeType":"VariableDeclaration","scope":1277,"src":"452:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1274,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:4"},"src":"395:82:4"},{"anonymous":false,"documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"483:94:4","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1286,"name":"Approval","nameLocation":"588:8:4","nodeType":"EventDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:4","nodeType":"VariableDeclaration","scope":1286,"src":"597:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1282,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:4","nodeType":"VariableDeclaration","scope":1286,"src":"620:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1281,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1284,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:4","nodeType":"VariableDeclaration","scope":1286,"src":"646:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:4"},"src":"582:89:4"},{"anonymous":false,"documentation":{"id":1287,"nodeType":"StructuredDocumentation","src":"677:117:4","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1295,"name":"ApprovalForAll","nameLocation":"805:14:4","nodeType":"EventDefinition","parameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:4","nodeType":"VariableDeclaration","scope":1295,"src":"820:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1291,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:4","nodeType":"VariableDeclaration","scope":1295,"src":"843:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1290,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1293,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:4","nodeType":"VariableDeclaration","scope":1295,"src":"869:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1292,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:4"},"src":"799:85:4"},{"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"890:76:4","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1303,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:4","nodeType":"FunctionDefinition","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"owner","nameLocation":"998:5:4","nodeType":"VariableDeclaration","scope":1303,"src":"990:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:4"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"mutability":"mutable","name":"balance","nameLocation":"1036:7:4","nodeType":"VariableDeclaration","scope":1303,"src":"1028:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:4"},"scope":1378,"src":"971:74:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"1051:131:4","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1311,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:4","nodeType":"FunctionDefinition","parameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:4","nodeType":"VariableDeclaration","scope":1311,"src":"1204:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:4"},"returnParameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"owner","nameLocation":"1252:5:4","nodeType":"VariableDeclaration","scope":1311,"src":"1244:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1308,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:4"},"scope":1378,"src":"1187:72:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"1265:565:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1323,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:4","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"from","nameLocation":"1869:4:4","nodeType":"VariableDeclaration","scope":1323,"src":"1861:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1316,"mutability":"mutable","name":"to","nameLocation":"1883:2:4","nodeType":"VariableDeclaration","scope":1323,"src":"1875:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:4","nodeType":"VariableDeclaration","scope":1323,"src":"1887:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"data","nameLocation":"1919:4:4","nodeType":"VariableDeclaration","scope":1323,"src":"1904:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1319,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:4"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"1933:0:4"},"scope":1378,"src":"1835:99:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"1940:706:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1333,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:4","nodeType":"FunctionDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"from","nameLocation":"2685:4:4","nodeType":"VariableDeclaration","scope":1333,"src":"2677:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"to","nameLocation":"2699:2:4","nodeType":"VariableDeclaration","scope":1333,"src":"2691:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:4","nodeType":"VariableDeclaration","scope":1333,"src":"2703:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:4"},"returnParameters":{"id":1332,"nodeType":"ParameterList","parameters":[],"src":"2728:0:4"},"scope":1378,"src":"2651:78:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1334,"nodeType":"StructuredDocumentation","src":"2735:733:4","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1343,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:4","nodeType":"FunctionDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"from","nameLocation":"3503:4:4","nodeType":"VariableDeclaration","scope":1343,"src":"3495:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"to","nameLocation":"3517:2:4","nodeType":"VariableDeclaration","scope":1343,"src":"3509:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:4","nodeType":"VariableDeclaration","scope":1343,"src":"3521:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:4"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[],"src":"3546:0:4"},"scope":1378,"src":"3473:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1344,"nodeType":"StructuredDocumentation","src":"3553:452:4","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1351,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:4","nodeType":"FunctionDefinition","parameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"to","nameLocation":"4035:2:4","nodeType":"VariableDeclaration","scope":1351,"src":"4027:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:4","nodeType":"VariableDeclaration","scope":1351,"src":"4039:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:4"},"returnParameters":{"id":1350,"nodeType":"ParameterList","parameters":[],"src":"4064:0:4"},"scope":1378,"src":"4010:55:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"4071:315:4","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1359,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:4","nodeType":"FunctionDefinition","parameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"operator","nameLocation":"4426:8:4","nodeType":"VariableDeclaration","scope":1359,"src":"4418:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1353,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1356,"mutability":"mutable","name":"approved","nameLocation":"4441:8:4","nodeType":"VariableDeclaration","scope":1359,"src":"4436:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1355,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:4"},"returnParameters":{"id":1358,"nodeType":"ParameterList","parameters":[],"src":"4459:0:4"},"scope":1378,"src":"4391:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1360,"nodeType":"StructuredDocumentation","src":"4466:139:4","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1367,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:4","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:4","nodeType":"VariableDeclaration","scope":1367,"src":"4631:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:4"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"operator","nameLocation":"4679:8:4","nodeType":"VariableDeclaration","scope":1367,"src":"4671:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:4"},"scope":1378,"src":"4610:79:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"4695:138:4","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1377,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:4","nodeType":"FunctionDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"owner","nameLocation":"4872:5:4","nodeType":"VariableDeclaration","scope":1377,"src":"4864:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"operator","nameLocation":"4887:8:4","nodeType":"VariableDeclaration","scope":1377,"src":"4879:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:4"},"returnParameters":{"id":1376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1377,"src":"4920:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1374,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:4"},"scope":1378,"src":"4838:88:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1379,"src":"267:4661:4","usedErrors":[],"usedEvents":[1277,1286,1295]}],"src":"108:4821:4"},"id":4},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1396]},"id":1397,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1380,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"142:154:5","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1396,"linearizedBaseContracts":[1396],"name":"IERC721Receiver","nameLocation":"307:15:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"329:500:5","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1395,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:5","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"operator","nameLocation":"877:8:5","nodeType":"VariableDeclaration","scope":1395,"src":"869:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"from","nameLocation":"903:4:5","nodeType":"VariableDeclaration","scope":1395,"src":"895:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:5","nodeType":"VariableDeclaration","scope":1395,"src":"917:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"data","nameLocation":"957:4:5","nodeType":"VariableDeclaration","scope":1395,"src":"942:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1389,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:5"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"986:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1392,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:5"},"scope":1396,"src":"834:160:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1397,"src":"297:699:5","usedErrors":[],"usedEvents":[]}],"src":"116:881:5"},"id":5},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","exportedSymbols":{"ERC721":[1261],"ERC721Enumerable":[1782],"IERC165":[4209],"IERC721Enumerable":[1814]},"id":1783,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1398,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1400,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1783,"sourceUnit":1262,"src":"154:37:6","symbolAliases":[{"foreign":{"id":1399,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"162:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"./IERC721Enumerable.sol","id":1402,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1783,"sourceUnit":1815,"src":"192:58:6","symbolAliases":[{"foreign":{"id":1401,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"200:17:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../../utils/introspection/ERC165.sol","id":1404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1783,"sourceUnit":4198,"src":"251:64:6","symbolAliases":[{"foreign":{"id":1403,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"259:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1406,"name":"ERC721","nameLocations":["746:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1261,"src":"746:6:6"},"id":1407,"nodeType":"InheritanceSpecifier","src":"746:6:6"},{"baseName":{"id":1408,"name":"IERC721Enumerable","nameLocations":["754:17:6"],"nodeType":"IdentifierPath","referencedDeclaration":1814,"src":"754:17:6"},"id":1409,"nodeType":"InheritanceSpecifier","src":"754:17:6"}],"canonicalName":"ERC721Enumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"317:390:6","text":" @dev This implements an optional extension of {ERC721} defined in the ERC that adds enumerability\n of all the token ids in the contract as well as all token ids owned by each account.\n CAUTION: {ERC721} extensions that implement custom `balanceOf` logic, such as {ERC721Consecutive},\n interfere with enumerability and should not be used together with {ERC721Enumerable}."},"fullyImplemented":true,"id":1782,"linearizedBaseContracts":[1782,1814,1261,257,1842,1378,4197,4209,2216],"name":"ERC721Enumerable","nameLocation":"726:16:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1415,"mutability":"mutable","name":"_ownedTokens","nameLocation":"846:12:6","nodeType":"VariableDeclaration","scope":1782,"src":"778:80:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":1414,"keyName":"owner","keyNameLocation":"794:5:6","keyType":{"id":1410,"name":"address","nodeType":"ElementaryTypeName","src":"786:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"778:59:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1413,"keyName":"index","keyNameLocation":"819:5:6","keyType":{"id":1411,"name":"uint256","nodeType":"ElementaryTypeName","src":"811:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"803:33:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1412,"name":"uint256","nodeType":"ElementaryTypeName","src":"828:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1419,"mutability":"mutable","name":"_ownedTokensIndex","nameLocation":"908:17:6","nodeType":"VariableDeclaration","scope":1782,"src":"864:61:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1418,"keyName":"tokenId","keyNameLocation":"880:7:6","keyType":{"id":1416,"name":"uint256","nodeType":"ElementaryTypeName","src":"872:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"864:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1422,"mutability":"mutable","name":"_allTokens","nameLocation":"950:10:6","nodeType":"VariableDeclaration","scope":1782,"src":"932:28:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"932:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1421,"nodeType":"ArrayTypeName","src":"932:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"private"},{"constant":false,"id":1426,"mutability":"mutable","name":"_allTokensIndex","nameLocation":"1010:15:6","nodeType":"VariableDeclaration","scope":1782,"src":"966:59:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1425,"keyName":"tokenId","keyNameLocation":"982:7:6","keyType":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"966:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1424,"name":"uint256","nodeType":"ElementaryTypeName","src":"993:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"1032:168:6","text":" @dev An `owner`'s token query was out of bounds for `index`.\n NOTE: The owner being `address(0)` indicates a global out of bounds index."},"errorSelector":"a57d13dc","id":1433,"name":"ERC721OutOfBoundsIndex","nameLocation":"1211:22:6","nodeType":"ErrorDefinition","parameters":{"id":1432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"owner","nameLocation":"1242:5:6","nodeType":"VariableDeclaration","scope":1433,"src":"1234:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"1234:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"index","nameLocation":"1257:5:6","nodeType":"VariableDeclaration","scope":1433,"src":"1249:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"1249:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1233:30:6"},"src":"1205:59:6"},{"documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"1270:50:6","text":" @dev Batch mint is not allowed."},"errorSelector":"59171fc1","id":1436,"name":"ERC721EnumerableForbiddenBatchMint","nameLocation":"1331:34:6","nodeType":"ErrorDefinition","parameters":{"id":1435,"nodeType":"ParameterList","parameters":[],"src":"1365:2:6"},"src":"1325:43:6"},{"baseFunctions":[405,4208],"body":{"id":1459,"nodeType":"Block","src":"1510:114:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1447,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"1527:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1449,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"1547:17:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$1814_$","typeString":"type(contract IERC721Enumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$1814_$","typeString":"type(contract IERC721Enumerable)"}],"id":1448,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1542:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1542:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Enumerable_$1814","typeString":"type(contract IERC721Enumerable)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1566:11:6","memberName":"interfaceId","nodeType":"MemberAccess","src":"1542:35:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1527:50:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1455,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"1605:11:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1453,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1581:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1782_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1587:17:6","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":405,"src":"1581:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1527:90:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1446,"id":1458,"nodeType":"Return","src":"1520:97:6"}]},"documentation":{"id":1437,"nodeType":"StructuredDocumentation","src":"1374:23:6","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1460,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1411:17:6","nodeType":"FunctionDefinition","overrides":{"id":1443,"nodeType":"OverrideSpecifier","overrides":[{"id":1441,"name":"IERC165","nameLocations":["1478:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":4209,"src":"1478:7:6"},{"id":1442,"name":"ERC721","nameLocations":["1487:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1261,"src":"1487:6:6"}],"src":"1469:25:6"},"parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"interfaceId","nameLocation":"1436:11:6","nodeType":"VariableDeclaration","scope":1460,"src":"1429:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1438,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1429:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1428:20:6"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1460,"src":"1504:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1444,"name":"bool","nodeType":"ElementaryTypeName","src":"1504:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1503:6:6"},"scope":1782,"src":"1402:222:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1805],"body":{"id":1488,"nodeType":"Block","src":"1765:158:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1470,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"1779:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":1472,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"1798:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1471,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"1788:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1788:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1779:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1481,"nodeType":"IfStatement","src":"1775:99:6","trueBody":{"id":1480,"nodeType":"Block","src":"1806:68:6","statements":[{"errorCall":{"arguments":[{"id":1476,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"1850:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1477,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"1857:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1475,"name":"ERC721OutOfBoundsIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"1827:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1827:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1479,"nodeType":"RevertStatement","src":"1820:43:6"}]}},{"expression":{"baseExpression":{"baseExpression":{"id":1482,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"1890:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1484,"indexExpression":{"id":1483,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"1903:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1890:19:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1486,"indexExpression":{"id":1485,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"1910:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1890:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1469,"id":1487,"nodeType":"Return","src":"1883:33:6"}]},"documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"1630:33:6","text":"@inheritdoc IERC721Enumerable"},"functionSelector":"2f745c59","id":1489,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"1677:19:6","nodeType":"FunctionDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"owner","nameLocation":"1705:5:6","nodeType":"VariableDeclaration","scope":1489,"src":"1697:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"1697:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"index","nameLocation":"1720:5:6","nodeType":"VariableDeclaration","scope":1489,"src":"1712:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1712:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1696:30:6"},"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1489,"src":"1756:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:6"},"scope":1782,"src":"1668:255:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1795],"body":{"id":1498,"nodeType":"Block","src":"2028:41:6","statements":[{"expression":{"expression":{"id":1495,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"2045:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2056:6:6","memberName":"length","nodeType":"MemberAccess","src":"2045:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1494,"id":1497,"nodeType":"Return","src":"2038:24:6"}]},"documentation":{"id":1490,"nodeType":"StructuredDocumentation","src":"1929:33:6","text":"@inheritdoc IERC721Enumerable"},"functionSelector":"18160ddd","id":1499,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1976:11:6","nodeType":"FunctionDefinition","parameters":{"id":1491,"nodeType":"ParameterList","parameters":[],"src":"1987:2:6"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1499,"src":"2019:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"2019:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2018:9:6"},"scope":1782,"src":"1967:102:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1813],"body":{"id":1525,"nodeType":"Block","src":"2188:151:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1507,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"2202:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1508,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"2211:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2211:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2202:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1520,"nodeType":"IfStatement","src":"2198:101:6","trueBody":{"id":1519,"nodeType":"Block","src":"2226:73:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2270:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1512,"name":"address","nodeType":"ElementaryTypeName","src":"2270:7:6","typeDescriptions":{}}},"id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1516,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"2282:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1511,"name":"ERC721OutOfBoundsIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"2247:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2247:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1518,"nodeType":"RevertStatement","src":"2240:48:6"}]}},{"expression":{"baseExpression":{"id":1521,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"2315:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1523,"indexExpression":{"id":1522,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"2326:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2315:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1506,"id":1524,"nodeType":"Return","src":"2308:24:6"}]},"documentation":{"id":1500,"nodeType":"StructuredDocumentation","src":"2075:33:6","text":"@inheritdoc IERC721Enumerable"},"functionSelector":"4f6ccce7","id":1526,"implemented":true,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"2122:12:6","nodeType":"FunctionDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"index","nameLocation":"2143:5:6","nodeType":"VariableDeclaration","scope":1526,"src":"2135:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2135:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2134:15:6"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1526,"src":"2179:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2178:9:6"},"scope":1782,"src":"2113:226:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[874],"body":{"id":1594,"nodeType":"Block","src":"2476:521:6","statements":[{"assignments":[1540],"declarations":[{"constant":false,"id":1540,"mutability":"mutable","name":"previousOwner","nameLocation":"2494:13:6","nodeType":"VariableDeclaration","scope":1594,"src":"2486:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1539,"name":"address","nodeType":"ElementaryTypeName","src":"2486:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1547,"initialValue":{"arguments":[{"id":1543,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"2524:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1544,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"2528:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1545,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"2537:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1541,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2510:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1782_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2516:7:6","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":874,"src":"2510:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2510:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2486:56:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1548,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"2557:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2582:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2574:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1549,"name":"address","nodeType":"ElementaryTypeName","src":"2574:7:6","typeDescriptions":{}}},"id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2574:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2557:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1559,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"2661:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1560,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"2678:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2661:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1568,"nodeType":"IfStatement","src":"2657:106:6","trueBody":{"id":1567,"nodeType":"Block","src":"2682:81:6","statements":[{"expression":{"arguments":[{"id":1563,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"2729:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1564,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"2744:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1562,"name":"_removeTokenFromOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"2696:32:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2696:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1566,"nodeType":"ExpressionStatement","src":"2696:56:6"}]}},"id":1569,"nodeType":"IfStatement","src":"2553:210:6","trueBody":{"id":1558,"nodeType":"Block","src":"2586:65:6","statements":[{"expression":{"arguments":[{"id":1555,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"2632:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1554,"name":"_addTokenToAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"2600:31:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2600:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1557,"nodeType":"ExpressionStatement","src":"2600:40:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1570,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"2776:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2790:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2782:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1571,"name":"address","nodeType":"ElementaryTypeName","src":"2782:7:6","typeDescriptions":{}}},"id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2782:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2776:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1581,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"2874:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1582,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"2891:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2874:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1590,"nodeType":"IfStatement","src":"2870:90:6","trueBody":{"id":1589,"nodeType":"Block","src":"2895:65:6","statements":[{"expression":{"arguments":[{"id":1585,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"2937:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1586,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"2941:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1584,"name":"_addTokenToOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"2909:27:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2909:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1588,"nodeType":"ExpressionStatement","src":"2909:40:6"}]}},"id":1591,"nodeType":"IfStatement","src":"2772:188:6","trueBody":{"id":1580,"nodeType":"Block","src":"2794:70:6","statements":[{"expression":{"arguments":[{"id":1577,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"2845:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1576,"name":"_removeTokenFromAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"2808:36:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2808:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1579,"nodeType":"ExpressionStatement","src":"2808:45:6"}]}},{"expression":{"id":1592,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"2977:13:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1538,"id":1593,"nodeType":"Return","src":"2970:20:6"}]},"documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"2345:22:6","text":"@inheritdoc ERC721"},"id":1595,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2381:7:6","nodeType":"FunctionDefinition","overrides":{"id":1535,"nodeType":"OverrideSpecifier","overrides":[],"src":"2449:8:6"},"parameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"to","nameLocation":"2397:2:6","nodeType":"VariableDeclaration","scope":1595,"src":"2389:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"2389:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"tokenId","nameLocation":"2409:7:6","nodeType":"VariableDeclaration","scope":1595,"src":"2401:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"2401:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1533,"mutability":"mutable","name":"auth","nameLocation":"2426:4:6","nodeType":"VariableDeclaration","scope":1595,"src":"2418:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1532,"name":"address","nodeType":"ElementaryTypeName","src":"2418:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2388:43:6"},"returnParameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1595,"src":"2467:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1536,"name":"address","nodeType":"ElementaryTypeName","src":"2467:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2466:9:6"},"scope":1782,"src":"2372:625:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1625,"nodeType":"Block","src":"3365:140:6","statements":[{"assignments":[1604],"declarations":[{"constant":false,"id":1604,"mutability":"mutable","name":"length","nameLocation":"3383:6:6","nodeType":"VariableDeclaration","scope":1625,"src":"3375:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"3375:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1610,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1606,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"3402:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1605,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"3392:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3392:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3408:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3392:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3375:34:6"},{"expression":{"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1611,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"3419:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1614,"indexExpression":{"id":1612,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"3432:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3419:16:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1615,"indexExpression":{"id":1613,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"3436:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3419:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1616,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"3446:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3419:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1618,"nodeType":"ExpressionStatement","src":"3419:34:6"},{"expression":{"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1619,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"3463:17:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1621,"indexExpression":{"id":1620,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"3481:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3463:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1622,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"3492:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1624,"nodeType":"ExpressionStatement","src":"3463:35:6"}]},"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"3003:283:6","text":" @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"},"id":1626,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToOwnerEnumeration","nameLocation":"3300:27:6","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"to","nameLocation":"3336:2:6","nodeType":"VariableDeclaration","scope":1626,"src":"3328:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"3328:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"tokenId","nameLocation":"3348:7:6","nodeType":"VariableDeclaration","scope":1626,"src":"3340:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"3340:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3327:29:6"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[],"src":"3365:0:6"},"scope":1782,"src":"3291:214:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1645,"nodeType":"Block","src":"3766:95:6","statements":[{"expression":{"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1632,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"3776:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1634,"indexExpression":{"id":1633,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"3792:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3776:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1635,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"3803:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3814:6:6","memberName":"length","nodeType":"MemberAccess","src":"3803:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3776:44:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1638,"nodeType":"ExpressionStatement","src":"3776:44:6"},{"expression":{"arguments":[{"id":1642,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"3846:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1639,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"3830:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3841:4:6","memberName":"push","nodeType":"MemberAccess","src":"3830:15:6","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3830:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1644,"nodeType":"ExpressionStatement","src":"3830:24:6"}]},"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"3511:184:6","text":" @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"},"id":1646,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToAllTokensEnumeration","nameLocation":"3709:31:6","nodeType":"FunctionDefinition","parameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"tokenId","nameLocation":"3749:7:6","nodeType":"VariableDeclaration","scope":1646,"src":"3741:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"3741:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3740:17:6"},"returnParameters":{"id":1631,"nodeType":"ParameterList","parameters":[],"src":"3766:0:6"},"scope":1782,"src":"3700:161:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1707,"nodeType":"Block","src":"4559:974:6","statements":[{"assignments":[1655],"declarations":[{"constant":false,"id":1655,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"4748:14:6","nodeType":"VariableDeclaration","scope":1707,"src":"4740:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1654,"name":"uint256","nodeType":"ElementaryTypeName","src":"4740:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1659,"initialValue":{"arguments":[{"id":1657,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"4775:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1656,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"4765:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4765:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4740:40:6"},{"assignments":[1661],"declarations":[{"constant":false,"id":1661,"mutability":"mutable","name":"tokenIndex","nameLocation":"4798:10:6","nodeType":"VariableDeclaration","scope":1707,"src":"4790:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"4790:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1665,"initialValue":{"baseExpression":{"id":1662,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"4811:17:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1664,"indexExpression":{"id":1663,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"4829:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4811:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4790:47:6"},{"assignments":[1669],"declarations":[{"constant":false,"id":1669,"mutability":"mutable","name":"_ownedTokensByOwner","nameLocation":"4890:19:6","nodeType":"VariableDeclaration","scope":1707,"src":"4848:61:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1668,"keyName":"index","keyNameLocation":"4864:5:6","keyType":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"4856:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4848:33:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"4873:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"id":1673,"initialValue":{"baseExpression":{"id":1670,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"4912:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":1672,"indexExpression":{"id":1671,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"4925:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4912:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4848:82:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1674,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"5034:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1675,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"5048:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5034:28:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1696,"nodeType":"IfStatement","src":"5030:325:6","trueBody":{"id":1695,"nodeType":"Block","src":"5064:291:6","statements":[{"assignments":[1678],"declarations":[{"constant":false,"id":1678,"mutability":"mutable","name":"lastTokenId","nameLocation":"5086:11:6","nodeType":"VariableDeclaration","scope":1695,"src":"5078:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1677,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1682,"initialValue":{"baseExpression":{"id":1679,"name":"_ownedTokensByOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"5100:19:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1681,"indexExpression":{"id":1680,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"5120:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5100:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5078:57:6"},{"expression":{"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1683,"name":"_ownedTokensByOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"5150:19:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1685,"indexExpression":{"id":1684,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"5170:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5150:31:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1686,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"5184:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5150:45:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1688,"nodeType":"ExpressionStatement","src":"5150:45:6"},{"expression":{"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1689,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"5267:17:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1691,"indexExpression":{"id":1690,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"5285:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5267:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1692,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"5300:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5267:43:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1694,"nodeType":"ExpressionStatement","src":"5267:43:6"}]}},{"expression":{"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5441:33:6","subExpression":{"baseExpression":{"id":1697,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"5448:17:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1699,"indexExpression":{"id":1698,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"5466:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5448:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1701,"nodeType":"ExpressionStatement","src":"5441:33:6"},{"expression":{"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5484:42:6","subExpression":{"baseExpression":{"id":1702,"name":"_ownedTokensByOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"5491:19:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1704,"indexExpression":{"id":1703,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"5511:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5491:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1706,"nodeType":"ExpressionStatement","src":"5484:42:6"}]},"documentation":{"id":1647,"nodeType":"StructuredDocumentation","src":"3867:606:6","text":" @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"},"id":1708,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromOwnerEnumeration","nameLocation":"4487:32:6","nodeType":"FunctionDefinition","parameters":{"id":1652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"mutability":"mutable","name":"from","nameLocation":"4528:4:6","nodeType":"VariableDeclaration","scope":1708,"src":"4520:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1648,"name":"address","nodeType":"ElementaryTypeName","src":"4520:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1651,"mutability":"mutable","name":"tokenId","nameLocation":"4542:7:6","nodeType":"VariableDeclaration","scope":1708,"src":"4534:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"4534:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4519:31:6"},"returnParameters":{"id":1653,"nodeType":"ParameterList","parameters":[],"src":"4559:0:6"},"scope":1782,"src":"4478:1055:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1755,"nodeType":"Block","src":"5892:990:6","statements":[{"assignments":[1715],"declarations":[{"constant":false,"id":1715,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"6078:14:6","nodeType":"VariableDeclaration","scope":1755,"src":"6070:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"6070:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1720,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1716,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"6095:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6106:6:6","memberName":"length","nodeType":"MemberAccess","src":"6095:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6115:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6095:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6070:46:6"},{"assignments":[1722],"declarations":[{"constant":false,"id":1722,"mutability":"mutable","name":"tokenIndex","nameLocation":"6134:10:6","nodeType":"VariableDeclaration","scope":1755,"src":"6126:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1721,"name":"uint256","nodeType":"ElementaryTypeName","src":"6126:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1726,"initialValue":{"baseExpression":{"id":1723,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"6147:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1725,"indexExpression":{"id":1724,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"6163:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6147:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6126:45:6"},{"assignments":[1728],"declarations":[{"constant":false,"id":1728,"mutability":"mutable","name":"lastTokenId","nameLocation":"6501:11:6","nodeType":"VariableDeclaration","scope":1755,"src":"6493:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"6493:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1732,"initialValue":{"baseExpression":{"id":1729,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"6515:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1731,"indexExpression":{"id":1730,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"6526:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6515:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6493:48:6"},{"expression":{"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1733,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"6552:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1735,"indexExpression":{"id":1734,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"6563:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6552:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1736,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"6577:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6552:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1738,"nodeType":"ExpressionStatement","src":"6552:36:6"},{"expression":{"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1739,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"6656:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1741,"indexExpression":{"id":1740,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"6672:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6656:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1742,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"6687:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6656:41:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1744,"nodeType":"ExpressionStatement","src":"6656:41:6"},{"expression":{"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6818:31:6","subExpression":{"baseExpression":{"id":1745,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"6825:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1747,"indexExpression":{"id":1746,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"6841:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6825:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1749,"nodeType":"ExpressionStatement","src":"6818:31:6"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1750,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"6859:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6870:3:6","memberName":"pop","nodeType":"MemberAccess","src":"6859:14:6","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6859:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1754,"nodeType":"ExpressionStatement","src":"6859:16:6"}]},"documentation":{"id":1709,"nodeType":"StructuredDocumentation","src":"5539:277:6","text":" @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"},"id":1756,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromAllTokensEnumeration","nameLocation":"5830:36:6","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"mutability":"mutable","name":"tokenId","nameLocation":"5875:7:6","nodeType":"VariableDeclaration","scope":1756,"src":"5867:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"5867:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5866:17:6"},"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[],"src":"5892:0:6"},"scope":1782,"src":"5821:1061:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[784],"body":{"id":1780,"nodeType":"Block","src":"7084:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1765,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"7098:6:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7107:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7098:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1772,"nodeType":"IfStatement","src":"7094:84:6","trueBody":{"id":1771,"nodeType":"Block","src":"7110:68:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1768,"name":"ERC721EnumerableForbiddenBatchMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"7131:34:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7131:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1770,"nodeType":"RevertStatement","src":"7124:43:6"}]}},{"expression":{"arguments":[{"id":1776,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"7210:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1777,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"7219:6:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1773,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7187:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$1782_$","typeString":"type(contract super ERC721Enumerable)"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7193:16:6","memberName":"_increaseBalance","nodeType":"MemberAccess","referencedDeclaration":784,"src":"7187:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$","typeString":"function (address,uint128)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7187:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1779,"nodeType":"ExpressionStatement","src":"7187:39:6"}]},"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"6888:106:6","text":" See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch"},"id":1781,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7008:16:6","nodeType":"FunctionDefinition","overrides":{"id":1763,"nodeType":"OverrideSpecifier","overrides":[],"src":"7075:8:6"},"parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"account","nameLocation":"7033:7:6","nodeType":"VariableDeclaration","scope":1781,"src":"7025:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1758,"name":"address","nodeType":"ElementaryTypeName","src":"7025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"amount","nameLocation":"7050:6:6","nodeType":"VariableDeclaration","scope":1781,"src":"7042:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1760,"name":"uint128","nodeType":"ElementaryTypeName","src":"7042:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7024:33:6"},"returnParameters":{"id":1764,"nodeType":"ParameterList","parameters":[],"src":"7084:0:6"},"scope":1782,"src":"6999:234:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1783,"src":"708:6527:6","usedErrors":[215,220,229,234,239,246,251,256,1433,1436],"usedEvents":[1277,1286,1295]}],"src":"128:7108:6"},"id":6},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC721":[1378],"IERC721Enumerable":[1814]},"id":1815,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1784,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"129:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1786,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1815,"sourceUnit":1379,"src":"155:39:7","symbolAliases":[{"foreign":{"id":1785,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"163:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1788,"name":"IERC721","nameLocations":["364:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1378,"src":"364:7:7"},"id":1789,"nodeType":"InheritanceSpecifier","src":"364:7:7"}],"canonicalName":"IERC721Enumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1787,"nodeType":"StructuredDocumentation","src":"196:136:7","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1814,"linearizedBaseContracts":[1814,1378,4209],"name":"IERC721Enumerable","nameLocation":"343:17:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1790,"nodeType":"StructuredDocumentation","src":"378:82:7","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":1795,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"474:11:7","nodeType":"FunctionDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[],"src":"485:2:7"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1795,"src":"511:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1792,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"510:9:7"},"scope":1814,"src":"465:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1796,"nodeType":"StructuredDocumentation","src":"526:171:7","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":1805,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"711:19:7","nodeType":"FunctionDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"owner","nameLocation":"739:5:7","nodeType":"VariableDeclaration","scope":1805,"src":"731:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1797,"name":"address","nodeType":"ElementaryTypeName","src":"731:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"index","nameLocation":"754:5:7","nodeType":"VariableDeclaration","scope":1805,"src":"746:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"746:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"730:30:7"},"returnParameters":{"id":1804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1805,"src":"784:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1802,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:9:7"},"scope":1814,"src":"702:91:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1806,"nodeType":"StructuredDocumentation","src":"799:164:7","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":1813,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"977:12:7","nodeType":"FunctionDefinition","parameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"index","nameLocation":"998:5:7","nodeType":"VariableDeclaration","scope":1813,"src":"990:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"989:15:7"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1813,"src":"1028:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:9:7"},"scope":1814,"src":"968:69:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1815,"src":"333:706:7","usedErrors":[],"usedEvents":[1277,1286,1295]}],"src":"129:911:7"},"id":7},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1378],"IERC721Metadata":[1842]},"id":1843,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1816,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1843,"sourceUnit":1379,"src":"153:39:8","symbolAliases":[{"foreign":{"id":1817,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"161:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1820,"name":"IERC721","nameLocations":["357:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1378,"src":"357:7:8"},"id":1821,"nodeType":"InheritanceSpecifier","src":"357:7:8"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"194:133:8","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1842,"linearizedBaseContracts":[1842,1378,4209],"name":"IERC721Metadata","nameLocation":"338:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1822,"nodeType":"StructuredDocumentation","src":"371:58:8","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1827,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:8","nodeType":"FunctionDefinition","parameters":{"id":1823,"nodeType":"ParameterList","parameters":[],"src":"447:2:8"},"returnParameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1827,"src":"473:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1824,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:8"},"scope":1842,"src":"434:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1828,"nodeType":"StructuredDocumentation","src":"494:60:8","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1833,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:8","nodeType":"FunctionDefinition","parameters":{"id":1829,"nodeType":"ParameterList","parameters":[],"src":"574:2:8"},"returnParameters":{"id":1832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1833,"src":"600:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1830,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:8"},"scope":1842,"src":"559:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1834,"nodeType":"StructuredDocumentation","src":"621:90:8","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1841,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:8","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:8","nodeType":"VariableDeclaration","scope":1841,"src":"734:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:8"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1841,"src":"774:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1838,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:8"},"scope":1842,"src":"716:73:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1843,"src":"328:463:8","usedErrors":[],"usedEvents":[1277,1286,1295]}],"src":"127:665:8"},"id":8},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[1919],"IERC721Errors":[257],"IERC721Receiver":[1396]},"id":1920,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1844,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1846,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1920,"sourceUnit":1397,"src":"144:55:9","symbolAliases":[{"foreign":{"id":1845,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"152:15:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1848,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1920,"sourceUnit":305,"src":"200:69:9","symbolAliases":[{"foreign":{"id":1847,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"208:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1849,"nodeType":"StructuredDocumentation","src":"271:159:9","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":1919,"linearizedBaseContracts":[1919],"name":"ERC721Utils","nameLocation":"439:11:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1917,"nodeType":"Block","src":"1159:760:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1863,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"1173:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:9","memberName":"code","nodeType":"MemberAccess","src":"1173:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:9","memberName":"length","nodeType":"MemberAccess","src":"1173:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1916,"nodeType":"IfStatement","src":"1169:744:9","trueBody":{"id":1915,"nodeType":"Block","src":"1193:720:9","statements":[{"clauses":[{"block":{"id":1893,"nodeType":"Block","src":"1303:214:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1880,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"1325:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1881,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1335:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1396_$","typeString":"type(contract IERC721Receiver)"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:9","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1395,"src":"1335:32:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:9","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1892,"nodeType":"IfStatement","src":"1321:182:9","trueBody":{"id":1891,"nodeType":"Block","src":"1378:125:9","statements":[{"errorCall":{"arguments":[{"id":1888,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"1481:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1885,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1445:13:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$257_$","typeString":"type(contract IERC721Errors)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:9","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":239,"src":"1445:35:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1890,"nodeType":"RevertStatement","src":"1438:46:9"}]}}]},"errorName":"","id":1894,"nodeType":"TryCatchClause","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"retval","nameLocation":"1295:6:9","nodeType":"VariableDeclaration","scope":1894,"src":"1288:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1877,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:9"},"src":"1279:238:9"},{"block":{"id":1912,"nodeType":"Block","src":"1546:357:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1898,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"1568:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:9","memberName":"length","nodeType":"MemberAccess","src":"1568:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1910,"nodeType":"Block","src":"1736:153:9","statements":[{"AST":{"nodeType":"YulBlock","src":"1783:88:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1820:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"1828:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1816:3:9"},"nodeType":"YulFunctionCall","src":"1816:17:9"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1841:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1835:5:9"},"nodeType":"YulFunctionCall","src":"1835:13:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1809:6:9"},"nodeType":"YulFunctionCall","src":"1809:40:9"},"nodeType":"YulExpressionStatement","src":"1809:40:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1896,"isOffset":false,"isSlot":false,"src":"1820:6:9","valueSize":1},{"declaration":1896,"isOffset":false,"isSlot":false,"src":"1841:6:9","valueSize":1}],"flags":["memory-safe"],"id":1909,"nodeType":"InlineAssembly","src":"1758:113:9"}]},"id":1911,"nodeType":"IfStatement","src":"1564:325:9","trueBody":{"id":1908,"nodeType":"Block","src":"1588:142:9","statements":[{"errorCall":{"arguments":[{"id":1905,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"1708:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1902,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1672:13:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$257_$","typeString":"type(contract IERC721Errors)"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:9","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":239,"src":"1672:35:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1907,"nodeType":"RevertStatement","src":"1665:46:9"}]}}]},"errorName":"","id":1913,"nodeType":"TryCatchClause","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"reason","nameLocation":"1538:6:9","nodeType":"VariableDeclaration","scope":1913,"src":"1525:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1895,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:9"},"src":"1518:385:9"}],"externalCall":{"arguments":[{"id":1872,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"1248:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1873,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"1258:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1874,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"1264:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1875,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"1273:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1869,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"1227:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1868,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1211:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1396_$","typeString":"type(contract IERC721Receiver)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1396","typeString":"contract IERC721Receiver"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:9","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1395,"src":"1211:36:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1914,"nodeType":"TryStatement","src":"1207:696:9"}]}}]},"documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"457:531:9","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":1918,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:9","nodeType":"FunctionDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1852,"mutability":"mutable","name":"operator","nameLocation":"1041:8:9","nodeType":"VariableDeclaration","scope":1918,"src":"1033:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"from","nameLocation":"1067:4:9","nodeType":"VariableDeclaration","scope":1918,"src":"1059:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1853,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"to","nameLocation":"1089:2:9","nodeType":"VariableDeclaration","scope":1918,"src":"1081:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1855,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:9","nodeType":"VariableDeclaration","scope":1918,"src":"1101:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"data","nameLocation":"1139:4:9","nodeType":"VariableDeclaration","scope":1918,"src":"1126:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1859,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:9"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[],"src":"1159:0:9"},"scope":1919,"src":"993:926:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1920,"src":"431:1490:9","usedErrors":[],"usedEvents":[]}],"src":"118:1804:9"},"id":9},"@openzeppelin/contracts/token/common/ERC2981.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/common/ERC2981.sol","exportedSymbols":{"ERC165":[4197],"ERC2981":[2186],"IERC165":[4209],"IERC2981":[167]},"id":2187,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1921,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:10"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","file":"../../interfaces/IERC2981.sol","id":1923,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2187,"sourceUnit":168,"src":"134:55:10","symbolAliases":[{"foreign":{"id":1922,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"142:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1926,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2187,"sourceUnit":4198,"src":"190:69:10","symbolAliases":[{"foreign":{"id":1924,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"198:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1925,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"207:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1928,"name":"IERC2981","nameLocations":["1135:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":167,"src":"1135:8:10"},"id":1929,"nodeType":"InheritanceSpecifier","src":"1135:8:10"},{"baseName":{"id":1930,"name":"ERC165","nameLocations":["1145:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":4197,"src":"1145:6:10"},"id":1931,"nodeType":"InheritanceSpecifier","src":"1145:6:10"}],"canonicalName":"ERC2981","contractDependencies":[],"contractKind":"contract","documentation":{"id":1927,"nodeType":"StructuredDocumentation","src":"261:844:10","text":" @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n fee is specified in basis points by default.\n IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n voluntarily pay royalties together with sales, but note that this standard is not yet widely supported."},"fullyImplemented":true,"id":2186,"linearizedBaseContracts":[2186,4197,167,4209],"name":"ERC2981","nameLocation":"1124:7:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC2981.RoyaltyInfo","id":1936,"members":[{"constant":false,"id":1933,"mutability":"mutable","name":"receiver","nameLocation":"1195:8:10","nodeType":"VariableDeclaration","scope":1936,"src":"1187:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1932,"name":"address","nodeType":"ElementaryTypeName","src":"1187:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1935,"mutability":"mutable","name":"royaltyFraction","nameLocation":"1220:15:10","nodeType":"VariableDeclaration","scope":1936,"src":"1213:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1934,"name":"uint96","nodeType":"ElementaryTypeName","src":"1213:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"RoyaltyInfo","nameLocation":"1165:11:10","nodeType":"StructDefinition","scope":2186,"src":"1158:84:10","visibility":"public"},{"constant":false,"id":1939,"mutability":"mutable","name":"_defaultRoyaltyInfo","nameLocation":"1268:19:10","nodeType":"VariableDeclaration","scope":2186,"src":"1248:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_storage","typeString":"struct ERC2981.RoyaltyInfo"},"typeName":{"id":1938,"nodeType":"UserDefinedTypeName","pathNode":{"id":1937,"name":"RoyaltyInfo","nameLocations":["1248:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1936,"src":"1248:11:10"},"referencedDeclaration":1936,"src":"1248:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}},"visibility":"private"},{"constant":false,"id":1944,"mutability":"mutable","name":"_tokenRoyaltyInfo","nameLocation":"1341:17:10","nodeType":"VariableDeclaration","scope":2186,"src":"1293:65:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1936_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo)"},"typeName":{"id":1943,"keyName":"tokenId","keyNameLocation":"1309:7:10","keyType":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1293:39:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1936_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1942,"nodeType":"UserDefinedTypeName","pathNode":{"id":1941,"name":"RoyaltyInfo","nameLocations":["1320:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1936,"src":"1320:11:10"},"referencedDeclaration":1936,"src":"1320:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}}},"visibility":"private"},{"documentation":{"id":1945,"nodeType":"StructuredDocumentation","src":"1365:96:10","text":" @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1)."},"errorSelector":"6f483d09","id":1951,"name":"ERC2981InvalidDefaultRoyalty","nameLocation":"1472:28:10","nodeType":"ErrorDefinition","parameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"numerator","nameLocation":"1509:9:10","nodeType":"VariableDeclaration","scope":1951,"src":"1501:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"1501:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"denominator","nameLocation":"1528:11:10","nodeType":"VariableDeclaration","scope":1951,"src":"1520:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1500:40:10"},"src":"1466:75:10"},{"documentation":{"id":1952,"nodeType":"StructuredDocumentation","src":"1547:64:10","text":" @dev The default royalty receiver is invalid."},"errorSelector":"b6d9900a","id":1956,"name":"ERC2981InvalidDefaultRoyaltyReceiver","nameLocation":"1622:36:10","nodeType":"ErrorDefinition","parameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"mutability":"mutable","name":"receiver","nameLocation":"1667:8:10","nodeType":"VariableDeclaration","scope":1956,"src":"1659:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1953,"name":"address","nodeType":"ElementaryTypeName","src":"1659:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1658:18:10"},"src":"1616:61:10"},{"documentation":{"id":1957,"nodeType":"StructuredDocumentation","src":"1683:113:10","text":" @dev The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1)."},"errorSelector":"dfd1fc1b","id":1965,"name":"ERC2981InvalidTokenRoyalty","nameLocation":"1807:26:10","nodeType":"ErrorDefinition","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"tokenId","nameLocation":"1842:7:10","nodeType":"VariableDeclaration","scope":1965,"src":"1834:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1958,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1961,"mutability":"mutable","name":"numerator","nameLocation":"1859:9:10","nodeType":"VariableDeclaration","scope":1965,"src":"1851:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"1851:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"denominator","nameLocation":"1878:11:10","nodeType":"VariableDeclaration","scope":1965,"src":"1870:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1962,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:57:10"},"src":"1801:90:10"},{"documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"1897:70:10","text":" @dev The royalty receiver for `tokenId` is invalid."},"errorSelector":"969f0852","id":1972,"name":"ERC2981InvalidTokenRoyaltyReceiver","nameLocation":"1978:34:10","nodeType":"ErrorDefinition","parameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1968,"mutability":"mutable","name":"tokenId","nameLocation":"2021:7:10","nodeType":"VariableDeclaration","scope":1972,"src":"2013:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"receiver","nameLocation":"2038:8:10","nodeType":"VariableDeclaration","scope":1972,"src":"2030:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1969,"name":"address","nodeType":"ElementaryTypeName","src":"2030:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2012:35:10"},"src":"1972:76:10"},{"baseFunctions":[4196,4208],"body":{"id":1995,"nodeType":"Block","src":"2190:105:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1983,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"2207:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1985,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2227:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC2981_$167_$","typeString":"type(contract IERC2981)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC2981_$167_$","typeString":"type(contract IERC2981)"}],"id":1984,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2222:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2222:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC2981_$167","typeString":"type(contract IERC2981)"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2237:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"2222:26:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2207:41:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1991,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"2276:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1989,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2252:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2981_$2186_$","typeString":"type(contract super ERC2981)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2258:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4196,"src":"2252:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2252:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2207:81:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1982,"id":1994,"nodeType":"Return","src":"2200:88:10"}]},"documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"2054:23:10","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1996,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2091:17:10","nodeType":"FunctionDefinition","overrides":{"id":1979,"nodeType":"OverrideSpecifier","overrides":[{"id":1977,"name":"IERC165","nameLocations":["2158:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":4209,"src":"2158:7:10"},{"id":1978,"name":"ERC165","nameLocations":["2167:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":4197,"src":"2167:6:10"}],"src":"2149:25:10"},"parameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"interfaceId","nameLocation":"2116:11:10","nodeType":"VariableDeclaration","scope":1996,"src":"2109:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1974,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2109:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2108:20:10"},"returnParameters":{"id":1982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1996,"src":"2184:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1980,"name":"bool","nodeType":"ElementaryTypeName","src":"2184:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2183:6:10"},"scope":2186,"src":"2082:213:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[166],"body":{"id":2057,"nodeType":"Block","src":"2472:515:10","statements":[{"assignments":[2010],"declarations":[{"constant":false,"id":2010,"mutability":"mutable","name":"_royaltyInfo","nameLocation":"2502:12:10","nodeType":"VariableDeclaration","scope":2057,"src":"2482:32:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"},"typeName":{"id":2009,"nodeType":"UserDefinedTypeName","pathNode":{"id":2008,"name":"RoyaltyInfo","nameLocations":["2482:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1936,"src":"2482:11:10"},"referencedDeclaration":1936,"src":"2482:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}},"visibility":"internal"}],"id":2014,"initialValue":{"baseExpression":{"id":2011,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"2517:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1936_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":2013,"indexExpression":{"id":2012,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"2535:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2517:26:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2482:61:10"},{"assignments":[2016],"declarations":[{"constant":false,"id":2016,"mutability":"mutable","name":"royaltyReceiver","nameLocation":"2561:15:10","nodeType":"VariableDeclaration","scope":2057,"src":"2553:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2015,"name":"address","nodeType":"ElementaryTypeName","src":"2553:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2019,"initialValue":{"expression":{"id":2017,"name":"_royaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"2579:12:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo storage pointer"}},"id":2018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2592:8:10","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"2579:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2553:47:10"},{"assignments":[2021],"declarations":[{"constant":false,"id":2021,"mutability":"mutable","name":"royaltyFraction","nameLocation":"2617:15:10","nodeType":"VariableDeclaration","scope":2057,"src":"2610:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2020,"name":"uint96","nodeType":"ElementaryTypeName","src":"2610:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":2024,"initialValue":{"expression":{"id":2022,"name":"_royaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"2635:12:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo storage pointer"}},"id":2023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2648:15:10","memberName":"royaltyFraction","nodeType":"MemberAccess","referencedDeclaration":1935,"src":"2635:28:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"2610:53:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2025,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"2678:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2705:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2697:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2026,"name":"address","nodeType":"ElementaryTypeName","src":"2697:7:10","typeDescriptions":{}}},"id":2029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2697:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2678:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2042,"nodeType":"IfStatement","src":"2674:173:10","trueBody":{"id":2041,"nodeType":"Block","src":"2709:138:10","statements":[{"expression":{"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2031,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"2723:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2032,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"2741:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":2033,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:10","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"2741:28:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2723:46:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2035,"nodeType":"ExpressionStatement","src":"2723:46:10"},{"expression":{"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2036,"name":"royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"2783:15:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2037,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"2801:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":2038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2821:15:10","memberName":"royaltyFraction","nodeType":"MemberAccess","referencedDeclaration":1935,"src":"2801:35:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2783:53:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":2040,"nodeType":"ExpressionStatement","src":"2783:53:10"}]}},{"assignments":[2044],"declarations":[{"constant":false,"id":2044,"mutability":"mutable","name":"royaltyAmount","nameLocation":"2865:13:10","nodeType":"VariableDeclaration","scope":2057,"src":"2857:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"2857:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2052,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2045,"name":"salePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"2882:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2046,"name":"royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"2894:15:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2882:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2048,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2881:29:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2049,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"2913:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2913:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2881:49:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2857:73:10"},{"expression":{"components":[{"id":2053,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"2949:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2054,"name":"royaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"2966:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2055,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2948:32:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":2007,"id":2056,"nodeType":"Return","src":"2941:39:10"}]},"documentation":{"id":1997,"nodeType":"StructuredDocumentation","src":"2301:24:10","text":"@inheritdoc IERC2981"},"functionSelector":"2a55205a","id":2058,"implemented":true,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"2339:11:10","nodeType":"FunctionDefinition","parameters":{"id":2002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"tokenId","nameLocation":"2368:7:10","nodeType":"VariableDeclaration","scope":2058,"src":"2360:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1998,"name":"uint256","nodeType":"ElementaryTypeName","src":"2360:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2001,"mutability":"mutable","name":"salePrice","nameLocation":"2393:9:10","nodeType":"VariableDeclaration","scope":2058,"src":"2385:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2000,"name":"uint256","nodeType":"ElementaryTypeName","src":"2385:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2350:58:10"},"returnParameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"receiver","nameLocation":"2446:8:10","nodeType":"VariableDeclaration","scope":2058,"src":"2438:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2003,"name":"address","nodeType":"ElementaryTypeName","src":"2438:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2006,"mutability":"mutable","name":"amount","nameLocation":"2464:6:10","nodeType":"VariableDeclaration","scope":2058,"src":"2456:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2005,"name":"uint256","nodeType":"ElementaryTypeName","src":"2456:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2437:34:10"},"scope":2186,"src":"2330:657:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2066,"nodeType":"Block","src":"3328:29:10","statements":[{"expression":{"hexValue":"3130303030","id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3345:5:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"functionReturnParameters":2063,"id":2065,"nodeType":"Return","src":"3338:12:10"}]},"documentation":{"id":2059,"nodeType":"StructuredDocumentation","src":"2993:264:10","text":" @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n override."},"id":2067,"implemented":true,"kind":"function","modifiers":[],"name":"_feeDenominator","nameLocation":"3271:15:10","nodeType":"FunctionDefinition","parameters":{"id":2060,"nodeType":"ParameterList","parameters":[],"src":"3286:2:10"},"returnParameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2067,"src":"3320:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2061,"name":"uint96","nodeType":"ElementaryTypeName","src":"3320:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3319:8:10"},"scope":2186,"src":"3262:95:10","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":2112,"nodeType":"Block","src":"3702:423:10","statements":[{"assignments":[2076],"declarations":[{"constant":false,"id":2076,"mutability":"mutable","name":"denominator","nameLocation":"3720:11:10","nodeType":"VariableDeclaration","scope":2112,"src":"3712:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"3712:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2079,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2077,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"3734:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3734:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"3712:39:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2080,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"3765:12:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2081,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"3780:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3765:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2089,"nodeType":"IfStatement","src":"3761:173:10","trueBody":{"id":2088,"nodeType":"Block","src":"3793:141:10","statements":[{"errorCall":{"arguments":[{"id":2084,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"3897:12:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2085,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"3911:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2083,"name":"ERC2981InvalidDefaultRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"3868:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3868:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2087,"nodeType":"RevertStatement","src":"3861:62:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2090,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"3947:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3967:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3959:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2091,"name":"address","nodeType":"ElementaryTypeName","src":"3959:7:10","typeDescriptions":{}}},"id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3959:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3947:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2104,"nodeType":"IfStatement","src":"3943:108:10","trueBody":{"id":2103,"nodeType":"Block","src":"3971:80:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4037:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4029:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2097,"name":"address","nodeType":"ElementaryTypeName","src":"4029:7:10","typeDescriptions":{}}},"id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2096,"name":"ERC2981InvalidDefaultRoyaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"3992:36:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3992:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2102,"nodeType":"RevertStatement","src":"3985:55:10"}]}},{"expression":{"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2105,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"4061:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2107,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"4095:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2108,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"4105:12:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2106,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"4083:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$1936_storage_ptr_$","typeString":"type(struct ERC2981.RoyaltyInfo storage pointer)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4083:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"src":"4061:57:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":2111,"nodeType":"ExpressionStatement","src":"4061:57:10"}]},"documentation":{"id":2068,"nodeType":"StructuredDocumentation","src":"3363:250:10","text":" @dev Sets the royalty information that all ids in this contract will default to.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":2113,"implemented":true,"kind":"function","modifiers":[],"name":"_setDefaultRoyalty","nameLocation":"3627:18:10","nodeType":"FunctionDefinition","parameters":{"id":2073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"receiver","nameLocation":"3654:8:10","nodeType":"VariableDeclaration","scope":2113,"src":"3646:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2069,"name":"address","nodeType":"ElementaryTypeName","src":"3646:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2072,"mutability":"mutable","name":"feeNumerator","nameLocation":"3671:12:10","nodeType":"VariableDeclaration","scope":2113,"src":"3664:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2071,"name":"uint96","nodeType":"ElementaryTypeName","src":"3664:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3645:39:10"},"returnParameters":{"id":2074,"nodeType":"ParameterList","parameters":[],"src":"3702:0:10"},"scope":2186,"src":"3618:507:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2120,"nodeType":"Block","src":"4246:43:10","statements":[{"expression":{"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4256:26:10","subExpression":{"id":2117,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"4263:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2119,"nodeType":"ExpressionStatement","src":"4256:26:10"}]},"documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"4131:60:10","text":" @dev Removes default royalty information."},"id":2121,"implemented":true,"kind":"function","modifiers":[],"name":"_deleteDefaultRoyalty","nameLocation":"4205:21:10","nodeType":"FunctionDefinition","parameters":{"id":2115,"nodeType":"ParameterList","parameters":[],"src":"4226:2:10"},"returnParameters":{"id":2116,"nodeType":"ParameterList","parameters":[],"src":"4246:0:10"},"scope":2186,"src":"4196:93:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2172,"nodeType":"Block","src":"4658:444:10","statements":[{"assignments":[2132],"declarations":[{"constant":false,"id":2132,"mutability":"mutable","name":"denominator","nameLocation":"4676:11:10","nodeType":"VariableDeclaration","scope":2172,"src":"4668:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"4668:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2135,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2133,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"4690:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4690:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4668:39:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2136,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"4721:12:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2137,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"4736:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4721:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2146,"nodeType":"IfStatement","src":"4717:180:10","trueBody":{"id":2145,"nodeType":"Block","src":"4749:148:10","statements":[{"errorCall":{"arguments":[{"id":2140,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"4851:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2141,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"4860:12:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2142,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"4874:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2139,"name":"ERC2981InvalidTokenRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"4824:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4824:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2144,"nodeType":"RevertStatement","src":"4817:69:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2147,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"4910:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4930:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4922:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"4922:7:10","typeDescriptions":{}}},"id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4922:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4910:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2162,"nodeType":"IfStatement","src":"4906:115:10","trueBody":{"id":2161,"nodeType":"Block","src":"4934:87:10","statements":[{"errorCall":{"arguments":[{"id":2154,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"4990:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5007:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4999:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2155,"name":"address","nodeType":"ElementaryTypeName","src":"4999:7:10","typeDescriptions":{}}},"id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4999:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2153,"name":"ERC2981InvalidTokenRoyaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"4955:34:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) pure"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4955:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2160,"nodeType":"RevertStatement","src":"4948:62:10"}]}},{"expression":{"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2163,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"5031:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1936_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":2165,"indexExpression":{"id":2164,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"5049:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5031:26:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2167,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"5072:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2168,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"5082:12:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2166,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"5060:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$1936_storage_ptr_$","typeString":"type(struct ERC2981.RoyaltyInfo storage pointer)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5060:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"src":"5031:64:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":2171,"nodeType":"ExpressionStatement","src":"5031:64:10"}]},"documentation":{"id":2122,"nodeType":"StructuredDocumentation","src":"4295:259:10","text":" @dev Sets the royalty information for a specific token id, overriding the global default.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":2173,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenRoyalty","nameLocation":"4568:16:10","nodeType":"FunctionDefinition","parameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"tokenId","nameLocation":"4593:7:10","nodeType":"VariableDeclaration","scope":2173,"src":"4585:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"4585:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"receiver","nameLocation":"4610:8:10","nodeType":"VariableDeclaration","scope":2173,"src":"4602:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2125,"name":"address","nodeType":"ElementaryTypeName","src":"4602:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"feeNumerator","nameLocation":"4627:12:10","nodeType":"VariableDeclaration","scope":2173,"src":"4620:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2127,"name":"uint96","nodeType":"ElementaryTypeName","src":"4620:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"4584:56:10"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[],"src":"4658:0:10"},"scope":2186,"src":"4559:543:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2184,"nodeType":"Block","src":"5270:50:10","statements":[{"expression":{"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5280:33:10","subExpression":{"baseExpression":{"id":2179,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"5287:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1936_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":2181,"indexExpression":{"id":2180,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"5305:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5287:26:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1936_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2183,"nodeType":"ExpressionStatement","src":"5280:33:10"}]},"documentation":{"id":2174,"nodeType":"StructuredDocumentation","src":"5108:95:10","text":" @dev Resets royalty information for the token id back to the global default."},"id":2185,"implemented":true,"kind":"function","modifiers":[],"name":"_resetTokenRoyalty","nameLocation":"5217:18:10","nodeType":"FunctionDefinition","parameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"tokenId","nameLocation":"5244:7:10","nodeType":"VariableDeclaration","scope":2185,"src":"5236:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2175,"name":"uint256","nodeType":"ElementaryTypeName","src":"5236:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5235:17:10"},"returnParameters":{"id":2178,"nodeType":"ParameterList","parameters":[],"src":"5270:0:10"},"scope":2186,"src":"5208:112:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2187,"src":"1106:4216:10","usedErrors":[1951,1956,1965,1972],"usedEvents":[]}],"src":"108:5215:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2216]},"id":2217,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2188,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2189,"nodeType":"StructuredDocumentation","src":"127:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2216,"linearizedBaseContracts":[2216],"name":"Context","nameLocation":"642:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2197,"nodeType":"Block","src":"718:34:11","statements":[{"expression":{"expression":{"id":2194,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:11","memberName":"sender","nodeType":"MemberAccess","src":"735:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2193,"id":2196,"nodeType":"Return","src":"728:17:11"}]},"id":2198,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:11","nodeType":"FunctionDefinition","parameters":{"id":2190,"nodeType":"ParameterList","parameters":[],"src":"675:2:11"},"returnParameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2198,"src":"709:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2191,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:11"},"scope":2216,"src":"656:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2206,"nodeType":"Block","src":"825:32:11","statements":[{"expression":{"expression":{"id":2203,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:11","memberName":"data","nodeType":"MemberAccess","src":"842:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2202,"id":2205,"nodeType":"Return","src":"835:15:11"}]},"id":2207,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:11","nodeType":"FunctionDefinition","parameters":{"id":2199,"nodeType":"ParameterList","parameters":[],"src":"775:2:11"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2207,"src":"809:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2200,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:11"},"scope":2216,"src":"758:99:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2214,"nodeType":"Block","src":"935:25:11","statements":[{"expression":{"hexValue":"30","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2211,"id":2213,"nodeType":"Return","src":"945:8:11"}]},"id":2215,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:11","nodeType":"FunctionDefinition","parameters":{"id":2208,"nodeType":"ParameterList","parameters":[],"src":"892:2:11"},"returnParameters":{"id":2211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2215,"src":"926:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:11"},"scope":2216,"src":"863:97:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2217,"src":"624:338:11","usedErrors":[],"usedEvents":[]}],"src":"101:862:11"},"id":11},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2268]},"id":2269,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2218,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2219,"nodeType":"StructuredDocumentation","src":"125:489:12","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2268,"linearizedBaseContracts":[2268],"name":"Panic","nameLocation":"665:5:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2220,"nodeType":"StructuredDocumentation","src":"677:36:12","text":"@dev generic / unspecified error"},"id":2223,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:12","nodeType":"VariableDeclaration","scope":2268,"src":"718:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2224,"nodeType":"StructuredDocumentation","src":"764:37:12","text":"@dev used by the assert() builtin"},"id":2227,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:12","nodeType":"VariableDeclaration","scope":2268,"src":"806:39:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2225,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2228,"nodeType":"StructuredDocumentation","src":"851:41:12","text":"@dev arithmetic underflow or overflow"},"id":2231,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:12","nodeType":"VariableDeclaration","scope":2268,"src":"897:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:12","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2232,"nodeType":"StructuredDocumentation","src":"950:35:12","text":"@dev division or modulo by zero"},"id":2235,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:12","nodeType":"VariableDeclaration","scope":2268,"src":"990:49:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:12","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2236,"nodeType":"StructuredDocumentation","src":"1045:30:12","text":"@dev enum conversion error"},"id":2239,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:12","nodeType":"VariableDeclaration","scope":2268,"src":"1080:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:12","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2240,"nodeType":"StructuredDocumentation","src":"1140:36:12","text":"@dev invalid encoding in storage"},"id":2243,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:12","nodeType":"VariableDeclaration","scope":2268,"src":"1181:55:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:12","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2244,"nodeType":"StructuredDocumentation","src":"1242:24:12","text":"@dev empty array pop"},"id":2247,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:12","nodeType":"VariableDeclaration","scope":2268,"src":"1271:48:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:12","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2248,"nodeType":"StructuredDocumentation","src":"1325:35:12","text":"@dev array out of bounds access"},"id":2251,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:12","nodeType":"VariableDeclaration","scope":2268,"src":"1365:52:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:12","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"1423:65:12","text":"@dev resource error (too large allocation or too large array)"},"id":2255,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:12","nodeType":"VariableDeclaration","scope":2268,"src":"1493:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:12","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2256,"nodeType":"StructuredDocumentation","src":"1546:42:12","text":"@dev calling invalid internal function"},"id":2259,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:12","nodeType":"VariableDeclaration","scope":2268,"src":"1593:58:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:12","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2266,"nodeType":"Block","src":"1819:151:12","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:12","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:12"},"nodeType":"YulFunctionCall","src":"1868:24:12"},"nodeType":"YulExpressionStatement","src":"1868:24:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:12","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:12"},"nodeType":"YulFunctionCall","src":"1905:18:12"},"nodeType":"YulExpressionStatement","src":"1905:18:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:12","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:12"},"nodeType":"YulFunctionCall","src":"1936:18:12"},"nodeType":"YulExpressionStatement","src":"1936:18:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":2262,"isOffset":false,"isSlot":false,"src":"1918:4:12","valueSize":1}],"flags":["memory-safe"],"id":2265,"nodeType":"InlineAssembly","src":"1829:135:12"}]},"documentation":{"id":2260,"nodeType":"StructuredDocumentation","src":"1658:113:12","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2267,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:12","nodeType":"FunctionDefinition","parameters":{"id":2263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2262,"mutability":"mutable","name":"code","nameLocation":"1799:4:12","nodeType":"VariableDeclaration","scope":2267,"src":"1791:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:12"},"returnParameters":{"id":2264,"nodeType":"ParameterList","parameters":[],"src":"1819:0:12"},"scope":2268,"src":"1776:194:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2269,"src":"657:1315:12","usedErrors":[],"usedEvents":[]}],"src":"99:1874:12"},"id":12},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2337]},"id":2338,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2270,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2271,"nodeType":"StructuredDocumentation","src":"135:894:13","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2337,"linearizedBaseContracts":[2337],"name":"ReentrancyGuard","nameLocation":"1048:15:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2274,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:13","nodeType":"VariableDeclaration","scope":2337,"src":"1818:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2277,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:13","nodeType":"VariableDeclaration","scope":2337,"src":"1864:36:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2279,"mutability":"mutable","name":"_status","nameLocation":"1923:7:13","nodeType":"VariableDeclaration","scope":2337,"src":"1907:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":2280,"nodeType":"StructuredDocumentation","src":"1937:52:13","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2282,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:13","nodeType":"ErrorDefinition","parameters":{"id":2281,"nodeType":"ParameterList","parameters":[],"src":"2028:2:13"},"src":"1994:37:13"},{"body":{"id":2289,"nodeType":"Block","src":"2051:38:13","statements":[{"expression":{"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2285,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"2061:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2286,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"2071:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2288,"nodeType":"ExpressionStatement","src":"2061:21:13"}]},"id":2290,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2283,"nodeType":"ParameterList","parameters":[],"src":"2048:2:13"},"returnParameters":{"id":2284,"nodeType":"ParameterList","parameters":[],"src":"2051:0:13"},"scope":2337,"src":"2037:52:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2300,"nodeType":"Block","src":"2490:79:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2293,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"2500:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2295,"nodeType":"ExpressionStatement","src":"2500:21:13"},{"id":2296,"nodeType":"PlaceholderStatement","src":"2531:1:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2297,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"2542:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2299,"nodeType":"ExpressionStatement","src":"2542:20:13"}]},"documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"2095:366:13","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2301,"name":"nonReentrant","nameLocation":"2475:12:13","nodeType":"ModifierDefinition","parameters":{"id":2292,"nodeType":"ParameterList","parameters":[],"src":"2487:2:13"},"src":"2466:103:13","virtual":false,"visibility":"internal"},{"body":{"id":2316,"nodeType":"Block","src":"2614:268:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2304,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"2702:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2305,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"2713:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2311,"nodeType":"IfStatement","src":"2698:86:13","trueBody":{"id":2310,"nodeType":"Block","src":"2722:62:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2307,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2743:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2309,"nodeType":"RevertStatement","src":"2736:37:13"}]}},{"expression":{"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2312,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"2858:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2313,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"2868:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2315,"nodeType":"ExpressionStatement","src":"2858:17:13"}]},"id":2317,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:13","nodeType":"FunctionDefinition","parameters":{"id":2302,"nodeType":"ParameterList","parameters":[],"src":"2603:2:13"},"returnParameters":{"id":2303,"nodeType":"ParameterList","parameters":[],"src":"2614:0:13"},"scope":2337,"src":"2575:307:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2324,"nodeType":"Block","src":"2926:170:13","statements":[{"expression":{"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2320,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"3068:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2321,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"3078:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2323,"nodeType":"ExpressionStatement","src":"3068:21:13"}]},"id":2325,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:13","nodeType":"FunctionDefinition","parameters":{"id":2318,"nodeType":"ParameterList","parameters":[],"src":"2915:2:13"},"returnParameters":{"id":2319,"nodeType":"ParameterList","parameters":[],"src":"2926:0:13"},"scope":2337,"src":"2888:208:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2335,"nodeType":"Block","src":"3339:42:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2331,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"3356:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2332,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"3367:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2330,"id":2334,"nodeType":"Return","src":"3349:25:13"}]},"documentation":{"id":2326,"nodeType":"StructuredDocumentation","src":"3102:168:13","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2336,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:13","nodeType":"FunctionDefinition","parameters":{"id":2327,"nodeType":"ParameterList","parameters":[],"src":"3307:2:13"},"returnParameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2336,"src":"3333:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2328,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:13"},"scope":2337,"src":"3275:106:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2338,"src":"1030:2353:13","usedErrors":[2282],"usedEvents":[]}],"src":"109:3275:13"},"id":13},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5830],"SafeCast":[7595],"SignedMath":[7739],"Strings":[3739]},"id":3740,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2339,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2341,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3740,"sourceUnit":5831,"src":"127:37:14","symbolAliases":[{"foreign":{"id":2340,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"135:4:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2343,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3740,"sourceUnit":7596,"src":"165:45:14","symbolAliases":[{"foreign":{"id":2342,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"173:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2345,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3740,"sourceUnit":7740,"src":"211:49:14","symbolAliases":[{"foreign":{"id":2344,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7739,"src":"219:10:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2346,"nodeType":"StructuredDocumentation","src":"262:34:14","text":" @dev String operations."},"fullyImplemented":true,"id":3739,"linearizedBaseContracts":[3739],"name":"Strings","nameLocation":"305:7:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2348,"libraryName":{"id":2347,"name":"SafeCast","nameLocations":["325:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":7595,"src":"325:8:14"},"nodeType":"UsingForDirective","src":"319:21:14"},{"constant":true,"id":2351,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:14","nodeType":"VariableDeclaration","scope":3739,"src":"346:56:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2349,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2354,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:14","nodeType":"VariableDeclaration","scope":3739,"src":"408:42:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2352,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:14","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2390,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:14","nodeType":"VariableDeclaration","scope":3739,"src":"456:302:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2355,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:14","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:14","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2363,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:14","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:14","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:14","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:14","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:14","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:14","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:14","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:14","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:14","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:14","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:14","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2378,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:14","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:14","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:14","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2383,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:14","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:14","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:14","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:14","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:14","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:14","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2391,"nodeType":"StructuredDocumentation","src":"778:81:14","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2397,"name":"StringsInsufficientHexLength","nameLocation":"870:28:14","nodeType":"ErrorDefinition","parameters":{"id":2396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"value","nameLocation":"907:5:14","nodeType":"VariableDeclaration","scope":2397,"src":"899:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2395,"mutability":"mutable","name":"length","nameLocation":"922:6:14","nodeType":"VariableDeclaration","scope":2397,"src":"914:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:14"},"src":"864:66:14"},{"documentation":{"id":2398,"nodeType":"StructuredDocumentation","src":"936:108:14","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2400,"name":"StringsInvalidChar","nameLocation":"1055:18:14","nodeType":"ErrorDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[],"src":"1073:2:14"},"src":"1049:27:14"},{"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"1082:84:14","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2403,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:14","nodeType":"ErrorDefinition","parameters":{"id":2402,"nodeType":"ParameterList","parameters":[],"src":"1204:2:14"},"src":"1171:36:14"},{"body":{"id":2450,"nodeType":"Block","src":"1379:563:14","statements":[{"id":2449,"nodeType":"UncheckedBlock","src":"1389:547:14","statements":[{"assignments":[2412],"declarations":[{"constant":false,"id":2412,"mutability":"mutable","name":"length","nameLocation":"1421:6:14","nodeType":"VariableDeclaration","scope":2449,"src":"1413:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2411,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2419,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"1441:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2413,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"1430:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5830_$","typeString":"type(library Math)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:14","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5662,"src":"1430:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:14"},{"assignments":[2421],"declarations":[{"constant":false,"id":2421,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:14","nodeType":"VariableDeclaration","scope":2449,"src":"1465:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2420,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2426,"initialValue":{"arguments":[{"id":2424,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1499:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2422,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:14"},{"assignments":[2428],"declarations":[{"constant":false,"id":2428,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:14","nodeType":"VariableDeclaration","scope":2449,"src":"1520:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2429,"nodeType":"VariableDeclarationStatement","src":"1520:11:14"},{"AST":{"nodeType":"YulBlock","src":"1570:69:14","statements":[{"nodeType":"YulAssignment","src":"1588:37:14","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1603:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1611:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:14"},"nodeType":"YulFunctionCall","src":"1599:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"1618:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:14"},"nodeType":"YulFunctionCall","src":"1595:30:14"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2421,"isOffset":false,"isSlot":false,"src":"1603:6:14","valueSize":1},{"declaration":2412,"isOffset":false,"isSlot":false,"src":"1618:6:14","valueSize":1},{"declaration":2428,"isOffset":false,"isSlot":false,"src":"1588:3:14","valueSize":1}],"flags":["memory-safe"],"id":2430,"nodeType":"InlineAssembly","src":"1545:94:14"},{"body":{"id":2445,"nodeType":"Block","src":"1665:234:14","statements":[{"expression":{"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:14","subExpression":{"id":2432,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"1683:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2434,"nodeType":"ExpressionStatement","src":"1683:5:14"},{"AST":{"nodeType":"YulBlock","src":"1731:86:14","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1761:3:14"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1775:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1782:2:14","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1771:3:14"},"nodeType":"YulFunctionCall","src":"1771:14:14"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1787:10:14"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1766:4:14"},"nodeType":"YulFunctionCall","src":"1766:32:14"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1753:7:14"},"nodeType":"YulFunctionCall","src":"1753:46:14"},"nodeType":"YulExpressionStatement","src":"1753:46:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":2351,"isOffset":false,"isSlot":false,"src":"1787:10:14","valueSize":1},{"declaration":2428,"isOffset":false,"isSlot":false,"src":"1761:3:14","valueSize":1},{"declaration":2406,"isOffset":false,"isSlot":false,"src":"1775:5:14","valueSize":1}],"flags":["memory-safe"],"id":2435,"nodeType":"InlineAssembly","src":"1706:111:14"},{"expression":{"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"1834:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2439,"nodeType":"ExpressionStatement","src":"1834:11:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"1867:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2444,"nodeType":"IfStatement","src":"1863:21:14","trueBody":{"id":2443,"nodeType":"Break","src":"1879:5:14"}}]},"condition":{"hexValue":"74727565","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2446,"nodeType":"WhileStatement","src":"1652:247:14"},{"expression":{"id":2447,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"1919:6:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2410,"id":2448,"nodeType":"Return","src":"1912:13:14"}]}]},"documentation":{"id":2404,"nodeType":"StructuredDocumentation","src":"1213:90:14","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2451,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:14","nodeType":"FunctionDefinition","parameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"value","nameLocation":"1334:5:14","nodeType":"VariableDeclaration","scope":2451,"src":"1326:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:14"},"returnParameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2451,"src":"1364:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2408,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:14"},"scope":3739,"src":"1308:634:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2476,"nodeType":"Block","src":"2118:92:14","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"2149:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:14","trueExpression":{"hexValue":"2d","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"2195:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2469,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7739,"src":"2180:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7739_$","typeString":"type(library SignedMath)"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:14","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7738,"src":"2180:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2468,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"2171:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2459,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:14","typeDescriptions":{}}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:14","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:14","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2458,"id":2475,"nodeType":"Return","src":"2128:75:14"}]},"documentation":{"id":2452,"nodeType":"StructuredDocumentation","src":"1948:89:14","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2477,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:14","nodeType":"FunctionDefinition","parameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"value","nameLocation":"2073:5:14","nodeType":"VariableDeclaration","scope":2477,"src":"2066:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2453,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:14"},"returnParameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2477,"src":"2103:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2456,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:14"},"scope":3739,"src":"2042:168:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2496,"nodeType":"Block","src":"2389:100:14","statements":[{"id":2495,"nodeType":"UncheckedBlock","src":"2399:84:14","statements":[{"expression":{"arguments":[{"id":2486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"2442:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"2461:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2487,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"2449:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5830_$","typeString":"type(library Math)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:14","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5773,"src":"2449:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2485,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2497,2580,2600],"referencedDeclaration":2580,"src":"2430:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2484,"id":2494,"nodeType":"Return","src":"2423:49:14"}]}]},"documentation":{"id":2478,"nodeType":"StructuredDocumentation","src":"2216:94:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2497,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:14","nodeType":"FunctionDefinition","parameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"value","nameLocation":"2344:5:14","nodeType":"VariableDeclaration","scope":2497,"src":"2336:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:14"},"returnParameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2497,"src":"2374:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2482,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:14"},"scope":3739,"src":"2315:174:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2579,"nodeType":"Block","src":"2702:435:14","statements":[{"assignments":[2508],"declarations":[{"constant":false,"id":2508,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:14","nodeType":"VariableDeclaration","scope":2579,"src":"2712:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2510,"initialValue":{"id":2509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"2733:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:14"},{"assignments":[2512],"declarations":[{"constant":false,"id":2512,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:14","nodeType":"VariableDeclaration","scope":2579,"src":"2748:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2511,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2521,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2516,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2784:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2513,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:14"},{"expression":{"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2522,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2805:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2524,"indexExpression":{"hexValue":"30","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2527,"nodeType":"ExpressionStatement","src":"2805:15:14"},{"expression":{"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2528,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2830:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2530,"indexExpression":{"hexValue":"31","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2533,"nodeType":"ExpressionStatement","src":"2830:15:14"},{"body":{"id":2562,"nodeType":"Block","src":"2900:95:14","statements":[{"expression":{"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2548,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2914:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2550,"indexExpression":{"id":2549,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"2921:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2551,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"2926:10:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2555,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2552,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"2937:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2557,"nodeType":"ExpressionStatement","src":"2914:40:14"},{"expression":{"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2558,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"2968:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2561,"nodeType":"ExpressionStatement","src":"2968:16:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2542,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"2888:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2563,"initializationExpression":{"assignments":[2535],"declarations":[{"constant":false,"id":2535,"mutability":"mutable","name":"i","nameLocation":"2868:1:14","nodeType":"VariableDeclaration","scope":2563,"src":"2860:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2534,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2541,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2537,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2876:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:14"},"loopExpression":{"expression":{"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:14","subExpression":{"id":2545,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"2897:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2547,"nodeType":"ExpressionStatement","src":"2895:3:14"},"nodeType":"ForStatement","src":"2855:140:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2564,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"3008:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2573,"nodeType":"IfStatement","src":"3004:96:14","trueBody":{"id":2572,"nodeType":"Block","src":"3025:75:14","statements":[{"errorCall":{"arguments":[{"id":2568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"3075:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2569,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"3082:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2567,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"3046:28:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2571,"nodeType":"RevertStatement","src":"3039:50:14"}]}},{"expression":{"arguments":[{"id":2576,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3123:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2574,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:14","typeDescriptions":{}}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2506,"id":2578,"nodeType":"Return","src":"3109:21:14"}]},"documentation":{"id":2498,"nodeType":"StructuredDocumentation","src":"2495:112:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2580,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:14","nodeType":"FunctionDefinition","parameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2500,"mutability":"mutable","name":"value","nameLocation":"2641:5:14","nodeType":"VariableDeclaration","scope":2580,"src":"2633:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2502,"mutability":"mutable","name":"length","nameLocation":"2656:6:14","nodeType":"VariableDeclaration","scope":2580,"src":"2648:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:14"},"returnParameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2580,"src":"2687:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2504,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:14"},"scope":3739,"src":"2612:525:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2599,"nodeType":"Block","src":"3369:75:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2593,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"3414:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2591,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:14","typeDescriptions":{}}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2589,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:14","typeDescriptions":{}}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2596,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"3422:14:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2588,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2497,2580,2600],"referencedDeclaration":2580,"src":"3386:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2587,"id":2598,"nodeType":"Return","src":"3379:58:14"}]},"documentation":{"id":2581,"nodeType":"StructuredDocumentation","src":"3143:148:14","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2600,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:14","nodeType":"FunctionDefinition","parameters":{"id":2584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"addr","nameLocation":"3325:4:14","nodeType":"VariableDeclaration","scope":2600,"src":"3317:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2582,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:14"},"returnParameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2600,"src":"3354:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2585,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:14"},"scope":3739,"src":"3296:148:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2664,"nodeType":"Block","src":"3701:642:14","statements":[{"assignments":[2609],"declarations":[{"constant":false,"id":2609,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:14","nodeType":"VariableDeclaration","scope":2664,"src":"3711:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2608,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2616,"initialValue":{"arguments":[{"arguments":[{"id":2613,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"3751:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2612,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2497,2580,2600],"referencedDeclaration":2600,"src":"3739:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2610,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:14","typeDescriptions":{}}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:14"},{"assignments":[2618],"declarations":[{"constant":false,"id":2618,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:14","nodeType":"VariableDeclaration","scope":2664,"src":"3842:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2617,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2619,"nodeType":"VariableDeclarationStatement","src":"3842:17:14"},{"AST":{"nodeType":"YulBlock","src":"3894:78:14","statements":[{"nodeType":"YulAssignment","src":"3908:54:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3925:2:14","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3943:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3951:4:14","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:14"},"nodeType":"YulFunctionCall","src":"3939:17:14"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:14","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:14"},"nodeType":"YulFunctionCall","src":"3929:32:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3921:3:14"},"nodeType":"YulFunctionCall","src":"3921:41:14"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3908:9:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2609,"isOffset":false,"isSlot":false,"src":"3943:6:14","valueSize":1},{"declaration":2618,"isOffset":false,"isSlot":false,"src":"3908:9:14","valueSize":1}],"flags":["memory-safe"],"id":2620,"nodeType":"InlineAssembly","src":"3869:103:14"},{"body":{"id":2657,"nodeType":"Block","src":"4015:291:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2631,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"4121:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2638,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"4150:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2640,"indexExpression":{"id":2639,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"4157:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2636,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:14","typeDescriptions":{}}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:14","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2652,"nodeType":"IfStatement","src":"4117:150:14","trueBody":{"id":2651,"nodeType":"Block","src":"4167:100:14","statements":[{"expression":{"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2645,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"4235:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2647,"indexExpression":{"id":2646,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"4242:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2650,"nodeType":"ExpressionStatement","src":"4235:17:14"}]}},{"expression":{"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2653,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"4280:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2656,"nodeType":"ExpressionStatement","src":"4280:15:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2625,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"4003:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2658,"initializationExpression":{"assignments":[2622],"declarations":[{"constant":false,"id":2622,"mutability":"mutable","name":"i","nameLocation":"3995:1:14","nodeType":"VariableDeclaration","scope":2658,"src":"3987:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2621,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2624,"initialValue":{"hexValue":"3431","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:14","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:14"},"loopExpression":{"expression":{"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:14","subExpression":{"id":2628,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"4012:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2630,"nodeType":"ExpressionStatement","src":"4010:3:14"},"nodeType":"ForStatement","src":"3982:324:14"},{"expression":{"arguments":[{"id":2661,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"4329:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2659,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:14","typeDescriptions":{}}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2607,"id":2663,"nodeType":"Return","src":"4315:21:14"}]},"documentation":{"id":2601,"nodeType":"StructuredDocumentation","src":"3450:165:14","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2665,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:14","nodeType":"FunctionDefinition","parameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"mutability":"mutable","name":"addr","nameLocation":"3657:4:14","nodeType":"VariableDeclaration","scope":2665,"src":"3649:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2602,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:14"},"returnParameters":{"id":2607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2665,"src":"3686:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2605,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:14"},"scope":3739,"src":"3620:723:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2701,"nodeType":"Block","src":"4498:104:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2677,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"4521:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2675,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:14","typeDescriptions":{}}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:14","memberName":"length","nodeType":"MemberAccess","src":"4515:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2682,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"4540:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2680,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:14","typeDescriptions":{}}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:14","memberName":"length","nodeType":"MemberAccess","src":"4534:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2689,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"4569:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2687,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:14","typeDescriptions":{}}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2686,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2695,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"4592:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2693,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:14","typeDescriptions":{}}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2692,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2674,"id":2700,"nodeType":"Return","src":"4508:87:14"}]},"documentation":{"id":2666,"nodeType":"StructuredDocumentation","src":"4349:66:14","text":" @dev Returns true if the two strings are equal."},"id":2702,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:14","nodeType":"FunctionDefinition","parameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"a","nameLocation":"4449:1:14","nodeType":"VariableDeclaration","scope":2702,"src":"4435:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2667,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2670,"mutability":"mutable","name":"b","nameLocation":"4466:1:14","nodeType":"VariableDeclaration","scope":2702,"src":"4452:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2669,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:14"},"returnParameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2702,"src":"4492:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2672,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:14"},"scope":3739,"src":"4420:182:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2720,"nodeType":"Block","src":"4899:64:14","statements":[{"expression":{"arguments":[{"id":2711,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"4926:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2715,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"4942:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2713,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:14","typeDescriptions":{}}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:14","memberName":"length","nodeType":"MemberAccess","src":"4936:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2710,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2721,2752],"referencedDeclaration":2752,"src":"4916:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2709,"id":2719,"nodeType":"Return","src":"4909:47:14"}]},"documentation":{"id":2703,"nodeType":"StructuredDocumentation","src":"4608:214:14","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2721,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:14","nodeType":"FunctionDefinition","parameters":{"id":2706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2705,"mutability":"mutable","name":"input","nameLocation":"4860:5:14","nodeType":"VariableDeclaration","scope":2721,"src":"4846:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2704,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:14"},"returnParameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2721,"src":"4890:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2707,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:14"},"scope":3739,"src":"4827:136:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2751,"nodeType":"Block","src":"5368:153:14","statements":[{"assignments":[2734,2736],"declarations":[{"constant":false,"id":2734,"mutability":"mutable","name":"success","nameLocation":"5384:7:14","nodeType":"VariableDeclaration","scope":2751,"src":"5379:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2733,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"value","nameLocation":"5401:5:14","nodeType":"VariableDeclaration","scope":2751,"src":"5393:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2742,"initialValue":{"arguments":[{"id":2738,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"5423:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2739,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"5430:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2740,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"5437:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2737,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2773,2810],"referencedDeclaration":2810,"src":"5410:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:14"},{"condition":{"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:14","subExpression":{"id":2743,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"5456:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2748,"nodeType":"IfStatement","src":"5451:41:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2745,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"5472:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2747,"nodeType":"RevertStatement","src":"5465:27:14"}},{"expression":{"id":2749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"5509:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2732,"id":2750,"nodeType":"Return","src":"5502:12:14"}]},"documentation":{"id":2722,"nodeType":"StructuredDocumentation","src":"4969:294:14","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2752,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:14","nodeType":"FunctionDefinition","parameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"input","nameLocation":"5301:5:14","nodeType":"VariableDeclaration","scope":2752,"src":"5287:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2723,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2726,"mutability":"mutable","name":"begin","nameLocation":"5316:5:14","nodeType":"VariableDeclaration","scope":2752,"src":"5308:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2728,"mutability":"mutable","name":"end","nameLocation":"5331:3:14","nodeType":"VariableDeclaration","scope":2752,"src":"5323:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2727,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:14"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2752,"src":"5359:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2730,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:14"},"scope":3739,"src":"5268:253:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2772,"nodeType":"Block","src":"5842:83:14","statements":[{"expression":{"arguments":[{"id":2763,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"5888:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2767,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"5904:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2765,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:14","typeDescriptions":{}}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:14","memberName":"length","nodeType":"MemberAccess","src":"5898:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2762,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"5859:28:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2761,"id":2771,"nodeType":"Return","src":"5852:66:14"}]},"documentation":{"id":2753,"nodeType":"StructuredDocumentation","src":"5527:215:14","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2773,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:14","nodeType":"FunctionDefinition","parameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"input","nameLocation":"5783:5:14","nodeType":"VariableDeclaration","scope":2773,"src":"5769:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2754,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:14"},"returnParameters":{"id":2761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2758,"mutability":"mutable","name":"success","nameLocation":"5818:7:14","nodeType":"VariableDeclaration","scope":2773,"src":"5813:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2757,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2760,"mutability":"mutable","name":"value","nameLocation":"5835:5:14","nodeType":"VariableDeclaration","scope":2773,"src":"5827:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2759,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:14"},"scope":3739,"src":"5747:178:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2809,"nodeType":"Block","src":"6327:144:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2787,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"6341:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2790,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"6353:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2788,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:14","typeDescriptions":{}}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:14","memberName":"length","nodeType":"MemberAccess","src":"6347:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2794,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"6370:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2795,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"6378:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2802,"nodeType":"IfStatement","src":"6337:63:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2786,"id":2801,"nodeType":"Return","src":"6383:17:14"}},{"expression":{"arguments":[{"id":2804,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"6446:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2805,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"6453:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2806,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"6460:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2803,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"6417:28:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2786,"id":2808,"nodeType":"Return","src":"6410:54:14"}]},"documentation":{"id":2774,"nodeType":"StructuredDocumentation","src":"5931:238:14","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2810,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:14","nodeType":"FunctionDefinition","parameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"input","nameLocation":"6219:5:14","nodeType":"VariableDeclaration","scope":2810,"src":"6205:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2775,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2778,"mutability":"mutable","name":"begin","nameLocation":"6242:5:14","nodeType":"VariableDeclaration","scope":2810,"src":"6234:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2780,"mutability":"mutable","name":"end","nameLocation":"6265:3:14","nodeType":"VariableDeclaration","scope":2810,"src":"6257:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2779,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:14"},"returnParameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"success","nameLocation":"6303:7:14","nodeType":"VariableDeclaration","scope":2810,"src":"6298:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2782,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2785,"mutability":"mutable","name":"value","nameLocation":"6320:5:14","nodeType":"VariableDeclaration","scope":2810,"src":"6312:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2784,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:14"},"scope":3739,"src":"6174:297:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2879,"nodeType":"Block","src":"6874:347:14","statements":[{"assignments":[2825],"declarations":[{"constant":false,"id":2825,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:14","nodeType":"VariableDeclaration","scope":2879,"src":"6884:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2824,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2830,"initialValue":{"arguments":[{"id":2828,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"6912:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2826,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:14","typeDescriptions":{}}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:14"},{"assignments":[2832],"declarations":[{"constant":false,"id":2832,"mutability":"mutable","name":"result","nameLocation":"6937:6:14","nodeType":"VariableDeclaration","scope":2879,"src":"6929:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2831,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2834,"initialValue":{"hexValue":"30","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:14"},{"body":{"id":2873,"nodeType":"Block","src":"6995:189:14","statements":[{"assignments":[2846],"declarations":[{"constant":false,"id":2846,"mutability":"mutable","name":"chr","nameLocation":"7015:3:14","nodeType":"VariableDeclaration","scope":2873,"src":"7009:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2845,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2856,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2851,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"7064:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2852,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"7072:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2850,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"7041:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2848,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:14","typeDescriptions":{}}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2847,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"7021:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2857,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"7094:3:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:14","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2864,"nodeType":"IfStatement","src":"7090:30:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2823,"id":2863,"nodeType":"Return","src":"7103:17:14"}},{"expression":{"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"7134:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2868,"nodeType":"ExpressionStatement","src":"7134:12:14"},{"expression":{"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2869,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"7160:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2870,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"7170:3:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2872,"nodeType":"ExpressionStatement","src":"7160:13:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2839,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"6981:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2840,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"6985:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2874,"initializationExpression":{"assignments":[2836],"declarations":[{"constant":false,"id":2836,"mutability":"mutable","name":"i","nameLocation":"6970:1:14","nodeType":"VariableDeclaration","scope":2874,"src":"6962:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2838,"initialValue":{"id":2837,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"6974:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:14"},"loopExpression":{"expression":{"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:14","subExpression":{"id":2842,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"6992:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2844,"nodeType":"ExpressionStatement","src":"6990:3:14"},"nodeType":"ForStatement","src":"6957:227:14"},{"expression":{"components":[{"hexValue":"74727565","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"7207:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2823,"id":2878,"nodeType":"Return","src":"7193:21:14"}]},"documentation":{"id":2811,"nodeType":"StructuredDocumentation","src":"6477:224:14","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2880,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:14","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"input","nameLocation":"6767:5:14","nodeType":"VariableDeclaration","scope":2880,"src":"6753:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2812,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2815,"mutability":"mutable","name":"begin","nameLocation":"6790:5:14","nodeType":"VariableDeclaration","scope":2880,"src":"6782:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2817,"mutability":"mutable","name":"end","nameLocation":"6813:3:14","nodeType":"VariableDeclaration","scope":2880,"src":"6805:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2816,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:14"},"returnParameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"success","nameLocation":"6850:7:14","nodeType":"VariableDeclaration","scope":2880,"src":"6845:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2819,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2822,"mutability":"mutable","name":"value","nameLocation":"6867:5:14","nodeType":"VariableDeclaration","scope":2880,"src":"6859:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2821,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:14"},"scope":3739,"src":"6706:515:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2898,"nodeType":"Block","src":"7518:63:14","statements":[{"expression":{"arguments":[{"id":2889,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"7544:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2893,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"7560:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2891,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:14","typeDescriptions":{}}},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:14","memberName":"length","nodeType":"MemberAccess","src":"7554:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2888,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2899,2930],"referencedDeclaration":2930,"src":"7535:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2887,"id":2897,"nodeType":"Return","src":"7528:46:14"}]},"documentation":{"id":2881,"nodeType":"StructuredDocumentation","src":"7227:216:14","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2899,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:14","nodeType":"FunctionDefinition","parameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"input","nameLocation":"7480:5:14","nodeType":"VariableDeclaration","scope":2899,"src":"7466:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2882,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:14"},"returnParameters":{"id":2887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2899,"src":"7510:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2885,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:14"},"scope":3739,"src":"7448:133:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2929,"nodeType":"Block","src":"7986:151:14","statements":[{"assignments":[2912,2914],"declarations":[{"constant":false,"id":2912,"mutability":"mutable","name":"success","nameLocation":"8002:7:14","nodeType":"VariableDeclaration","scope":2929,"src":"7997:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2911,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2914,"mutability":"mutable","name":"value","nameLocation":"8018:5:14","nodeType":"VariableDeclaration","scope":2929,"src":"8011:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2913,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2920,"initialValue":{"arguments":[{"id":2916,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"8039:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2917,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"8046:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2918,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"8053:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2915,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2951,2993],"referencedDeclaration":2993,"src":"8027:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:14"},{"condition":{"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:14","subExpression":{"id":2921,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"8072:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2926,"nodeType":"IfStatement","src":"8067:41:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2923,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"8088:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2925,"nodeType":"RevertStatement","src":"8081:27:14"}},{"expression":{"id":2927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"8125:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2910,"id":2928,"nodeType":"Return","src":"8118:12:14"}]},"documentation":{"id":2900,"nodeType":"StructuredDocumentation","src":"7587:296:14","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2930,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:14","nodeType":"FunctionDefinition","parameters":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"mutability":"mutable","name":"input","nameLocation":"7920:5:14","nodeType":"VariableDeclaration","scope":2930,"src":"7906:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2901,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2904,"mutability":"mutable","name":"begin","nameLocation":"7935:5:14","nodeType":"VariableDeclaration","scope":2930,"src":"7927:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2906,"mutability":"mutable","name":"end","nameLocation":"7950:3:14","nodeType":"VariableDeclaration","scope":2930,"src":"7942:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2905,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:14"},"returnParameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2930,"src":"7978:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2908,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:14"},"scope":3739,"src":"7888:249:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2950,"nodeType":"Block","src":"8528:82:14","statements":[{"expression":{"arguments":[{"id":2941,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"8573:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2945,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"8589:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2943,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:14","typeDescriptions":{}}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:14","memberName":"length","nodeType":"MemberAccess","src":"8583:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2940,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"8545:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2939,"id":2949,"nodeType":"Return","src":"8538:65:14"}]},"documentation":{"id":2931,"nodeType":"StructuredDocumentation","src":"8143:287:14","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2951,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:14","nodeType":"FunctionDefinition","parameters":{"id":2934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"input","nameLocation":"8470:5:14","nodeType":"VariableDeclaration","scope":2951,"src":"8456:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2932,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:14"},"returnParameters":{"id":2939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"success","nameLocation":"8505:7:14","nodeType":"VariableDeclaration","scope":2951,"src":"8500:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2935,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2938,"mutability":"mutable","name":"value","nameLocation":"8521:5:14","nodeType":"VariableDeclaration","scope":2951,"src":"8514:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2937,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:14"},"scope":3739,"src":"8435:175:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2956,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:14","nodeType":"VariableDeclaration","scope":3739,"src":"8616:50:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2952,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2992,"nodeType":"Block","src":"9132:143:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2970,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"9146:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2973,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"9158:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2971,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:14","typeDescriptions":{}}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:14","memberName":"length","nodeType":"MemberAccess","src":"9152:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2977,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"9175:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2978,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"9183:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2985,"nodeType":"IfStatement","src":"9142:63:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2983,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2969,"id":2984,"nodeType":"Return","src":"9188:17:14"}},{"expression":{"arguments":[{"id":2987,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"9250:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2988,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"9257:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2989,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"9264:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2986,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"9222:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2969,"id":2991,"nodeType":"Return","src":"9215:53:14"}]},"documentation":{"id":2957,"nodeType":"StructuredDocumentation","src":"8673:303:14","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2993,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:14","nodeType":"FunctionDefinition","parameters":{"id":2964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2959,"mutability":"mutable","name":"input","nameLocation":"9025:5:14","nodeType":"VariableDeclaration","scope":2993,"src":"9011:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2958,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2961,"mutability":"mutable","name":"begin","nameLocation":"9048:5:14","nodeType":"VariableDeclaration","scope":2993,"src":"9040:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2963,"mutability":"mutable","name":"end","nameLocation":"9071:3:14","nodeType":"VariableDeclaration","scope":2993,"src":"9063:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2962,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:14"},"returnParameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"success","nameLocation":"9109:7:14","nodeType":"VariableDeclaration","scope":2993,"src":"9104:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2965,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"value","nameLocation":"9125:5:14","nodeType":"VariableDeclaration","scope":2993,"src":"9118:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2967,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:14"},"scope":3739,"src":"8981:294:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3113,"nodeType":"Block","src":"9675:812:14","statements":[{"assignments":[3008],"declarations":[{"constant":false,"id":3008,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:14","nodeType":"VariableDeclaration","scope":3113,"src":"9685:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3007,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3013,"initialValue":{"arguments":[{"id":3011,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"9713:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3009,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:14","typeDescriptions":{}}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:14"},{"assignments":[3015],"declarations":[{"constant":false,"id":3015,"mutability":"mutable","name":"sign","nameLocation":"9783:4:14","nodeType":"VariableDeclaration","scope":3113,"src":"9776:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3014,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3031,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3016,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"9790:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3017,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"9799:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":3026,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"9847:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3027,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"9855:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3025,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"9824:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3023,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:14","typeDescriptions":{}}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:14","trueExpression":{"arguments":[{"hexValue":"30","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3019,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:14","typeDescriptions":{}}},"id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:14"},{"assignments":[3033],"declarations":[{"constant":false,"id":3033,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:14","nodeType":"VariableDeclaration","scope":3113,"src":"9943:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3032,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3040,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3034,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"9963:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":3036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3035,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:14","typeDescriptions":{}}},"id":3038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:14"},{"assignments":[3042],"declarations":[{"constant":false,"id":3042,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:14","nodeType":"VariableDeclaration","scope":3113,"src":"9992:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3041,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3049,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3043,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"10012:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":3045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3044,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:14","typeDescriptions":{}}},"id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:14"},{"assignments":[3051],"declarations":[{"constant":false,"id":3051,"mutability":"mutable","name":"offset","nameLocation":"10049:6:14","nodeType":"VariableDeclaration","scope":3113,"src":"10041:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3050,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3058,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3052,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"10059:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3053,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"10075:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3055,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"10058:37:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:14"},{"assignments":[3060,3062],"declarations":[{"constant":false,"id":3060,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:14","nodeType":"VariableDeclaration","scope":3113,"src":"10109:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3059,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3062,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:14","nodeType":"VariableDeclaration","scope":3113,"src":"10126:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3061,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3070,"initialValue":{"arguments":[{"id":3064,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"10159:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3065,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"10166:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3066,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"10174:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3068,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"10182:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3063,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2773,2810],"referencedDeclaration":2810,"src":"10146:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3071,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"10201:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3072,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"10215:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3073,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"10226:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3091,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"10343:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3092,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"10357:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3094,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"10373:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3095,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"10385:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3006,"id":3110,"nodeType":"Return","src":"10463:17:14"},"id":3111,"nodeType":"IfStatement","src":"10339:141:14","trueBody":{"id":3106,"nodeType":"Block","src":"10401:56:14","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3100,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3099,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:14","memberName":"min","nodeType":"MemberAccess","src":"10429:16:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3006,"id":3105,"nodeType":"Return","src":"10415:31:14"}]}},"id":3112,"nodeType":"IfStatement","src":"10197:283:14","trueBody":{"id":3090,"nodeType":"Block","src":"10242:91:14","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":3077,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"10270:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3085,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"10312:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3083,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:14","typeDescriptions":{}}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:14","trueExpression":{"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:14","subExpression":{"arguments":[{"id":3080,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"10293:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3078,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:14","typeDescriptions":{}}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3006,"id":3089,"nodeType":"Return","src":"10256:66:14"}]}}]},"documentation":{"id":2994,"nodeType":"StructuredDocumentation","src":"9281:223:14","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3114,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:14","nodeType":"FunctionDefinition","parameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"input","nameLocation":"9569:5:14","nodeType":"VariableDeclaration","scope":3114,"src":"9555:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2995,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2998,"mutability":"mutable","name":"begin","nameLocation":"9592:5:14","nodeType":"VariableDeclaration","scope":3114,"src":"9584:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3000,"mutability":"mutable","name":"end","nameLocation":"9615:3:14","nodeType":"VariableDeclaration","scope":3114,"src":"9607:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2999,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:14"},"returnParameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3003,"mutability":"mutable","name":"success","nameLocation":"9652:7:14","nodeType":"VariableDeclaration","scope":3114,"src":"9647:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3002,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3005,"mutability":"mutable","name":"value","nameLocation":"9668:5:14","nodeType":"VariableDeclaration","scope":3114,"src":"9661:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3004,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:14"},"scope":3739,"src":"9509:978:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3132,"nodeType":"Block","src":"10832:67:14","statements":[{"expression":{"arguments":[{"id":3123,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"10862:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3127,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"10878:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3125,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:14","typeDescriptions":{}}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:14","memberName":"length","nodeType":"MemberAccess","src":"10872:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3122,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3133,3164],"referencedDeclaration":3164,"src":"10849:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3121,"id":3131,"nodeType":"Return","src":"10842:50:14"}]},"documentation":{"id":3115,"nodeType":"StructuredDocumentation","src":"10493:259:14","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3133,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:14","nodeType":"FunctionDefinition","parameters":{"id":3118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3117,"mutability":"mutable","name":"input","nameLocation":"10793:5:14","nodeType":"VariableDeclaration","scope":3133,"src":"10779:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3116,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:14"},"returnParameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3133,"src":"10823:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:14"},"scope":3739,"src":"10757:142:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3163,"nodeType":"Block","src":"11320:156:14","statements":[{"assignments":[3146,3148],"declarations":[{"constant":false,"id":3146,"mutability":"mutable","name":"success","nameLocation":"11336:7:14","nodeType":"VariableDeclaration","scope":3163,"src":"11331:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3145,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3148,"mutability":"mutable","name":"value","nameLocation":"11353:5:14","nodeType":"VariableDeclaration","scope":3163,"src":"11345:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3154,"initialValue":{"arguments":[{"id":3150,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"11378:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3151,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"11385:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3152,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"11392:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3149,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3185,3222],"referencedDeclaration":3222,"src":"11362:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:14"},{"condition":{"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:14","subExpression":{"id":3155,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"11411:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3160,"nodeType":"IfStatement","src":"11406:41:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3157,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"11427:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3159,"nodeType":"RevertStatement","src":"11420:27:14"}},{"expression":{"id":3161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"11464:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3144,"id":3162,"nodeType":"Return","src":"11457:12:14"}]},"documentation":{"id":3134,"nodeType":"StructuredDocumentation","src":"10905:307:14","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3164,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:14","nodeType":"FunctionDefinition","parameters":{"id":3141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"input","nameLocation":"11253:5:14","nodeType":"VariableDeclaration","scope":3164,"src":"11239:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3135,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3138,"mutability":"mutable","name":"begin","nameLocation":"11268:5:14","nodeType":"VariableDeclaration","scope":3164,"src":"11260:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3140,"mutability":"mutable","name":"end","nameLocation":"11283:3:14","nodeType":"VariableDeclaration","scope":3164,"src":"11275:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3139,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:14"},"returnParameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3164,"src":"11311:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3142,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:14"},"scope":3739,"src":"11217:259:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3184,"nodeType":"Block","src":"11803:86:14","statements":[{"expression":{"arguments":[{"id":3175,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"11852:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3179,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"11868:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3177,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:14","typeDescriptions":{}}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:14","memberName":"length","nodeType":"MemberAccess","src":"11862:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3174,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"11820:31:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3173,"id":3183,"nodeType":"Return","src":"11813:69:14"}]},"documentation":{"id":3165,"nodeType":"StructuredDocumentation","src":"11482:218:14","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3185,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:14","nodeType":"FunctionDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"input","nameLocation":"11744:5:14","nodeType":"VariableDeclaration","scope":3185,"src":"11730:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3166,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:14"},"returnParameters":{"id":3173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"success","nameLocation":"11779:7:14","nodeType":"VariableDeclaration","scope":3185,"src":"11774:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3169,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3172,"mutability":"mutable","name":"value","nameLocation":"11796:5:14","nodeType":"VariableDeclaration","scope":3185,"src":"11788:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:14"},"scope":3739,"src":"11705:184:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3221,"nodeType":"Block","src":"12297:147:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3199,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"12311:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3202,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"12323:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3200,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:14","typeDescriptions":{}}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:14","memberName":"length","nodeType":"MemberAccess","src":"12317:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3206,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"12340:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3207,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"12348:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3214,"nodeType":"IfStatement","src":"12307:63:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3198,"id":3213,"nodeType":"Return","src":"12353:17:14"}},{"expression":{"arguments":[{"id":3216,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"12419:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3217,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"12426:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3218,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"12433:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3215,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"12387:31:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3198,"id":3220,"nodeType":"Return","src":"12380:57:14"}]},"documentation":{"id":3186,"nodeType":"StructuredDocumentation","src":"11895:241:14","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3222,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:14","nodeType":"FunctionDefinition","parameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"input","nameLocation":"12189:5:14","nodeType":"VariableDeclaration","scope":3222,"src":"12175:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3187,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3190,"mutability":"mutable","name":"begin","nameLocation":"12212:5:14","nodeType":"VariableDeclaration","scope":3222,"src":"12204:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3189,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3192,"mutability":"mutable","name":"end","nameLocation":"12235:3:14","nodeType":"VariableDeclaration","scope":3222,"src":"12227:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3191,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:14"},"returnParameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"success","nameLocation":"12273:7:14","nodeType":"VariableDeclaration","scope":3222,"src":"12268:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3194,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3197,"mutability":"mutable","name":"value","nameLocation":"12290:5:14","nodeType":"VariableDeclaration","scope":3222,"src":"12282:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:14"},"scope":3739,"src":"12141:303:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3324,"nodeType":"Block","src":"12853:881:14","statements":[{"assignments":[3237],"declarations":[{"constant":false,"id":3237,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:14","nodeType":"VariableDeclaration","scope":3324,"src":"12863:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3236,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3242,"initialValue":{"arguments":[{"id":3240,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"12891:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3238,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:14","typeDescriptions":{}}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:14"},{"assignments":[3244],"declarations":[{"constant":false,"id":3244,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:14","nodeType":"VariableDeclaration","scope":3324,"src":"12945:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3243,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3264,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3245,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"12963:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3246,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"12969:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3254,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"13013:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3255,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"13021:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3253,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"12990:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3251,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:14","typeDescriptions":{}}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3258,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:14","typeDescriptions":{}}},"id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:14"},{"assignments":[3266],"declarations":[{"constant":false,"id":3266,"mutability":"mutable","name":"offset","nameLocation":"13133:6:14","nodeType":"VariableDeclaration","scope":3324,"src":"13125:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3265,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3272,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3267,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"13142:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"13142:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:14"},{"assignments":[3274],"declarations":[{"constant":false,"id":3274,"mutability":"mutable","name":"result","nameLocation":"13183:6:14","nodeType":"VariableDeclaration","scope":3324,"src":"13175:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3273,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3276,"initialValue":{"hexValue":"30","id":3275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:14"},{"body":{"id":3318,"nodeType":"Block","src":"13250:447:14","statements":[{"assignments":[3290],"declarations":[{"constant":false,"id":3290,"mutability":"mutable","name":"chr","nameLocation":"13270:3:14","nodeType":"VariableDeclaration","scope":3318,"src":"13264:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3289,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3300,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3295,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"13319:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3296,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"13327:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3294,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"13296:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3292,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:14","typeDescriptions":{}}},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3291,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"13276:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3301,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"13349:3:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3308,"nodeType":"IfStatement","src":"13345:31:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3235,"id":3307,"nodeType":"Return","src":"13359:17:14"}},{"expression":{"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3309,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"13390:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3312,"nodeType":"ExpressionStatement","src":"13390:12:14"},{"id":3317,"nodeType":"UncheckedBlock","src":"13416:271:14","statements":[{"expression":{"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3313,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"13659:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3314,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"13669:3:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3316,"nodeType":"ExpressionStatement","src":"13659:13:14"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3283,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"13236:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3284,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"13240:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3319,"initializationExpression":{"assignments":[3278],"declarations":[{"constant":false,"id":3278,"mutability":"mutable","name":"i","nameLocation":"13216:1:14","nodeType":"VariableDeclaration","scope":3319,"src":"13208:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3277,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3282,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3279,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"13220:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3280,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"13228:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:14"},"loopExpression":{"expression":{"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:14","subExpression":{"id":3286,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"13247:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3288,"nodeType":"ExpressionStatement","src":"13245:3:14"},"nodeType":"ForStatement","src":"13203:494:14"},{"expression":{"components":[{"hexValue":"74727565","id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3321,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"13720:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3235,"id":3323,"nodeType":"Return","src":"13706:21:14"}]},"documentation":{"id":3223,"nodeType":"StructuredDocumentation","src":"12450:227:14","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3325,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:14","nodeType":"FunctionDefinition","parameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"input","nameLocation":"12746:5:14","nodeType":"VariableDeclaration","scope":3325,"src":"12732:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3224,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3227,"mutability":"mutable","name":"begin","nameLocation":"12769:5:14","nodeType":"VariableDeclaration","scope":3325,"src":"12761:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3226,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3229,"mutability":"mutable","name":"end","nameLocation":"12792:3:14","nodeType":"VariableDeclaration","scope":3325,"src":"12784:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3228,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:14"},"returnParameters":{"id":3235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3232,"mutability":"mutable","name":"success","nameLocation":"12829:7:14","nodeType":"VariableDeclaration","scope":3325,"src":"12824:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3231,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3234,"mutability":"mutable","name":"value","nameLocation":"12846:5:14","nodeType":"VariableDeclaration","scope":3325,"src":"12838:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3233,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:14"},"scope":3739,"src":"12682:1052:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3343,"nodeType":"Block","src":"14032:67:14","statements":[{"expression":{"arguments":[{"id":3334,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"14062:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3338,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"14078:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3336,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:14","typeDescriptions":{}}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:14","memberName":"length","nodeType":"MemberAccess","src":"14072:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3333,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3344,3375],"referencedDeclaration":3375,"src":"14049:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3332,"id":3342,"nodeType":"Return","src":"14042:50:14"}]},"documentation":{"id":3326,"nodeType":"StructuredDocumentation","src":"13740:212:14","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3344,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:14","nodeType":"FunctionDefinition","parameters":{"id":3329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3328,"mutability":"mutable","name":"input","nameLocation":"13993:5:14","nodeType":"VariableDeclaration","scope":3344,"src":"13979:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3327,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:14"},"returnParameters":{"id":3332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3344,"src":"14023:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3330,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:14"},"scope":3739,"src":"13957:142:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3374,"nodeType":"Block","src":"14472:165:14","statements":[{"assignments":[3357,3359],"declarations":[{"constant":false,"id":3357,"mutability":"mutable","name":"success","nameLocation":"14488:7:14","nodeType":"VariableDeclaration","scope":3374,"src":"14483:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3356,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3359,"mutability":"mutable","name":"value","nameLocation":"14505:5:14","nodeType":"VariableDeclaration","scope":3374,"src":"14497:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3358,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3365,"initialValue":{"arguments":[{"id":3361,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"14530:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3362,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"14537:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3363,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"14544:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3360,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3396,3500],"referencedDeclaration":3500,"src":"14514:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:14"},{"condition":{"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:14","subExpression":{"id":3366,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"14563:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3371,"nodeType":"IfStatement","src":"14558:50:14","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3368,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"14579:27:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3370,"nodeType":"RevertStatement","src":"14572:36:14"}},{"expression":{"id":3372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"14625:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3355,"id":3373,"nodeType":"Return","src":"14618:12:14"}]},"documentation":{"id":3345,"nodeType":"StructuredDocumentation","src":"14105:259:14","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3375,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:14","nodeType":"FunctionDefinition","parameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3347,"mutability":"mutable","name":"input","nameLocation":"14405:5:14","nodeType":"VariableDeclaration","scope":3375,"src":"14391:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3346,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3349,"mutability":"mutable","name":"begin","nameLocation":"14420:5:14","nodeType":"VariableDeclaration","scope":3375,"src":"14412:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3351,"mutability":"mutable","name":"end","nameLocation":"14435:3:14","nodeType":"VariableDeclaration","scope":3375,"src":"14427:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:14"},"returnParameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3375,"src":"14463:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3353,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:14"},"scope":3739,"src":"14369:268:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3395,"nodeType":"Block","src":"14944:70:14","statements":[{"expression":{"arguments":[{"id":3386,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"14977:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3390,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"14993:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3388,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:14","typeDescriptions":{}}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:14","memberName":"length","nodeType":"MemberAccess","src":"14987:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3385,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3396,3500],"referencedDeclaration":3500,"src":"14961:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3384,"id":3394,"nodeType":"Return","src":"14954:53:14"}]},"documentation":{"id":3376,"nodeType":"StructuredDocumentation","src":"14643:198:14","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3396,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:14","nodeType":"FunctionDefinition","parameters":{"id":3379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3378,"mutability":"mutable","name":"input","nameLocation":"14885:5:14","nodeType":"VariableDeclaration","scope":3396,"src":"14871:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3377,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:14"},"returnParameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"success","nameLocation":"14920:7:14","nodeType":"VariableDeclaration","scope":3396,"src":"14915:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3380,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"value","nameLocation":"14937:5:14","nodeType":"VariableDeclaration","scope":3396,"src":"14929:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3382,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:14"},"scope":3739,"src":"14846:168:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3499,"nodeType":"Block","src":"15407:733:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3410,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"15421:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3413,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"15433:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3411,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:14","typeDescriptions":{}}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:14","memberName":"length","nodeType":"MemberAccess","src":"15427:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3417,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"15450:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3418,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"15458:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3428,"nodeType":"IfStatement","src":"15417:72:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3422,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:14","typeDescriptions":{}}},"id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3409,"id":3427,"nodeType":"Return","src":"15463:26:14"}},{"assignments":[3430],"declarations":[{"constant":false,"id":3430,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:14","nodeType":"VariableDeclaration","scope":3499,"src":"15500:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3429,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3453,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3431,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"15518:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3432,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"15524:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3436,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3442,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"15574:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3440,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:14","typeDescriptions":{}}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3444,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"15582:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3439,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"15545:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3437,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:14","typeDescriptions":{}}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3447,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:14","typeDescriptions":{}}},"id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:14"},{"assignments":[3455],"declarations":[{"constant":false,"id":3455,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:14","nodeType":"VariableDeclaration","scope":3499,"src":"15686:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3463,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:14","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3457,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"15716:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"15716:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3464,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"15803:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3465,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"15809:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3467,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"15818:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3497,"nodeType":"Block","src":"16083:51:14","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3491,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:14","typeDescriptions":{}}},"id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3495,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3409,"id":3496,"nodeType":"Return","src":"16097:26:14"}]},"id":3498,"nodeType":"IfStatement","src":"15799:335:14","trueBody":{"id":3489,"nodeType":"Block","src":"15834:243:14","statements":[{"assignments":[3470,3472],"declarations":[{"constant":false,"id":3470,"mutability":"mutable","name":"s","nameLocation":"15955:1:14","nodeType":"VariableDeclaration","scope":3489,"src":"15950:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3469,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3472,"mutability":"mutable","name":"v","nameLocation":"15966:1:14","nodeType":"VariableDeclaration","scope":3489,"src":"15958:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3471,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3478,"initialValue":{"arguments":[{"id":3474,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"16003:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3475,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"16010:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3476,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"16017:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3473,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"15971:31:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:14"},{"expression":{"components":[{"id":3479,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"16043:1:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3484,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"16062:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3482,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:14","typeDescriptions":{}}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3480,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:14","typeDescriptions":{}}},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3409,"id":3488,"nodeType":"Return","src":"16035:31:14"}]}}]},"documentation":{"id":3397,"nodeType":"StructuredDocumentation","src":"15020:226:14","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3500,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:14","nodeType":"FunctionDefinition","parameters":{"id":3404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3399,"mutability":"mutable","name":"input","nameLocation":"15299:5:14","nodeType":"VariableDeclaration","scope":3500,"src":"15285:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3398,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3401,"mutability":"mutable","name":"begin","nameLocation":"15322:5:14","nodeType":"VariableDeclaration","scope":3500,"src":"15314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3400,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3403,"mutability":"mutable","name":"end","nameLocation":"15345:3:14","nodeType":"VariableDeclaration","scope":3500,"src":"15337:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3402,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:14"},"returnParameters":{"id":3409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3406,"mutability":"mutable","name":"success","nameLocation":"15383:7:14","nodeType":"VariableDeclaration","scope":3500,"src":"15378:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3405,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3408,"mutability":"mutable","name":"value","nameLocation":"15400:5:14","nodeType":"VariableDeclaration","scope":3500,"src":"15392:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3407,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:14"},"scope":3739,"src":"15251:889:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3559,"nodeType":"Block","src":"16209:461:14","statements":[{"assignments":[3508],"declarations":[{"constant":false,"id":3508,"mutability":"mutable","name":"value","nameLocation":"16225:5:14","nodeType":"VariableDeclaration","scope":3559,"src":"16219:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3507,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3513,"initialValue":{"arguments":[{"id":3511,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"16239:3:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3509,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:14","typeDescriptions":{}}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:14"},{"id":3556,"nodeType":"UncheckedBlock","src":"16403:238:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"16431:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:14","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"16445:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:14","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"16491:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:14","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"16505:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:14","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"16552:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"16566:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:14","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3548,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3547,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:14","memberName":"max","nodeType":"MemberAccess","src":"16615:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3506,"id":3552,"nodeType":"Return","src":"16608:22:14"},"id":3553,"nodeType":"IfStatement","src":"16548:82:14","trueBody":{"expression":{"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"16578:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:14","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3546,"nodeType":"ExpressionStatement","src":"16578:11:14"}},"id":3554,"nodeType":"IfStatement","src":"16487:143:14","trueBody":{"expression":{"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"16518:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:14","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3535,"nodeType":"ExpressionStatement","src":"16518:11:14"}},"id":3555,"nodeType":"IfStatement","src":"16427:203:14","trueBody":{"expression":{"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"16457:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:14","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3524,"nodeType":"ExpressionStatement","src":"16457:11:14"}}]},{"expression":{"id":3557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"16658:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3506,"id":3558,"nodeType":"Return","src":"16651:12:14"}]},"id":3560,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:14","nodeType":"FunctionDefinition","parameters":{"id":3503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"chr","nameLocation":"16175:3:14","nodeType":"VariableDeclaration","scope":3560,"src":"16168:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3501,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:14"},"returnParameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3560,"src":"16202:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3504,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:14"},"scope":3739,"src":"16146:524:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3725,"nodeType":"Block","src":"17336:1331:14","statements":[{"assignments":[3569],"declarations":[{"constant":false,"id":3569,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:14","nodeType":"VariableDeclaration","scope":3725,"src":"17346:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3568,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3574,"initialValue":{"arguments":[{"id":3572,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"17374:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3570,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:14","typeDescriptions":{}}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:14"},{"assignments":[3576],"declarations":[{"constant":false,"id":3576,"mutability":"mutable","name":"output","nameLocation":"17403:6:14","nodeType":"VariableDeclaration","scope":3725,"src":"17390:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3575,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3584,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3580,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"17426:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:14","memberName":"length","nodeType":"MemberAccess","src":"17426:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3577,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:14"},{"assignments":[3586],"declarations":[{"constant":false,"id":3586,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:14","nodeType":"VariableDeclaration","scope":3725,"src":"17473:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3585,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3588,"initialValue":{"hexValue":"30","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:14"},{"body":{"id":3717,"nodeType":"Block","src":"17548:854:14","statements":[{"assignments":[3600],"declarations":[{"constant":false,"id":3600,"mutability":"mutable","name":"char","nameLocation":"17569:4:14","nodeType":"VariableDeclaration","scope":3717,"src":"17562:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3599,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3608,"initialValue":{"arguments":[{"arguments":[{"id":3604,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"17606:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3605,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"17614:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3603,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"17583:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3601,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:14","typeDescriptions":{}}},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:14"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3609,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"17637:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3613,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"17672:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3611,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:14","typeDescriptions":{}}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3616,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3618,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3715,"nodeType":"Block","src":"18330:62:14","statements":[{"expression":{"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3708,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"18348:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3711,"indexExpression":{"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:14","subExpression":{"id":3709,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"18355:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3712,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"18373:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3714,"nodeType":"ExpressionStatement","src":"18348:29:14"}]},"id":3716,"nodeType":"IfStatement","src":"17631:761:14","trueBody":{"id":3707,"nodeType":"Block","src":"17687:637:14","statements":[{"expression":{"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3622,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"17705:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3625,"indexExpression":{"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:14","subExpression":{"id":3623,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"17712:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3628,"nodeType":"ExpressionStatement","src":"17705:29:14"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3629,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"17756:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3639,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"17825:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:14","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3649,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"17894:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3659,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"17963:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:14","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3669,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"18032:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:14","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3679,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"18101:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:14","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3689,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"18171:4:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3700,"nodeType":"IfStatement","src":"18167:143:14","trueBody":{"id":3699,"nodeType":"Block","src":"18185:125:14","statements":[{"expression":{"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3692,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"18263:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3695,"indexExpression":{"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:14","subExpression":{"id":3693,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"18270:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3698,"nodeType":"ExpressionStatement","src":"18263:28:14"}]}},"id":3701,"nodeType":"IfStatement","src":"18097:213:14","trueBody":{"expression":{"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3682,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"18115:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3685,"indexExpression":{"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:14","subExpression":{"id":3683,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"18122:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3688,"nodeType":"ExpressionStatement","src":"18115:29:14"}},"id":3702,"nodeType":"IfStatement","src":"18028:282:14","trueBody":{"expression":{"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3672,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"18046:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3675,"indexExpression":{"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:14","subExpression":{"id":3673,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"18053:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3678,"nodeType":"ExpressionStatement","src":"18046:28:14"}},"id":3703,"nodeType":"IfStatement","src":"17959:351:14","trueBody":{"expression":{"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3662,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"17977:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3665,"indexExpression":{"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:14","subExpression":{"id":3663,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"17984:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3668,"nodeType":"ExpressionStatement","src":"17977:28:14"}},"id":3704,"nodeType":"IfStatement","src":"17890:420:14","trueBody":{"expression":{"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3652,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"17908:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3655,"indexExpression":{"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:14","subExpression":{"id":3653,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"17915:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3658,"nodeType":"ExpressionStatement","src":"17908:28:14"}},"id":3705,"nodeType":"IfStatement","src":"17821:489:14","trueBody":{"expression":{"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3642,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"17839:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3645,"indexExpression":{"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:14","subExpression":{"id":3643,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"17846:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3648,"nodeType":"ExpressionStatement","src":"17839:28:14"}},"id":3706,"nodeType":"IfStatement","src":"17752:558:14","trueBody":{"expression":{"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3632,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"17770:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3635,"indexExpression":{"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:14","subExpression":{"id":3633,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"17777:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3638,"nodeType":"ExpressionStatement","src":"17770:28:14"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3592,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"17524:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3593,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"17528:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:14","memberName":"length","nodeType":"MemberAccess","src":"17528:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3718,"initializationExpression":{"assignments":[3590],"declarations":[{"constant":false,"id":3590,"mutability":"mutable","name":"i","nameLocation":"17521:1:14","nodeType":"VariableDeclaration","scope":3718,"src":"17513:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3591,"nodeType":"VariableDeclarationStatement","src":"17513:9:14"},"loopExpression":{"expression":{"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:14","subExpression":{"id":3596,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"17545:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3598,"nodeType":"ExpressionStatement","src":"17543:3:14"},"nodeType":"ForStatement","src":"17508:894:14"},{"AST":{"nodeType":"YulBlock","src":"18500:129:14","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18521:6:14"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18529:12:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18514:6:14"},"nodeType":"YulFunctionCall","src":"18514:28:14"},"nodeType":"YulExpressionStatement","src":"18514:28:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18562:4:14","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18572:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18584:1:14","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18591:1:14","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18598:12:14"},{"kind":"number","nodeType":"YulLiteral","src":"18612:2:14","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:14"},"nodeType":"YulFunctionCall","src":"18594:21:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18587:3:14"},"nodeType":"YulFunctionCall","src":"18587:29:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18580:3:14"},"nodeType":"YulFunctionCall","src":"18580:37:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18568:3:14"},"nodeType":"YulFunctionCall","src":"18568:50:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18555:6:14"},"nodeType":"YulFunctionCall","src":"18555:64:14"},"nodeType":"YulExpressionStatement","src":"18555:64:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":3576,"isOffset":false,"isSlot":false,"src":"18521:6:14","valueSize":1},{"declaration":3576,"isOffset":false,"isSlot":false,"src":"18572:6:14","valueSize":1},{"declaration":3586,"isOffset":false,"isSlot":false,"src":"18529:12:14","valueSize":1},{"declaration":3586,"isOffset":false,"isSlot":false,"src":"18598:12:14","valueSize":1}],"flags":["memory-safe"],"id":3719,"nodeType":"InlineAssembly","src":"18475:154:14"},{"expression":{"arguments":[{"id":3722,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"18653:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3720,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:14","typeDescriptions":{}}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3567,"id":3724,"nodeType":"Return","src":"18639:21:14"}]},"documentation":{"id":3561,"nodeType":"StructuredDocumentation","src":"16676:576:14","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3726,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:14","nodeType":"FunctionDefinition","parameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3563,"mutability":"mutable","name":"input","nameLocation":"17291:5:14","nodeType":"VariableDeclaration","scope":3726,"src":"17277:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3562,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:14"},"returnParameters":{"id":3567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3726,"src":"17321:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3565,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:14"},"scope":3739,"src":"17257:1410:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3737,"nodeType":"Block","src":"19052:225:14","statements":[{"AST":{"nodeType":"YulBlock","src":"19201:70:14","statements":[{"nodeType":"YulAssignment","src":"19215:46:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19238:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"19246:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19234:3:14"},"nodeType":"YulFunctionCall","src":"19234:17:14"},{"name":"offset","nodeType":"YulIdentifier","src":"19253:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19230:3:14"},"nodeType":"YulFunctionCall","src":"19230:30:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19224:5:14"},"nodeType":"YulFunctionCall","src":"19224:37:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19215:5:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3729,"isOffset":false,"isSlot":false,"src":"19238:6:14","valueSize":1},{"declaration":3731,"isOffset":false,"isSlot":false,"src":"19253:6:14","valueSize":1},{"declaration":3734,"isOffset":false,"isSlot":false,"src":"19215:5:14","valueSize":1}],"flags":["memory-safe"],"id":3736,"nodeType":"InlineAssembly","src":"19176:95:14"}]},"documentation":{"id":3727,"nodeType":"StructuredDocumentation","src":"18673:268:14","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3738,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:14","nodeType":"FunctionDefinition","parameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:14","nodeType":"VariableDeclaration","scope":3738,"src":"18978:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3728,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3731,"mutability":"mutable","name":"offset","nameLocation":"19007:6:14","nodeType":"VariableDeclaration","scope":3738,"src":"18999:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3730,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:14"},"returnParameters":{"id":3735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3734,"mutability":"mutable","name":"value","nameLocation":"19045:5:14","nodeType":"VariableDeclaration","scope":3738,"src":"19037:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:14"},"scope":3739,"src":"18946:331:14","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3740,"src":"297:18982:14","usedErrors":[2397,2400,2403],"usedEvents":[]}],"src":"101:19179:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4087]},"id":4088,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3741,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3742,"nodeType":"StructuredDocumentation","src":"138:205:15","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4087,"linearizedBaseContracts":[4087],"name":"ECDSA","nameLocation":"352:5:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3747,"members":[{"id":3743,"name":"NoError","nameLocation":"392:7:15","nodeType":"EnumValue","src":"392:7:15"},{"id":3744,"name":"InvalidSignature","nameLocation":"409:16:15","nodeType":"EnumValue","src":"409:16:15"},{"id":3745,"name":"InvalidSignatureLength","nameLocation":"435:22:15","nodeType":"EnumValue","src":"435:22:15"},{"id":3746,"name":"InvalidSignatureS","nameLocation":"467:17:15","nodeType":"EnumValue","src":"467:17:15"}],"name":"RecoverError","nameLocation":"369:12:15","nodeType":"EnumDefinition","src":"364:126:15"},{"documentation":{"id":3748,"nodeType":"StructuredDocumentation","src":"496:63:15","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3750,"name":"ECDSAInvalidSignature","nameLocation":"570:21:15","nodeType":"ErrorDefinition","parameters":{"id":3749,"nodeType":"ParameterList","parameters":[],"src":"591:2:15"},"src":"564:30:15"},{"documentation":{"id":3751,"nodeType":"StructuredDocumentation","src":"600:60:15","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3755,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:15","nodeType":"ErrorDefinition","parameters":{"id":3754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3753,"mutability":"mutable","name":"length","nameLocation":"707:6:15","nodeType":"VariableDeclaration","scope":3755,"src":"699:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:15"},"src":"665:50:15"},{"documentation":{"id":3756,"nodeType":"StructuredDocumentation","src":"721:85:15","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3760,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:15","nodeType":"ErrorDefinition","parameters":{"id":3759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"s","nameLocation":"848:1:15","nodeType":"VariableDeclaration","scope":3760,"src":"840:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:15"},"src":"811:40:15"},{"body":{"id":3812,"nodeType":"Block","src":"2285:622:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3775,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"2299:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:15","memberName":"length","nodeType":"MemberAccess","src":"2299:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3810,"nodeType":"Block","src":"2793:108:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3797,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:15","typeDescriptions":{}}},"id":3800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3801,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"2827:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3747_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:15","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3745,"src":"2827:35:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3805,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"2872:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:15","memberName":"length","nodeType":"MemberAccess","src":"2872:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:15","typeDescriptions":{}}},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3747_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3774,"id":3809,"nodeType":"Return","src":"2807:83:15"}]},"id":3811,"nodeType":"IfStatement","src":"2295:606:15","trueBody":{"id":3796,"nodeType":"Block","src":"2323:464:15","statements":[{"assignments":[3780],"declarations":[{"constant":false,"id":3780,"mutability":"mutable","name":"r","nameLocation":"2345:1:15","nodeType":"VariableDeclaration","scope":3796,"src":"2337:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3781,"nodeType":"VariableDeclarationStatement","src":"2337:9:15"},{"assignments":[3783],"declarations":[{"constant":false,"id":3783,"mutability":"mutable","name":"s","nameLocation":"2368:1:15","nodeType":"VariableDeclaration","scope":3796,"src":"2360:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3784,"nodeType":"VariableDeclarationStatement","src":"2360:9:15"},{"assignments":[3786],"declarations":[{"constant":false,"id":3786,"mutability":"mutable","name":"v","nameLocation":"2389:1:15","nodeType":"VariableDeclaration","scope":3796,"src":"2383:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3785,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3787,"nodeType":"VariableDeclarationStatement","src":"2383:7:15"},{"AST":{"nodeType":"YulBlock","src":"2560:171:15","statements":[{"nodeType":"YulAssignment","src":"2578:32:15","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:15"},"nodeType":"YulFunctionCall","src":"2589:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:15"},"nodeType":"YulFunctionCall","src":"2583:27:15"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:15"}]},{"nodeType":"YulAssignment","src":"2627:32:15","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:15"},"nodeType":"YulFunctionCall","src":"2638:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:15"},"nodeType":"YulFunctionCall","src":"2632:27:15"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:15"}]},{"nodeType":"YulAssignment","src":"2676:41:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:15","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:15"},"nodeType":"YulFunctionCall","src":"2695:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:15"},"nodeType":"YulFunctionCall","src":"2689:27:15"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:15"},"nodeType":"YulFunctionCall","src":"2681:36:15"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3780,"isOffset":false,"isSlot":false,"src":"2578:1:15","valueSize":1},{"declaration":3783,"isOffset":false,"isSlot":false,"src":"2627:1:15","valueSize":1},{"declaration":3765,"isOffset":false,"isSlot":false,"src":"2593:9:15","valueSize":1},{"declaration":3765,"isOffset":false,"isSlot":false,"src":"2642:9:15","valueSize":1},{"declaration":3765,"isOffset":false,"isSlot":false,"src":"2699:9:15","valueSize":1},{"declaration":3786,"isOffset":false,"isSlot":false,"src":"2676:1:15","valueSize":1}],"flags":["memory-safe"],"id":3788,"nodeType":"InlineAssembly","src":"2535:196:15"},{"expression":{"arguments":[{"id":3790,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"2762:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3791,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"2768:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3792,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"2771:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3793,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"2774:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3789,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3813,3893,4001],"referencedDeclaration":4001,"src":"2751:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3747_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3747_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3774,"id":3795,"nodeType":"Return","src":"2744:32:15"}]}}]},"documentation":{"id":3761,"nodeType":"StructuredDocumentation","src":"857:1267:15","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3813,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:15","nodeType":"FunctionDefinition","parameters":{"id":3766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3763,"mutability":"mutable","name":"hash","nameLocation":"2166:4:15","nodeType":"VariableDeclaration","scope":3813,"src":"2158:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3765,"mutability":"mutable","name":"signature","nameLocation":"2193:9:15","nodeType":"VariableDeclaration","scope":3813,"src":"2180:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3764,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:15"},"returnParameters":{"id":3774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3768,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:15","nodeType":"VariableDeclaration","scope":3813,"src":"2232:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3767,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3771,"mutability":"mutable","name":"err","nameLocation":"2264:3:15","nodeType":"VariableDeclaration","scope":3813,"src":"2251:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3770,"nodeType":"UserDefinedTypeName","pathNode":{"id":3769,"name":"RecoverError","nameLocations":["2251:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3747,"src":"2251:12:15"},"referencedDeclaration":3747,"src":"2251:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3773,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:15","nodeType":"VariableDeclaration","scope":3813,"src":"2269:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:15"},"scope":4087,"src":"2129:778:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3842,"nodeType":"Block","src":"3801:168:15","statements":[{"assignments":[3824,3827,3829],"declarations":[{"constant":false,"id":3824,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:15","nodeType":"VariableDeclaration","scope":3842,"src":"3812:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3823,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"error","nameLocation":"3844:5:15","nodeType":"VariableDeclaration","scope":3842,"src":"3831:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3826,"nodeType":"UserDefinedTypeName","pathNode":{"id":3825,"name":"RecoverError","nameLocations":["3831:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3747,"src":"3831:12:15"},"referencedDeclaration":3747,"src":"3831:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3829,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:15","nodeType":"VariableDeclaration","scope":3842,"src":"3851:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3828,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3834,"initialValue":{"arguments":[{"id":3831,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"3882:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3832,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"3888:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3830,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3813,3893,4001],"referencedDeclaration":3813,"src":"3871:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3747_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3747_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:15"},{"expression":{"arguments":[{"id":3836,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"3920:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},{"id":3837,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"3927:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3835,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"3908:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3747_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3839,"nodeType":"ExpressionStatement","src":"3908:28:15"},{"expression":{"id":3840,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"3953:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3822,"id":3841,"nodeType":"Return","src":"3946:16:15"}]},"documentation":{"id":3814,"nodeType":"StructuredDocumentation","src":"2913:796:15","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3843,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:15","nodeType":"FunctionDefinition","parameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3816,"mutability":"mutable","name":"hash","nameLocation":"3739:4:15","nodeType":"VariableDeclaration","scope":3843,"src":"3731:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3815,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3818,"mutability":"mutable","name":"signature","nameLocation":"3758:9:15","nodeType":"VariableDeclaration","scope":3843,"src":"3745:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3817,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:15"},"returnParameters":{"id":3822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3843,"src":"3792:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3820,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:15"},"scope":4087,"src":"3714:255:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3892,"nodeType":"Block","src":"4348:342:15","statements":[{"id":3891,"nodeType":"UncheckedBlock","src":"4358:326:15","statements":[{"assignments":[3861],"declarations":[{"constant":false,"id":3861,"mutability":"mutable","name":"s","nameLocation":"4390:1:15","nodeType":"VariableDeclaration","scope":3891,"src":"4382:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3868,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3862,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"4394:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:15","typeDescriptions":{}}},"id":3866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:15"},{"assignments":[3870],"declarations":[{"constant":false,"id":3870,"mutability":"mutable","name":"v","nameLocation":"4591:1:15","nodeType":"VariableDeclaration","scope":3891,"src":"4585:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3869,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3883,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3875,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"4610:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:15","typeDescriptions":{}}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:15","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3871,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:15","typeDescriptions":{}}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:15"},{"expression":{"arguments":[{"id":3885,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"4659:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3886,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"4665:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3887,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"4668:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3888,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"4671:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3884,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3813,3893,4001],"referencedDeclaration":4001,"src":"4648:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3747_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3747_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3859,"id":3890,"nodeType":"Return","src":"4641:32:15"}]}]},"documentation":{"id":3844,"nodeType":"StructuredDocumentation","src":"3975:205:15","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3893,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:15","nodeType":"FunctionDefinition","parameters":{"id":3851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3846,"mutability":"mutable","name":"hash","nameLocation":"4222:4:15","nodeType":"VariableDeclaration","scope":3893,"src":"4214:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3848,"mutability":"mutable","name":"r","nameLocation":"4244:1:15","nodeType":"VariableDeclaration","scope":3893,"src":"4236:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3850,"mutability":"mutable","name":"vs","nameLocation":"4263:2:15","nodeType":"VariableDeclaration","scope":3893,"src":"4255:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:15"},"returnParameters":{"id":3859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3853,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:15","nodeType":"VariableDeclaration","scope":3893,"src":"4295:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3852,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3856,"mutability":"mutable","name":"err","nameLocation":"4327:3:15","nodeType":"VariableDeclaration","scope":3893,"src":"4314:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3855,"nodeType":"UserDefinedTypeName","pathNode":{"id":3854,"name":"RecoverError","nameLocations":["4314:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3747,"src":"4314:12:15"},"referencedDeclaration":3747,"src":"4314:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3858,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:15","nodeType":"VariableDeclaration","scope":3893,"src":"4332:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:15"},"scope":4087,"src":"4185:505:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3925,"nodeType":"Block","src":"4903:164:15","statements":[{"assignments":[3906,3909,3911],"declarations":[{"constant":false,"id":3906,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:15","nodeType":"VariableDeclaration","scope":3925,"src":"4914:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3905,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3909,"mutability":"mutable","name":"error","nameLocation":"4946:5:15","nodeType":"VariableDeclaration","scope":3925,"src":"4933:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3908,"nodeType":"UserDefinedTypeName","pathNode":{"id":3907,"name":"RecoverError","nameLocations":["4933:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3747,"src":"4933:12:15"},"referencedDeclaration":3747,"src":"4933:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3911,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:15","nodeType":"VariableDeclaration","scope":3925,"src":"4953:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3917,"initialValue":{"arguments":[{"id":3913,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"4984:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3914,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"4990:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3915,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"4993:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3912,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3813,3893,4001],"referencedDeclaration":3893,"src":"4973:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3747_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3747_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:15"},{"expression":{"arguments":[{"id":3919,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"5018:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},{"id":3920,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"5025:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3918,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"5006:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3747_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3922,"nodeType":"ExpressionStatement","src":"5006:28:15"},{"expression":{"id":3923,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"5051:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3904,"id":3924,"nodeType":"Return","src":"5044:16:15"}]},"documentation":{"id":3894,"nodeType":"StructuredDocumentation","src":"4696:116:15","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3926,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:15","nodeType":"FunctionDefinition","parameters":{"id":3901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3896,"mutability":"mutable","name":"hash","nameLocation":"4842:4:15","nodeType":"VariableDeclaration","scope":3926,"src":"4834:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3895,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3898,"mutability":"mutable","name":"r","nameLocation":"4856:1:15","nodeType":"VariableDeclaration","scope":3926,"src":"4848:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3900,"mutability":"mutable","name":"vs","nameLocation":"4867:2:15","nodeType":"VariableDeclaration","scope":3926,"src":"4859:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:15"},"returnParameters":{"id":3904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3926,"src":"4894:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3902,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:15"},"scope":4087,"src":"4817:250:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4000,"nodeType":"Block","src":"5382:1372:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3947,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"6278:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3945,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:15","typeDescriptions":{}}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3961,"nodeType":"IfStatement","src":"6266:164:15","trueBody":{"id":3960,"nodeType":"Block","src":"6351:79:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3951,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:15","typeDescriptions":{}}},"id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3955,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"6385:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3747_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:15","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"6385:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},{"id":3957,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"6417:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3958,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3747_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3944,"id":3959,"nodeType":"Return","src":"6365:54:15"}]}},{"assignments":[3963],"declarations":[{"constant":false,"id":3963,"mutability":"mutable","name":"signer","nameLocation":"6532:6:15","nodeType":"VariableDeclaration","scope":4000,"src":"6524:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3962,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3970,"initialValue":{"arguments":[{"id":3965,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"6551:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3966,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"6557:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3967,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"6560:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3968,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"6563:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3964,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:15","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3971,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"6579:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3972,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:15","typeDescriptions":{}}},"id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3990,"nodeType":"IfStatement","src":"6575:113:15","trueBody":{"id":3989,"nodeType":"Block","src":"6601:87:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3977,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:15","typeDescriptions":{}}},"id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3981,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"6635:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3747_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:15","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3744,"src":"6635:29:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:15","typeDescriptions":{}}},"id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3747_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3944,"id":3988,"nodeType":"Return","src":"6615:62:15"}]}},{"expression":{"components":[{"id":3991,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"6706:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3992,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"6714:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3747_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:15","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3743,"src":"6714:20:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:15","typeDescriptions":{}}},"id":3997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3747_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3944,"id":3999,"nodeType":"Return","src":"6698:49:15"}]},"documentation":{"id":3927,"nodeType":"StructuredDocumentation","src":"5073:125:15","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4001,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:15","nodeType":"FunctionDefinition","parameters":{"id":3936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"hash","nameLocation":"5240:4:15","nodeType":"VariableDeclaration","scope":4001,"src":"5232:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3931,"mutability":"mutable","name":"v","nameLocation":"5260:1:15","nodeType":"VariableDeclaration","scope":4001,"src":"5254:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3930,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3933,"mutability":"mutable","name":"r","nameLocation":"5279:1:15","nodeType":"VariableDeclaration","scope":4001,"src":"5271:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3935,"mutability":"mutable","name":"s","nameLocation":"5298:1:15","nodeType":"VariableDeclaration","scope":4001,"src":"5290:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:15"},"returnParameters":{"id":3944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3938,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:15","nodeType":"VariableDeclaration","scope":4001,"src":"5329:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3937,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3941,"mutability":"mutable","name":"err","nameLocation":"5361:3:15","nodeType":"VariableDeclaration","scope":4001,"src":"5348:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3940,"nodeType":"UserDefinedTypeName","pathNode":{"id":3939,"name":"RecoverError","nameLocations":["5348:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3747,"src":"5348:12:15"},"referencedDeclaration":3747,"src":"5348:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3943,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:15","nodeType":"VariableDeclaration","scope":4001,"src":"5366:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:15"},"scope":4087,"src":"5203:1551:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4036,"nodeType":"Block","src":"6981:166:15","statements":[{"assignments":[4016,4019,4021],"declarations":[{"constant":false,"id":4016,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:15","nodeType":"VariableDeclaration","scope":4036,"src":"6992:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4015,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4019,"mutability":"mutable","name":"error","nameLocation":"7024:5:15","nodeType":"VariableDeclaration","scope":4036,"src":"7011:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4018,"nodeType":"UserDefinedTypeName","pathNode":{"id":4017,"name":"RecoverError","nameLocations":["7011:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3747,"src":"7011:12:15"},"referencedDeclaration":3747,"src":"7011:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4021,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:15","nodeType":"VariableDeclaration","scope":4036,"src":"7031:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4028,"initialValue":{"arguments":[{"id":4023,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"7062:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4024,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"7068:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4025,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"7071:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4026,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"7074:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4022,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3813,3893,4001],"referencedDeclaration":4001,"src":"7051:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3747_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3747_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:15"},{"expression":{"arguments":[{"id":4030,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"7098:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},{"id":4031,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"7105:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4029,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"7086:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3747_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4033,"nodeType":"ExpressionStatement","src":"7086:28:15"},{"expression":{"id":4034,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"7131:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4014,"id":4035,"nodeType":"Return","src":"7124:16:15"}]},"documentation":{"id":4002,"nodeType":"StructuredDocumentation","src":"6760:122:15","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4037,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:15","nodeType":"FunctionDefinition","parameters":{"id":4011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4004,"mutability":"mutable","name":"hash","nameLocation":"6912:4:15","nodeType":"VariableDeclaration","scope":4037,"src":"6904:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4003,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4006,"mutability":"mutable","name":"v","nameLocation":"6924:1:15","nodeType":"VariableDeclaration","scope":4037,"src":"6918:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4005,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4008,"mutability":"mutable","name":"r","nameLocation":"6935:1:15","nodeType":"VariableDeclaration","scope":4037,"src":"6927:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4010,"mutability":"mutable","name":"s","nameLocation":"6946:1:15","nodeType":"VariableDeclaration","scope":4037,"src":"6938:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:15"},"returnParameters":{"id":4014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4037,"src":"6972:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4012,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:15"},"scope":4087,"src":"6887:260:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4085,"nodeType":"Block","src":"7352:460:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4046,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"7366:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4047,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"7375:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3747_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:15","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3743,"src":"7375:20:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4052,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"7462:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4053,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"7471:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3747_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:15","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3744,"src":"7471:29:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4060,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"7567:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4061,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"7576:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3747_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:15","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3745,"src":"7576:35:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4072,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"7701:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4073,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"7710:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3747_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:15","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"7710:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4081,"nodeType":"IfStatement","src":"7697:109:15","trueBody":{"id":4080,"nodeType":"Block","src":"7742:64:15","statements":[{"errorCall":{"arguments":[{"id":4077,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"7786:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4076,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"7763:22:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4079,"nodeType":"RevertStatement","src":"7756:39:15"}]}},"id":4082,"nodeType":"IfStatement","src":"7563:243:15","trueBody":{"id":4071,"nodeType":"Block","src":"7613:78:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4067,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"7670:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4065,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:15","typeDescriptions":{}}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4064,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"7634:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4070,"nodeType":"RevertStatement","src":"7627:53:15"}]}},"id":4083,"nodeType":"IfStatement","src":"7458:348:15","trueBody":{"id":4059,"nodeType":"Block","src":"7502:55:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4056,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"7523:21:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4058,"nodeType":"RevertStatement","src":"7516:30:15"}]}},"id":4084,"nodeType":"IfStatement","src":"7362:444:15","trueBody":{"id":4051,"nodeType":"Block","src":"7397:55:15","statements":[{"functionReturnParameters":4045,"id":4050,"nodeType":"Return","src":"7411:7:15"}]}}]},"documentation":{"id":4038,"nodeType":"StructuredDocumentation","src":"7153:122:15","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":4086,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:15","nodeType":"FunctionDefinition","parameters":{"id":4044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4041,"mutability":"mutable","name":"error","nameLocation":"7314:5:15","nodeType":"VariableDeclaration","scope":4086,"src":"7301:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4040,"nodeType":"UserDefinedTypeName","pathNode":{"id":4039,"name":"RecoverError","nameLocations":["7301:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3747,"src":"7301:12:15"},"referencedDeclaration":3747,"src":"7301:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3747","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4043,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:15","nodeType":"VariableDeclaration","scope":4086,"src":"7321:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:15"},"returnParameters":{"id":4045,"nodeType":"ParameterList","parameters":[],"src":"7352:0:15"},"scope":4087,"src":"7280:532:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4088,"src":"344:7470:15","usedErrors":[3750,3755,3760],"usedEvents":[]}],"src":"112:7703:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4173],"Strings":[3739]},"id":4174,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4089,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4091,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4174,"sourceUnit":3740,"src":"149:39:16","symbolAliases":[{"foreign":{"id":4090,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"157:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4092,"nodeType":"StructuredDocumentation","src":"190:330:16","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4173,"linearizedBaseContracts":[4173],"name":"MessageHashUtils","nameLocation":"529:16:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":4101,"nodeType":"Block","src":"1339:341:16","statements":[{"AST":{"nodeType":"YulBlock","src":"1374:300:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1395:4:16","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1401:34:16","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:16"},"nodeType":"YulFunctionCall","src":"1388:48:16"},"nodeType":"YulExpressionStatement","src":"1388:48:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:4:16","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1503:11:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1490:6:16"},"nodeType":"YulFunctionCall","src":"1490:25:16"},"nodeType":"YulExpressionStatement","src":"1490:25:16"},{"nodeType":"YulAssignment","src":"1569:31:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1589:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1595:4:16","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1579:9:16"},"nodeType":"YulFunctionCall","src":"1579:21:16"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1569:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4098,"isOffset":false,"isSlot":false,"src":"1569:6:16","valueSize":1},{"declaration":4095,"isOffset":false,"isSlot":false,"src":"1503:11:16","valueSize":1}],"flags":["memory-safe"],"id":4100,"nodeType":"InlineAssembly","src":"1349:325:16"}]},"documentation":{"id":4093,"nodeType":"StructuredDocumentation","src":"552:690:16","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4102,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:16","nodeType":"FunctionDefinition","parameters":{"id":4096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4095,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:16","nodeType":"VariableDeclaration","scope":4102,"src":"1279:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:16"},"returnParameters":{"id":4099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4098,"mutability":"mutable","name":"digest","nameLocation":"1331:6:16","nodeType":"VariableDeclaration","scope":4102,"src":"1323:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:16"},"scope":4173,"src":"1247:433:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4127,"nodeType":"Block","src":"2257:143:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4119,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"2366:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:16","memberName":"length","nodeType":"MemberAccess","src":"2366:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4117,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"2349:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3739_$","typeString":"type(library Strings)"}},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:16","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2451,"src":"2349:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4115,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:16","typeDescriptions":{}}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4123,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"2384:7:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4111,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:16","typeDescriptions":{}}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:16","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:16","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4110,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4109,"id":4126,"nodeType":"Return","src":"2267:126:16"}]},"documentation":{"id":4103,"nodeType":"StructuredDocumentation","src":"1686:480:16","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4128,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:16","nodeType":"FunctionDefinition","parameters":{"id":4106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"mutability":"mutable","name":"message","nameLocation":"2216:7:16","nodeType":"VariableDeclaration","scope":4128,"src":"2203:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4104,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:16"},"returnParameters":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4128,"src":"2248:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:16"},"scope":4173,"src":"2171:229:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4147,"nodeType":"Block","src":"2854:80:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4142,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"2910:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4143,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"2921:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4139,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4138,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4137,"id":4146,"nodeType":"Return","src":"2864:63:16"}]},"documentation":{"id":4129,"nodeType":"StructuredDocumentation","src":"2406:332:16","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4148,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:16","nodeType":"FunctionDefinition","parameters":{"id":4134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4131,"mutability":"mutable","name":"validator","nameLocation":"2792:9:16","nodeType":"VariableDeclaration","scope":4148,"src":"2784:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4130,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4133,"mutability":"mutable","name":"data","nameLocation":"2816:4:16","nodeType":"VariableDeclaration","scope":4148,"src":"2803:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4132,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:16"},"returnParameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4148,"src":"2845:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:16"},"scope":4173,"src":"2743:191:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4159,"nodeType":"Block","src":"3216:216:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3251:175:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:4:16","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nodeType":"YulLiteral","src":"3278:10:16","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:16"},"nodeType":"YulFunctionCall","src":"3265:24:16"},"nodeType":"YulExpressionStatement","src":"3265:24:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3309:4:16","type":"","value":"0x02"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:16","type":"","value":"96"},{"name":"validator","nodeType":"YulIdentifier","src":"3323:9:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3315:3:16"},"nodeType":"YulFunctionCall","src":"3315:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:16"},"nodeType":"YulFunctionCall","src":"3302:32:16"},"nodeType":"YulExpressionStatement","src":"3302:32:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3354:4:16","type":"","value":"0x16"},{"name":"messageHash","nodeType":"YulIdentifier","src":"3360:11:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3347:6:16"},"nodeType":"YulFunctionCall","src":"3347:25:16"},"nodeType":"YulExpressionStatement","src":"3347:25:16"},{"nodeType":"YulAssignment","src":"3385:31:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3405:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:16","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3395:9:16"},"nodeType":"YulFunctionCall","src":"3395:21:16"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3385:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4156,"isOffset":false,"isSlot":false,"src":"3385:6:16","valueSize":1},{"declaration":4153,"isOffset":false,"isSlot":false,"src":"3360:11:16","valueSize":1},{"declaration":4151,"isOffset":false,"isSlot":false,"src":"3323:9:16","valueSize":1}],"flags":["memory-safe"],"id":4158,"nodeType":"InlineAssembly","src":"3226:200:16"}]},"documentation":{"id":4149,"nodeType":"StructuredDocumentation","src":"2940:129:16","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":4160,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:16","nodeType":"FunctionDefinition","parameters":{"id":4154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4151,"mutability":"mutable","name":"validator","nameLocation":"3132:9:16","nodeType":"VariableDeclaration","scope":4160,"src":"3124:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4150,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4153,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:16","nodeType":"VariableDeclaration","scope":4160,"src":"3151:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:16"},"returnParameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4156,"mutability":"mutable","name":"digest","nameLocation":"3208:6:16","nodeType":"VariableDeclaration","scope":4160,"src":"3200:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:16"},"scope":4173,"src":"3074:358:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4171,"nodeType":"Block","src":"3983:265:16","statements":[{"AST":{"nodeType":"YulBlock","src":"4018:224:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4032:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4049:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4043:5:16"},"nodeType":"YulFunctionCall","src":"4043:11:16"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"4036:3:16","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4074:3:16"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"4079:10:16","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:16"},"nodeType":"YulFunctionCall","src":"4067:23:16"},"nodeType":"YulExpressionStatement","src":"4067:23:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4114:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"4119:4:16","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:16"},"nodeType":"YulFunctionCall","src":"4110:14:16"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"4126:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:16"},"nodeType":"YulFunctionCall","src":"4103:39:16"},"nodeType":"YulExpressionStatement","src":"4103:39:16"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4166:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"4171:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:16"},"nodeType":"YulFunctionCall","src":"4162:14:16"},{"name":"structHash","nodeType":"YulIdentifier","src":"4178:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:16"},"nodeType":"YulFunctionCall","src":"4155:34:16"},"nodeType":"YulExpressionStatement","src":"4155:34:16"},{"nodeType":"YulAssignment","src":"4202:30:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4222:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"4227:4:16","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4212:9:16"},"nodeType":"YulFunctionCall","src":"4212:20:16"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"4202:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4168,"isOffset":false,"isSlot":false,"src":"4202:6:16","valueSize":1},{"declaration":4163,"isOffset":false,"isSlot":false,"src":"4126:15:16","valueSize":1},{"declaration":4165,"isOffset":false,"isSlot":false,"src":"4178:10:16","valueSize":1}],"flags":["memory-safe"],"id":4170,"nodeType":"InlineAssembly","src":"3993:249:16"}]},"documentation":{"id":4161,"nodeType":"StructuredDocumentation","src":"3438:431:16","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4172,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:16","nodeType":"FunctionDefinition","parameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4163,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:16","nodeType":"VariableDeclaration","scope":4172,"src":"3899:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4165,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:16","nodeType":"VariableDeclaration","scope":4172,"src":"3924:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:16"},"returnParameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"digest","nameLocation":"3975:6:16","nodeType":"VariableDeclaration","scope":4172,"src":"3967:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:16"},"scope":4173,"src":"3874:374:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4174,"src":"521:3729:16","usedErrors":[],"usedEvents":[]}],"src":"123:4128:16"},"id":16},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4197],"IERC165":[4209]},"id":4198,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4175,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4198,"sourceUnit":4210,"src":"140:38:17","symbolAliases":[{"foreign":{"id":4176,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"148:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4179,"name":"IERC165","nameLocations":["688:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":4209,"src":"688:7:17"},"id":4180,"nodeType":"InheritanceSpecifier","src":"688:7:17"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4178,"nodeType":"StructuredDocumentation","src":"180:479:17","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4197,"linearizedBaseContracts":[4197,4209],"name":"ERC165","nameLocation":"678:6:17","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4208],"body":{"id":4195,"nodeType":"Block","src":"812:64:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4188,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"829:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4190,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"849:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4209_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4209_$","typeString":"type(contract IERC165)"}],"id":4189,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4209","typeString":"type(contract IERC165)"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:17","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4187,"id":4194,"nodeType":"Return","src":"822:47:17"}]},"documentation":{"id":4181,"nodeType":"StructuredDocumentation","src":"702:23:17","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":4196,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:17","nodeType":"FunctionDefinition","parameters":{"id":4184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4183,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:17","nodeType":"VariableDeclaration","scope":4196,"src":"757:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4182,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:17"},"returnParameters":{"id":4187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4196,"src":"806:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4185,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:17"},"scope":4197,"src":"730:146:17","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4198,"src":"660:218:17","usedErrors":[],"usedEvents":[]}],"src":"114:765:17"},"id":17},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4209]},"id":4210,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4199,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4200,"nodeType":"StructuredDocumentation","src":"142:280:18","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4209,"linearizedBaseContracts":[4209],"name":"IERC165","nameLocation":"433:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4201,"nodeType":"StructuredDocumentation","src":"447:340:18","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4208,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:18","nodeType":"FunctionDefinition","parameters":{"id":4204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4203,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:18","nodeType":"VariableDeclaration","scope":4208,"src":"819:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4202,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:18"},"returnParameters":{"id":4207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4208,"src":"862:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4205,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:18"},"scope":4209,"src":"792:76:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4210,"src":"423:447:18","usedErrors":[],"usedEvents":[]}],"src":"115:756:18"},"id":18},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5830],"Panic":[2268],"SafeCast":[7595]},"id":5831,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4211,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4213,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5831,"sourceUnit":2269,"src":"129:35:19","symbolAliases":[{"foreign":{"id":4212,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"137:5:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4215,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5831,"sourceUnit":7596,"src":"165:40:19","symbolAliases":[{"foreign":{"id":4214,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"173:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4216,"nodeType":"StructuredDocumentation","src":"207:73:19","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5830,"linearizedBaseContracts":[5830],"name":"Math","nameLocation":"289:4:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4221,"members":[{"id":4217,"name":"Floor","nameLocation":"324:5:19","nodeType":"EnumValue","src":"324:5:19"},{"id":4218,"name":"Ceil","nameLocation":"367:4:19","nodeType":"EnumValue","src":"367:4:19"},{"id":4219,"name":"Trunc","nameLocation":"409:5:19","nodeType":"EnumValue","src":"409:5:19"},{"id":4220,"name":"Expand","nameLocation":"439:6:19","nodeType":"EnumValue","src":"439:6:19"}],"name":"Rounding","nameLocation":"305:8:19","nodeType":"EnumDefinition","src":"300:169:19"},{"body":{"id":4234,"nodeType":"Block","src":"731:112:19","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:19","statements":[{"nodeType":"YulAssignment","src":"780:16:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:19"},"nodeType":"YulFunctionCall","src":"787:9:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:19"}]},{"nodeType":"YulAssignment","src":"809:18:19","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:19"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:19"},"nodeType":"YulFunctionCall","src":"817:10:19"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4224,"isOffset":false,"isSlot":false,"src":"791:1:19","valueSize":1},{"declaration":4224,"isOffset":false,"isSlot":false,"src":"825:1:19","valueSize":1},{"declaration":4226,"isOffset":false,"isSlot":false,"src":"794:1:19","valueSize":1},{"declaration":4229,"isOffset":false,"isSlot":false,"src":"809:4:19","valueSize":1},{"declaration":4231,"isOffset":false,"isSlot":false,"src":"780:3:19","valueSize":1},{"declaration":4231,"isOffset":false,"isSlot":false,"src":"820:3:19","valueSize":1}],"flags":["memory-safe"],"id":4233,"nodeType":"InlineAssembly","src":"741:96:19"}]},"documentation":{"id":4222,"nodeType":"StructuredDocumentation","src":"475:163:19","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4235,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:19","nodeType":"FunctionDefinition","parameters":{"id":4227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4224,"mutability":"mutable","name":"a","nameLocation":"667:1:19","nodeType":"VariableDeclaration","scope":4235,"src":"659:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4223,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4226,"mutability":"mutable","name":"b","nameLocation":"678:1:19","nodeType":"VariableDeclaration","scope":4235,"src":"670:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4225,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:19"},"returnParameters":{"id":4232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4229,"mutability":"mutable","name":"high","nameLocation":"712:4:19","nodeType":"VariableDeclaration","scope":4235,"src":"704:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4228,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4231,"mutability":"mutable","name":"low","nameLocation":"726:3:19","nodeType":"VariableDeclaration","scope":4235,"src":"718:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4230,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:19"},"scope":5830,"src":"643:200:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4248,"nodeType":"Block","src":"1115:462:19","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:19"},"nodeType":"YulFunctionCall","src":"1474:6:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:19"},"nodeType":"YulFunctionCall","src":"1461:20:19"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:19","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:19"},"nodeType":"YulFunctionCall","src":"1501:9:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:19"}]},{"nodeType":"YulAssignment","src":"1523:38:19","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:19"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:19"},"nodeType":"YulFunctionCall","src":"1535:12:19"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:19"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:19"},"nodeType":"YulFunctionCall","src":"1549:11:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:19"},"nodeType":"YulFunctionCall","src":"1531:30:19"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4238,"isOffset":false,"isSlot":false,"src":"1468:1:19","valueSize":1},{"declaration":4238,"isOffset":false,"isSlot":false,"src":"1505:1:19","valueSize":1},{"declaration":4240,"isOffset":false,"isSlot":false,"src":"1471:1:19","valueSize":1},{"declaration":4240,"isOffset":false,"isSlot":false,"src":"1508:1:19","valueSize":1},{"declaration":4243,"isOffset":false,"isSlot":false,"src":"1523:4:19","valueSize":1},{"declaration":4245,"isOffset":false,"isSlot":false,"src":"1494:3:19","valueSize":1},{"declaration":4245,"isOffset":false,"isSlot":false,"src":"1543:3:19","valueSize":1},{"declaration":4245,"isOffset":false,"isSlot":false,"src":"1556:3:19","valueSize":1}],"flags":["memory-safe"],"id":4247,"nodeType":"InlineAssembly","src":"1412:159:19"}]},"documentation":{"id":4236,"nodeType":"StructuredDocumentation","src":"849:173:19","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4249,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:19","nodeType":"FunctionDefinition","parameters":{"id":4241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4238,"mutability":"mutable","name":"a","nameLocation":"1051:1:19","nodeType":"VariableDeclaration","scope":4249,"src":"1043:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4240,"mutability":"mutable","name":"b","nameLocation":"1062:1:19","nodeType":"VariableDeclaration","scope":4249,"src":"1054:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:19"},"returnParameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4243,"mutability":"mutable","name":"high","nameLocation":"1096:4:19","nodeType":"VariableDeclaration","scope":4249,"src":"1088:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4242,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4245,"mutability":"mutable","name":"low","nameLocation":"1110:3:19","nodeType":"VariableDeclaration","scope":4249,"src":"1102:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:19"},"scope":5830,"src":"1027:550:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4283,"nodeType":"Block","src":"1784:149:19","statements":[{"id":4282,"nodeType":"UncheckedBlock","src":"1794:133:19","statements":[{"assignments":[4262],"declarations":[{"constant":false,"id":4262,"mutability":"mutable","name":"c","nameLocation":"1826:1:19","nodeType":"VariableDeclaration","scope":4282,"src":"1818:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4266,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"1830:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4264,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"1834:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:19"},{"expression":{"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4267,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"1849:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4268,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"1859:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4269,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"1864:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4272,"nodeType":"ExpressionStatement","src":"1849:16:19"},{"expression":{"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4273,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"1879:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4274,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"1888:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4277,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"1908:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4275,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"1892:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"1892:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4281,"nodeType":"ExpressionStatement","src":"1879:37:19"}]}]},"documentation":{"id":4250,"nodeType":"StructuredDocumentation","src":"1583:105:19","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4284,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:19","nodeType":"FunctionDefinition","parameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4252,"mutability":"mutable","name":"a","nameLocation":"1717:1:19","nodeType":"VariableDeclaration","scope":4284,"src":"1709:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4251,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4254,"mutability":"mutable","name":"b","nameLocation":"1728:1:19","nodeType":"VariableDeclaration","scope":4284,"src":"1720:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4253,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:19"},"returnParameters":{"id":4260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4257,"mutability":"mutable","name":"success","nameLocation":"1759:7:19","nodeType":"VariableDeclaration","scope":4284,"src":"1754:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4256,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4259,"mutability":"mutable","name":"result","nameLocation":"1776:6:19","nodeType":"VariableDeclaration","scope":4284,"src":"1768:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4258,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:19"},"scope":5830,"src":"1693:240:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4318,"nodeType":"Block","src":"2143:149:19","statements":[{"id":4317,"nodeType":"UncheckedBlock","src":"2153:133:19","statements":[{"assignments":[4297],"declarations":[{"constant":false,"id":4297,"mutability":"mutable","name":"c","nameLocation":"2185:1:19","nodeType":"VariableDeclaration","scope":4317,"src":"2177:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4296,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4301,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4298,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"2189:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4299,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"2193:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:19"},{"expression":{"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4302,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"2208:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4303,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"2218:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"2223:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4307,"nodeType":"ExpressionStatement","src":"2208:16:19"},{"expression":{"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4308,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"2238:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4309,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"2247:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4312,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"2267:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4310,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"2251:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"2251:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4316,"nodeType":"ExpressionStatement","src":"2238:37:19"}]}]},"documentation":{"id":4285,"nodeType":"StructuredDocumentation","src":"1939:108:19","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4319,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:19","nodeType":"FunctionDefinition","parameters":{"id":4290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4287,"mutability":"mutable","name":"a","nameLocation":"2076:1:19","nodeType":"VariableDeclaration","scope":4319,"src":"2068:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4286,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4289,"mutability":"mutable","name":"b","nameLocation":"2087:1:19","nodeType":"VariableDeclaration","scope":4319,"src":"2079:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4288,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:19"},"returnParameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4292,"mutability":"mutable","name":"success","nameLocation":"2118:7:19","nodeType":"VariableDeclaration","scope":4319,"src":"2113:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4291,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4294,"mutability":"mutable","name":"result","nameLocation":"2135:6:19","nodeType":"VariableDeclaration","scope":4319,"src":"2127:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4293,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:19"},"scope":5830,"src":"2052:240:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4348,"nodeType":"Block","src":"2505:391:19","statements":[{"id":4347,"nodeType":"UncheckedBlock","src":"2515:375:19","statements":[{"assignments":[4332],"declarations":[{"constant":false,"id":4332,"mutability":"mutable","name":"c","nameLocation":"2547:1:19","nodeType":"VariableDeclaration","scope":4347,"src":"2539:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4331,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4336,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"2551:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4334,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"2555:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:19"},{"AST":{"nodeType":"YulBlock","src":"2595:188:19","statements":[{"nodeType":"YulAssignment","src":"2727:42:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:19"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:19"},"nodeType":"YulFunctionCall","src":"2744:9:19"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:19"},"nodeType":"YulFunctionCall","src":"2741:16:19"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:19"},"nodeType":"YulFunctionCall","src":"2759:9:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:19"},"nodeType":"YulFunctionCall","src":"2738:31:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4322,"isOffset":false,"isSlot":false,"src":"2751:1:19","valueSize":1},{"declaration":4322,"isOffset":false,"isSlot":false,"src":"2766:1:19","valueSize":1},{"declaration":4324,"isOffset":false,"isSlot":false,"src":"2755:1:19","valueSize":1},{"declaration":4332,"isOffset":false,"isSlot":false,"src":"2748:1:19","valueSize":1},{"declaration":4327,"isOffset":false,"isSlot":false,"src":"2727:7:19","valueSize":1}],"flags":["memory-safe"],"id":4337,"nodeType":"InlineAssembly","src":"2570:213:19"},{"expression":{"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4338,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"2842:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4339,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"2851:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4342,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"2871:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4340,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"2855:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"2855:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4346,"nodeType":"ExpressionStatement","src":"2842:37:19"}]}]},"documentation":{"id":4320,"nodeType":"StructuredDocumentation","src":"2298:111:19","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4349,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:19","nodeType":"FunctionDefinition","parameters":{"id":4325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4322,"mutability":"mutable","name":"a","nameLocation":"2438:1:19","nodeType":"VariableDeclaration","scope":4349,"src":"2430:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4324,"mutability":"mutable","name":"b","nameLocation":"2449:1:19","nodeType":"VariableDeclaration","scope":4349,"src":"2441:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4323,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:19"},"returnParameters":{"id":4330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4327,"mutability":"mutable","name":"success","nameLocation":"2480:7:19","nodeType":"VariableDeclaration","scope":4349,"src":"2475:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4326,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4329,"mutability":"mutable","name":"result","nameLocation":"2497:6:19","nodeType":"VariableDeclaration","scope":4349,"src":"2489:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4328,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:19"},"scope":5830,"src":"2414:482:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4369,"nodeType":"Block","src":"3111:231:19","statements":[{"id":4368,"nodeType":"UncheckedBlock","src":"3121:215:19","statements":[{"expression":{"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4361,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"3145:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4362,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"3155:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4366,"nodeType":"ExpressionStatement","src":"3145:15:19"},{"AST":{"nodeType":"YulBlock","src":"3199:127:19","statements":[{"nodeType":"YulAssignment","src":"3293:19:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:19"},"nodeType":"YulFunctionCall","src":"3303:9:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4352,"isOffset":false,"isSlot":false,"src":"3307:1:19","valueSize":1},{"declaration":4354,"isOffset":false,"isSlot":false,"src":"3310:1:19","valueSize":1},{"declaration":4359,"isOffset":false,"isSlot":false,"src":"3293:6:19","valueSize":1}],"flags":["memory-safe"],"id":4367,"nodeType":"InlineAssembly","src":"3174:152:19"}]}]},"documentation":{"id":4350,"nodeType":"StructuredDocumentation","src":"2902:113:19","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4370,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:19","nodeType":"FunctionDefinition","parameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4352,"mutability":"mutable","name":"a","nameLocation":"3044:1:19","nodeType":"VariableDeclaration","scope":4370,"src":"3036:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4351,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4354,"mutability":"mutable","name":"b","nameLocation":"3055:1:19","nodeType":"VariableDeclaration","scope":4370,"src":"3047:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4353,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:19"},"returnParameters":{"id":4360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4357,"mutability":"mutable","name":"success","nameLocation":"3086:7:19","nodeType":"VariableDeclaration","scope":4370,"src":"3081:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4356,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4359,"mutability":"mutable","name":"result","nameLocation":"3103:6:19","nodeType":"VariableDeclaration","scope":4370,"src":"3095:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4358,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:19"},"scope":5830,"src":"3020:322:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4390,"nodeType":"Block","src":"3567:231:19","statements":[{"id":4389,"nodeType":"UncheckedBlock","src":"3577:215:19","statements":[{"expression":{"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4382,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"3601:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4383,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"3611:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4387,"nodeType":"ExpressionStatement","src":"3601:15:19"},{"AST":{"nodeType":"YulBlock","src":"3655:127:19","statements":[{"nodeType":"YulAssignment","src":"3749:19:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:19"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:19"},"nodeType":"YulFunctionCall","src":"3759:9:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4373,"isOffset":false,"isSlot":false,"src":"3763:1:19","valueSize":1},{"declaration":4375,"isOffset":false,"isSlot":false,"src":"3766:1:19","valueSize":1},{"declaration":4380,"isOffset":false,"isSlot":false,"src":"3749:6:19","valueSize":1}],"flags":["memory-safe"],"id":4388,"nodeType":"InlineAssembly","src":"3630:152:19"}]}]},"documentation":{"id":4371,"nodeType":"StructuredDocumentation","src":"3348:123:19","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4391,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:19","nodeType":"FunctionDefinition","parameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"a","nameLocation":"3500:1:19","nodeType":"VariableDeclaration","scope":4391,"src":"3492:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4372,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4375,"mutability":"mutable","name":"b","nameLocation":"3511:1:19","nodeType":"VariableDeclaration","scope":4391,"src":"3503:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4374,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:19"},"returnParameters":{"id":4381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4378,"mutability":"mutable","name":"success","nameLocation":"3542:7:19","nodeType":"VariableDeclaration","scope":4391,"src":"3537:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4377,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4380,"mutability":"mutable","name":"result","nameLocation":"3559:6:19","nodeType":"VariableDeclaration","scope":4391,"src":"3551:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4379,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:19"},"scope":5830,"src":"3476:322:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4420,"nodeType":"Block","src":"3989:122:19","statements":[{"assignments":[4402,4404],"declarations":[{"constant":false,"id":4402,"mutability":"mutable","name":"success","nameLocation":"4005:7:19","nodeType":"VariableDeclaration","scope":4420,"src":"4000:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4401,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4404,"mutability":"mutable","name":"result","nameLocation":"4022:6:19","nodeType":"VariableDeclaration","scope":4420,"src":"4014:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4403,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4409,"initialValue":{"arguments":[{"id":4406,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"4039:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4407,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"4042:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4405,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"4032:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:19"},{"expression":{"arguments":[{"id":4411,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"4069:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"4078:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4414,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4413,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:19","memberName":"max","nodeType":"MemberAccess","src":"4086:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4410,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"4061:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4400,"id":4419,"nodeType":"Return","src":"4054:50:19"}]},"documentation":{"id":4392,"nodeType":"StructuredDocumentation","src":"3804:103:19","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4421,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:19","nodeType":"FunctionDefinition","parameters":{"id":4397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4394,"mutability":"mutable","name":"a","nameLocation":"3943:1:19","nodeType":"VariableDeclaration","scope":4421,"src":"3935:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4393,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4396,"mutability":"mutable","name":"b","nameLocation":"3954:1:19","nodeType":"VariableDeclaration","scope":4421,"src":"3946:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4395,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:19"},"returnParameters":{"id":4400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4421,"src":"3980:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4398,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:19"},"scope":5830,"src":"3912:199:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4440,"nodeType":"Block","src":"4294:73:19","statements":[{"assignments":[null,4432],"declarations":[null,{"constant":false,"id":4432,"mutability":"mutable","name":"result","nameLocation":"4315:6:19","nodeType":"VariableDeclaration","scope":4440,"src":"4307:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4431,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4437,"initialValue":{"arguments":[{"id":4434,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"4332:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4435,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"4335:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4433,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"4325:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:19"},{"expression":{"id":4438,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"4354:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4430,"id":4439,"nodeType":"Return","src":"4347:13:19"}]},"documentation":{"id":4422,"nodeType":"StructuredDocumentation","src":"4117:95:19","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4441,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:19","nodeType":"FunctionDefinition","parameters":{"id":4427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4424,"mutability":"mutable","name":"a","nameLocation":"4248:1:19","nodeType":"VariableDeclaration","scope":4441,"src":"4240:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4426,"mutability":"mutable","name":"b","nameLocation":"4259:1:19","nodeType":"VariableDeclaration","scope":4441,"src":"4251:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:19"},"returnParameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4441,"src":"4285:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4428,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:19"},"scope":5830,"src":"4217:150:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4470,"nodeType":"Block","src":"4564:122:19","statements":[{"assignments":[4452,4454],"declarations":[{"constant":false,"id":4452,"mutability":"mutable","name":"success","nameLocation":"4580:7:19","nodeType":"VariableDeclaration","scope":4470,"src":"4575:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4451,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4454,"mutability":"mutable","name":"result","nameLocation":"4597:6:19","nodeType":"VariableDeclaration","scope":4470,"src":"4589:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4453,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4459,"initialValue":{"arguments":[{"id":4456,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"4614:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4457,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"4617:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4455,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"4607:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:19"},{"expression":{"arguments":[{"id":4461,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"4644:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4462,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"4653:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4464,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4463,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:19","memberName":"max","nodeType":"MemberAccess","src":"4661:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4460,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"4636:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4450,"id":4469,"nodeType":"Return","src":"4629:50:19"}]},"documentation":{"id":4442,"nodeType":"StructuredDocumentation","src":"4373:109:19","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4471,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:19","nodeType":"FunctionDefinition","parameters":{"id":4447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"a","nameLocation":"4518:1:19","nodeType":"VariableDeclaration","scope":4471,"src":"4510:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4446,"mutability":"mutable","name":"b","nameLocation":"4529:1:19","nodeType":"VariableDeclaration","scope":4471,"src":"4521:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4445,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:19"},"returnParameters":{"id":4450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4471,"src":"4555:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4448,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:19"},"scope":5830,"src":"4487:199:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4497,"nodeType":"Block","src":"5158:207:19","statements":[{"id":4496,"nodeType":"UncheckedBlock","src":"5168:191:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4483,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"5306:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4484,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"5312:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4485,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"5316:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4490,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"5337:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4488,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"5321:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"5321:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4482,"id":4495,"nodeType":"Return","src":"5299:49:19"}]}]},"documentation":{"id":4472,"nodeType":"StructuredDocumentation","src":"4692:374:19","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4498,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:19","nodeType":"FunctionDefinition","parameters":{"id":4479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4474,"mutability":"mutable","name":"condition","nameLocation":"5093:9:19","nodeType":"VariableDeclaration","scope":4498,"src":"5088:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4473,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4476,"mutability":"mutable","name":"a","nameLocation":"5112:1:19","nodeType":"VariableDeclaration","scope":4498,"src":"5104:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4475,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4478,"mutability":"mutable","name":"b","nameLocation":"5123:1:19","nodeType":"VariableDeclaration","scope":4498,"src":"5115:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4477,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:19"},"returnParameters":{"id":4482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4498,"src":"5149:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4480,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:19"},"scope":5830,"src":"5071:294:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4516,"nodeType":"Block","src":"5502:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"5527:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4510,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"5531:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4512,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"5534:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4513,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"5537:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4508,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"5519:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4507,"id":4515,"nodeType":"Return","src":"5512:27:19"}]},"documentation":{"id":4499,"nodeType":"StructuredDocumentation","src":"5371:59:19","text":" @dev Returns the largest of two numbers."},"id":4517,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:19","nodeType":"FunctionDefinition","parameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"a","nameLocation":"5456:1:19","nodeType":"VariableDeclaration","scope":4517,"src":"5448:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4500,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4503,"mutability":"mutable","name":"b","nameLocation":"5467:1:19","nodeType":"VariableDeclaration","scope":4517,"src":"5459:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:19"},"returnParameters":{"id":4507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4517,"src":"5493:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4505,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:19"},"scope":5830,"src":"5435:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4535,"nodeType":"Block","src":"5684:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4528,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"5709:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4529,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"5713:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4531,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"5716:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4532,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"5719:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4527,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"5701:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4526,"id":4534,"nodeType":"Return","src":"5694:27:19"}]},"documentation":{"id":4518,"nodeType":"StructuredDocumentation","src":"5552:60:19","text":" @dev Returns the smallest of two numbers."},"id":4536,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:19","nodeType":"FunctionDefinition","parameters":{"id":4523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4520,"mutability":"mutable","name":"a","nameLocation":"5638:1:19","nodeType":"VariableDeclaration","scope":4536,"src":"5630:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4519,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4522,"mutability":"mutable","name":"b","nameLocation":"5649:1:19","nodeType":"VariableDeclaration","scope":4536,"src":"5641:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4521,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:19"},"returnParameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4536,"src":"5675:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4524,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:19"},"scope":5830,"src":"5617:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4558,"nodeType":"Block","src":"5912:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4546,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"5967:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4547,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4541,"src":"5971:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4550,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"5977:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4551,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4541,"src":"5981:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4553,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4545,"id":4557,"nodeType":"Return","src":"5959:28:19"}]},"documentation":{"id":4537,"nodeType":"StructuredDocumentation","src":"5734:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4559,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:19","nodeType":"FunctionDefinition","parameters":{"id":4542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4539,"mutability":"mutable","name":"a","nameLocation":"5866:1:19","nodeType":"VariableDeclaration","scope":4559,"src":"5858:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4538,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4541,"mutability":"mutable","name":"b","nameLocation":"5877:1:19","nodeType":"VariableDeclaration","scope":4559,"src":"5869:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4540,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:19"},"returnParameters":{"id":4545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4559,"src":"5903:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4543,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:19"},"scope":5830,"src":"5841:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4599,"nodeType":"Block","src":"6286:633:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4569,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"6300:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4580,"nodeType":"IfStatement","src":"6296:150:19","trueBody":{"id":4579,"nodeType":"Block","src":"6308:138:19","statements":[{"expression":{"arguments":[{"expression":{"id":4575,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"6412:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2268_$","typeString":"type(library Panic)"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2235,"src":"6412:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4572,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"6400:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2268_$","typeString":"type(library Panic)"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2267,"src":"6400:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4578,"nodeType":"ExpressionStatement","src":"6400:35:19"}]}},{"id":4598,"nodeType":"UncheckedBlock","src":"6829:84:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4583,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"6876:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4581,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"6860:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"6860:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4587,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"6887:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4590,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4591,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"6896:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4595,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4568,"id":4597,"nodeType":"Return","src":"6853:49:19"}]}]},"documentation":{"id":4560,"nodeType":"StructuredDocumentation","src":"6000:210:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4600,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:19","nodeType":"FunctionDefinition","parameters":{"id":4565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"mutability":"mutable","name":"a","nameLocation":"6240:1:19","nodeType":"VariableDeclaration","scope":4600,"src":"6232:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4561,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4564,"mutability":"mutable","name":"b","nameLocation":"6251:1:19","nodeType":"VariableDeclaration","scope":4600,"src":"6243:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:19"},"returnParameters":{"id":4568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4600,"src":"6277:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4566,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:19"},"scope":5830,"src":"6215:704:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4735,"nodeType":"Block","src":"7340:3585:19","statements":[{"id":4734,"nodeType":"UncheckedBlock","src":"7350:3569:19","statements":[{"assignments":[4613,4615],"declarations":[{"constant":false,"id":4613,"mutability":"mutable","name":"high","nameLocation":"7383:4:19","nodeType":"VariableDeclaration","scope":4734,"src":"7375:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4612,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4615,"mutability":"mutable","name":"low","nameLocation":"7397:3:19","nodeType":"VariableDeclaration","scope":4734,"src":"7389:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4614,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4620,"initialValue":{"arguments":[{"id":4617,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"7411:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4618,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"7414:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4616,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"7404:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4621,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"7498:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4629,"nodeType":"IfStatement","src":"7494:365:19","trueBody":{"id":4628,"nodeType":"Block","src":"7509:350:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4624,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"7827:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4625,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"7833:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4611,"id":4627,"nodeType":"Return","src":"7820:24:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4630,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"7969:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4631,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"7984:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4648,"nodeType":"IfStatement","src":"7965:142:19","trueBody":{"id":4647,"nodeType":"Block","src":"7990:117:19","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4637,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"8028:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4640,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"8046:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2268_$","typeString":"type(library Panic)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2235,"src":"8046:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4642,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"8070:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2268_$","typeString":"type(library Panic)"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:19","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2231,"src":"8070:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4636,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"8020:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4633,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"8008:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2268_$","typeString":"type(library Panic)"}},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2267,"src":"8008:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4646,"nodeType":"ExpressionStatement","src":"8008:84:19"}]}},{"assignments":[4650],"declarations":[{"constant":false,"id":4650,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:19","nodeType":"VariableDeclaration","scope":4734,"src":"8359:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4649,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4651,"nodeType":"VariableDeclarationStatement","src":"8359:17:19"},{"AST":{"nodeType":"YulBlock","src":"8415:283:19","statements":[{"nodeType":"YulAssignment","src":"8484:38:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:19"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:19"},"nodeType":"YulFunctionCall","src":"8497:25:19"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:19"}]},{"nodeType":"YulAssignment","src":"8604:37:19","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:19"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:19"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:19"},"nodeType":"YulFunctionCall","src":"8622:18:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:19"},"nodeType":"YulFunctionCall","src":"8612:29:19"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:19"}]},{"nodeType":"YulAssignment","src":"8658:26:19","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:19"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:19"},"nodeType":"YulFunctionCall","src":"8665:19:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4607,"isOffset":false,"isSlot":false,"src":"8510:11:19","valueSize":1},{"declaration":4613,"isOffset":false,"isSlot":false,"src":"8604:4:19","valueSize":1},{"declaration":4613,"isOffset":false,"isSlot":false,"src":"8616:4:19","valueSize":1},{"declaration":4615,"isOffset":false,"isSlot":false,"src":"8636:3:19","valueSize":1},{"declaration":4615,"isOffset":false,"isSlot":false,"src":"8658:3:19","valueSize":1},{"declaration":4615,"isOffset":false,"isSlot":false,"src":"8669:3:19","valueSize":1},{"declaration":4650,"isOffset":false,"isSlot":false,"src":"8484:9:19","valueSize":1},{"declaration":4650,"isOffset":false,"isSlot":false,"src":"8625:9:19","valueSize":1},{"declaration":4650,"isOffset":false,"isSlot":false,"src":"8674:9:19","valueSize":1},{"declaration":4603,"isOffset":false,"isSlot":false,"src":"8504:1:19","valueSize":1},{"declaration":4605,"isOffset":false,"isSlot":false,"src":"8507:1:19","valueSize":1}],"flags":["memory-safe"],"id":4652,"nodeType":"InlineAssembly","src":"8390:308:19"},{"assignments":[4654],"declarations":[{"constant":false,"id":4654,"mutability":"mutable","name":"twos","nameLocation":"8910:4:19","nodeType":"VariableDeclaration","scope":4734,"src":"8902:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4653,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4661,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4655,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"8917:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4657,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"8936:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:19"},{"AST":{"nodeType":"YulBlock","src":"8987:359:19","statements":[{"nodeType":"YulAssignment","src":"9052:37:19","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:19"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:19"},"nodeType":"YulFunctionCall","src":"9067:22:19"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:19"}]},{"nodeType":"YulAssignment","src":"9153:21:19","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:19"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:19"},"nodeType":"YulFunctionCall","src":"9160:14:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:19"}]},{"nodeType":"YulAssignment","src":"9293:39:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:19","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:19"},"nodeType":"YulFunctionCall","src":"9309:12:19"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:19"},"nodeType":"YulFunctionCall","src":"9305:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:19"},"nodeType":"YulFunctionCall","src":"9301:31:19"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4607,"isOffset":false,"isSlot":false,"src":"9052:11:19","valueSize":1},{"declaration":4607,"isOffset":false,"isSlot":false,"src":"9071:11:19","valueSize":1},{"declaration":4615,"isOffset":false,"isSlot":false,"src":"9153:3:19","valueSize":1},{"declaration":4615,"isOffset":false,"isSlot":false,"src":"9164:3:19","valueSize":1},{"declaration":4654,"isOffset":false,"isSlot":false,"src":"9084:4:19","valueSize":1},{"declaration":4654,"isOffset":false,"isSlot":false,"src":"9169:4:19","valueSize":1},{"declaration":4654,"isOffset":false,"isSlot":false,"src":"9293:4:19","valueSize":1},{"declaration":4654,"isOffset":false,"isSlot":false,"src":"9316:4:19","valueSize":1},{"declaration":4654,"isOffset":false,"isSlot":false,"src":"9323:4:19","valueSize":1}],"flags":["memory-safe"],"id":4662,"nodeType":"InlineAssembly","src":"8962:384:19"},{"expression":{"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4663,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"9409:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4664,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"9416:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4665,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"9423:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4668,"nodeType":"ExpressionStatement","src":"9409:18:19"},{"assignments":[4670],"declarations":[{"constant":false,"id":4670,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:19","nodeType":"VariableDeclaration","scope":4734,"src":"9762:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4669,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4677,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4672,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"9785:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:19"},{"expression":{"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4678,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"10018:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4680,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"10033:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4681,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"10047:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4685,"nodeType":"ExpressionStatement","src":"10018:36:19"},{"expression":{"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4686,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"10088:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4688,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"10103:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4689,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"10117:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4693,"nodeType":"ExpressionStatement","src":"10088:36:19"},{"expression":{"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4694,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"10160:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4696,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"10175:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4697,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"10189:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4701,"nodeType":"ExpressionStatement","src":"10160:36:19"},{"expression":{"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4702,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"10231:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4704,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"10246:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4705,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"10260:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4709,"nodeType":"ExpressionStatement","src":"10231:36:19"},{"expression":{"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4710,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"10304:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4712,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"10319:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4713,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"10333:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4717,"nodeType":"ExpressionStatement","src":"10304:36:19"},{"expression":{"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4718,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"10378:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"10393:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4721,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"10407:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4725,"nodeType":"ExpressionStatement","src":"10378:36:19"},{"expression":{"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4726,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"10859:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4727,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"10868:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4728,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"10874:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4731,"nodeType":"ExpressionStatement","src":"10859:22:19"},{"expression":{"id":4732,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"10902:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4611,"id":4733,"nodeType":"Return","src":"10895:13:19"}]}]},"documentation":{"id":4601,"nodeType":"StructuredDocumentation","src":"6925:312:19","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4736,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:19","nodeType":"FunctionDefinition","parameters":{"id":4608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4603,"mutability":"mutable","name":"x","nameLocation":"7266:1:19","nodeType":"VariableDeclaration","scope":4736,"src":"7258:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4602,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4605,"mutability":"mutable","name":"y","nameLocation":"7277:1:19","nodeType":"VariableDeclaration","scope":4736,"src":"7269:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4607,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:19","nodeType":"VariableDeclaration","scope":4736,"src":"7280:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4606,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:19"},"returnParameters":{"id":4611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4610,"mutability":"mutable","name":"result","nameLocation":"7332:6:19","nodeType":"VariableDeclaration","scope":4736,"src":"7324:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4609,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:19"},"scope":5830,"src":"7242:3683:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4772,"nodeType":"Block","src":"11164:128:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4752,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"11188:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4753,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"11191:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4754,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"11194:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4751,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4736,4773],"referencedDeclaration":4736,"src":"11181:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4759,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"11242:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}],"id":4758,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"11225:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4221_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4762,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"11262:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4763,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"11265:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4764,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"11268:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4761,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4756,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"11209:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"11209:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4750,"id":4771,"nodeType":"Return","src":"11174:111:19"}]},"documentation":{"id":4737,"nodeType":"StructuredDocumentation","src":"10931:118:19","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4773,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:19","nodeType":"FunctionDefinition","parameters":{"id":4747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4739,"mutability":"mutable","name":"x","nameLocation":"11078:1:19","nodeType":"VariableDeclaration","scope":4773,"src":"11070:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4738,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4741,"mutability":"mutable","name":"y","nameLocation":"11089:1:19","nodeType":"VariableDeclaration","scope":4773,"src":"11081:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4740,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4743,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:19","nodeType":"VariableDeclaration","scope":4773,"src":"11092:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4742,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4746,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:19","nodeType":"VariableDeclaration","scope":4773,"src":"11113:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"},"typeName":{"id":4745,"nodeType":"UserDefinedTypeName","pathNode":{"id":4744,"name":"Rounding","nameLocations":["11113:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4221,"src":"11113:8:19"},"referencedDeclaration":4221,"src":"11113:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:19"},"returnParameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4773,"src":"11155:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4748,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:19"},"scope":5830,"src":"11054:238:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4822,"nodeType":"Block","src":"11500:245:19","statements":[{"id":4821,"nodeType":"UncheckedBlock","src":"11510:229:19","statements":[{"assignments":[4786,4788],"declarations":[{"constant":false,"id":4786,"mutability":"mutable","name":"high","nameLocation":"11543:4:19","nodeType":"VariableDeclaration","scope":4821,"src":"11535:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4785,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4788,"mutability":"mutable","name":"low","nameLocation":"11557:3:19","nodeType":"VariableDeclaration","scope":4821,"src":"11549:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4787,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4793,"initialValue":{"arguments":[{"id":4790,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4776,"src":"11571:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4791,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"11574:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4789,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"11564:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4794,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"11594:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4796,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"11607:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4807,"nodeType":"IfStatement","src":"11590:86:19","trueBody":{"id":4806,"nodeType":"Block","src":"11610:66:19","statements":[{"expression":{"arguments":[{"expression":{"id":4802,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"11640:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2268_$","typeString":"type(library Panic)"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:19","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2231,"src":"11640:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4799,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"11628:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2268_$","typeString":"type(library Panic)"}},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2267,"src":"11628:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4805,"nodeType":"ExpressionStatement","src":"11628:33:19"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4808,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"11697:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4810,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"11712:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4812,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4815,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"11719:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4816,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"11726:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4818,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4784,"id":4820,"nodeType":"Return","src":"11689:39:19"}]}]},"documentation":{"id":4774,"nodeType":"StructuredDocumentation","src":"11298:111:19","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4823,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:19","nodeType":"FunctionDefinition","parameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4776,"mutability":"mutable","name":"x","nameLocation":"11438:1:19","nodeType":"VariableDeclaration","scope":4823,"src":"11430:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4775,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4778,"mutability":"mutable","name":"y","nameLocation":"11449:1:19","nodeType":"VariableDeclaration","scope":4823,"src":"11441:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4777,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4780,"mutability":"mutable","name":"n","nameLocation":"11458:1:19","nodeType":"VariableDeclaration","scope":4823,"src":"11452:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4779,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:19"},"returnParameters":{"id":4784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4783,"mutability":"mutable","name":"result","nameLocation":"11492:6:19","nodeType":"VariableDeclaration","scope":4823,"src":"11484:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:19"},"scope":5830,"src":"11414:331:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4861,"nodeType":"Block","src":"11963:113:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4839,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"11987:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4840,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"11990:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4841,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"11993:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4838,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4823,4862],"referencedDeclaration":4823,"src":"11980:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4846,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"12031:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}],"id":4845,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"12014:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4221_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4849,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"12051:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4850,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"12054:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4852,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"12062:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4848,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4843,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"11998:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"11998:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4837,"id":4860,"nodeType":"Return","src":"11973:96:19"}]},"documentation":{"id":4824,"nodeType":"StructuredDocumentation","src":"11751:109:19","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4862,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:19","nodeType":"FunctionDefinition","parameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4826,"mutability":"mutable","name":"x","nameLocation":"11889:1:19","nodeType":"VariableDeclaration","scope":4862,"src":"11881:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4825,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4828,"mutability":"mutable","name":"y","nameLocation":"11900:1:19","nodeType":"VariableDeclaration","scope":4862,"src":"11892:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4827,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4830,"mutability":"mutable","name":"n","nameLocation":"11909:1:19","nodeType":"VariableDeclaration","scope":4862,"src":"11903:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4829,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4833,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:19","nodeType":"VariableDeclaration","scope":4862,"src":"11912:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"},"typeName":{"id":4832,"nodeType":"UserDefinedTypeName","pathNode":{"id":4831,"name":"Rounding","nameLocations":["11912:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4221,"src":"11912:8:19"},"referencedDeclaration":4221,"src":"11912:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:19"},"returnParameters":{"id":4837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4862,"src":"11954:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4835,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:19"},"scope":5830,"src":"11865:211:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4958,"nodeType":"Block","src":"12710:1849:19","statements":[{"id":4957,"nodeType":"UncheckedBlock","src":"12720:1833:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4872,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"12748:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4877,"nodeType":"IfStatement","src":"12744:20:19","trueBody":{"expression":{"hexValue":"30","id":4875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4871,"id":4876,"nodeType":"Return","src":"12756:8:19"}},{"assignments":[4879],"declarations":[{"constant":false,"id":4879,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:19","nodeType":"VariableDeclaration","scope":4957,"src":"13235:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4878,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4883,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4880,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"13255:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4881,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"13259:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:19"},{"assignments":[4885],"declarations":[{"constant":false,"id":4885,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:19","nodeType":"VariableDeclaration","scope":4957,"src":"13274:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4884,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4887,"initialValue":{"id":4886,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"13288:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:19"},{"assignments":[4889],"declarations":[{"constant":false,"id":4889,"mutability":"mutable","name":"x","nameLocation":"13432:1:19","nodeType":"VariableDeclaration","scope":4957,"src":"13425:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4888,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4891,"initialValue":{"hexValue":"30","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:19"},{"assignments":[4893],"declarations":[{"constant":false,"id":4893,"mutability":"mutable","name":"y","nameLocation":"13458:1:19","nodeType":"VariableDeclaration","scope":4957,"src":"13451:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4892,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4895,"initialValue":{"hexValue":"31","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:19"},{"body":{"id":4932,"nodeType":"Block","src":"13501:882:19","statements":[{"assignments":[4900],"declarations":[{"constant":false,"id":4900,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:19","nodeType":"VariableDeclaration","scope":4932,"src":"13519:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4899,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4904,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4901,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"13538:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4902,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"13544:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:19"},{"expression":{"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4905,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"13573:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4906,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"13578:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4907,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4908,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"13678:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4909,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"13923:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4910,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"13929:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4911,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"13941:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4914,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4916,"nodeType":"ExpressionStatement","src":"13572:395:19"},{"expression":{"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4917,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"13987:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4918,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"13990:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4919,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4920,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"14072:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4921,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"14326:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4922,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"14330:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4925,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"14341:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4923,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:19","typeDescriptions":{}}},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4929,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4931,"nodeType":"ExpressionStatement","src":"13986:382:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4896,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"13485:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4933,"nodeType":"WhileStatement","src":"13478:905:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4934,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"14401:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4939,"nodeType":"IfStatement","src":"14397:22:19","trueBody":{"expression":{"hexValue":"30","id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4871,"id":4938,"nodeType":"Return","src":"14411:8:19"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4941,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"14470:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4944,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"14477:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:19","subExpression":{"id":4947,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"14490:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4945,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:19","typeDescriptions":{}}},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4953,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"14502:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4951,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:19","typeDescriptions":{}}},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4940,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"14462:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4871,"id":4956,"nodeType":"Return","src":"14455:50:19"}]}]},"documentation":{"id":4863,"nodeType":"StructuredDocumentation","src":"12082:553:19","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4959,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:19","nodeType":"FunctionDefinition","parameters":{"id":4868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4865,"mutability":"mutable","name":"a","nameLocation":"12664:1:19","nodeType":"VariableDeclaration","scope":4959,"src":"12656:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4864,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4867,"mutability":"mutable","name":"n","nameLocation":"12675:1:19","nodeType":"VariableDeclaration","scope":4959,"src":"12667:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4866,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:19"},"returnParameters":{"id":4871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4959,"src":"12701:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4869,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:19"},"scope":5830,"src":"12640:1919:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4979,"nodeType":"Block","src":"15159:82:19","statements":[{"id":4978,"nodeType":"UncheckedBlock","src":"15169:66:19","statements":[{"expression":{"arguments":[{"id":4971,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"15212:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4972,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"15215:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4975,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"15222:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4969,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"15200:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5830_$","typeString":"type(library Math)"}},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:19","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"15200:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4968,"id":4977,"nodeType":"Return","src":"15193:31:19"}]}]},"documentation":{"id":4960,"nodeType":"StructuredDocumentation","src":"14565:514:19","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4980,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:19","nodeType":"FunctionDefinition","parameters":{"id":4965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4962,"mutability":"mutable","name":"a","nameLocation":"15113:1:19","nodeType":"VariableDeclaration","scope":4980,"src":"15105:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4961,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4964,"mutability":"mutable","name":"p","nameLocation":"15124:1:19","nodeType":"VariableDeclaration","scope":4980,"src":"15116:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4963,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:19"},"returnParameters":{"id":4968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4980,"src":"15150:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4966,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:19"},"scope":5830,"src":"15084:157:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5015,"nodeType":"Block","src":"16011:174:19","statements":[{"assignments":[4993,4995],"declarations":[{"constant":false,"id":4993,"mutability":"mutable","name":"success","nameLocation":"16027:7:19","nodeType":"VariableDeclaration","scope":5015,"src":"16022:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4992,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4995,"mutability":"mutable","name":"result","nameLocation":"16044:6:19","nodeType":"VariableDeclaration","scope":5015,"src":"16036:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5001,"initialValue":{"arguments":[{"id":4997,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"16064:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4998,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4985,"src":"16067:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4999,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"16070:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4996,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5040,5122],"referencedDeclaration":5040,"src":"16054:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:19"},{"condition":{"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:19","subExpression":{"id":5002,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"16087:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5012,"nodeType":"IfStatement","src":"16082:74:19","trueBody":{"id":5011,"nodeType":"Block","src":"16096:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":5007,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"16122:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2268_$","typeString":"type(library Panic)"}},"id":5008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2235,"src":"16122:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5004,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"16110:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2268_$","typeString":"type(library Panic)"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2267,"src":"16110:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5010,"nodeType":"ExpressionStatement","src":"16110:35:19"}]}},{"expression":{"id":5013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"16172:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4991,"id":5014,"nodeType":"Return","src":"16165:13:19"}]},"documentation":{"id":4981,"nodeType":"StructuredDocumentation","src":"15247:678:19","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5016,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:19","nodeType":"FunctionDefinition","parameters":{"id":4988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4983,"mutability":"mutable","name":"b","nameLocation":"15954:1:19","nodeType":"VariableDeclaration","scope":5016,"src":"15946:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4982,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4985,"mutability":"mutable","name":"e","nameLocation":"15965:1:19","nodeType":"VariableDeclaration","scope":5016,"src":"15957:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4984,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4987,"mutability":"mutable","name":"m","nameLocation":"15976:1:19","nodeType":"VariableDeclaration","scope":5016,"src":"15968:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4986,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:19"},"returnParameters":{"id":4991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5016,"src":"16002:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4989,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:19"},"scope":5830,"src":"15930:255:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5039,"nodeType":"Block","src":"17039:1493:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5030,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"17053:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5037,"nodeType":"IfStatement","src":"17049:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5029,"id":5036,"nodeType":"Return","src":"17061:17:19"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:19"},"nodeType":"YulFunctionCall","src":"17138:11:19"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:19","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:19"},"nodeType":"YulFunctionCall","src":"18050:17:19"},"nodeType":"YulExpressionStatement","src":"18050:17:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:19"},"nodeType":"YulFunctionCall","src":"18087:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:19"},"nodeType":"YulFunctionCall","src":"18080:28:19"},"nodeType":"YulExpressionStatement","src":"18080:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:19"},"nodeType":"YulFunctionCall","src":"18128:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:19"},"nodeType":"YulFunctionCall","src":"18121:28:19"},"nodeType":"YulExpressionStatement","src":"18121:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:19"},"nodeType":"YulFunctionCall","src":"18169:14:19"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:19"},"nodeType":"YulFunctionCall","src":"18162:25:19"},"nodeType":"YulExpressionStatement","src":"18162:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:19"},"nodeType":"YulFunctionCall","src":"18207:14:19"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:19"},"nodeType":"YulFunctionCall","src":"18200:25:19"},"nodeType":"YulExpressionStatement","src":"18200:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:19"},"nodeType":"YulFunctionCall","src":"18245:14:19"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:19"},"nodeType":"YulFunctionCall","src":"18238:25:19"},"nodeType":"YulExpressionStatement","src":"18238:25:19"},{"nodeType":"YulAssignment","src":"18425:57:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:19"},"nodeType":"YulFunctionCall","src":"18447:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:19","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:19","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:19","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:19"},"nodeType":"YulFunctionCall","src":"18436:46:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:19"}]},{"nodeType":"YulAssignment","src":"18495:21:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:19","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:19"},"nodeType":"YulFunctionCall","src":"18505:11:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5019,"isOffset":false,"isSlot":false,"src":"18185:1:19","valueSize":1},{"declaration":5021,"isOffset":false,"isSlot":false,"src":"18223:1:19","valueSize":1},{"declaration":5023,"isOffset":false,"isSlot":false,"src":"18261:1:19","valueSize":1},{"declaration":5028,"isOffset":false,"isSlot":false,"src":"18495:6:19","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"18425:7:19","valueSize":1}],"flags":["memory-safe"],"id":5038,"nodeType":"InlineAssembly","src":"17088:1438:19"}]},"documentation":{"id":5017,"nodeType":"StructuredDocumentation","src":"16191:738:19","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5040,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:19","nodeType":"FunctionDefinition","parameters":{"id":5024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5019,"mutability":"mutable","name":"b","nameLocation":"16961:1:19","nodeType":"VariableDeclaration","scope":5040,"src":"16953:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5018,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5021,"mutability":"mutable","name":"e","nameLocation":"16972:1:19","nodeType":"VariableDeclaration","scope":5040,"src":"16964:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5020,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5023,"mutability":"mutable","name":"m","nameLocation":"16983:1:19","nodeType":"VariableDeclaration","scope":5040,"src":"16975:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5022,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:19"},"returnParameters":{"id":5029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5026,"mutability":"mutable","name":"success","nameLocation":"17014:7:19","nodeType":"VariableDeclaration","scope":5040,"src":"17009:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5025,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5028,"mutability":"mutable","name":"result","nameLocation":"17031:6:19","nodeType":"VariableDeclaration","scope":5040,"src":"17023:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5027,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:19"},"scope":5830,"src":"16934:1598:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5075,"nodeType":"Block","src":"18729:179:19","statements":[{"assignments":[5053,5055],"declarations":[{"constant":false,"id":5053,"mutability":"mutable","name":"success","nameLocation":"18745:7:19","nodeType":"VariableDeclaration","scope":5075,"src":"18740:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5052,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5055,"mutability":"mutable","name":"result","nameLocation":"18767:6:19","nodeType":"VariableDeclaration","scope":5075,"src":"18754:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5054,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5061,"initialValue":{"arguments":[{"id":5057,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"18787:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5058,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"18790:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5059,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5047,"src":"18793:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5056,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5040,5122],"referencedDeclaration":5122,"src":"18777:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:19"},{"condition":{"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:19","subExpression":{"id":5062,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"18810:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5072,"nodeType":"IfStatement","src":"18805:74:19","trueBody":{"id":5071,"nodeType":"Block","src":"18819:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":5067,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"18845:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2268_$","typeString":"type(library Panic)"}},"id":5068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2235,"src":"18845:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5064,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"18833:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2268_$","typeString":"type(library Panic)"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2267,"src":"18833:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5070,"nodeType":"ExpressionStatement","src":"18833:35:19"}]}},{"expression":{"id":5073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"18895:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5051,"id":5074,"nodeType":"Return","src":"18888:13:19"}]},"documentation":{"id":5041,"nodeType":"StructuredDocumentation","src":"18538:85:19","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5076,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:19","nodeType":"FunctionDefinition","parameters":{"id":5048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5043,"mutability":"mutable","name":"b","nameLocation":"18657:1:19","nodeType":"VariableDeclaration","scope":5076,"src":"18644:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5042,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5045,"mutability":"mutable","name":"e","nameLocation":"18673:1:19","nodeType":"VariableDeclaration","scope":5076,"src":"18660:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5044,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5047,"mutability":"mutable","name":"m","nameLocation":"18689:1:19","nodeType":"VariableDeclaration","scope":5076,"src":"18676:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5046,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:19"},"returnParameters":{"id":5051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5076,"src":"18715:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5049,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:19"},"scope":5830,"src":"18628:280:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5121,"nodeType":"Block","src":"19162:771:19","statements":[{"condition":{"arguments":[{"id":5091,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"19187:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5090,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"19176:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5100,"nodeType":"IfStatement","src":"19172:47:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5094,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5098,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5089,"id":5099,"nodeType":"Return","src":"19191:28:19"}},{"assignments":[5102],"declarations":[{"constant":false,"id":5102,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:19","nodeType":"VariableDeclaration","scope":5121,"src":"19230:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5101,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5105,"initialValue":{"expression":{"id":5103,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"19245:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:19","memberName":"length","nodeType":"MemberAccess","src":"19245:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:19"},{"expression":{"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"19335:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5109,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"19361:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:19","memberName":"length","nodeType":"MemberAccess","src":"19361:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5111,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"19371:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:19","memberName":"length","nodeType":"MemberAccess","src":"19371:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5113,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"19381:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5114,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"19387:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5115,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"19390:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5116,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"19393:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5107,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5119,"nodeType":"ExpressionStatement","src":"19335:60:19"},{"AST":{"nodeType":"YulBlock","src":"19431:496:19","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:19","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:19"},"nodeType":"YulFunctionCall","src":"19460:17:19"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:19","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:19"},"nodeType":"YulFunctionCall","src":"19589:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:19","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:19"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:19"},"nodeType":"YulFunctionCall","src":"19611:13:19"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:19"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:19"},"nodeType":"YulFunctionCall","src":"19578:62:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:19"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:19"},"nodeType":"YulFunctionCall","src":"19789:20:19"},"nodeType":"YulExpressionStatement","src":"19789:20:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:19","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:19"},"nodeType":"YulFunctionCall","src":"19898:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:19"},"nodeType":"YulFunctionCall","src":"19885:32:19"},"nodeType":"YulExpressionStatement","src":"19885:32:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":5102,"isOffset":false,"isSlot":false,"src":"19635:4:19","valueSize":1},{"declaration":5102,"isOffset":false,"isSlot":false,"src":"19804:4:19","valueSize":1},{"declaration":5102,"isOffset":false,"isSlot":false,"src":"19911:4:19","valueSize":1},{"declaration":5088,"isOffset":false,"isSlot":false,"src":"19464:6:19","valueSize":1},{"declaration":5088,"isOffset":false,"isSlot":false,"src":"19617:6:19","valueSize":1},{"declaration":5088,"isOffset":false,"isSlot":false,"src":"19796:6:19","valueSize":1},{"declaration":5086,"isOffset":false,"isSlot":false,"src":"19567:7:19","valueSize":1}],"flags":["memory-safe"],"id":5120,"nodeType":"InlineAssembly","src":"19406:521:19"}]},"documentation":{"id":5077,"nodeType":"StructuredDocumentation","src":"18914:88:19","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5122,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:19","nodeType":"FunctionDefinition","parameters":{"id":5084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5079,"mutability":"mutable","name":"b","nameLocation":"19048:1:19","nodeType":"VariableDeclaration","scope":5122,"src":"19035:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5078,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5081,"mutability":"mutable","name":"e","nameLocation":"19072:1:19","nodeType":"VariableDeclaration","scope":5122,"src":"19059:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5080,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5083,"mutability":"mutable","name":"m","nameLocation":"19096:1:19","nodeType":"VariableDeclaration","scope":5122,"src":"19083:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5082,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:19"},"returnParameters":{"id":5089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5086,"mutability":"mutable","name":"success","nameLocation":"19132:7:19","nodeType":"VariableDeclaration","scope":5122,"src":"19127:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5085,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5088,"mutability":"mutable","name":"result","nameLocation":"19154:6:19","nodeType":"VariableDeclaration","scope":5122,"src":"19141:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5087,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:19"},"scope":5830,"src":"19007:926:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5154,"nodeType":"Block","src":"20088:176:19","statements":[{"body":{"id":5150,"nodeType":"Block","src":"20145:92:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5141,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"20163:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5143,"indexExpression":{"id":5142,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"20173:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5149,"nodeType":"IfStatement","src":"20159:68:19","trueBody":{"id":5148,"nodeType":"Block","src":"20182:45:19","statements":[{"expression":{"hexValue":"66616c7365","id":5146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5129,"id":5147,"nodeType":"Return","src":"20200:12:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5134,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"20118:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5135,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"20122:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:19","memberName":"length","nodeType":"MemberAccess","src":"20122:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5151,"initializationExpression":{"assignments":[5131],"declarations":[{"constant":false,"id":5131,"mutability":"mutable","name":"i","nameLocation":"20111:1:19","nodeType":"VariableDeclaration","scope":5151,"src":"20103:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5130,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5133,"initialValue":{"hexValue":"30","id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:19"},"loopExpression":{"expression":{"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:19","subExpression":{"id":5138,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"20142:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5140,"nodeType":"ExpressionStatement","src":"20140:3:19"},"nodeType":"ForStatement","src":"20098:139:19"},{"expression":{"hexValue":"74727565","id":5152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5129,"id":5153,"nodeType":"Return","src":"20246:11:19"}]},"documentation":{"id":5123,"nodeType":"StructuredDocumentation","src":"19939:72:19","text":" @dev Returns whether the provided byte array is zero."},"id":5155,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:19","nodeType":"FunctionDefinition","parameters":{"id":5126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5125,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:19","nodeType":"VariableDeclaration","scope":5155,"src":"20036:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5124,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:19"},"returnParameters":{"id":5129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5155,"src":"20082:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5127,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:19"},"scope":5830,"src":"20016:248:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5373,"nodeType":"Block","src":"20624:5124:19","statements":[{"id":5372,"nodeType":"UncheckedBlock","src":"20634:5108:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5163,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"20728:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5169,"nodeType":"IfStatement","src":"20724:53:19","trueBody":{"id":5168,"nodeType":"Block","src":"20736:41:19","statements":[{"expression":{"id":5166,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"20761:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5162,"id":5167,"nodeType":"Return","src":"20754:8:19"}]}},{"assignments":[5171],"declarations":[{"constant":false,"id":5171,"mutability":"mutable","name":"aa","nameLocation":"21712:2:19","nodeType":"VariableDeclaration","scope":5372,"src":"21704:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5170,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5173,"initialValue":{"id":5172,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"21717:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:19"},{"assignments":[5175],"declarations":[{"constant":false,"id":5175,"mutability":"mutable","name":"xn","nameLocation":"21740:2:19","nodeType":"VariableDeclaration","scope":5372,"src":"21732:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5174,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5177,"initialValue":{"hexValue":"31","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5178,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"21765:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5182,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5193,"nodeType":"IfStatement","src":"21761:92:19","trueBody":{"id":5192,"nodeType":"Block","src":"21783:70:19","statements":[{"expression":{"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5184,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"21801:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5187,"nodeType":"ExpressionStatement","src":"21801:10:19"},{"expression":{"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5188,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"21829:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5191,"nodeType":"ExpressionStatement","src":"21829:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5194,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"21870:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5209,"nodeType":"IfStatement","src":"21866:90:19","trueBody":{"id":5208,"nodeType":"Block","src":"21887:69:19","statements":[{"expression":{"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5200,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"21905:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5203,"nodeType":"ExpressionStatement","src":"21905:9:19"},{"expression":{"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5204,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"21932:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5207,"nodeType":"ExpressionStatement","src":"21932:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5210,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"21973:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5225,"nodeType":"IfStatement","src":"21969:90:19","trueBody":{"id":5224,"nodeType":"Block","src":"21990:69:19","statements":[{"expression":{"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5216,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"22008:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5219,"nodeType":"ExpressionStatement","src":"22008:9:19"},{"expression":{"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5220,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"22035:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5223,"nodeType":"ExpressionStatement","src":"22035:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5226,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"22076:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5241,"nodeType":"IfStatement","src":"22072:89:19","trueBody":{"id":5240,"nodeType":"Block","src":"22093:68:19","statements":[{"expression":{"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5232,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"22111:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5235,"nodeType":"ExpressionStatement","src":"22111:9:19"},{"expression":{"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5236,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"22138:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5239,"nodeType":"ExpressionStatement","src":"22138:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5242,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"22178:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5257,"nodeType":"IfStatement","src":"22174:87:19","trueBody":{"id":5256,"nodeType":"Block","src":"22194:67:19","statements":[{"expression":{"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5248,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"22212:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5251,"nodeType":"ExpressionStatement","src":"22212:8:19"},{"expression":{"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5252,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"22238:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5255,"nodeType":"ExpressionStatement","src":"22238:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5258,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"22278:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5273,"nodeType":"IfStatement","src":"22274:87:19","trueBody":{"id":5272,"nodeType":"Block","src":"22294:67:19","statements":[{"expression":{"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5264,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"22312:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5267,"nodeType":"ExpressionStatement","src":"22312:8:19"},{"expression":{"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5268,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"22338:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5271,"nodeType":"ExpressionStatement","src":"22338:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5274,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"22378:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5278,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5285,"nodeType":"IfStatement","src":"22374:61:19","trueBody":{"id":5284,"nodeType":"Block","src":"22394:41:19","statements":[{"expression":{"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5280,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"22412:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5283,"nodeType":"ExpressionStatement","src":"22412:8:19"}]}},{"expression":{"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5286,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"22855:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5288,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"22865:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5294,"nodeType":"ExpressionStatement","src":"22855:18:19"},{"expression":{"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5295,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"24760:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5296,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"24766:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5297,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"24771:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5298,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"24775:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5301,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5305,"nodeType":"ExpressionStatement","src":"24760:23:19"},{"expression":{"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5306,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"24869:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5307,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"24875:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5308,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"24880:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5309,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"24884:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5316,"nodeType":"ExpressionStatement","src":"24869:23:19"},{"expression":{"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5317,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"24980:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5318,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"24986:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5319,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"24991:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5320,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"24995:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5327,"nodeType":"ExpressionStatement","src":"24980:23:19"},{"expression":{"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5328,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"25089:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5329,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"25095:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5330,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"25100:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5331,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"25104:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5338,"nodeType":"ExpressionStatement","src":"25089:23:19"},{"expression":{"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5339,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"25199:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5340,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"25205:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5341,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"25210:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5342,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"25214:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5345,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5349,"nodeType":"ExpressionStatement","src":"25199:23:19"},{"expression":{"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5350,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"25309:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5351,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"25315:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5352,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"25320:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5353,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"25324:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5356,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5360,"nodeType":"ExpressionStatement","src":"25309:23:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5361,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"25698:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5364,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"25719:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"25724:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5366,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"25728:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5362,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"25703:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"25703:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5162,"id":5371,"nodeType":"Return","src":"25691:40:19"}]}]},"documentation":{"id":5156,"nodeType":"StructuredDocumentation","src":"20270:292:19","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5374,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:19","nodeType":"FunctionDefinition","parameters":{"id":5159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5158,"mutability":"mutable","name":"a","nameLocation":"20589:1:19","nodeType":"VariableDeclaration","scope":5374,"src":"20581:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5157,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:19"},"returnParameters":{"id":5162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5374,"src":"20615:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5160,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:19"},"scope":5830,"src":"20567:5181:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5407,"nodeType":"Block","src":"25921:171:19","statements":[{"id":5406,"nodeType":"UncheckedBlock","src":"25931:155:19","statements":[{"assignments":[5386],"declarations":[{"constant":false,"id":5386,"mutability":"mutable","name":"result","nameLocation":"25963:6:19","nodeType":"VariableDeclaration","scope":5406,"src":"25955:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5385,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5390,"initialValue":{"arguments":[{"id":5388,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"25977:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5387,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5374,5408],"referencedDeclaration":5374,"src":"25972:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5391,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"26000:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5395,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"26042:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}],"id":5394,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"26025:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4221_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5397,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"26055:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5398,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"26064:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5400,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"26073:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5392,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"26009:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"26009:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5384,"id":5405,"nodeType":"Return","src":"25993:82:19"}]}]},"documentation":{"id":5375,"nodeType":"StructuredDocumentation","src":"25754:86:19","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5408,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:19","nodeType":"FunctionDefinition","parameters":{"id":5381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5377,"mutability":"mutable","name":"a","nameLocation":"25867:1:19","nodeType":"VariableDeclaration","scope":5408,"src":"25859:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5376,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5380,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:19","nodeType":"VariableDeclaration","scope":5408,"src":"25870:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"},"typeName":{"id":5379,"nodeType":"UserDefinedTypeName","pathNode":{"id":5378,"name":"Rounding","nameLocations":["25870:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4221,"src":"25870:8:19"},"referencedDeclaration":4221,"src":"25870:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:19"},"returnParameters":{"id":5384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5408,"src":"25912:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5382,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:19"},"scope":5830,"src":"25845:247:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5498,"nodeType":"Block","src":"26281:2334:19","statements":[{"expression":{"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5416,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"26363:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5419,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"26383:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5417,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"26367:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"26367:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5426,"nodeType":"ExpressionStatement","src":"26363:64:19"},{"expression":{"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5427,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"26503:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5430,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"26525:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5431,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"26530:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5428,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"26508:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"26508:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5440,"nodeType":"ExpressionStatement","src":"26503:56:19"},{"expression":{"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5441,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"26634:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5444,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"26656:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5445,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"26661:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5447,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5442,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"26639:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"26639:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5454,"nodeType":"ExpressionStatement","src":"26634:48:19"},{"expression":{"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5455,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"26757:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5458,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"26779:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5459,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"26784:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5461,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:19","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5456,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"26762:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"26762:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5468,"nodeType":"ExpressionStatement","src":"26757:44:19"},{"expression":{"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5469,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"26874:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5472,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"26896:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5473,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"26901:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5475,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5470,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"26879:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"26879:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5482,"nodeType":"ExpressionStatement","src":"26874:42:19"},{"expression":{"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5483,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"26988:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5486,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"27010:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5487,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"27015:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5489,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5484,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"26993:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"26993:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5496,"nodeType":"ExpressionStatement","src":"26988:41:19"},{"AST":{"nodeType":"YulBlock","src":"28490:119:19","statements":[{"nodeType":"YulAssignment","src":"28504:95:19","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:19"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:19"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:19"},"nodeType":"YulFunctionCall","src":"28520:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:19","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:19"},"nodeType":"YulFunctionCall","src":"28515:83:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:19"},"nodeType":"YulFunctionCall","src":"28509:90:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5414,"isOffset":false,"isSlot":false,"src":"28504:1:19","valueSize":1},{"declaration":5414,"isOffset":false,"isSlot":false,"src":"28512:1:19","valueSize":1},{"declaration":5414,"isOffset":false,"isSlot":false,"src":"28524:1:19","valueSize":1},{"declaration":5411,"isOffset":false,"isSlot":false,"src":"28527:1:19","valueSize":1}],"flags":["memory-safe"],"id":5497,"nodeType":"InlineAssembly","src":"28465:144:19"}]},"documentation":{"id":5409,"nodeType":"StructuredDocumentation","src":"26098:119:19","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5499,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:19","nodeType":"FunctionDefinition","parameters":{"id":5412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"mutability":"mutable","name":"x","nameLocation":"26244:1:19","nodeType":"VariableDeclaration","scope":5499,"src":"26236:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5410,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:19"},"returnParameters":{"id":5415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5414,"mutability":"mutable","name":"r","nameLocation":"26278:1:19","nodeType":"VariableDeclaration","scope":5499,"src":"26270:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5413,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:19"},"scope":5830,"src":"26222:2393:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5532,"nodeType":"Block","src":"28848:175:19","statements":[{"id":5531,"nodeType":"UncheckedBlock","src":"28858:159:19","statements":[{"assignments":[5511],"declarations":[{"constant":false,"id":5511,"mutability":"mutable","name":"result","nameLocation":"28890:6:19","nodeType":"VariableDeclaration","scope":5531,"src":"28882:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5510,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5515,"initialValue":{"arguments":[{"id":5513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"28904:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5512,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5499,5533],"referencedDeclaration":5499,"src":"28899:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5516,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"28931:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5520,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"28973:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}],"id":5519,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"28956:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4221_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"28991:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"29000:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5517,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"28940:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"28940:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5509,"id":5530,"nodeType":"Return","src":"28924:82:19"}]}]},"documentation":{"id":5500,"nodeType":"StructuredDocumentation","src":"28621:142:19","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5533,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:19","nodeType":"FunctionDefinition","parameters":{"id":5506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5502,"mutability":"mutable","name":"value","nameLocation":"28790:5:19","nodeType":"VariableDeclaration","scope":5533,"src":"28782:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5501,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5505,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:19","nodeType":"VariableDeclaration","scope":5533,"src":"28797:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"},"typeName":{"id":5504,"nodeType":"UserDefinedTypeName","pathNode":{"id":5503,"name":"Rounding","nameLocations":["28797:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4221,"src":"28797:8:19"},"referencedDeclaration":4221,"src":"28797:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:19"},"returnParameters":{"id":5509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5533,"src":"28839:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5507,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:19"},"scope":5830,"src":"28768:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5661,"nodeType":"Block","src":"29216:854:19","statements":[{"assignments":[5542],"declarations":[{"constant":false,"id":5542,"mutability":"mutable","name":"result","nameLocation":"29234:6:19","nodeType":"VariableDeclaration","scope":5661,"src":"29226:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5541,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5544,"initialValue":{"hexValue":"30","id":5543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:19"},{"id":5658,"nodeType":"UncheckedBlock","src":"29254:787:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"29282:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5561,"nodeType":"IfStatement","src":"29278:103:19","trueBody":{"id":5560,"nodeType":"Block","src":"29301:80:19","statements":[{"expression":{"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"29319:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5555,"nodeType":"ExpressionStatement","src":"29319:17:19"},{"expression":{"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5556,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"29354:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5559,"nodeType":"ExpressionStatement","src":"29354:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"29398:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5578,"nodeType":"IfStatement","src":"29394:103:19","trueBody":{"id":5577,"nodeType":"Block","src":"29417:80:19","statements":[{"expression":{"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"29435:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5572,"nodeType":"ExpressionStatement","src":"29435:17:19"},{"expression":{"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"29470:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5576,"nodeType":"ExpressionStatement","src":"29470:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"29514:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5595,"nodeType":"IfStatement","src":"29510:103:19","trueBody":{"id":5594,"nodeType":"Block","src":"29533:80:19","statements":[{"expression":{"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"29551:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5589,"nodeType":"ExpressionStatement","src":"29551:17:19"},{"expression":{"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"29586:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5593,"nodeType":"ExpressionStatement","src":"29586:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"29630:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5612,"nodeType":"IfStatement","src":"29626:100:19","trueBody":{"id":5611,"nodeType":"Block","src":"29648:78:19","statements":[{"expression":{"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"29666:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5606,"nodeType":"ExpressionStatement","src":"29666:16:19"},{"expression":{"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"29700:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5610,"nodeType":"ExpressionStatement","src":"29700:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"29743:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5629,"nodeType":"IfStatement","src":"29739:100:19","trueBody":{"id":5628,"nodeType":"Block","src":"29761:78:19","statements":[{"expression":{"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"29779:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5623,"nodeType":"ExpressionStatement","src":"29779:16:19"},{"expression":{"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5624,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"29813:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5627,"nodeType":"ExpressionStatement","src":"29813:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"29856:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5646,"nodeType":"IfStatement","src":"29852:100:19","trueBody":{"id":5645,"nodeType":"Block","src":"29874:78:19","statements":[{"expression":{"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"29892:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5640,"nodeType":"ExpressionStatement","src":"29892:16:19"},{"expression":{"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"29926:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5644,"nodeType":"ExpressionStatement","src":"29926:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"29969:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5657,"nodeType":"IfStatement","src":"29965:66:19","trueBody":{"id":5656,"nodeType":"Block","src":"29987:44:19","statements":[{"expression":{"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"30005:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5655,"nodeType":"ExpressionStatement","src":"30005:11:19"}]}}]},{"expression":{"id":5659,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"30057:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5540,"id":5660,"nodeType":"Return","src":"30050:13:19"}]},"documentation":{"id":5534,"nodeType":"StructuredDocumentation","src":"29029:120:19","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5662,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:19","nodeType":"FunctionDefinition","parameters":{"id":5537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5536,"mutability":"mutable","name":"value","nameLocation":"29177:5:19","nodeType":"VariableDeclaration","scope":5662,"src":"29169:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5535,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:19"},"returnParameters":{"id":5540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5662,"src":"29207:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5538,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:19"},"scope":5830,"src":"29154:916:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5695,"nodeType":"Block","src":"30305:177:19","statements":[{"id":5694,"nodeType":"UncheckedBlock","src":"30315:161:19","statements":[{"assignments":[5674],"declarations":[{"constant":false,"id":5674,"mutability":"mutable","name":"result","nameLocation":"30347:6:19","nodeType":"VariableDeclaration","scope":5694,"src":"30339:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5673,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5678,"initialValue":{"arguments":[{"id":5676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"30362:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5675,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5662,5696],"referencedDeclaration":5662,"src":"30356:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5679,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5674,"src":"30389:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5683,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"30431:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}],"id":5682,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"30414:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4221_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5674,"src":"30450:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"30459:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5680,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"30398:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"30398:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5672,"id":5693,"nodeType":"Return","src":"30382:83:19"}]}]},"documentation":{"id":5663,"nodeType":"StructuredDocumentation","src":"30076:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5696,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:19","nodeType":"FunctionDefinition","parameters":{"id":5669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5665,"mutability":"mutable","name":"value","nameLocation":"30247:5:19","nodeType":"VariableDeclaration","scope":5696,"src":"30239:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5664,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5668,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:19","nodeType":"VariableDeclaration","scope":5696,"src":"30254:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"},"typeName":{"id":5667,"nodeType":"UserDefinedTypeName","pathNode":{"id":5666,"name":"Rounding","nameLocations":["30254:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4221,"src":"30254:8:19"},"referencedDeclaration":4221,"src":"30254:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:19"},"returnParameters":{"id":5672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5696,"src":"30296:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5670,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:19"},"scope":5830,"src":"30224:258:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5772,"nodeType":"Block","src":"30800:675:19","statements":[{"expression":{"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5704,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"30882:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5707,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"30902:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5705,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"30886:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"30886:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5714,"nodeType":"ExpressionStatement","src":"30882:64:19"},{"expression":{"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5715,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"31022:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5718,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"31044:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5719,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"31049:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5716,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"31027:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"31027:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5728,"nodeType":"ExpressionStatement","src":"31022:56:19"},{"expression":{"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5729,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"31153:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5732,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"31175:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5733,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"31180:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5730,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"31158:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"31158:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5742,"nodeType":"ExpressionStatement","src":"31153:48:19"},{"expression":{"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5743,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"31276:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5746,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"31298:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5747,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"31303:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:19","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5744,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"31281:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"31281:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5756,"nodeType":"ExpressionStatement","src":"31276:44:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5757,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"31426:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5763,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"31453:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5764,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"31458:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5766,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5761,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"31436:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"31436:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5703,"id":5771,"nodeType":"Return","src":"31418:50:19"}]},"documentation":{"id":5697,"nodeType":"StructuredDocumentation","src":"30488:246:19","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5773,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:19","nodeType":"FunctionDefinition","parameters":{"id":5700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5699,"mutability":"mutable","name":"x","nameLocation":"30763:1:19","nodeType":"VariableDeclaration","scope":5773,"src":"30755:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5698,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:19"},"returnParameters":{"id":5703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5702,"mutability":"mutable","name":"r","nameLocation":"30797:1:19","nodeType":"VariableDeclaration","scope":5773,"src":"30789:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5701,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:19"},"scope":5830,"src":"30739:736:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5809,"nodeType":"Block","src":"31712:184:19","statements":[{"id":5808,"nodeType":"UncheckedBlock","src":"31722:168:19","statements":[{"assignments":[5785],"declarations":[{"constant":false,"id":5785,"mutability":"mutable","name":"result","nameLocation":"31754:6:19","nodeType":"VariableDeclaration","scope":5808,"src":"31746:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5784,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5789,"initialValue":{"arguments":[{"id":5787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"31770:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5786,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5773,5810],"referencedDeclaration":5773,"src":"31763:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5790,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"31797:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5794,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5779,"src":"31839:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}],"id":5793,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"31822:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4221_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"31858:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"31873:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5791,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"31806:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"31806:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5783,"id":5807,"nodeType":"Return","src":"31790:89:19"}]}]},"documentation":{"id":5774,"nodeType":"StructuredDocumentation","src":"31481:144:19","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5810,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:19","nodeType":"FunctionDefinition","parameters":{"id":5780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5776,"mutability":"mutable","name":"value","nameLocation":"31654:5:19","nodeType":"VariableDeclaration","scope":5810,"src":"31646:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5775,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5779,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:19","nodeType":"VariableDeclaration","scope":5810,"src":"31661:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"},"typeName":{"id":5778,"nodeType":"UserDefinedTypeName","pathNode":{"id":5777,"name":"Rounding","nameLocations":["31661:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4221,"src":"31661:8:19"},"referencedDeclaration":4221,"src":"31661:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:19"},"returnParameters":{"id":5783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5810,"src":"31703:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5781,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:19"},"scope":5830,"src":"31630:266:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5828,"nodeType":"Block","src":"32094:48:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5821,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"32117:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}],"id":5820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5819,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:19","typeDescriptions":{}}},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5818,"id":5827,"nodeType":"Return","src":"32104:31:19"}]},"documentation":{"id":5811,"nodeType":"StructuredDocumentation","src":"31902:113:19","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5829,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:19","nodeType":"FunctionDefinition","parameters":{"id":5815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5814,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:19","nodeType":"VariableDeclaration","scope":5829,"src":"32046:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"},"typeName":{"id":5813,"nodeType":"UserDefinedTypeName","pathNode":{"id":5812,"name":"Rounding","nameLocations":["32046:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":4221,"src":"32046:8:19"},"referencedDeclaration":4221,"src":"32046:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4221","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:19"},"returnParameters":{"id":5818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5829,"src":"32088:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5816,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:19"},"scope":5830,"src":"32020:122:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5831,"src":"281:31863:19","usedErrors":[],"usedEvents":[]}],"src":"103:32042:19"},"id":19},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7595]},"id":7596,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5832,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5833,"nodeType":"StructuredDocumentation","src":"218:550:20","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7595,"linearizedBaseContracts":[7595],"name":"SafeCast","nameLocation":"777:8:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5834,"nodeType":"StructuredDocumentation","src":"792:68:20","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5840,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:20","nodeType":"ErrorDefinition","parameters":{"id":5839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5836,"mutability":"mutable","name":"bits","nameLocation":"908:4:20","nodeType":"VariableDeclaration","scope":5840,"src":"902:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5835,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5838,"mutability":"mutable","name":"value","nameLocation":"922:5:20","nodeType":"VariableDeclaration","scope":5840,"src":"914:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5837,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:20"},"src":"865:64:20"},{"documentation":{"id":5841,"nodeType":"StructuredDocumentation","src":"935:75:20","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5845,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:20","nodeType":"ErrorDefinition","parameters":{"id":5844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5843,"mutability":"mutable","name":"value","nameLocation":"1056:5:20","nodeType":"VariableDeclaration","scope":5845,"src":"1049:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5842,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:20"},"src":"1015:48:20"},{"documentation":{"id":5846,"nodeType":"StructuredDocumentation","src":"1069:67:20","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5852,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:20","nodeType":"ErrorDefinition","parameters":{"id":5851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5848,"mutability":"mutable","name":"bits","nameLocation":"1183:4:20","nodeType":"VariableDeclaration","scope":5852,"src":"1177:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5847,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5850,"mutability":"mutable","name":"value","nameLocation":"1196:5:20","nodeType":"VariableDeclaration","scope":5852,"src":"1189:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5849,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:20"},"src":"1141:62:20"},{"documentation":{"id":5853,"nodeType":"StructuredDocumentation","src":"1209:75:20","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5857,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:20","nodeType":"ErrorDefinition","parameters":{"id":5856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5855,"mutability":"mutable","name":"value","nameLocation":"1331:5:20","nodeType":"VariableDeclaration","scope":5857,"src":"1323:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5854,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:20"},"src":"1289:49:20"},{"body":{"id":5884,"nodeType":"Block","src":"1695:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"1709:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5867,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5866,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:20","memberName":"max","nodeType":"MemberAccess","src":"1717:17:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5878,"nodeType":"IfStatement","src":"1705:105:20","trueBody":{"id":5877,"nodeType":"Block","src":"1736:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"1793:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5872,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"1757:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5876,"nodeType":"RevertStatement","src":"1750:49:20"}]}},{"expression":{"arguments":[{"id":5881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"1834:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5879,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:20","typeDescriptions":{}}},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5864,"id":5883,"nodeType":"Return","src":"1819:21:20"}]},"documentation":{"id":5858,"nodeType":"StructuredDocumentation","src":"1344:280:20","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5885,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:20","nodeType":"FunctionDefinition","parameters":{"id":5861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5860,"mutability":"mutable","name":"value","nameLocation":"1656:5:20","nodeType":"VariableDeclaration","scope":5885,"src":"1648:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:20"},"returnParameters":{"id":5864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5885,"src":"1686:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5862,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:20"},"scope":7595,"src":"1629:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5912,"nodeType":"Block","src":"2204:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"2218:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5895,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5894,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:20","memberName":"max","nodeType":"MemberAccess","src":"2226:17:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5906,"nodeType":"IfStatement","src":"2214:105:20","trueBody":{"id":5905,"nodeType":"Block","src":"2245:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"2302:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5900,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"2266:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5904,"nodeType":"RevertStatement","src":"2259:49:20"}]}},{"expression":{"arguments":[{"id":5909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"2343:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5907,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:20","typeDescriptions":{}}},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5892,"id":5911,"nodeType":"Return","src":"2328:21:20"}]},"documentation":{"id":5886,"nodeType":"StructuredDocumentation","src":"1853:280:20","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5913,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:20","nodeType":"FunctionDefinition","parameters":{"id":5889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5888,"mutability":"mutable","name":"value","nameLocation":"2165:5:20","nodeType":"VariableDeclaration","scope":5913,"src":"2157:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5887,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:20"},"returnParameters":{"id":5892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5913,"src":"2195:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5890,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:20"},"scope":7595,"src":"2138:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5940,"nodeType":"Block","src":"2713:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"2727:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5923,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5922,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:20","memberName":"max","nodeType":"MemberAccess","src":"2735:17:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5934,"nodeType":"IfStatement","src":"2723:105:20","trueBody":{"id":5933,"nodeType":"Block","src":"2754:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"2811:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5928,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"2775:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5932,"nodeType":"RevertStatement","src":"2768:49:20"}]}},{"expression":{"arguments":[{"id":5937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"2852:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5935,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:20","typeDescriptions":{}}},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5920,"id":5939,"nodeType":"Return","src":"2837:21:20"}]},"documentation":{"id":5914,"nodeType":"StructuredDocumentation","src":"2362:280:20","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5941,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:20","nodeType":"FunctionDefinition","parameters":{"id":5917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5916,"mutability":"mutable","name":"value","nameLocation":"2674:5:20","nodeType":"VariableDeclaration","scope":5941,"src":"2666:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:20"},"returnParameters":{"id":5920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5941,"src":"2704:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5918,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:20"},"scope":7595,"src":"2647:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5968,"nodeType":"Block","src":"3222:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"3236:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5951,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5950,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:20","memberName":"max","nodeType":"MemberAccess","src":"3244:17:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5962,"nodeType":"IfStatement","src":"3232:105:20","trueBody":{"id":5961,"nodeType":"Block","src":"3263:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"3320:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5956,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"3284:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5960,"nodeType":"RevertStatement","src":"3277:49:20"}]}},{"expression":{"arguments":[{"id":5965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"3361:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5963,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:20","typeDescriptions":{}}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5948,"id":5967,"nodeType":"Return","src":"3346:21:20"}]},"documentation":{"id":5942,"nodeType":"StructuredDocumentation","src":"2871:280:20","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5969,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:20","nodeType":"FunctionDefinition","parameters":{"id":5945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5944,"mutability":"mutable","name":"value","nameLocation":"3183:5:20","nodeType":"VariableDeclaration","scope":5969,"src":"3175:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5943,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:20"},"returnParameters":{"id":5948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5969,"src":"3213:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5946,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:20"},"scope":7595,"src":"3156:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5996,"nodeType":"Block","src":"3731:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"3745:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5979,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5978,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:20","memberName":"max","nodeType":"MemberAccess","src":"3753:17:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5990,"nodeType":"IfStatement","src":"3741:105:20","trueBody":{"id":5989,"nodeType":"Block","src":"3772:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"3829:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5984,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"3793:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5988,"nodeType":"RevertStatement","src":"3786:49:20"}]}},{"expression":{"arguments":[{"id":5993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"3870:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5991,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:20","typeDescriptions":{}}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5976,"id":5995,"nodeType":"Return","src":"3855:21:20"}]},"documentation":{"id":5970,"nodeType":"StructuredDocumentation","src":"3380:280:20","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5997,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:20","nodeType":"FunctionDefinition","parameters":{"id":5973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5972,"mutability":"mutable","name":"value","nameLocation":"3692:5:20","nodeType":"VariableDeclaration","scope":5997,"src":"3684:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5971,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:20"},"returnParameters":{"id":5976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5997,"src":"3722:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5974,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:20"},"scope":7595,"src":"3665:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6024,"nodeType":"Block","src":"4240:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"4254:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6007,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6006,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:20","memberName":"max","nodeType":"MemberAccess","src":"4262:17:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6018,"nodeType":"IfStatement","src":"4250:105:20","trueBody":{"id":6017,"nodeType":"Block","src":"4281:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"4338:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6012,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"4302:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6016,"nodeType":"RevertStatement","src":"4295:49:20"}]}},{"expression":{"arguments":[{"id":6021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"4379:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6019,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:20","typeDescriptions":{}}},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6004,"id":6023,"nodeType":"Return","src":"4364:21:20"}]},"documentation":{"id":5998,"nodeType":"StructuredDocumentation","src":"3889:280:20","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6025,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:20","nodeType":"FunctionDefinition","parameters":{"id":6001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6000,"mutability":"mutable","name":"value","nameLocation":"4201:5:20","nodeType":"VariableDeclaration","scope":6025,"src":"4193:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5999,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:20"},"returnParameters":{"id":6004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6025,"src":"4231:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6002,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:20"},"scope":7595,"src":"4174:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6052,"nodeType":"Block","src":"4749:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"4763:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6035,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6034,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:20","memberName":"max","nodeType":"MemberAccess","src":"4771:17:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6046,"nodeType":"IfStatement","src":"4759:105:20","trueBody":{"id":6045,"nodeType":"Block","src":"4790:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"4847:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6040,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"4811:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6044,"nodeType":"RevertStatement","src":"4804:49:20"}]}},{"expression":{"arguments":[{"id":6049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"4888:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6047,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:20","typeDescriptions":{}}},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6032,"id":6051,"nodeType":"Return","src":"4873:21:20"}]},"documentation":{"id":6026,"nodeType":"StructuredDocumentation","src":"4398:280:20","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6053,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:20","nodeType":"FunctionDefinition","parameters":{"id":6029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6028,"mutability":"mutable","name":"value","nameLocation":"4710:5:20","nodeType":"VariableDeclaration","scope":6053,"src":"4702:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6027,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:20"},"returnParameters":{"id":6032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6053,"src":"4740:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6030,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:20"},"scope":7595,"src":"4683:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6080,"nodeType":"Block","src":"5258:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"5272:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6063,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6062,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:20","memberName":"max","nodeType":"MemberAccess","src":"5280:17:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6074,"nodeType":"IfStatement","src":"5268:105:20","trueBody":{"id":6073,"nodeType":"Block","src":"5299:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"5356:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6068,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"5320:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6072,"nodeType":"RevertStatement","src":"5313:49:20"}]}},{"expression":{"arguments":[{"id":6077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"5397:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6075,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:20","typeDescriptions":{}}},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6060,"id":6079,"nodeType":"Return","src":"5382:21:20"}]},"documentation":{"id":6054,"nodeType":"StructuredDocumentation","src":"4907:280:20","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6081,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:20","nodeType":"FunctionDefinition","parameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6056,"mutability":"mutable","name":"value","nameLocation":"5219:5:20","nodeType":"VariableDeclaration","scope":6081,"src":"5211:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6055,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:20"},"returnParameters":{"id":6060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6081,"src":"5249:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6058,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:20"},"scope":7595,"src":"5192:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6108,"nodeType":"Block","src":"5767:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"5781:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6091,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6090,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:20","memberName":"max","nodeType":"MemberAccess","src":"5789:17:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6102,"nodeType":"IfStatement","src":"5777:105:20","trueBody":{"id":6101,"nodeType":"Block","src":"5808:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"5865:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6096,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"5829:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6100,"nodeType":"RevertStatement","src":"5822:49:20"}]}},{"expression":{"arguments":[{"id":6105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6084,"src":"5906:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6103,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:20","typeDescriptions":{}}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6088,"id":6107,"nodeType":"Return","src":"5891:21:20"}]},"documentation":{"id":6082,"nodeType":"StructuredDocumentation","src":"5416:280:20","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6109,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:20","nodeType":"FunctionDefinition","parameters":{"id":6085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6084,"mutability":"mutable","name":"value","nameLocation":"5728:5:20","nodeType":"VariableDeclaration","scope":6109,"src":"5720:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6083,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:20"},"returnParameters":{"id":6088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6109,"src":"5758:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6086,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:20"},"scope":7595,"src":"5701:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6136,"nodeType":"Block","src":"6276:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"6290:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6119,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6118,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:20","memberName":"max","nodeType":"MemberAccess","src":"6298:17:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6130,"nodeType":"IfStatement","src":"6286:105:20","trueBody":{"id":6129,"nodeType":"Block","src":"6317:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"6374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6124,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"6338:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6128,"nodeType":"RevertStatement","src":"6331:49:20"}]}},{"expression":{"arguments":[{"id":6133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"6415:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6131,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:20","typeDescriptions":{}}},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6116,"id":6135,"nodeType":"Return","src":"6400:21:20"}]},"documentation":{"id":6110,"nodeType":"StructuredDocumentation","src":"5925:280:20","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6137,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:20","nodeType":"FunctionDefinition","parameters":{"id":6113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6112,"mutability":"mutable","name":"value","nameLocation":"6237:5:20","nodeType":"VariableDeclaration","scope":6137,"src":"6229:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6111,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:20"},"returnParameters":{"id":6116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6137,"src":"6267:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6114,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:20"},"scope":7595,"src":"6210:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6164,"nodeType":"Block","src":"6785:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"6799:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6147,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6146,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:20","memberName":"max","nodeType":"MemberAccess","src":"6807:17:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6158,"nodeType":"IfStatement","src":"6795:105:20","trueBody":{"id":6157,"nodeType":"Block","src":"6826:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"6883:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6152,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"6847:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6156,"nodeType":"RevertStatement","src":"6840:49:20"}]}},{"expression":{"arguments":[{"id":6161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"6924:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6159,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:20","typeDescriptions":{}}},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6144,"id":6163,"nodeType":"Return","src":"6909:21:20"}]},"documentation":{"id":6138,"nodeType":"StructuredDocumentation","src":"6434:280:20","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6165,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:20","nodeType":"FunctionDefinition","parameters":{"id":6141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6140,"mutability":"mutable","name":"value","nameLocation":"6746:5:20","nodeType":"VariableDeclaration","scope":6165,"src":"6738:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6139,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:20"},"returnParameters":{"id":6144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6165,"src":"6776:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6142,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:20"},"scope":7595,"src":"6719:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6192,"nodeType":"Block","src":"7294:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"7308:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6175,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6174,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:20","memberName":"max","nodeType":"MemberAccess","src":"7316:17:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6186,"nodeType":"IfStatement","src":"7304:105:20","trueBody":{"id":6185,"nodeType":"Block","src":"7335:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"7392:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6180,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"7356:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6184,"nodeType":"RevertStatement","src":"7349:49:20"}]}},{"expression":{"arguments":[{"id":6189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"7433:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6187,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:20","typeDescriptions":{}}},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6172,"id":6191,"nodeType":"Return","src":"7418:21:20"}]},"documentation":{"id":6166,"nodeType":"StructuredDocumentation","src":"6943:280:20","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6193,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:20","nodeType":"FunctionDefinition","parameters":{"id":6169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6168,"mutability":"mutable","name":"value","nameLocation":"7255:5:20","nodeType":"VariableDeclaration","scope":6193,"src":"7247:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6167,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:20"},"returnParameters":{"id":6172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6193,"src":"7285:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6170,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:20"},"scope":7595,"src":"7228:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6220,"nodeType":"Block","src":"7803:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"7817:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6203,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6202,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:20","memberName":"max","nodeType":"MemberAccess","src":"7825:17:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6214,"nodeType":"IfStatement","src":"7813:105:20","trueBody":{"id":6213,"nodeType":"Block","src":"7844:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"7901:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6208,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"7865:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6212,"nodeType":"RevertStatement","src":"7858:49:20"}]}},{"expression":{"arguments":[{"id":6217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"7942:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6215,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:20","typeDescriptions":{}}},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6200,"id":6219,"nodeType":"Return","src":"7927:21:20"}]},"documentation":{"id":6194,"nodeType":"StructuredDocumentation","src":"7452:280:20","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6221,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:20","nodeType":"FunctionDefinition","parameters":{"id":6197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"value","nameLocation":"7764:5:20","nodeType":"VariableDeclaration","scope":6221,"src":"7756:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6195,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:20"},"returnParameters":{"id":6200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6221,"src":"7794:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6198,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:20"},"scope":7595,"src":"7737:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6248,"nodeType":"Block","src":"8312:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"8326:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6231,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6230,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:20","memberName":"max","nodeType":"MemberAccess","src":"8334:17:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6242,"nodeType":"IfStatement","src":"8322:105:20","trueBody":{"id":6241,"nodeType":"Block","src":"8353:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"8410:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6236,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"8374:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6240,"nodeType":"RevertStatement","src":"8367:49:20"}]}},{"expression":{"arguments":[{"id":6245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"8451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6243,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:20","typeDescriptions":{}}},"id":6246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6228,"id":6247,"nodeType":"Return","src":"8436:21:20"}]},"documentation":{"id":6222,"nodeType":"StructuredDocumentation","src":"7961:280:20","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6249,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:20","nodeType":"FunctionDefinition","parameters":{"id":6225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6224,"mutability":"mutable","name":"value","nameLocation":"8273:5:20","nodeType":"VariableDeclaration","scope":6249,"src":"8265:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6223,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:20"},"returnParameters":{"id":6228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6249,"src":"8303:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6226,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:20"},"scope":7595,"src":"8246:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6276,"nodeType":"Block","src":"8821:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"8835:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6259,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6258,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:20","memberName":"max","nodeType":"MemberAccess","src":"8843:17:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6270,"nodeType":"IfStatement","src":"8831:105:20","trueBody":{"id":6269,"nodeType":"Block","src":"8862:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"8919:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6264,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"8883:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6268,"nodeType":"RevertStatement","src":"8876:49:20"}]}},{"expression":{"arguments":[{"id":6273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"8960:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6271,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:20","typeDescriptions":{}}},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6256,"id":6275,"nodeType":"Return","src":"8945:21:20"}]},"documentation":{"id":6250,"nodeType":"StructuredDocumentation","src":"8470:280:20","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6277,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:20","nodeType":"FunctionDefinition","parameters":{"id":6253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6252,"mutability":"mutable","name":"value","nameLocation":"8782:5:20","nodeType":"VariableDeclaration","scope":6277,"src":"8774:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6251,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:20"},"returnParameters":{"id":6256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6277,"src":"8812:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6254,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:20"},"scope":7595,"src":"8755:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6304,"nodeType":"Block","src":"9330:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"9344:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6287,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6286,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:20","memberName":"max","nodeType":"MemberAccess","src":"9352:17:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6298,"nodeType":"IfStatement","src":"9340:105:20","trueBody":{"id":6297,"nodeType":"Block","src":"9371:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"9428:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6292,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"9392:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6296,"nodeType":"RevertStatement","src":"9385:49:20"}]}},{"expression":{"arguments":[{"id":6301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"9469:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6299,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:20","typeDescriptions":{}}},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6284,"id":6303,"nodeType":"Return","src":"9454:21:20"}]},"documentation":{"id":6278,"nodeType":"StructuredDocumentation","src":"8979:280:20","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6305,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:20","nodeType":"FunctionDefinition","parameters":{"id":6281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6280,"mutability":"mutable","name":"value","nameLocation":"9291:5:20","nodeType":"VariableDeclaration","scope":6305,"src":"9283:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6279,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:20"},"returnParameters":{"id":6284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6305,"src":"9321:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6282,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:20"},"scope":7595,"src":"9264:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6332,"nodeType":"Block","src":"9839:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"9853:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6315,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6314,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:20","memberName":"max","nodeType":"MemberAccess","src":"9861:17:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6326,"nodeType":"IfStatement","src":"9849:105:20","trueBody":{"id":6325,"nodeType":"Block","src":"9880:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"9937:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6320,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"9901:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6324,"nodeType":"RevertStatement","src":"9894:49:20"}]}},{"expression":{"arguments":[{"id":6329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"9978:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6327,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:20","typeDescriptions":{}}},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6312,"id":6331,"nodeType":"Return","src":"9963:21:20"}]},"documentation":{"id":6306,"nodeType":"StructuredDocumentation","src":"9488:280:20","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6333,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:20","nodeType":"FunctionDefinition","parameters":{"id":6309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6308,"mutability":"mutable","name":"value","nameLocation":"9800:5:20","nodeType":"VariableDeclaration","scope":6333,"src":"9792:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6307,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:20"},"returnParameters":{"id":6312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6333,"src":"9830:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6310,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:20"},"scope":7595,"src":"9773:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6360,"nodeType":"Block","src":"10348:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6336,"src":"10362:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6343,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6342,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:20","memberName":"max","nodeType":"MemberAccess","src":"10370:17:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6354,"nodeType":"IfStatement","src":"10358:105:20","trueBody":{"id":6353,"nodeType":"Block","src":"10389:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6336,"src":"10446:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6348,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"10410:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6352,"nodeType":"RevertStatement","src":"10403:49:20"}]}},{"expression":{"arguments":[{"id":6357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6336,"src":"10487:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6355,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:20","typeDescriptions":{}}},"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6340,"id":6359,"nodeType":"Return","src":"10472:21:20"}]},"documentation":{"id":6334,"nodeType":"StructuredDocumentation","src":"9997:280:20","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6361,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:20","nodeType":"FunctionDefinition","parameters":{"id":6337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6336,"mutability":"mutable","name":"value","nameLocation":"10309:5:20","nodeType":"VariableDeclaration","scope":6361,"src":"10301:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6335,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:20"},"returnParameters":{"id":6340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6361,"src":"10339:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6338,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:20"},"scope":7595,"src":"10282:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6388,"nodeType":"Block","src":"10857:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"10871:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6371,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6370,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:20","memberName":"max","nodeType":"MemberAccess","src":"10879:17:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6382,"nodeType":"IfStatement","src":"10867:105:20","trueBody":{"id":6381,"nodeType":"Block","src":"10898:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"10955:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6376,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"10919:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6380,"nodeType":"RevertStatement","src":"10912:49:20"}]}},{"expression":{"arguments":[{"id":6385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6364,"src":"10996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6383,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:20","typeDescriptions":{}}},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6368,"id":6387,"nodeType":"Return","src":"10981:21:20"}]},"documentation":{"id":6362,"nodeType":"StructuredDocumentation","src":"10506:280:20","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6389,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:20","nodeType":"FunctionDefinition","parameters":{"id":6365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6364,"mutability":"mutable","name":"value","nameLocation":"10818:5:20","nodeType":"VariableDeclaration","scope":6389,"src":"10810:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6363,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:20"},"returnParameters":{"id":6368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6389,"src":"10848:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6366,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:20"},"scope":7595,"src":"10791:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6416,"nodeType":"Block","src":"11360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"11374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6399,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:20","memberName":"max","nodeType":"MemberAccess","src":"11382:16:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6410,"nodeType":"IfStatement","src":"11370:103:20","trueBody":{"id":6409,"nodeType":"Block","src":"11400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"11456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6404,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"11421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6408,"nodeType":"RevertStatement","src":"11414:48:20"}]}},{"expression":{"arguments":[{"id":6413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"11496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6411,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:20","typeDescriptions":{}}},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6396,"id":6415,"nodeType":"Return","src":"11482:20:20"}]},"documentation":{"id":6390,"nodeType":"StructuredDocumentation","src":"11015:276:20","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6417,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:20","nodeType":"FunctionDefinition","parameters":{"id":6393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6392,"mutability":"mutable","name":"value","nameLocation":"11322:5:20","nodeType":"VariableDeclaration","scope":6417,"src":"11314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6391,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:20"},"returnParameters":{"id":6396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6417,"src":"11352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6394,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:20"},"scope":7595,"src":"11296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6444,"nodeType":"Block","src":"11860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"11874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6427,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6426,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:20","memberName":"max","nodeType":"MemberAccess","src":"11882:16:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6438,"nodeType":"IfStatement","src":"11870:103:20","trueBody":{"id":6437,"nodeType":"Block","src":"11900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"11956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6432,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"11921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6436,"nodeType":"RevertStatement","src":"11914:48:20"}]}},{"expression":{"arguments":[{"id":6441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"11996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6439,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:20","typeDescriptions":{}}},"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6424,"id":6443,"nodeType":"Return","src":"11982:20:20"}]},"documentation":{"id":6418,"nodeType":"StructuredDocumentation","src":"11515:276:20","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6445,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:20","nodeType":"FunctionDefinition","parameters":{"id":6421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6420,"mutability":"mutable","name":"value","nameLocation":"11822:5:20","nodeType":"VariableDeclaration","scope":6445,"src":"11814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6419,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:20"},"returnParameters":{"id":6424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6445,"src":"11852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6422,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:20"},"scope":7595,"src":"11796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6472,"nodeType":"Block","src":"12360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"12374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6455,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6454,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:20","memberName":"max","nodeType":"MemberAccess","src":"12382:16:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6466,"nodeType":"IfStatement","src":"12370:103:20","trueBody":{"id":6465,"nodeType":"Block","src":"12400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"12456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6460,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"12421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6464,"nodeType":"RevertStatement","src":"12414:48:20"}]}},{"expression":{"arguments":[{"id":6469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"12496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6467,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:20","typeDescriptions":{}}},"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6452,"id":6471,"nodeType":"Return","src":"12482:20:20"}]},"documentation":{"id":6446,"nodeType":"StructuredDocumentation","src":"12015:276:20","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6473,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:20","nodeType":"FunctionDefinition","parameters":{"id":6449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6448,"mutability":"mutable","name":"value","nameLocation":"12322:5:20","nodeType":"VariableDeclaration","scope":6473,"src":"12314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6447,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:20"},"returnParameters":{"id":6452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6473,"src":"12352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6450,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:20"},"scope":7595,"src":"12296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6500,"nodeType":"Block","src":"12860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"12874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6483,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6482,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:20","memberName":"max","nodeType":"MemberAccess","src":"12882:16:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6494,"nodeType":"IfStatement","src":"12870:103:20","trueBody":{"id":6493,"nodeType":"Block","src":"12900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"12956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6488,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"12921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6492,"nodeType":"RevertStatement","src":"12914:48:20"}]}},{"expression":{"arguments":[{"id":6497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"12996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6495,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:20","typeDescriptions":{}}},"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6480,"id":6499,"nodeType":"Return","src":"12982:20:20"}]},"documentation":{"id":6474,"nodeType":"StructuredDocumentation","src":"12515:276:20","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6501,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:20","nodeType":"FunctionDefinition","parameters":{"id":6477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6476,"mutability":"mutable","name":"value","nameLocation":"12822:5:20","nodeType":"VariableDeclaration","scope":6501,"src":"12814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6475,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:20"},"returnParameters":{"id":6480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6501,"src":"12852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6478,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:20"},"scope":7595,"src":"12796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6528,"nodeType":"Block","src":"13360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"13374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6511,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6510,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:20","memberName":"max","nodeType":"MemberAccess","src":"13382:16:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6522,"nodeType":"IfStatement","src":"13370:103:20","trueBody":{"id":6521,"nodeType":"Block","src":"13400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"13456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6516,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"13421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6520,"nodeType":"RevertStatement","src":"13414:48:20"}]}},{"expression":{"arguments":[{"id":6525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"13496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6523,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:20","typeDescriptions":{}}},"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6508,"id":6527,"nodeType":"Return","src":"13482:20:20"}]},"documentation":{"id":6502,"nodeType":"StructuredDocumentation","src":"13015:276:20","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6529,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:20","nodeType":"FunctionDefinition","parameters":{"id":6505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6504,"mutability":"mutable","name":"value","nameLocation":"13322:5:20","nodeType":"VariableDeclaration","scope":6529,"src":"13314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6503,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:20"},"returnParameters":{"id":6508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6529,"src":"13352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6506,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:20"},"scope":7595,"src":"13296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6556,"nodeType":"Block","src":"13860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"13874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6539,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6538,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:20","memberName":"max","nodeType":"MemberAccess","src":"13882:16:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6550,"nodeType":"IfStatement","src":"13870:103:20","trueBody":{"id":6549,"nodeType":"Block","src":"13900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"13956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6544,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"13921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6548,"nodeType":"RevertStatement","src":"13914:48:20"}]}},{"expression":{"arguments":[{"id":6553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"13996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6551,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:20","typeDescriptions":{}}},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6536,"id":6555,"nodeType":"Return","src":"13982:20:20"}]},"documentation":{"id":6530,"nodeType":"StructuredDocumentation","src":"13515:276:20","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6557,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:20","nodeType":"FunctionDefinition","parameters":{"id":6533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6532,"mutability":"mutable","name":"value","nameLocation":"13822:5:20","nodeType":"VariableDeclaration","scope":6557,"src":"13814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6531,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:20"},"returnParameters":{"id":6536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6557,"src":"13852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6534,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:20"},"scope":7595,"src":"13796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6584,"nodeType":"Block","src":"14360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"14374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6567,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6566,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:20","memberName":"max","nodeType":"MemberAccess","src":"14382:16:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6578,"nodeType":"IfStatement","src":"14370:103:20","trueBody":{"id":6577,"nodeType":"Block","src":"14400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"14456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6572,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"14421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6576,"nodeType":"RevertStatement","src":"14414:48:20"}]}},{"expression":{"arguments":[{"id":6581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"14496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6579,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:20","typeDescriptions":{}}},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6564,"id":6583,"nodeType":"Return","src":"14482:20:20"}]},"documentation":{"id":6558,"nodeType":"StructuredDocumentation","src":"14015:276:20","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6585,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:20","nodeType":"FunctionDefinition","parameters":{"id":6561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6560,"mutability":"mutable","name":"value","nameLocation":"14322:5:20","nodeType":"VariableDeclaration","scope":6585,"src":"14314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6559,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:20"},"returnParameters":{"id":6564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6585,"src":"14352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6562,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:20"},"scope":7595,"src":"14296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6612,"nodeType":"Block","src":"14860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"14874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6595,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6594,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:20","memberName":"max","nodeType":"MemberAccess","src":"14882:16:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6606,"nodeType":"IfStatement","src":"14870:103:20","trueBody":{"id":6605,"nodeType":"Block","src":"14900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"14956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6600,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"14921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6604,"nodeType":"RevertStatement","src":"14914:48:20"}]}},{"expression":{"arguments":[{"id":6609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"14996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6607,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:20","typeDescriptions":{}}},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6592,"id":6611,"nodeType":"Return","src":"14982:20:20"}]},"documentation":{"id":6586,"nodeType":"StructuredDocumentation","src":"14515:276:20","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6613,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:20","nodeType":"FunctionDefinition","parameters":{"id":6589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6588,"mutability":"mutable","name":"value","nameLocation":"14822:5:20","nodeType":"VariableDeclaration","scope":6613,"src":"14814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6587,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:20"},"returnParameters":{"id":6592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6613,"src":"14852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6590,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:20"},"scope":7595,"src":"14796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6640,"nodeType":"Block","src":"15360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"15374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6623,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6622,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:20","memberName":"max","nodeType":"MemberAccess","src":"15382:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6634,"nodeType":"IfStatement","src":"15370:103:20","trueBody":{"id":6633,"nodeType":"Block","src":"15400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"15456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6628,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"15421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6632,"nodeType":"RevertStatement","src":"15414:48:20"}]}},{"expression":{"arguments":[{"id":6637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6616,"src":"15496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6635,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:20","typeDescriptions":{}}},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6620,"id":6639,"nodeType":"Return","src":"15482:20:20"}]},"documentation":{"id":6614,"nodeType":"StructuredDocumentation","src":"15015:276:20","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6641,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:20","nodeType":"FunctionDefinition","parameters":{"id":6617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6616,"mutability":"mutable","name":"value","nameLocation":"15322:5:20","nodeType":"VariableDeclaration","scope":6641,"src":"15314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6615,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:20"},"returnParameters":{"id":6620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6641,"src":"15352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6618,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:20"},"scope":7595,"src":"15296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6668,"nodeType":"Block","src":"15860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6644,"src":"15874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6651,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6650,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:20","memberName":"max","nodeType":"MemberAccess","src":"15882:16:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6662,"nodeType":"IfStatement","src":"15870:103:20","trueBody":{"id":6661,"nodeType":"Block","src":"15900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6644,"src":"15956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6656,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"15921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6660,"nodeType":"RevertStatement","src":"15914:48:20"}]}},{"expression":{"arguments":[{"id":6665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6644,"src":"15996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6663,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:20","typeDescriptions":{}}},"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6648,"id":6667,"nodeType":"Return","src":"15982:20:20"}]},"documentation":{"id":6642,"nodeType":"StructuredDocumentation","src":"15515:276:20","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6669,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:20","nodeType":"FunctionDefinition","parameters":{"id":6645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6644,"mutability":"mutable","name":"value","nameLocation":"15822:5:20","nodeType":"VariableDeclaration","scope":6669,"src":"15814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6643,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:20"},"returnParameters":{"id":6648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6669,"src":"15852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6646,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:20"},"scope":7595,"src":"15796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6696,"nodeType":"Block","src":"16360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"16374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6679,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6678,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:20","memberName":"max","nodeType":"MemberAccess","src":"16382:16:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6690,"nodeType":"IfStatement","src":"16370:103:20","trueBody":{"id":6689,"nodeType":"Block","src":"16400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"16456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6684,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"16421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6688,"nodeType":"RevertStatement","src":"16414:48:20"}]}},{"expression":{"arguments":[{"id":6693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"16496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6691,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:20","typeDescriptions":{}}},"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6676,"id":6695,"nodeType":"Return","src":"16482:20:20"}]},"documentation":{"id":6670,"nodeType":"StructuredDocumentation","src":"16015:276:20","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6697,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:20","nodeType":"FunctionDefinition","parameters":{"id":6673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6672,"mutability":"mutable","name":"value","nameLocation":"16322:5:20","nodeType":"VariableDeclaration","scope":6697,"src":"16314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6671,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:20"},"returnParameters":{"id":6676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6697,"src":"16352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6674,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:20"},"scope":7595,"src":"16296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6724,"nodeType":"Block","src":"16854:146:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"16868:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6707,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6706,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:20","memberName":"max","nodeType":"MemberAccess","src":"16876:15:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6718,"nodeType":"IfStatement","src":"16864:101:20","trueBody":{"id":6717,"nodeType":"Block","src":"16893:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"16948:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6712,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"16914:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6716,"nodeType":"RevertStatement","src":"16907:47:20"}]}},{"expression":{"arguments":[{"id":6721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"16987:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6719,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:20","typeDescriptions":{}}},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6704,"id":6723,"nodeType":"Return","src":"16974:19:20"}]},"documentation":{"id":6698,"nodeType":"StructuredDocumentation","src":"16515:272:20","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6725,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:20","nodeType":"FunctionDefinition","parameters":{"id":6701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6700,"mutability":"mutable","name":"value","nameLocation":"16817:5:20","nodeType":"VariableDeclaration","scope":6725,"src":"16809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6699,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:20"},"returnParameters":{"id":6704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6725,"src":"16847:5:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6702,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:20"},"scope":7595,"src":"16792:208:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6747,"nodeType":"Block","src":"17236:128:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"17250:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6741,"nodeType":"IfStatement","src":"17246:81:20","trueBody":{"id":6740,"nodeType":"Block","src":"17261:66:20","statements":[{"errorCall":{"arguments":[{"id":6737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"17310:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6736,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"17282:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6739,"nodeType":"RevertStatement","src":"17275:41:20"}]}},{"expression":{"arguments":[{"id":6744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"17351:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6742,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:20","typeDescriptions":{}}},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6732,"id":6746,"nodeType":"Return","src":"17336:21:20"}]},"documentation":{"id":6726,"nodeType":"StructuredDocumentation","src":"17006:160:20","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6748,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:20","nodeType":"FunctionDefinition","parameters":{"id":6729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6728,"mutability":"mutable","name":"value","nameLocation":"17197:5:20","nodeType":"VariableDeclaration","scope":6748,"src":"17190:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6727,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:20"},"returnParameters":{"id":6732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6748,"src":"17227:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6730,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:20"},"scope":7595,"src":"17171:193:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6773,"nodeType":"Block","src":"17761:150:20","statements":[{"expression":{"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6756,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"17771:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"17791:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6757,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:20","typeDescriptions":{}}},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6762,"nodeType":"ExpressionStatement","src":"17771:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6763,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"17811:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"17825:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6772,"nodeType":"IfStatement","src":"17807:98:20","trueBody":{"id":6771,"nodeType":"Block","src":"17832:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6751,"src":"17888:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6766,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"17853:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6770,"nodeType":"RevertStatement","src":"17846:48:20"}]}}]},"documentation":{"id":6749,"nodeType":"StructuredDocumentation","src":"17370:312:20","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6774,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:20","nodeType":"FunctionDefinition","parameters":{"id":6752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6751,"mutability":"mutable","name":"value","nameLocation":"17712:5:20","nodeType":"VariableDeclaration","scope":6774,"src":"17705:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6750,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:20"},"returnParameters":{"id":6755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6754,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:20","nodeType":"VariableDeclaration","scope":6774,"src":"17742:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6753,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:20"},"scope":7595,"src":"17687:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6799,"nodeType":"Block","src":"18308:150:20","statements":[{"expression":{"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6782,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"18318:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"18338:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6783,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:20","typeDescriptions":{}}},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6788,"nodeType":"ExpressionStatement","src":"18318:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6789,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"18358:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"18372:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6798,"nodeType":"IfStatement","src":"18354:98:20","trueBody":{"id":6797,"nodeType":"Block","src":"18379:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"18435:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6792,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"18400:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6796,"nodeType":"RevertStatement","src":"18393:48:20"}]}}]},"documentation":{"id":6775,"nodeType":"StructuredDocumentation","src":"17917:312:20","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6800,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:20","nodeType":"FunctionDefinition","parameters":{"id":6778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6777,"mutability":"mutable","name":"value","nameLocation":"18259:5:20","nodeType":"VariableDeclaration","scope":6800,"src":"18252:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6776,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:20"},"returnParameters":{"id":6781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6780,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:20","nodeType":"VariableDeclaration","scope":6800,"src":"18289:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6779,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:20"},"scope":7595,"src":"18234:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6825,"nodeType":"Block","src":"18855:150:20","statements":[{"expression":{"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6808,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"18865:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"18885:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6809,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:20","typeDescriptions":{}}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6814,"nodeType":"ExpressionStatement","src":"18865:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6815,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"18905:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"18919:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6824,"nodeType":"IfStatement","src":"18901:98:20","trueBody":{"id":6823,"nodeType":"Block","src":"18926:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"18982:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6818,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"18947:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6822,"nodeType":"RevertStatement","src":"18940:48:20"}]}}]},"documentation":{"id":6801,"nodeType":"StructuredDocumentation","src":"18464:312:20","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6826,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:20","nodeType":"FunctionDefinition","parameters":{"id":6804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6803,"mutability":"mutable","name":"value","nameLocation":"18806:5:20","nodeType":"VariableDeclaration","scope":6826,"src":"18799:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6802,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:20"},"returnParameters":{"id":6807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6806,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:20","nodeType":"VariableDeclaration","scope":6826,"src":"18836:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6805,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:20"},"scope":7595,"src":"18781:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6851,"nodeType":"Block","src":"19402:150:20","statements":[{"expression":{"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6834,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"19412:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"19432:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6835,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:20","typeDescriptions":{}}},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6840,"nodeType":"ExpressionStatement","src":"19412:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6841,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"19452:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"19466:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6850,"nodeType":"IfStatement","src":"19448:98:20","trueBody":{"id":6849,"nodeType":"Block","src":"19473:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"19529:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6844,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"19494:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6848,"nodeType":"RevertStatement","src":"19487:48:20"}]}}]},"documentation":{"id":6827,"nodeType":"StructuredDocumentation","src":"19011:312:20","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6852,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:20","nodeType":"FunctionDefinition","parameters":{"id":6830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6829,"mutability":"mutable","name":"value","nameLocation":"19353:5:20","nodeType":"VariableDeclaration","scope":6852,"src":"19346:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6828,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:20"},"returnParameters":{"id":6833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6832,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:20","nodeType":"VariableDeclaration","scope":6852,"src":"19383:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6831,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:20"},"scope":7595,"src":"19328:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6877,"nodeType":"Block","src":"19949:150:20","statements":[{"expression":{"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6860,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"19959:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"19979:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6861,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:20","typeDescriptions":{}}},"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6866,"nodeType":"ExpressionStatement","src":"19959:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6867,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"19999:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"20013:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6876,"nodeType":"IfStatement","src":"19995:98:20","trueBody":{"id":6875,"nodeType":"Block","src":"20020:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"20076:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6870,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"20041:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6874,"nodeType":"RevertStatement","src":"20034:48:20"}]}}]},"documentation":{"id":6853,"nodeType":"StructuredDocumentation","src":"19558:312:20","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6878,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:20","nodeType":"FunctionDefinition","parameters":{"id":6856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6855,"mutability":"mutable","name":"value","nameLocation":"19900:5:20","nodeType":"VariableDeclaration","scope":6878,"src":"19893:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6854,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:20"},"returnParameters":{"id":6859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6858,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:20","nodeType":"VariableDeclaration","scope":6878,"src":"19930:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6857,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:20"},"scope":7595,"src":"19875:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6903,"nodeType":"Block","src":"20496:150:20","statements":[{"expression":{"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6886,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"20506:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"20526:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6887,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:20","typeDescriptions":{}}},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6892,"nodeType":"ExpressionStatement","src":"20506:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6893,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"20546:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"20560:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6902,"nodeType":"IfStatement","src":"20542:98:20","trueBody":{"id":6901,"nodeType":"Block","src":"20567:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"20623:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6896,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"20588:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6900,"nodeType":"RevertStatement","src":"20581:48:20"}]}}]},"documentation":{"id":6879,"nodeType":"StructuredDocumentation","src":"20105:312:20","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6904,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:20","nodeType":"FunctionDefinition","parameters":{"id":6882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6881,"mutability":"mutable","name":"value","nameLocation":"20447:5:20","nodeType":"VariableDeclaration","scope":6904,"src":"20440:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6880,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:20"},"returnParameters":{"id":6885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6884,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:20","nodeType":"VariableDeclaration","scope":6904,"src":"20477:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6883,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:20"},"scope":7595,"src":"20422:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6929,"nodeType":"Block","src":"21043:150:20","statements":[{"expression":{"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6912,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"21053:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"21073:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6913,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:20","typeDescriptions":{}}},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6918,"nodeType":"ExpressionStatement","src":"21053:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6919,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"21093:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"21107:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6928,"nodeType":"IfStatement","src":"21089:98:20","trueBody":{"id":6927,"nodeType":"Block","src":"21114:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"21170:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6922,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"21135:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6926,"nodeType":"RevertStatement","src":"21128:48:20"}]}}]},"documentation":{"id":6905,"nodeType":"StructuredDocumentation","src":"20652:312:20","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6930,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:20","nodeType":"FunctionDefinition","parameters":{"id":6908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6907,"mutability":"mutable","name":"value","nameLocation":"20994:5:20","nodeType":"VariableDeclaration","scope":6930,"src":"20987:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6906,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:20"},"returnParameters":{"id":6911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6910,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:20","nodeType":"VariableDeclaration","scope":6930,"src":"21024:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6909,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:20"},"scope":7595,"src":"20969:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6955,"nodeType":"Block","src":"21590:150:20","statements":[{"expression":{"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6938,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"21600:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"21620:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6939,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:20","typeDescriptions":{}}},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6944,"nodeType":"ExpressionStatement","src":"21600:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6945,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"21640:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"21654:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6954,"nodeType":"IfStatement","src":"21636:98:20","trueBody":{"id":6953,"nodeType":"Block","src":"21661:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"21717:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6948,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"21682:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6952,"nodeType":"RevertStatement","src":"21675:48:20"}]}}]},"documentation":{"id":6931,"nodeType":"StructuredDocumentation","src":"21199:312:20","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6956,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:20","nodeType":"FunctionDefinition","parameters":{"id":6934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6933,"mutability":"mutable","name":"value","nameLocation":"21541:5:20","nodeType":"VariableDeclaration","scope":6956,"src":"21534:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6932,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:20"},"returnParameters":{"id":6937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6936,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:20","nodeType":"VariableDeclaration","scope":6956,"src":"21571:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6935,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:20"},"scope":7595,"src":"21516:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6981,"nodeType":"Block","src":"22137:150:20","statements":[{"expression":{"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6964,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"22147:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"22167:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6965,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:20","typeDescriptions":{}}},"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6970,"nodeType":"ExpressionStatement","src":"22147:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6971,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6962,"src":"22187:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"22201:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6980,"nodeType":"IfStatement","src":"22183:98:20","trueBody":{"id":6979,"nodeType":"Block","src":"22208:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"22264:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6974,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"22229:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6978,"nodeType":"RevertStatement","src":"22222:48:20"}]}}]},"documentation":{"id":6957,"nodeType":"StructuredDocumentation","src":"21746:312:20","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6982,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:20","nodeType":"FunctionDefinition","parameters":{"id":6960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6959,"mutability":"mutable","name":"value","nameLocation":"22088:5:20","nodeType":"VariableDeclaration","scope":6982,"src":"22081:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6958,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:20"},"returnParameters":{"id":6963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6962,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:20","nodeType":"VariableDeclaration","scope":6982,"src":"22118:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6961,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:20"},"scope":7595,"src":"22063:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7007,"nodeType":"Block","src":"22684:150:20","statements":[{"expression":{"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6990,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"22694:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"22714:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6991,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:20","typeDescriptions":{}}},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6996,"nodeType":"ExpressionStatement","src":"22694:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6997,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"22734:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"22748:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7006,"nodeType":"IfStatement","src":"22730:98:20","trueBody":{"id":7005,"nodeType":"Block","src":"22755:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"22811:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7000,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"22776:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7004,"nodeType":"RevertStatement","src":"22769:48:20"}]}}]},"documentation":{"id":6983,"nodeType":"StructuredDocumentation","src":"22293:312:20","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7008,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:20","nodeType":"FunctionDefinition","parameters":{"id":6986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6985,"mutability":"mutable","name":"value","nameLocation":"22635:5:20","nodeType":"VariableDeclaration","scope":7008,"src":"22628:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6984,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:20"},"returnParameters":{"id":6989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6988,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:20","nodeType":"VariableDeclaration","scope":7008,"src":"22665:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6987,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:20"},"scope":7595,"src":"22610:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7033,"nodeType":"Block","src":"23231:150:20","statements":[{"expression":{"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7016,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7014,"src":"23241:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"23261:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7017,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:20","typeDescriptions":{}}},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7022,"nodeType":"ExpressionStatement","src":"23241:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7023,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7014,"src":"23281:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"23295:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7032,"nodeType":"IfStatement","src":"23277:98:20","trueBody":{"id":7031,"nodeType":"Block","src":"23302:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7011,"src":"23358:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7026,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"23323:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7030,"nodeType":"RevertStatement","src":"23316:48:20"}]}}]},"documentation":{"id":7009,"nodeType":"StructuredDocumentation","src":"22840:312:20","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7034,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:20","nodeType":"FunctionDefinition","parameters":{"id":7012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7011,"mutability":"mutable","name":"value","nameLocation":"23182:5:20","nodeType":"VariableDeclaration","scope":7034,"src":"23175:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7010,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:20"},"returnParameters":{"id":7015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7014,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:20","nodeType":"VariableDeclaration","scope":7034,"src":"23212:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7013,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:20"},"scope":7595,"src":"23157:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7059,"nodeType":"Block","src":"23778:150:20","statements":[{"expression":{"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7042,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"23788:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"23808:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7043,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:20","typeDescriptions":{}}},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7048,"nodeType":"ExpressionStatement","src":"23788:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7049,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"23828:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"23842:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7058,"nodeType":"IfStatement","src":"23824:98:20","trueBody":{"id":7057,"nodeType":"Block","src":"23849:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"23905:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7052,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"23870:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7056,"nodeType":"RevertStatement","src":"23863:48:20"}]}}]},"documentation":{"id":7035,"nodeType":"StructuredDocumentation","src":"23387:312:20","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7060,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:20","nodeType":"FunctionDefinition","parameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7037,"mutability":"mutable","name":"value","nameLocation":"23729:5:20","nodeType":"VariableDeclaration","scope":7060,"src":"23722:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7036,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:20"},"returnParameters":{"id":7041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7040,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:20","nodeType":"VariableDeclaration","scope":7060,"src":"23759:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7039,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:20"},"scope":7595,"src":"23704:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7085,"nodeType":"Block","src":"24325:150:20","statements":[{"expression":{"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7068,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"24335:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"24355:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7069,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:20","typeDescriptions":{}}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7074,"nodeType":"ExpressionStatement","src":"24335:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7075,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"24375:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"24389:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7084,"nodeType":"IfStatement","src":"24371:98:20","trueBody":{"id":7083,"nodeType":"Block","src":"24396:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"24452:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7078,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"24417:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7082,"nodeType":"RevertStatement","src":"24410:48:20"}]}}]},"documentation":{"id":7061,"nodeType":"StructuredDocumentation","src":"23934:312:20","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7086,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:20","nodeType":"FunctionDefinition","parameters":{"id":7064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7063,"mutability":"mutable","name":"value","nameLocation":"24276:5:20","nodeType":"VariableDeclaration","scope":7086,"src":"24269:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7062,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:20"},"returnParameters":{"id":7067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7066,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:20","nodeType":"VariableDeclaration","scope":7086,"src":"24306:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7065,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:20"},"scope":7595,"src":"24251:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7111,"nodeType":"Block","src":"24872:150:20","statements":[{"expression":{"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7094,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"24882:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"24902:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7095,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:20","typeDescriptions":{}}},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7100,"nodeType":"ExpressionStatement","src":"24882:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7101,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"24922:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"24936:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7110,"nodeType":"IfStatement","src":"24918:98:20","trueBody":{"id":7109,"nodeType":"Block","src":"24943:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"24999:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7104,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"24964:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7108,"nodeType":"RevertStatement","src":"24957:48:20"}]}}]},"documentation":{"id":7087,"nodeType":"StructuredDocumentation","src":"24481:312:20","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7112,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:20","nodeType":"FunctionDefinition","parameters":{"id":7090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7089,"mutability":"mutable","name":"value","nameLocation":"24823:5:20","nodeType":"VariableDeclaration","scope":7112,"src":"24816:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7088,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:20"},"returnParameters":{"id":7093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7092,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:20","nodeType":"VariableDeclaration","scope":7112,"src":"24853:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7091,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:20"},"scope":7595,"src":"24798:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7137,"nodeType":"Block","src":"25419:150:20","statements":[{"expression":{"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7120,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"25429:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"25449:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7121,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:20","typeDescriptions":{}}},"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7126,"nodeType":"ExpressionStatement","src":"25429:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7127,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"25469:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"25483:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7136,"nodeType":"IfStatement","src":"25465:98:20","trueBody":{"id":7135,"nodeType":"Block","src":"25490:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"25546:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7130,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"25511:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7134,"nodeType":"RevertStatement","src":"25504:48:20"}]}}]},"documentation":{"id":7113,"nodeType":"StructuredDocumentation","src":"25028:312:20","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7138,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:20","nodeType":"FunctionDefinition","parameters":{"id":7116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7115,"mutability":"mutable","name":"value","nameLocation":"25370:5:20","nodeType":"VariableDeclaration","scope":7138,"src":"25363:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7114,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:20"},"returnParameters":{"id":7119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7118,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:20","nodeType":"VariableDeclaration","scope":7138,"src":"25400:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7117,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:20"},"scope":7595,"src":"25345:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7163,"nodeType":"Block","src":"25966:150:20","statements":[{"expression":{"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7146,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7144,"src":"25976:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"25996:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7147,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:20","typeDescriptions":{}}},"id":7150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7152,"nodeType":"ExpressionStatement","src":"25976:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7153,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7144,"src":"26016:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"26030:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7162,"nodeType":"IfStatement","src":"26012:98:20","trueBody":{"id":7161,"nodeType":"Block","src":"26037:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"26093:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7156,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"26058:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7160,"nodeType":"RevertStatement","src":"26051:48:20"}]}}]},"documentation":{"id":7139,"nodeType":"StructuredDocumentation","src":"25575:312:20","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7164,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:20","nodeType":"FunctionDefinition","parameters":{"id":7142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7141,"mutability":"mutable","name":"value","nameLocation":"25917:5:20","nodeType":"VariableDeclaration","scope":7164,"src":"25910:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7140,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:20"},"returnParameters":{"id":7145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7144,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:20","nodeType":"VariableDeclaration","scope":7164,"src":"25947:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7143,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:20"},"scope":7595,"src":"25892:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7189,"nodeType":"Block","src":"26513:150:20","statements":[{"expression":{"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7172,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"26523:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"26543:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7173,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:20","typeDescriptions":{}}},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7178,"nodeType":"ExpressionStatement","src":"26523:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7179,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"26563:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"26577:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7188,"nodeType":"IfStatement","src":"26559:98:20","trueBody":{"id":7187,"nodeType":"Block","src":"26584:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"26640:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7182,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"26605:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7186,"nodeType":"RevertStatement","src":"26598:48:20"}]}}]},"documentation":{"id":7165,"nodeType":"StructuredDocumentation","src":"26122:312:20","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7190,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:20","nodeType":"FunctionDefinition","parameters":{"id":7168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7167,"mutability":"mutable","name":"value","nameLocation":"26464:5:20","nodeType":"VariableDeclaration","scope":7190,"src":"26457:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7166,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:20"},"returnParameters":{"id":7171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7170,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:20","nodeType":"VariableDeclaration","scope":7190,"src":"26494:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7169,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:20"},"scope":7595,"src":"26439:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7215,"nodeType":"Block","src":"27060:150:20","statements":[{"expression":{"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7198,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7196,"src":"27070:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"27090:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7199,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:20","typeDescriptions":{}}},"id":7202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7204,"nodeType":"ExpressionStatement","src":"27070:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7205,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7196,"src":"27110:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"27124:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7214,"nodeType":"IfStatement","src":"27106:98:20","trueBody":{"id":7213,"nodeType":"Block","src":"27131:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"27187:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7208,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"27152:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7212,"nodeType":"RevertStatement","src":"27145:48:20"}]}}]},"documentation":{"id":7191,"nodeType":"StructuredDocumentation","src":"26669:312:20","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7216,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:20","nodeType":"FunctionDefinition","parameters":{"id":7194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7193,"mutability":"mutable","name":"value","nameLocation":"27011:5:20","nodeType":"VariableDeclaration","scope":7216,"src":"27004:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7192,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:20"},"returnParameters":{"id":7197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7196,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:20","nodeType":"VariableDeclaration","scope":7216,"src":"27041:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7195,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:20"},"scope":7595,"src":"26986:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7241,"nodeType":"Block","src":"27607:150:20","statements":[{"expression":{"id":7229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7224,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"27617:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"27637:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7225,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:20","typeDescriptions":{}}},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7230,"nodeType":"ExpressionStatement","src":"27617:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7231,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"27657:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"27671:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7240,"nodeType":"IfStatement","src":"27653:98:20","trueBody":{"id":7239,"nodeType":"Block","src":"27678:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"27734:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7234,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"27699:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7238,"nodeType":"RevertStatement","src":"27692:48:20"}]}}]},"documentation":{"id":7217,"nodeType":"StructuredDocumentation","src":"27216:312:20","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7242,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:20","nodeType":"FunctionDefinition","parameters":{"id":7220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7219,"mutability":"mutable","name":"value","nameLocation":"27558:5:20","nodeType":"VariableDeclaration","scope":7242,"src":"27551:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7218,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:20"},"returnParameters":{"id":7223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7222,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:20","nodeType":"VariableDeclaration","scope":7242,"src":"27588:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7221,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:20"},"scope":7595,"src":"27533:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7267,"nodeType":"Block","src":"28147:148:20","statements":[{"expression":{"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7250,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"28157:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"28176:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7251,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:20","typeDescriptions":{}}},"id":7254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7256,"nodeType":"ExpressionStatement","src":"28157:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7257,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"28196:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"28210:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7266,"nodeType":"IfStatement","src":"28192:97:20","trueBody":{"id":7265,"nodeType":"Block","src":"28217:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"28272:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7260,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"28238:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7264,"nodeType":"RevertStatement","src":"28231:47:20"}]}}]},"documentation":{"id":7243,"nodeType":"StructuredDocumentation","src":"27763:307:20","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7268,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:20","nodeType":"FunctionDefinition","parameters":{"id":7246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7245,"mutability":"mutable","name":"value","nameLocation":"28099:5:20","nodeType":"VariableDeclaration","scope":7268,"src":"28092:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7244,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:20"},"returnParameters":{"id":7249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7248,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:20","nodeType":"VariableDeclaration","scope":7268,"src":"28129:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7247,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:20"},"scope":7595,"src":"28075:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7293,"nodeType":"Block","src":"28685:148:20","statements":[{"expression":{"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7276,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"28695:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"28714:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7277,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:20","typeDescriptions":{}}},"id":7280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7282,"nodeType":"ExpressionStatement","src":"28695:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7283,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"28734:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"28748:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7292,"nodeType":"IfStatement","src":"28730:97:20","trueBody":{"id":7291,"nodeType":"Block","src":"28755:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"28810:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7286,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"28776:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7290,"nodeType":"RevertStatement","src":"28769:47:20"}]}}]},"documentation":{"id":7269,"nodeType":"StructuredDocumentation","src":"28301:307:20","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7294,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:20","nodeType":"FunctionDefinition","parameters":{"id":7272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7271,"mutability":"mutable","name":"value","nameLocation":"28637:5:20","nodeType":"VariableDeclaration","scope":7294,"src":"28630:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7270,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:20"},"returnParameters":{"id":7275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7274,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:20","nodeType":"VariableDeclaration","scope":7294,"src":"28667:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7273,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:20"},"scope":7595,"src":"28613:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7319,"nodeType":"Block","src":"29223:148:20","statements":[{"expression":{"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7302,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7300,"src":"29233:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"29252:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7303,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:20","typeDescriptions":{}}},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7308,"nodeType":"ExpressionStatement","src":"29233:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7309,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7300,"src":"29272:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"29286:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7318,"nodeType":"IfStatement","src":"29268:97:20","trueBody":{"id":7317,"nodeType":"Block","src":"29293:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7297,"src":"29348:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7312,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"29314:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7316,"nodeType":"RevertStatement","src":"29307:47:20"}]}}]},"documentation":{"id":7295,"nodeType":"StructuredDocumentation","src":"28839:307:20","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7320,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:20","nodeType":"FunctionDefinition","parameters":{"id":7298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7297,"mutability":"mutable","name":"value","nameLocation":"29175:5:20","nodeType":"VariableDeclaration","scope":7320,"src":"29168:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7296,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:20"},"returnParameters":{"id":7301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7300,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:20","nodeType":"VariableDeclaration","scope":7320,"src":"29205:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7299,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:20"},"scope":7595,"src":"29151:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7345,"nodeType":"Block","src":"29761:148:20","statements":[{"expression":{"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7328,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"29771:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"29790:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7329,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:20","typeDescriptions":{}}},"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7334,"nodeType":"ExpressionStatement","src":"29771:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7335,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"29810:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"29824:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7344,"nodeType":"IfStatement","src":"29806:97:20","trueBody":{"id":7343,"nodeType":"Block","src":"29831:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7323,"src":"29886:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7338,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"29852:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7342,"nodeType":"RevertStatement","src":"29845:47:20"}]}}]},"documentation":{"id":7321,"nodeType":"StructuredDocumentation","src":"29377:307:20","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7346,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:20","nodeType":"FunctionDefinition","parameters":{"id":7324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7323,"mutability":"mutable","name":"value","nameLocation":"29713:5:20","nodeType":"VariableDeclaration","scope":7346,"src":"29706:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7322,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:20"},"returnParameters":{"id":7327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7326,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:20","nodeType":"VariableDeclaration","scope":7346,"src":"29743:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7325,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:20"},"scope":7595,"src":"29689:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7371,"nodeType":"Block","src":"30299:148:20","statements":[{"expression":{"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7354,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7352,"src":"30309:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"30328:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7355,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:20","typeDescriptions":{}}},"id":7358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7360,"nodeType":"ExpressionStatement","src":"30309:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7361,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7352,"src":"30348:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"30362:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7370,"nodeType":"IfStatement","src":"30344:97:20","trueBody":{"id":7369,"nodeType":"Block","src":"30369:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"30424:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7364,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"30390:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7368,"nodeType":"RevertStatement","src":"30383:47:20"}]}}]},"documentation":{"id":7347,"nodeType":"StructuredDocumentation","src":"29915:307:20","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7372,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:20","nodeType":"FunctionDefinition","parameters":{"id":7350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7349,"mutability":"mutable","name":"value","nameLocation":"30251:5:20","nodeType":"VariableDeclaration","scope":7372,"src":"30244:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7348,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:20"},"returnParameters":{"id":7353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7352,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:20","nodeType":"VariableDeclaration","scope":7372,"src":"30281:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7351,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:20"},"scope":7595,"src":"30227:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7397,"nodeType":"Block","src":"30837:148:20","statements":[{"expression":{"id":7385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7380,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7378,"src":"30847:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"30866:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7381,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:20","typeDescriptions":{}}},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7386,"nodeType":"ExpressionStatement","src":"30847:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7387,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7378,"src":"30886:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"30900:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7396,"nodeType":"IfStatement","src":"30882:97:20","trueBody":{"id":7395,"nodeType":"Block","src":"30907:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"30962:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7390,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"30928:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7394,"nodeType":"RevertStatement","src":"30921:47:20"}]}}]},"documentation":{"id":7373,"nodeType":"StructuredDocumentation","src":"30453:307:20","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7398,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:20","nodeType":"FunctionDefinition","parameters":{"id":7376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7375,"mutability":"mutable","name":"value","nameLocation":"30789:5:20","nodeType":"VariableDeclaration","scope":7398,"src":"30782:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7374,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:20"},"returnParameters":{"id":7379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7378,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:20","nodeType":"VariableDeclaration","scope":7398,"src":"30819:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7377,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:20"},"scope":7595,"src":"30765:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7423,"nodeType":"Block","src":"31375:148:20","statements":[{"expression":{"id":7411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7406,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"31385:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"31404:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7407,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:20","typeDescriptions":{}}},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7412,"nodeType":"ExpressionStatement","src":"31385:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7413,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"31424:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"31438:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7422,"nodeType":"IfStatement","src":"31420:97:20","trueBody":{"id":7421,"nodeType":"Block","src":"31445:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"31500:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7416,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"31466:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7420,"nodeType":"RevertStatement","src":"31459:47:20"}]}}]},"documentation":{"id":7399,"nodeType":"StructuredDocumentation","src":"30991:307:20","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7424,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:20","nodeType":"FunctionDefinition","parameters":{"id":7402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7401,"mutability":"mutable","name":"value","nameLocation":"31327:5:20","nodeType":"VariableDeclaration","scope":7424,"src":"31320:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7400,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:20"},"returnParameters":{"id":7405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7404,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:20","nodeType":"VariableDeclaration","scope":7424,"src":"31357:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7403,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:20"},"scope":7595,"src":"31303:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7449,"nodeType":"Block","src":"31913:148:20","statements":[{"expression":{"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7432,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"31923:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"31942:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7433,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:20","typeDescriptions":{}}},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7438,"nodeType":"ExpressionStatement","src":"31923:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7439,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"31962:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"31976:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7448,"nodeType":"IfStatement","src":"31958:97:20","trueBody":{"id":7447,"nodeType":"Block","src":"31983:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7427,"src":"32038:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7442,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"32004:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7446,"nodeType":"RevertStatement","src":"31997:47:20"}]}}]},"documentation":{"id":7425,"nodeType":"StructuredDocumentation","src":"31529:307:20","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7450,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:20","nodeType":"FunctionDefinition","parameters":{"id":7428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7427,"mutability":"mutable","name":"value","nameLocation":"31865:5:20","nodeType":"VariableDeclaration","scope":7450,"src":"31858:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7426,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:20"},"returnParameters":{"id":7431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7430,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:20","nodeType":"VariableDeclaration","scope":7450,"src":"31895:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7429,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:20"},"scope":7595,"src":"31841:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7475,"nodeType":"Block","src":"32451:148:20","statements":[{"expression":{"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7458,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7456,"src":"32461:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"32480:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7459,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:20","typeDescriptions":{}}},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7464,"nodeType":"ExpressionStatement","src":"32461:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7465,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7456,"src":"32500:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"32514:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7474,"nodeType":"IfStatement","src":"32496:97:20","trueBody":{"id":7473,"nodeType":"Block","src":"32521:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7453,"src":"32576:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7468,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"32542:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7472,"nodeType":"RevertStatement","src":"32535:47:20"}]}}]},"documentation":{"id":7451,"nodeType":"StructuredDocumentation","src":"32067:307:20","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7476,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:20","nodeType":"FunctionDefinition","parameters":{"id":7454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7453,"mutability":"mutable","name":"value","nameLocation":"32403:5:20","nodeType":"VariableDeclaration","scope":7476,"src":"32396:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7452,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:20"},"returnParameters":{"id":7457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7456,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:20","nodeType":"VariableDeclaration","scope":7476,"src":"32433:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7455,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:20"},"scope":7595,"src":"32379:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7501,"nodeType":"Block","src":"32989:148:20","statements":[{"expression":{"id":7489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7484,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"32999:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"33018:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7485,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:20","typeDescriptions":{}}},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7490,"nodeType":"ExpressionStatement","src":"32999:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7491,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"33038:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"33052:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7500,"nodeType":"IfStatement","src":"33034:97:20","trueBody":{"id":7499,"nodeType":"Block","src":"33059:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7479,"src":"33114:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7494,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"33080:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7498,"nodeType":"RevertStatement","src":"33073:47:20"}]}}]},"documentation":{"id":7477,"nodeType":"StructuredDocumentation","src":"32605:307:20","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7502,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:20","nodeType":"FunctionDefinition","parameters":{"id":7480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7479,"mutability":"mutable","name":"value","nameLocation":"32941:5:20","nodeType":"VariableDeclaration","scope":7502,"src":"32934:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7478,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:20"},"returnParameters":{"id":7483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7482,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:20","nodeType":"VariableDeclaration","scope":7502,"src":"32971:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7481,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:20"},"scope":7595,"src":"32917:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7527,"nodeType":"Block","src":"33527:148:20","statements":[{"expression":{"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7510,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7508,"src":"33537:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"33556:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7511,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:20","typeDescriptions":{}}},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7516,"nodeType":"ExpressionStatement","src":"33537:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7517,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7508,"src":"33576:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"33590:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7526,"nodeType":"IfStatement","src":"33572:97:20","trueBody":{"id":7525,"nodeType":"Block","src":"33597:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"33652:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7520,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"33618:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7524,"nodeType":"RevertStatement","src":"33611:47:20"}]}}]},"documentation":{"id":7503,"nodeType":"StructuredDocumentation","src":"33143:307:20","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7528,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:20","nodeType":"FunctionDefinition","parameters":{"id":7506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7505,"mutability":"mutable","name":"value","nameLocation":"33479:5:20","nodeType":"VariableDeclaration","scope":7528,"src":"33472:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7504,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:20"},"returnParameters":{"id":7509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7508,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:20","nodeType":"VariableDeclaration","scope":7528,"src":"33509:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7507,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:20"},"scope":7595,"src":"33455:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7553,"nodeType":"Block","src":"34058:146:20","statements":[{"expression":{"id":7541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7536,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7534,"src":"34068:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"34086:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7537,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:20","typeDescriptions":{}}},"id":7540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7542,"nodeType":"ExpressionStatement","src":"34068:24:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7543,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7534,"src":"34106:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"34120:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7552,"nodeType":"IfStatement","src":"34102:96:20","trueBody":{"id":7551,"nodeType":"Block","src":"34127:71:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"34181:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7546,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"34148:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7550,"nodeType":"RevertStatement","src":"34141:46:20"}]}}]},"documentation":{"id":7529,"nodeType":"StructuredDocumentation","src":"33681:302:20","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7554,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:20","nodeType":"FunctionDefinition","parameters":{"id":7532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7531,"mutability":"mutable","name":"value","nameLocation":"34011:5:20","nodeType":"VariableDeclaration","scope":7554,"src":"34004:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7530,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:20"},"returnParameters":{"id":7535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7534,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:20","nodeType":"VariableDeclaration","scope":7554,"src":"34041:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7533,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:20"},"scope":7595,"src":"33988:216:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7583,"nodeType":"Block","src":"34444:250:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7557,"src":"34557:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7566,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7565,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:20","memberName":"max","nodeType":"MemberAccess","src":"34573:16:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7563,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:20","typeDescriptions":{}}},"id":7570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7577,"nodeType":"IfStatement","src":"34553:105:20","trueBody":{"id":7576,"nodeType":"Block","src":"34592:66:20","statements":[{"errorCall":{"arguments":[{"id":7573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7557,"src":"34641:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7572,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"34613:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7575,"nodeType":"RevertStatement","src":"34606:41:20"}]}},{"expression":{"arguments":[{"id":7580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7557,"src":"34681:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7578,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:20","typeDescriptions":{}}},"id":7581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7561,"id":7582,"nodeType":"Return","src":"34667:20:20"}]},"documentation":{"id":7555,"nodeType":"StructuredDocumentation","src":"34210:165:20","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7584,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:20","nodeType":"FunctionDefinition","parameters":{"id":7558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7557,"mutability":"mutable","name":"value","nameLocation":"34406:5:20","nodeType":"VariableDeclaration","scope":7584,"src":"34398:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7556,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:20"},"returnParameters":{"id":7561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7584,"src":"34436:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7559,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:20"},"scope":7595,"src":"34380:314:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7593,"nodeType":"Block","src":"34853:87:20","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:20","statements":[{"nodeType":"YulAssignment","src":"34902:22:20","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:20"},"nodeType":"YulFunctionCall","src":"34914:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:20"},"nodeType":"YulFunctionCall","src":"34907:17:20"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7587,"isOffset":false,"isSlot":false,"src":"34921:1:20","valueSize":1},{"declaration":7590,"isOffset":false,"isSlot":false,"src":"34902:1:20","valueSize":1}],"flags":["memory-safe"],"id":7592,"nodeType":"InlineAssembly","src":"34863:71:20"}]},"documentation":{"id":7585,"nodeType":"StructuredDocumentation","src":"34700:90:20","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7594,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:20","nodeType":"FunctionDefinition","parameters":{"id":7588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7587,"mutability":"mutable","name":"b","nameLocation":"34816:1:20","nodeType":"VariableDeclaration","scope":7594,"src":"34811:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7586,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:20"},"returnParameters":{"id":7591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7590,"mutability":"mutable","name":"u","nameLocation":"34850:1:20","nodeType":"VariableDeclaration","scope":7594,"src":"34842:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7589,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:20"},"scope":7595,"src":"34795:145:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7596,"src":"769:34173:20","usedErrors":[5840,5845,5852,5857],"usedEvents":[]}],"src":"192:34751:20"},"id":20},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7595],"SignedMath":[7739]},"id":7740,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7597,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7599,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7740,"sourceUnit":7596,"src":"135:40:21","symbolAliases":[{"foreign":{"id":7598,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"143:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7600,"nodeType":"StructuredDocumentation","src":"177:80:21","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7739,"linearizedBaseContracts":[7739],"name":"SignedMath","nameLocation":"266:10:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":7629,"nodeType":"Block","src":"746:215:21","statements":[{"id":7628,"nodeType":"UncheckedBlock","src":"756:199:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7612,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"894:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7613,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7605,"src":"900:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7614,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"904:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7616,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7621,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"932:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7619,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"916:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7595_$","typeString":"type(library SafeCast)"}},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7594,"src":"916:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7617,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:21","typeDescriptions":{}}},"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7611,"id":7627,"nodeType":"Return","src":"887:57:21"}]}]},"documentation":{"id":7601,"nodeType":"StructuredDocumentation","src":"283:374:21","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7630,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:21","nodeType":"FunctionDefinition","parameters":{"id":7608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7603,"mutability":"mutable","name":"condition","nameLocation":"684:9:21","nodeType":"VariableDeclaration","scope":7630,"src":"679:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7602,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7605,"mutability":"mutable","name":"a","nameLocation":"702:1:21","nodeType":"VariableDeclaration","scope":7630,"src":"695:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7604,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7607,"mutability":"mutable","name":"b","nameLocation":"712:1:21","nodeType":"VariableDeclaration","scope":7630,"src":"705:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7606,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:21"},"returnParameters":{"id":7611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7630,"src":"738:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7609,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:21"},"scope":7739,"src":"662:299:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7648,"nodeType":"Block","src":"1102:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"1127:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7642,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"1131:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7644,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"1134:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7645,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"1137:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7640,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7630,"src":"1119:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7639,"id":7647,"nodeType":"Return","src":"1112:27:21"}]},"documentation":{"id":7631,"nodeType":"StructuredDocumentation","src":"967:66:21","text":" @dev Returns the largest of two signed numbers."},"id":7649,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:21","nodeType":"FunctionDefinition","parameters":{"id":7636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7633,"mutability":"mutable","name":"a","nameLocation":"1058:1:21","nodeType":"VariableDeclaration","scope":7649,"src":"1051:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7632,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7635,"mutability":"mutable","name":"b","nameLocation":"1068:1:21","nodeType":"VariableDeclaration","scope":7649,"src":"1061:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7634,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:21"},"returnParameters":{"id":7639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7649,"src":"1094:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7637,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:21"},"scope":7739,"src":"1038:108:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7667,"nodeType":"Block","src":"1288:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7660,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7652,"src":"1313:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7661,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"1317:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7663,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7652,"src":"1320:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7664,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7654,"src":"1323:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7659,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7630,"src":"1305:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7658,"id":7666,"nodeType":"Return","src":"1298:27:21"}]},"documentation":{"id":7650,"nodeType":"StructuredDocumentation","src":"1152:67:21","text":" @dev Returns the smallest of two signed numbers."},"id":7668,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:21","nodeType":"FunctionDefinition","parameters":{"id":7655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7652,"mutability":"mutable","name":"a","nameLocation":"1244:1:21","nodeType":"VariableDeclaration","scope":7668,"src":"1237:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7651,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7654,"mutability":"mutable","name":"b","nameLocation":"1254:1:21","nodeType":"VariableDeclaration","scope":7668,"src":"1247:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7653,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:21"},"returnParameters":{"id":7658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7668,"src":"1280:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7656,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:21"},"scope":7739,"src":"1224:108:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7711,"nodeType":"Block","src":"1537:162:21","statements":[{"assignments":[7679],"declarations":[{"constant":false,"id":7679,"mutability":"mutable","name":"x","nameLocation":"1606:1:21","nodeType":"VariableDeclaration","scope":7711,"src":"1599:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7678,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7692,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7680,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"1611:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7681,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"1615:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7684,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"1622:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7685,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"1626:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7690,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:21"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7693,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7679,"src":"1651:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7698,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7679,"src":"1671:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7696,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:21","typeDescriptions":{}}},"id":7699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7694,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:21","typeDescriptions":{}}},"id":7702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"1685:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7704,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"1689:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7677,"id":7710,"nodeType":"Return","src":"1644:48:21"}]},"documentation":{"id":7669,"nodeType":"StructuredDocumentation","src":"1338:126:21","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7712,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:21","nodeType":"FunctionDefinition","parameters":{"id":7674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7671,"mutability":"mutable","name":"a","nameLocation":"1493:1:21","nodeType":"VariableDeclaration","scope":7712,"src":"1486:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7670,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7673,"mutability":"mutable","name":"b","nameLocation":"1503:1:21","nodeType":"VariableDeclaration","scope":7712,"src":"1496:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7672,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:21"},"returnParameters":{"id":7677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7712,"src":"1529:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7675,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:21"},"scope":7739,"src":"1469:230:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7737,"nodeType":"Block","src":"1843:767:21","statements":[{"id":7736,"nodeType":"UncheckedBlock","src":"1853:751:21","statements":[{"assignments":[7721],"declarations":[{"constant":false,"id":7721,"mutability":"mutable","name":"mask","nameLocation":"2424:4:21","nodeType":"VariableDeclaration","scope":7736,"src":"2417:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7720,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7725,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7722,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7715,"src":"2431:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7728,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7715,"src":"2576:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7729,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7721,"src":"2580:4:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7732,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7721,"src":"2588:4:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7726,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:21","typeDescriptions":{}}},"id":7734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7719,"id":7735,"nodeType":"Return","src":"2560:33:21"}]}]},"documentation":{"id":7713,"nodeType":"StructuredDocumentation","src":"1705:78:21","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7738,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:21","nodeType":"FunctionDefinition","parameters":{"id":7716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7715,"mutability":"mutable","name":"n","nameLocation":"1808:1:21","nodeType":"VariableDeclaration","scope":7738,"src":"1801:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7714,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:21"},"returnParameters":{"id":7719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7738,"src":"1834:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7717,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:21"},"scope":7739,"src":"1788:822:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7740,"src":"258:2354:21","usedErrors":[],"usedEvents":[]}],"src":"109:2504:21"},"id":21},"contracts/NeutralHeart.sol":{"ast":{"absolutePath":"contracts/NeutralHeart.sol","exportedSymbols":{"Context":[2216],"ECDSA":[4087],"ERC165":[4197],"ERC2981":[2186],"ERC721":[1261],"ERC721Enumerable":[1782],"ERC721Utils":[1919],"IERC165":[4209],"IERC2981":[167],"IERC721":[1378],"IERC721Enumerable":[1814],"IERC721Errors":[257],"IERC721Metadata":[1842],"MessageHashUtils":[4173],"NeutralHeart":[8458],"Ownable":[147],"ReentrancyGuard":[2337],"Strings":[3739]},"id":8459,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7741,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":7742,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8459,"sourceUnit":1262,"src":"58:57:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","id":7743,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8459,"sourceUnit":1783,"src":"116:78:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7744,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8459,"sourceUnit":148,"src":"195:52:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":7745,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8459,"sourceUnit":2338,"src":"248:59:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/common/ERC2981.sol","file":"@openzeppelin/contracts/token/common/ERC2981.sol","id":7746,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8459,"sourceUnit":2187,"src":"308:58:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":7747,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8459,"sourceUnit":4088,"src":"367:62:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":7748,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8459,"sourceUnit":4174,"src":"430:73:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7749,"name":"ERC721","nameLocations":["530:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":1261,"src":"530:6:22"},"id":7750,"nodeType":"InheritanceSpecifier","src":"530:6:22"},{"baseName":{"id":7751,"name":"ERC721Enumerable","nameLocations":["538:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":1782,"src":"538:16:22"},"id":7752,"nodeType":"InheritanceSpecifier","src":"538:16:22"},{"baseName":{"id":7753,"name":"Ownable","nameLocations":["556:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"556:7:22"},"id":7754,"nodeType":"InheritanceSpecifier","src":"556:7:22"},{"baseName":{"id":7755,"name":"ReentrancyGuard","nameLocations":["565:15:22"],"nodeType":"IdentifierPath","referencedDeclaration":2337,"src":"565:15:22"},"id":7756,"nodeType":"InheritanceSpecifier","src":"565:15:22"},{"baseName":{"id":7757,"name":"ERC2981","nameLocations":["582:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":2186,"src":"582:7:22"},"id":7758,"nodeType":"InheritanceSpecifier","src":"582:7:22"}],"canonicalName":"NeutralHeart","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8458,"linearizedBaseContracts":[8458,2186,2337,147,1782,1814,1261,257,1842,1378,4197,167,4209,2216],"name":"NeutralHeart","nameLocation":"514:12:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":7806,"nodeType":"Block","src":"747:245:22","statements":[{"assignments":[7767],"declarations":[{"constant":false,"id":7767,"mutability":"mutable","name":"balance","nameLocation":"765:7:22","nodeType":"VariableDeclaration","scope":7806,"src":"757:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7766,"name":"uint256","nodeType":"ElementaryTypeName","src":"757:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7771,"initialValue":{"arguments":[{"id":7769,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7760,"src":"785:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7768,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"775:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"775:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"757:34:22"},{"assignments":[7776],"declarations":[{"constant":false,"id":7776,"mutability":"mutable","name":"tokens","nameLocation":"818:6:22","nodeType":"VariableDeclaration","scope":7806,"src":"801:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7774,"name":"uint256","nodeType":"ElementaryTypeName","src":"801:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7775,"nodeType":"ArrayTypeName","src":"801:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":7782,"initialValue":{"arguments":[{"id":7780,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"841:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"827:13:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":7777,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7778,"nodeType":"ArrayTypeName","src":"831:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":7781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"827:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"801:48:22"},{"body":{"id":7802,"nodeType":"Block","src":"897:66:22","statements":[{"expression":{"id":7800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7793,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7776,"src":"911:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7795,"indexExpression":{"id":7794,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"918:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"911:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7797,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7760,"src":"943:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7798,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"950:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7796,"name":"tokenOfOwnerByIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"923:19:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:29:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"911:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7801,"nodeType":"ExpressionStatement","src":"911:41:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7787,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"879:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7788,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"883:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"879:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7803,"initializationExpression":{"assignments":[7784],"declarations":[{"constant":false,"id":7784,"mutability":"mutable","name":"i","nameLocation":"872:1:22","nodeType":"VariableDeclaration","scope":7803,"src":"864:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7783,"name":"uint256","nodeType":"ElementaryTypeName","src":"864:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7786,"initialValue":{"hexValue":"30","id":7785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"876:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"864:13:22"},"loopExpression":{"expression":{"id":7791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"892:3:22","subExpression":{"id":7790,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"892:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7792,"nodeType":"ExpressionStatement","src":"892:3:22"},"nodeType":"ForStatement","src":"859:104:22"},{"expression":{"id":7804,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7776,"src":"979:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":7765,"id":7805,"nodeType":"Return","src":"972:13:22"}]},"functionSelector":"8462151c","id":7807,"implemented":true,"kind":"function","modifiers":[],"name":"tokensOfOwner","nameLocation":"677:13:22","nodeType":"FunctionDefinition","parameters":{"id":7761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7760,"mutability":"mutable","name":"owner","nameLocation":"699:5:22","nodeType":"VariableDeclaration","scope":7807,"src":"691:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7759,"name":"address","nodeType":"ElementaryTypeName","src":"691:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"690:15:22"},"returnParameters":{"id":7765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7807,"src":"729:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7762,"name":"uint256","nodeType":"ElementaryTypeName","src":"729:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7763,"nodeType":"ArrayTypeName","src":"729:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"728:18:22"},"scope":8458,"src":"668:324:22","stateMutability":"view","virtual":false,"visibility":"external"},{"constant":false,"functionSelector":"e00dd161","id":7809,"mutability":"mutable","name":"currentId","nameLocation":"1013:9:22","nodeType":"VariableDeclaration","scope":8458,"src":"998:24:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7808,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"26a74d8e","id":7811,"mutability":"mutable","name":"maxPublicSupply","nameLocation":"1043:15:22","nodeType":"VariableDeclaration","scope":8458,"src":"1028:30:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"a4f4f8af","id":7813,"mutability":"mutable","name":"publicMinted","nameLocation":"1079:12:22","nodeType":"VariableDeclaration","scope":8458,"src":"1064:27:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7812,"name":"uint256","nodeType":"ElementaryTypeName","src":"1064:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b7ec2086","id":7815,"mutability":"mutable","name":"priceWei","nameLocation":"1112:8:22","nodeType":"VariableDeclaration","scope":8458,"src":"1097:23:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1097:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"f74d5480","id":7817,"mutability":"mutable","name":"trustedSigner","nameLocation":"1208:13:22","nodeType":"VariableDeclaration","scope":8458,"src":"1193:28:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7816,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"1a02b69e","id":7821,"mutability":"mutable","name":"hasClaimedOnChain","nameLocation":"1305:17:22","nodeType":"VariableDeclaration","scope":8458,"src":"1273:49:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7820,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7818,"name":"address","nodeType":"ElementaryTypeName","src":"1281:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1273:24:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7819,"name":"bool","nodeType":"ElementaryTypeName","src":"1292:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"dd46edb8","id":7825,"mutability":"mutable","name":"tokenVariant","nameLocation":"1418:12:22","nodeType":"VariableDeclaration","scope":8458,"src":"1385:45:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"},"typeName":{"id":7824,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7822,"name":"uint256","nodeType":"ElementaryTypeName","src":"1393:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1385:25:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7823,"name":"uint8","nodeType":"ElementaryTypeName","src":"1404:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}},"visibility":"public"},{"constant":false,"id":7827,"mutability":"mutable","name":"_baseTokenURI","nameLocation":"1452:13:22","nodeType":"VariableDeclaration","scope":8458,"src":"1437:28:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7826,"name":"string","nodeType":"ElementaryTypeName","src":"1437:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"anonymous":false,"eventSelector":"748a2986091c2034d6e93b6f44f771a79f0e1d6acd8a60c68c17d4e1e2feaed2","id":7833,"name":"PublicMint","nameLocation":"1478:10:22","nodeType":"EventDefinition","parameters":{"id":7832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7829,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1505:2:22","nodeType":"VariableDeclaration","scope":7833,"src":"1489:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7828,"name":"address","nodeType":"ElementaryTypeName","src":"1489:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7831,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1525:7:22","nodeType":"VariableDeclaration","scope":7833,"src":"1509:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1509:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1488:45:22"},"src":"1472:62:22"},{"anonymous":false,"eventSelector":"e9a10c23ea49d40011e019f115185f0bc29740208a504d35f951dca74ba37eac","id":7839,"name":"SubscriberClaim","nameLocation":"1545:15:22","nodeType":"EventDefinition","parameters":{"id":7838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7835,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1577:2:22","nodeType":"VariableDeclaration","scope":7839,"src":"1561:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7834,"name":"address","nodeType":"ElementaryTypeName","src":"1561:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7837,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1597:7:22","nodeType":"VariableDeclaration","scope":7839,"src":"1581:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1581:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1560:45:22"},"src":"1539:67:22"},{"anonymous":false,"eventSelector":"598067bc48ef38b7785eda047c375b2d45f2b845404b58dcdfccf40e7f38d869","id":7849,"name":"Transform","nameLocation":"1617:9:22","nodeType":"EventDefinition","parameters":{"id":7848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7841,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1643:5:22","nodeType":"VariableDeclaration","scope":7849,"src":"1627:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7840,"name":"address","nodeType":"ElementaryTypeName","src":"1627:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7843,"indexed":true,"mutability":"mutable","name":"burnedId","nameLocation":"1666:8:22","nodeType":"VariableDeclaration","scope":7849,"src":"1650:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7842,"name":"uint256","nodeType":"ElementaryTypeName","src":"1650:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7845,"indexed":true,"mutability":"mutable","name":"newId","nameLocation":"1692:5:22","nodeType":"VariableDeclaration","scope":7849,"src":"1676:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7847,"indexed":false,"mutability":"mutable","name":"variant","nameLocation":"1705:7:22","nodeType":"VariableDeclaration","scope":7849,"src":"1699:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7846,"name":"uint8","nodeType":"ElementaryTypeName","src":"1699:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1626:87:22"},"src":"1611:103:22"},{"anonymous":false,"eventSelector":"f9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6","id":7853,"name":"BaseURISet","nameLocation":"1725:10:22","nodeType":"EventDefinition","parameters":{"id":7852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7851,"indexed":false,"mutability":"mutable","name":"base","nameLocation":"1743:4:22","nodeType":"VariableDeclaration","scope":7853,"src":"1736:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7850,"name":"string","nodeType":"ElementaryTypeName","src":"1736:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1735:13:22"},"src":"1719:30:22"},{"anonymous":false,"eventSelector":"65b80efdb610be9fc8e0cc1ab30c9f0b98b538c1392f298ec6ff69ae0768b74e","id":7857,"name":"TrustedSignerSet","nameLocation":"1760:16:22","nodeType":"EventDefinition","parameters":{"id":7856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7855,"indexed":true,"mutability":"mutable","name":"signer","nameLocation":"1793:6:22","nodeType":"VariableDeclaration","scope":7857,"src":"1777:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7854,"name":"address","nodeType":"ElementaryTypeName","src":"1777:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1776:24:22"},"src":"1754:47:22"},{"anonymous":false,"eventSelector":"af497693a87db12ca89131a31edbb3db4bb5702dfb284e8ae7427d185f09112d","id":7861,"name":"ContractURISet","nameLocation":"1812:14:22","nodeType":"EventDefinition","parameters":{"id":7860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7859,"indexed":false,"mutability":"mutable","name":"contractURI","nameLocation":"1834:11:22","nodeType":"VariableDeclaration","scope":7861,"src":"1827:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7858,"name":"string","nodeType":"ElementaryTypeName","src":"1827:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1826:20:22"},"src":"1806:41:22"},{"anonymous":false,"eventSelector":"884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364","id":7867,"name":"Withdraw","nameLocation":"1858:8:22","nodeType":"EventDefinition","parameters":{"id":7866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7863,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1883:2:22","nodeType":"VariableDeclaration","scope":7867,"src":"1867:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7862,"name":"address","nodeType":"ElementaryTypeName","src":"1867:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7865,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1895:6:22","nodeType":"VariableDeclaration","scope":7867,"src":"1887:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7864,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1866:36:22"},"src":"1852:51:22"},{"body":{"id":7894,"nodeType":"Block","src":"2052:128:22","statements":[{"expression":{"id":7884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7882,"name":"maxPublicSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"2062:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7883,"name":"maxPublicSupply_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"2080:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2062:34:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7885,"nodeType":"ExpressionStatement","src":"2062:34:22"},{"expression":{"id":7888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7886,"name":"priceWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"2106:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7887,"name":"priceWei_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7871,"src":"2117:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2106:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7889,"nodeType":"ExpressionStatement","src":"2106:20:22"},{"expression":{"id":7892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7890,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7809,"src":"2136:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":7891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2148:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2136:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7893,"nodeType":"ExpressionStatement","src":"2136:13:22"}]},"id":7895,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4e65757472616c4865617274204e465420283230323529","id":7874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1995:25:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce7883b1d6cb2e890a21e00e9db8aabaf730e610adaeb9fd581321254804a43e","typeString":"literal_string \"NeutralHeart NFT (2025)\""},"value":"NeutralHeart NFT (2025)"},{"hexValue":"4e4852543235","id":7875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2022:8:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_aedfffca529c9069abc42ef7f0a711a5f626b2ac8c223d2c4a47c42d138f7ff3","typeString":"literal_string \"NHRT25\""},"value":"NHRT25"}],"id":7876,"kind":"baseConstructorSpecifier","modifierName":{"id":7873,"name":"ERC721","nameLocations":["1988:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":1261,"src":"1988:6:22"},"nodeType":"ModifierInvocation","src":"1988:43:22"},{"arguments":[{"expression":{"id":7878,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2040:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2044:6:22","memberName":"sender","nodeType":"MemberAccess","src":"2040:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7880,"kind":"baseConstructorSpecifier","modifierName":{"id":7877,"name":"Ownable","nameLocations":["2032:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2032:7:22"},"nodeType":"ModifierInvocation","src":"2032:19:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7869,"mutability":"mutable","name":"maxPublicSupply_","nameLocation":"1938:16:22","nodeType":"VariableDeclaration","scope":7895,"src":"1930:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7871,"mutability":"mutable","name":"priceWei_","nameLocation":"1972:9:22","nodeType":"VariableDeclaration","scope":7895,"src":"1964:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1964:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1920:67:22"},"returnParameters":{"id":7881,"nodeType":"ParameterList","parameters":[],"src":"2052:0:22"},"scope":8458,"src":"1909:271:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7910,"nodeType":"Block","src":"2255:68:22","statements":[{"expression":{"id":7904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7902,"name":"trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7817,"src":"2265:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7903,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7897,"src":"2281:1:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2265:17:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7905,"nodeType":"ExpressionStatement","src":"2265:17:22"},{"eventCall":{"arguments":[{"id":7907,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7897,"src":"2314:1:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7906,"name":"TrustedSignerSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"2297:16:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2297:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7909,"nodeType":"EmitStatement","src":"2292:24:22"}]},"functionSelector":"56a1c701","id":7911,"implemented":true,"kind":"function","modifiers":[{"id":7900,"kind":"modifierInvocation","modifierName":{"id":7899,"name":"onlyOwner","nameLocations":["2245:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2245:9:22"},"nodeType":"ModifierInvocation","src":"2245:9:22"}],"name":"setTrustedSigner","nameLocation":"2208:16:22","nodeType":"FunctionDefinition","parameters":{"id":7898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7897,"mutability":"mutable","name":"s","nameLocation":"2233:1:22","nodeType":"VariableDeclaration","scope":7911,"src":"2225:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7896,"name":"address","nodeType":"ElementaryTypeName","src":"2225:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2224:11:22"},"returnParameters":{"id":7901,"nodeType":"ParameterList","parameters":[],"src":"2255:0:22"},"scope":8458,"src":"2199:124:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7926,"nodeType":"Block","src":"2418:62:22","statements":[{"expression":{"id":7920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7918,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7827,"src":"2428:13:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7919,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"2444:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2428:17:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7921,"nodeType":"ExpressionStatement","src":"2428:17:22"},{"eventCall":{"arguments":[{"id":7923,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"2471:1:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7922,"name":"BaseURISet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"2460:10:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":7924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7925,"nodeType":"EmitStatement","src":"2455:18:22"}]},"functionSelector":"55f804b3","id":7927,"implemented":true,"kind":"function","modifiers":[{"id":7916,"kind":"modifierInvocation","modifierName":{"id":7915,"name":"onlyOwner","nameLocations":["2408:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2408:9:22"},"nodeType":"ModifierInvocation","src":"2408:9:22"}],"name":"setBaseURI","nameLocation":"2371:10:22","nodeType":"FunctionDefinition","parameters":{"id":7914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7913,"mutability":"mutable","name":"b","nameLocation":"2396:1:22","nodeType":"VariableDeclaration","scope":7927,"src":"2382:15:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7912,"name":"string","nodeType":"ElementaryTypeName","src":"2382:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2381:17:22"},"returnParameters":{"id":7917,"nodeType":"ParameterList","parameters":[],"src":"2418:0:22"},"scope":8458,"src":"2362:118:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"constant":false,"id":7929,"mutability":"mutable","name":"_contractURI","nameLocation":"2564:12:22","nodeType":"VariableDeclaration","scope":8458,"src":"2549:27:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7928,"name":"string","nodeType":"ElementaryTypeName","src":"2549:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":7944,"nodeType":"Block","src":"2645:69:22","statements":[{"expression":{"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7936,"name":"_contractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7929,"src":"2655:12:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7937,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"2670:3:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2655:18:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7939,"nodeType":"ExpressionStatement","src":"2655:18:22"},{"eventCall":{"arguments":[{"id":7941,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"2703:3:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7940,"name":"ContractURISet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7861,"src":"2688:14:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":7942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7943,"nodeType":"EmitStatement","src":"2683:24:22"}]},"functionSelector":"938e3d7b","id":7945,"implemented":true,"kind":"function","modifiers":[{"id":7934,"kind":"modifierInvocation","modifierName":{"id":7933,"name":"onlyOwner","nameLocations":["2635:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2635:9:22"},"nodeType":"ModifierInvocation","src":"2635:9:22"}],"name":"setContractURI","nameLocation":"2592:14:22","nodeType":"FunctionDefinition","parameters":{"id":7932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7931,"mutability":"mutable","name":"uri","nameLocation":"2621:3:22","nodeType":"VariableDeclaration","scope":7945,"src":"2607:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7930,"name":"string","nodeType":"ElementaryTypeName","src":"2607:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2606:19:22"},"returnParameters":{"id":7935,"nodeType":"ParameterList","parameters":[],"src":"2645:0:22"},"scope":8458,"src":"2583:131:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7952,"nodeType":"Block","src":"2781:36:22","statements":[{"expression":{"id":7950,"name":"_contractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7929,"src":"2798:12:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":7949,"id":7951,"nodeType":"Return","src":"2791:19:22"}]},"functionSelector":"e8a3d485","id":7953,"implemented":true,"kind":"function","modifiers":[],"name":"contractURI","nameLocation":"2729:11:22","nodeType":"FunctionDefinition","parameters":{"id":7946,"nodeType":"ParameterList","parameters":[],"src":"2740:2:22"},"returnParameters":{"id":7949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7953,"src":"2766:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7947,"name":"string","nodeType":"ElementaryTypeName","src":"2766:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2765:15:22"},"scope":8458,"src":"2720:97:22","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[509],"body":{"id":7961,"nodeType":"Block","src":"2890:37:22","statements":[{"expression":{"id":7959,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7827,"src":"2907:13:22","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":7958,"id":7960,"nodeType":"Return","src":"2900:20:22"}]},"id":7962,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"2832:8:22","nodeType":"FunctionDefinition","overrides":{"id":7955,"nodeType":"OverrideSpecifier","overrides":[],"src":"2857:8:22"},"parameters":{"id":7954,"nodeType":"ParameterList","parameters":[],"src":"2840:2:22"},"returnParameters":{"id":7958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7962,"src":"2875:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7956,"name":"string","nodeType":"ElementaryTypeName","src":"2875:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2874:15:22"},"scope":8458,"src":"2823:104:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[500],"body":{"id":8064,"nodeType":"Block","src":"3117:770:22","statements":[{"expression":{"arguments":[{"id":7971,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7964,"src":"3200:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7970,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"3186:13:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3186:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7973,"nodeType":"ExpressionStatement","src":"3186:22:22"},{"assignments":[7975],"declarations":[{"constant":false,"id":7975,"mutability":"mutable","name":"base","nameLocation":"3232:4:22","nodeType":"VariableDeclaration","scope":8064,"src":"3218:18:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7974,"name":"string","nodeType":"ElementaryTypeName","src":"3218:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7978,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7976,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[7962],"referencedDeclaration":7962,"src":"3239:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":7977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3218:31:22"},{"assignments":[7980],"declarations":[{"constant":false,"id":7980,"mutability":"mutable","name":"v","nameLocation":"3265:1:22","nodeType":"VariableDeclaration","scope":8064,"src":"3259:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7979,"name":"uint8","nodeType":"ElementaryTypeName","src":"3259:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":7984,"initialValue":{"baseExpression":{"id":7981,"name":"tokenVariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"3269:12:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"}},"id":7983,"indexExpression":{"id":7982,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7964,"src":"3282:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3269:21:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"3259:31:22"},{"assignments":[7986],"declarations":[{"constant":false,"id":7986,"mutability":"mutable","name":"namePart","nameLocation":"3314:8:22","nodeType":"VariableDeclaration","scope":8064,"src":"3300:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7985,"name":"string","nodeType":"ElementaryTypeName","src":"3300:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7988,"initialValue":{"hexValue":"6e65757472616c2e6a736f6e","id":7987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3325:14:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_6a7e530fff89082831aa4d983e67d124a236e59cf5adda583f20493910ba0984","typeString":"literal_string \"neutral.json\""},"value":"neutral.json"},"nodeType":"VariableDeclarationStatement","src":"3300:39:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7989,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"3353:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3358:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3353:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7997,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"3419:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":7998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3424:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3419:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8005,"nodeType":"IfStatement","src":"3415:60:22","trueBody":{"id":8004,"nodeType":"Block","src":"3427:48:22","statements":[{"expression":{"id":8002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8000,"name":"namePart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"3441:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"646576696c2e6a736f6e","id":8001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3452:12:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d24c80b191361e85644b6b0bda725d53d4e964351c7c01a253ab10de48ed4f8e","typeString":"literal_string \"devil.json\""},"value":"devil.json"},"src":"3441:23:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8003,"nodeType":"ExpressionStatement","src":"3441:23:22"}]}},"id":8006,"nodeType":"IfStatement","src":"3349:126:22","trueBody":{"id":7996,"nodeType":"Block","src":"3361:48:22","statements":[{"expression":{"id":7994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7992,"name":"namePart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"3375:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"616e67656c2e6a736f6e","id":7993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3386:12:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_862c74a20a46320d28f32fc94d228be63a6e107173f6588aa679f5e090940efa","typeString":"literal_string \"angel.json\""},"value":"angel.json"},"src":"3375:23:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7995,"nodeType":"ExpressionStatement","src":"3375:23:22"}]}},{"assignments":[8008],"declarations":[{"constant":false,"id":8008,"mutability":"mutable","name":"b","nameLocation":"3564:1:22","nodeType":"VariableDeclaration","scope":8064,"src":"3551:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8007,"name":"bytes","nodeType":"ElementaryTypeName","src":"3551:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8013,"initialValue":{"arguments":[{"id":8011,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7975,"src":"3574:4:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3568:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8009,"name":"bytes","nodeType":"ElementaryTypeName","src":"3568:5:22","typeDescriptions":{}}},"id":8012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3568:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3551:28:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8014,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8008,"src":"3593:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3595:6:22","memberName":"length","nodeType":"MemberAccess","src":"3593:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3605:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3593:13:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8027,"nodeType":"IfStatement","src":"3589:85:22","trueBody":{"id":8026,"nodeType":"Block","src":"3608:66:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":8022,"name":"namePart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"3653:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":8020,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3636:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3640:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"3636:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3636:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3629:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":8018,"name":"string","nodeType":"ElementaryTypeName","src":"3629:6:22","typeDescriptions":{}}},"id":8024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3629:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7969,"id":8025,"nodeType":"Return","src":"3622:41:22"}]}},{"assignments":[8029],"declarations":[{"constant":false,"id":8029,"mutability":"mutable","name":"last","nameLocation":"3690:4:22","nodeType":"VariableDeclaration","scope":8064,"src":"3683:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":8028,"name":"bytes1","nodeType":"ElementaryTypeName","src":"3683:6:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":8036,"initialValue":{"baseExpression":{"id":8030,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8008,"src":"3697:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8035,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8031,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8008,"src":"3699:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3701:6:22","memberName":"length","nodeType":"MemberAccess","src":"3699:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3710:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3699:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3697:15:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"3683:29:22"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":8042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8037,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8029,"src":"3726:4:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2f","id":8040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3741:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","typeString":"literal_string \"/\""},"value":"/"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","typeString":"literal_string \"/\""}],"id":8039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3734:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":8038,"name":"bytes1","nodeType":"ElementaryTypeName","src":"3734:6:22","typeDescriptions":{}}},"id":8041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3734:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3726:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8053,"nodeType":"IfStatement","src":"3722:97:22","trueBody":{"id":8052,"nodeType":"Block","src":"3747:72:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":8047,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7975,"src":"3792:4:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8048,"name":"namePart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"3798:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":8045,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3775:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3779:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"3775:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3775:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3768:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":8043,"name":"string","nodeType":"ElementaryTypeName","src":"3768:6:22","typeDescriptions":{}}},"id":8050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3768:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7969,"id":8051,"nodeType":"Return","src":"3761:47:22"}]}},{"expression":{"arguments":[{"arguments":[{"id":8058,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7975,"src":"3859:4:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2f","id":8059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3865:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","typeString":"literal_string \"/\""},"value":"/"},{"id":8060,"name":"namePart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"3870:8:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","typeString":"literal_string \"/\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":8056,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3842:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3846:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"3842:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3835:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":8054,"name":"string","nodeType":"ElementaryTypeName","src":"3835:6:22","typeDescriptions":{}}},"id":8062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3835:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7969,"id":8063,"nodeType":"Return","src":"3828:52:22"}]},"functionSelector":"c87b56dd","id":8065,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3046:8:22","nodeType":"FunctionDefinition","overrides":{"id":7966,"nodeType":"OverrideSpecifier","overrides":[],"src":"3084:8:22"},"parameters":{"id":7965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7964,"mutability":"mutable","name":"tokenId","nameLocation":"3063:7:22","nodeType":"VariableDeclaration","scope":8065,"src":"3055:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7963,"name":"uint256","nodeType":"ElementaryTypeName","src":"3055:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3054:17:22"},"returnParameters":{"id":7969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8065,"src":"3102:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7967,"name":"string","nodeType":"ElementaryTypeName","src":"3102:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3101:15:22"},"scope":8458,"src":"3037:850:22","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8137,"nodeType":"Block","src":"3982:594:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8073,"name":"qty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8067,"src":"4093:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":8074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4100:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4093:8:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c79203120746f6b656e20706572207478","id":8076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4103:21:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec495453922ae9023946eb51c1406acdd92df8b193b46cc506c2448af3a80c69","typeString":"literal_string \"only 1 token per tx\""},"value":"only 1 token per tx"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec495453922ae9023946eb51c1406acdd92df8b193b46cc506c2448af3a80c69","typeString":"literal_string \"only 1 token per tx\""}],"id":8072,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4085:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4085:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8078,"nodeType":"ExpressionStatement","src":"4085:40:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8080,"name":"publicMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"4143:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8081,"name":"qty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8067,"src":"4158:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4143:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8083,"name":"maxPublicSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"4165:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4143:37:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7075626c696320736f6c64206f7574","id":8085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4182:17:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d","typeString":"literal_string \"public sold out\""},"value":"public sold out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d","typeString":"literal_string \"public sold out\""}],"id":8079,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4135:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4135:65:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8087,"nodeType":"ExpressionStatement","src":"4135:65:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8089,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4218:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4222:5:22","memberName":"value","nodeType":"MemberAccess","src":"4218:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8091,"name":"priceWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"4231:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8092,"name":"qty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8067,"src":"4242:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4231:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4218:27:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e636f7272656374207061796d656e74","id":8095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4247:19:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877","typeString":"literal_string \"incorrect payment\""},"value":"incorrect payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877","typeString":"literal_string \"incorrect payment\""}],"id":8088,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4210:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4210:57:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8097,"nodeType":"ExpressionStatement","src":"4210:57:22"},{"body":{"id":8131,"nodeType":"Block","src":"4312:229:22","statements":[{"assignments":[8109],"declarations":[{"constant":false,"id":8109,"mutability":"mutable","name":"tokenId","nameLocation":"4334:7:22","nodeType":"VariableDeclaration","scope":8131,"src":"4326:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8108,"name":"uint256","nodeType":"ElementaryTypeName","src":"4326:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8112,"initialValue":{"id":8111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4344:11:22","subExpression":{"id":8110,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7809,"src":"4344:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4326:29:22"},{"expression":{"arguments":[{"expression":{"id":8114,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4379:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4383:6:22","memberName":"sender","nodeType":"MemberAccess","src":"4379:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8116,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8109,"src":"4391:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8113,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[939,969],"referencedDeclaration":939,"src":"4369:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4369:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8118,"nodeType":"ExpressionStatement","src":"4369:30:22"},{"expression":{"id":8123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8119,"name":"tokenVariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"4455:12:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"}},"id":8121,"indexExpression":{"id":8120,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8109,"src":"4468:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4455:21:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4479:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4455:25:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8124,"nodeType":"ExpressionStatement","src":"4455:25:22"},{"eventCall":{"arguments":[{"expression":{"id":8126,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4510:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4514:6:22","memberName":"sender","nodeType":"MemberAccess","src":"4510:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8128,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8109,"src":"4522:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8125,"name":"PublicMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"4499:10:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4499:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8130,"nodeType":"EmitStatement","src":"4494:36:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8102,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8099,"src":"4298:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8103,"name":"qty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8067,"src":"4302:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4298:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8132,"initializationExpression":{"assignments":[8099],"declarations":[{"constant":false,"id":8099,"mutability":"mutable","name":"i","nameLocation":"4291:1:22","nodeType":"VariableDeclaration","scope":8132,"src":"4283:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8098,"name":"uint256","nodeType":"ElementaryTypeName","src":"4283:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8101,"initialValue":{"hexValue":"30","id":8100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4283:13:22"},"loopExpression":{"expression":{"id":8106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4307:3:22","subExpression":{"id":8105,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8099,"src":"4307:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8107,"nodeType":"ExpressionStatement","src":"4307:3:22"},"nodeType":"ForStatement","src":"4278:263:22"},{"expression":{"id":8135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8133,"name":"publicMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"4550:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8134,"name":"qty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8067,"src":"4566:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4550:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8136,"nodeType":"ExpressionStatement","src":"4550:19:22"}]},"functionSelector":"2db11544","id":8138,"implemented":true,"kind":"function","modifiers":[{"id":8070,"kind":"modifierInvocation","modifierName":{"id":8069,"name":"nonReentrant","nameLocations":["3969:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":2301,"src":"3969:12:22"},"nodeType":"ModifierInvocation","src":"3969:12:22"}],"name":"publicMint","nameLocation":"3928:10:22","nodeType":"FunctionDefinition","parameters":{"id":8068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8067,"mutability":"mutable","name":"qty","nameLocation":"3947:3:22","nodeType":"VariableDeclaration","scope":8138,"src":"3939:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8066,"name":"uint256","nodeType":"ElementaryTypeName","src":"3939:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3938:13:22"},"returnParameters":{"id":8071,"nodeType":"ParameterList","parameters":[],"src":"3982:0:22"},"scope":8458,"src":"3919:657:22","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":8149,"nodeType":"Block","src":"4676:39:22","statements":[{"expression":{"id":8147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8145,"name":"priceWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"4686:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8146,"name":"newPriceWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"4697:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4686:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8148,"nodeType":"ExpressionStatement","src":"4686:22:22"}]},"functionSelector":"91b7f5ed","id":8150,"implemented":true,"kind":"function","modifiers":[{"id":8143,"kind":"modifierInvocation","modifierName":{"id":8142,"name":"onlyOwner","nameLocations":["4666:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4666:9:22"},"nodeType":"ModifierInvocation","src":"4666:9:22"}],"name":"setPrice","nameLocation":"4627:8:22","nodeType":"FunctionDefinition","parameters":{"id":8141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8140,"mutability":"mutable","name":"newPriceWei","nameLocation":"4644:11:22","nodeType":"VariableDeclaration","scope":8150,"src":"4636:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8139,"name":"uint256","nodeType":"ElementaryTypeName","src":"4636:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4635:21:22"},"returnParameters":{"id":8144,"nodeType":"ParameterList","parameters":[],"src":"4676:0:22"},"scope":8458,"src":"4618:97:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8244,"nodeType":"Block","src":"4926:756:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8158,"name":"trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7817,"src":"4944:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4969:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4961:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8159,"name":"address","nodeType":"ElementaryTypeName","src":"4961:7:22","typeDescriptions":{}}},"id":8162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4961:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4944:27:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"74727573746564207369676e6572206e6f7420736574","id":8164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4973:24:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1","typeString":"literal_string \"trusted signer not set\""},"value":"trusted signer not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1","typeString":"literal_string \"trusted signer not set\""}],"id":8157,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4936:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:62:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8166,"nodeType":"ExpressionStatement","src":"4936:62:22"},{"expression":{"arguments":[{"id":8172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5016:30:22","subExpression":{"baseExpression":{"id":8168,"name":"hasClaimedOnChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"5017:17:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8171,"indexExpression":{"expression":{"id":8169,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5035:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5039:6:22","memberName":"sender","nodeType":"MemberAccess","src":"5035:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5017:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616c726561647920636c61696d6564206f6e2d636861696e","id":8173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5048:26:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3","typeString":"literal_string \"already claimed on-chain\""},"value":"already claimed on-chain"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3","typeString":"literal_string \"already claimed on-chain\""}],"id":8167,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5008:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5008:67:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8175,"nodeType":"ExpressionStatement","src":"5008:67:22"},{"assignments":[8177],"declarations":[{"constant":false,"id":8177,"mutability":"mutable","name":"digest","nameLocation":"5090:6:22","nodeType":"VariableDeclaration","scope":8244,"src":"5082:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5082:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8191,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":8183,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5134:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_NeutralHeart_$8458","typeString":"contract NeutralHeart"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NeutralHeart_$8458","typeString":"contract NeutralHeart"}],"id":8182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5126:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8181,"name":"address","nodeType":"ElementaryTypeName","src":"5126:7:22","typeDescriptions":{}}},"id":8184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5126:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8185,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5141:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5147:7:22","memberName":"chainid","nodeType":"MemberAccess","src":"5141:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8187,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5156:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5160:6:22","memberName":"sender","nodeType":"MemberAccess","src":"5156:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8179,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5109:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5113:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"5109:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5109:58:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8178,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5099:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5099:69:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5082:86:22"},{"assignments":[8193],"declarations":[{"constant":false,"id":8193,"mutability":"mutable","name":"prefixed","nameLocation":"5255:8:22","nodeType":"VariableDeclaration","scope":8244,"src":"5247:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5247:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8198,"initialValue":{"arguments":[{"id":8196,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8177,"src":"5306:6:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8194,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"5266:16:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4173_$","typeString":"type(library MessageHashUtils)"}},"id":8195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5283:22:22","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":4102,"src":"5266:39:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":8197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5266:47:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5247:66:22"},{"assignments":[8200],"declarations":[{"constant":false,"id":8200,"mutability":"mutable","name":"signer","nameLocation":"5327:6:22","nodeType":"VariableDeclaration","scope":8244,"src":"5319:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8199,"name":"address","nodeType":"ElementaryTypeName","src":"5319:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8206,"initialValue":{"arguments":[{"id":8203,"name":"prefixed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"5350:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8204,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8152,"src":"5360:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":8201,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"5336:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4087_$","typeString":"type(library ECDSA)"}},"id":8202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5342:7:22","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3843,"src":"5336:13:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":8205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5336:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5319:51:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8208,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8200,"src":"5388:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8209,"name":"trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7817,"src":"5398:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5388:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c6964207369676e6174757265","id":8211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5413:19:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","typeString":"literal_string \"invalid signature\""},"value":"invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","typeString":"literal_string \"invalid signature\""}],"id":8207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5380:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5380:53:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8213,"nodeType":"ExpressionStatement","src":"5380:53:22"},{"expression":{"id":8219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8214,"name":"hasClaimedOnChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"5444:17:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8217,"indexExpression":{"expression":{"id":8215,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5462:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5466:6:22","memberName":"sender","nodeType":"MemberAccess","src":"5462:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5444:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5476:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5444:36:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8220,"nodeType":"ExpressionStatement","src":"5444:36:22"},{"assignments":[8222],"declarations":[{"constant":false,"id":8222,"mutability":"mutable","name":"tokenId","nameLocation":"5498:7:22","nodeType":"VariableDeclaration","scope":8244,"src":"5490:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8221,"name":"uint256","nodeType":"ElementaryTypeName","src":"5490:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8225,"initialValue":{"id":8224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5508:11:22","subExpression":{"id":8223,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7809,"src":"5508:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5490:29:22"},{"expression":{"arguments":[{"expression":{"id":8227,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5539:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5543:6:22","memberName":"sender","nodeType":"MemberAccess","src":"5539:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8229,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"5551:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8226,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[939,969],"referencedDeclaration":939,"src":"5529:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8231,"nodeType":"ExpressionStatement","src":"5529:30:22"},{"expression":{"id":8236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8232,"name":"tokenVariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"5599:12:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"}},"id":8234,"indexExpression":{"id":8233,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"5612:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5599:21:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5623:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5599:25:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8237,"nodeType":"ExpressionStatement","src":"5599:25:22"},{"eventCall":{"arguments":[{"expression":{"id":8239,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5655:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5659:6:22","memberName":"sender","nodeType":"MemberAccess","src":"5655:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8241,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"5667:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8238,"name":"SubscriberClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"5639:15:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5639:36:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8243,"nodeType":"EmitStatement","src":"5634:41:22"}]},"functionSelector":"bcea0fec","id":8245,"implemented":true,"kind":"function","modifiers":[{"id":8155,"kind":"modifierInvocation","modifierName":{"id":8154,"name":"nonReentrant","nameLocations":["4913:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":2301,"src":"4913:12:22"},"nodeType":"ModifierInvocation","src":"4913:12:22"}],"name":"claimForSubscriber","nameLocation":"4859:18:22","nodeType":"FunctionDefinition","parameters":{"id":8153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8152,"mutability":"mutable","name":"signature","nameLocation":"4893:9:22","nodeType":"VariableDeclaration","scope":8245,"src":"4878:24:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8151,"name":"bytes","nodeType":"ElementaryTypeName","src":"4878:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4877:26:22"},"returnParameters":{"id":8156,"nodeType":"ParameterList","parameters":[],"src":"4926:0:22"},"scope":8458,"src":"4850:832:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8313,"nodeType":"Block","src":"5907:563:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":8257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8255,"name":"variant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"5925:7:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":8256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5936:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5925:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":8260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8258,"name":"variant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"5941:7:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":8259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5952:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5941:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5925:28:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c69642076617269616e74","id":8262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5955:17:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662","typeString":"literal_string \"invalid variant\""},"value":"invalid variant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662","typeString":"literal_string \"invalid variant\""}],"id":8254,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5917:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5917:56:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8264,"nodeType":"ExpressionStatement","src":"5917:56:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8267,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8247,"src":"5999:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8266,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"5991:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5991:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8269,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6011:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6015:6:22","memberName":"sender","nodeType":"MemberAccess","src":"6011:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5991:30:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f74206f776e6572","id":8272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6023:11:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e","typeString":"literal_string \"not owner\""},"value":"not owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e","typeString":"literal_string \"not owner\""}],"id":8265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5983:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5983:52:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8274,"nodeType":"ExpressionStatement","src":"5983:52:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":8280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8276,"name":"tokenVariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"6053:12:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"}},"id":8278,"indexExpression":{"id":8277,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8247,"src":"6066:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6053:21:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6078:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6053:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c79206e65757472616c20746f6b656e732063616e206265207472616e73666f726d6564","id":8281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6081:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277","typeString":"literal_string \"only neutral tokens can be transformed\""},"value":"only neutral tokens can be transformed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277","typeString":"literal_string \"only neutral tokens can be transformed\""}],"id":8275,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6045:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6045:77:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8283,"nodeType":"ExpressionStatement","src":"6045:77:22"},{"expression":{"arguments":[{"id":8285,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8247,"src":"6236:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8284,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"6230:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6230:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8287,"nodeType":"ExpressionStatement","src":"6230:14:22"},{"assignments":[8289],"declarations":[{"constant":false,"id":8289,"mutability":"mutable","name":"newId","nameLocation":"6305:5:22","nodeType":"VariableDeclaration","scope":8313,"src":"6297:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8288,"name":"uint256","nodeType":"ElementaryTypeName","src":"6297:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8292,"initialValue":{"id":8291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6313:11:22","subExpression":{"id":8290,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7809,"src":"6313:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6297:27:22"},{"expression":{"arguments":[{"expression":{"id":8294,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6344:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6348:6:22","memberName":"sender","nodeType":"MemberAccess","src":"6344:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8296,"name":"newId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"6356:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8293,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[939,969],"referencedDeclaration":939,"src":"6334:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6334:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8298,"nodeType":"ExpressionStatement","src":"6334:28:22"},{"expression":{"id":8303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8299,"name":"tokenVariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"6372:12:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"}},"id":8301,"indexExpression":{"id":8300,"name":"newId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"6385:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6372:19:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8302,"name":"variant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"6394:7:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6372:29:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8304,"nodeType":"ExpressionStatement","src":"6372:29:22"},{"eventCall":{"arguments":[{"expression":{"id":8306,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6427:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6431:6:22","memberName":"sender","nodeType":"MemberAccess","src":"6427:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8308,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8247,"src":"6439:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8309,"name":"newId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"6448:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8310,"name":"variant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"6455:7:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":8305,"name":"Transform","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"6417:9:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$returns$__$","typeString":"function (address,uint256,uint256,uint8)"}},"id":8311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8312,"nodeType":"EmitStatement","src":"6412:51:22"}]},"functionSelector":"f78f647c","id":8314,"implemented":true,"kind":"function","modifiers":[{"id":8252,"kind":"modifierInvocation","modifierName":{"id":8251,"name":"nonReentrant","nameLocations":["5894:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":2301,"src":"5894:12:22"},"nodeType":"ModifierInvocation","src":"5894:12:22"}],"name":"transform","nameLocation":"5843:9:22","nodeType":"FunctionDefinition","parameters":{"id":8250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8247,"mutability":"mutable","name":"tokenId","nameLocation":"5861:7:22","nodeType":"VariableDeclaration","scope":8314,"src":"5853:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8246,"name":"uint256","nodeType":"ElementaryTypeName","src":"5853:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8249,"mutability":"mutable","name":"variant","nameLocation":"5876:7:22","nodeType":"VariableDeclaration","scope":8314,"src":"5870:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8248,"name":"uint8","nodeType":"ElementaryTypeName","src":"5870:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5852:32:22"},"returnParameters":{"id":8253,"nodeType":"ParameterList","parameters":[],"src":"5907:0:22"},"scope":8458,"src":"5834:636:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8367,"nodeType":"Block","src":"6595:265:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8324,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"6613:2:22","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6627:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6619:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8325,"name":"address","nodeType":"ElementaryTypeName","src":"6619:7:22","typeDescriptions":{}}},"id":8328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6619:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6613:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c69642061646472657373","id":8330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6631:17:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225","typeString":"literal_string \"invalid address\""},"value":"invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225","typeString":"literal_string \"invalid address\""}],"id":8323,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6605:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6605:44:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8332,"nodeType":"ExpressionStatement","src":"6605:44:22"},{"assignments":[8334],"declarations":[{"constant":false,"id":8334,"mutability":"mutable","name":"bal","nameLocation":"6667:3:22","nodeType":"VariableDeclaration","scope":8367,"src":"6659:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8333,"name":"uint256","nodeType":"ElementaryTypeName","src":"6659:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8340,"initialValue":{"expression":{"arguments":[{"id":8337,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6681:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_NeutralHeart_$8458","typeString":"contract NeutralHeart"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NeutralHeart_$8458","typeString":"contract NeutralHeart"}],"id":8336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6673:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8335,"name":"address","nodeType":"ElementaryTypeName","src":"6673:7:22","typeDescriptions":{}}},"id":8338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6673:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6687:7:22","memberName":"balance","nodeType":"MemberAccess","src":"6673:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6659:35:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8342,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"6712:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6718:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6712:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f2066756e6473","id":8345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6721:10:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920","typeString":"literal_string \"no funds\""},"value":"no funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920","typeString":"literal_string \"no funds\""}],"id":8341,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6704:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6704:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8347,"nodeType":"ExpressionStatement","src":"6704:28:22"},{"assignments":[8349,null],"declarations":[{"constant":false,"id":8349,"mutability":"mutable","name":"ok","nameLocation":"6748:2:22","nodeType":"VariableDeclaration","scope":8367,"src":"6743:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8348,"name":"bool","nodeType":"ElementaryTypeName","src":"6743:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":8356,"initialValue":{"arguments":[{"hexValue":"","id":8354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6778:2:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":8350,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"6756:2:22","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":8351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6759:4:22","memberName":"call","nodeType":"MemberAccess","src":"6756:7:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":8352,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"6772:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6756:21:22","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6756:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6742:39:22"},{"expression":{"arguments":[{"id":8358,"name":"ok","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8349,"src":"6799:2:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7769746864726177206661696c6564","id":8359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6803:17:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe","typeString":"literal_string \"withdraw failed\""},"value":"withdraw failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe","typeString":"literal_string \"withdraw failed\""}],"id":8357,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6791:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6791:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8361,"nodeType":"ExpressionStatement","src":"6791:30:22"},{"eventCall":{"arguments":[{"id":8363,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"6845:2:22","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":8364,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"6849:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8362,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"6836:8:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6836:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8366,"nodeType":"EmitStatement","src":"6831:22:22"}]},"functionSelector":"51cff8d9","id":8368,"implemented":true,"kind":"function","modifiers":[{"id":8319,"kind":"modifierInvocation","modifierName":{"id":8318,"name":"onlyOwner","nameLocations":["6572:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6572:9:22"},"nodeType":"ModifierInvocation","src":"6572:9:22"},{"id":8321,"kind":"modifierInvocation","modifierName":{"id":8320,"name":"nonReentrant","nameLocations":["6582:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":2301,"src":"6582:12:22"},"nodeType":"ModifierInvocation","src":"6582:12:22"}],"name":"withdraw","nameLocation":"6534:8:22","nodeType":"FunctionDefinition","parameters":{"id":8317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8316,"mutability":"mutable","name":"to","nameLocation":"6559:2:22","nodeType":"VariableDeclaration","scope":8368,"src":"6543:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":8315,"name":"address","nodeType":"ElementaryTypeName","src":"6543:15:22","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6542:20:22"},"returnParameters":{"id":8322,"nodeType":"ParameterList","parameters":[],"src":"6595:0:22"},"scope":8458,"src":"6525:335:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8382,"nodeType":"Block","src":"6989:59:22","statements":[{"expression":{"arguments":[{"id":8378,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8370,"src":"7018:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8379,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8372,"src":"7028:12:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":8377,"name":"_setDefaultRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"6999:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint96_$returns$__$","typeString":"function (address,uint96)"}},"id":8380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6999:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8381,"nodeType":"ExpressionStatement","src":"6999:42:22"}]},"functionSelector":"04634d8d","id":8383,"implemented":true,"kind":"function","modifiers":[{"id":8375,"kind":"modifierInvocation","modifierName":{"id":8374,"name":"onlyOwner","nameLocations":["6979:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6979:9:22"},"nodeType":"ModifierInvocation","src":"6979:9:22"}],"name":"setDefaultRoyalty","nameLocation":"6913:17:22","nodeType":"FunctionDefinition","parameters":{"id":8373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8370,"mutability":"mutable","name":"receiver","nameLocation":"6939:8:22","nodeType":"VariableDeclaration","scope":8383,"src":"6931:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8369,"name":"address","nodeType":"ElementaryTypeName","src":"6931:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8372,"mutability":"mutable","name":"feeNumerator","nameLocation":"6956:12:22","nodeType":"VariableDeclaration","scope":8383,"src":"6949:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8371,"name":"uint96","nodeType":"ElementaryTypeName","src":"6949:6:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"6930:39:22"},"returnParameters":{"id":8376,"nodeType":"ParameterList","parameters":[],"src":"6989:0:22"},"scope":8458,"src":"6904:144:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[784,1781],"body":{"id":8400,"nodeType":"Block","src":"7430:55:22","statements":[{"expression":{"arguments":[{"id":8396,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8385,"src":"7463:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8387,"src":"7472:5:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":8393,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7440:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NeutralHeart_$8458_$","typeString":"type(contract super NeutralHeart)"}},"id":8395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7446:16:22","memberName":"_increaseBalance","nodeType":"MemberAccess","referencedDeclaration":1781,"src":"7440:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$","typeString":"function (address,uint128)"}},"id":8398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7440:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8399,"nodeType":"ExpressionStatement","src":"7440:38:22"}]},"id":8401,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7329:16:22","nodeType":"FunctionDefinition","overrides":{"id":8391,"nodeType":"OverrideSpecifier","overrides":[{"id":8389,"name":"ERC721","nameLocations":["7404:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":1261,"src":"7404:6:22"},{"id":8390,"name":"ERC721Enumerable","nameLocations":["7412:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":1782,"src":"7412:16:22"}],"src":"7395:34:22"},"parameters":{"id":8388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8385,"mutability":"mutable","name":"account","nameLocation":"7354:7:22","nodeType":"VariableDeclaration","scope":8401,"src":"7346:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8384,"name":"address","nodeType":"ElementaryTypeName","src":"7346:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8387,"mutability":"mutable","name":"value","nameLocation":"7371:5:22","nodeType":"VariableDeclaration","scope":8401,"src":"7363:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":8386,"name":"uint128","nodeType":"ElementaryTypeName","src":"7363:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7345:32:22"},"returnParameters":{"id":8392,"nodeType":"ParameterList","parameters":[],"src":"7430:0:22"},"scope":8458,"src":"7320:165:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[874,1595],"body":{"id":8439,"nodeType":"Block","src":"7712:241:22","statements":[{"assignments":[8416],"declarations":[{"constant":false,"id":8416,"mutability":"mutable","name":"previousOwner","nameLocation":"7730:13:22","nodeType":"VariableDeclaration","scope":8439,"src":"7722:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8415,"name":"address","nodeType":"ElementaryTypeName","src":"7722:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8423,"initialValue":{"arguments":[{"id":8419,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8403,"src":"7760:2:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8420,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8405,"src":"7764:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8421,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8407,"src":"7773:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8417,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7746:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NeutralHeart_$8458_$","typeString":"type(contract super NeutralHeart)"}},"id":8418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7752:7:22","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1595,"src":"7746:13:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7746:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7722:56:22"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8424,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8403,"src":"7792:2:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7806:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7798:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8425,"name":"address","nodeType":"ElementaryTypeName","src":"7798:7:22","typeDescriptions":{}}},"id":8428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7798:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7792:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8436,"nodeType":"IfStatement","src":"7788:129:22","trueBody":{"id":8435,"nodeType":"Block","src":"7810:107:22","statements":[{"expression":{"id":8433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7878:28:22","subExpression":{"baseExpression":{"id":8430,"name":"tokenVariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"7885:12:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"}},"id":8432,"indexExpression":{"id":8431,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8405,"src":"7898:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7885:21:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8434,"nodeType":"ExpressionStatement","src":"7878:28:22"}]}},{"expression":{"id":8437,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"7933:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":8414,"id":8438,"nodeType":"Return","src":"7926:20:22"}]},"id":8440,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7591:7:22","nodeType":"FunctionDefinition","overrides":{"id":8411,"nodeType":"OverrideSpecifier","overrides":[{"id":8409,"name":"ERC721","nameLocations":["7668:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":1261,"src":"7668:6:22"},{"id":8410,"name":"ERC721Enumerable","nameLocations":["7676:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":1782,"src":"7676:16:22"}],"src":"7659:34:22"},"parameters":{"id":8408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8403,"mutability":"mutable","name":"to","nameLocation":"7607:2:22","nodeType":"VariableDeclaration","scope":8440,"src":"7599:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8402,"name":"address","nodeType":"ElementaryTypeName","src":"7599:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8405,"mutability":"mutable","name":"tokenId","nameLocation":"7619:7:22","nodeType":"VariableDeclaration","scope":8440,"src":"7611:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8404,"name":"uint256","nodeType":"ElementaryTypeName","src":"7611:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8407,"mutability":"mutable","name":"auth","nameLocation":"7636:4:22","nodeType":"VariableDeclaration","scope":8440,"src":"7628:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8406,"name":"address","nodeType":"ElementaryTypeName","src":"7628:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7598:43:22"},"returnParameters":{"id":8414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8440,"src":"7703:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8412,"name":"address","nodeType":"ElementaryTypeName","src":"7703:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7702:9:22"},"scope":8458,"src":"7582:371:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[405,1460,1996],"body":{"id":8456,"nodeType":"Block","src":"8077:60:22","statements":[{"expression":{"arguments":[{"id":8453,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"8118:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":8451,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8094:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NeutralHeart_$8458_$","typeString":"type(contract super NeutralHeart)"}},"id":8452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8100:17:22","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1996,"src":"8094:23:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":8454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8094:36:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8450,"id":8455,"nodeType":"Return","src":"8087:43:22"}]},"functionSelector":"01ffc9a7","id":8457,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"7968:17:22","nodeType":"FunctionDefinition","overrides":{"id":8447,"nodeType":"OverrideSpecifier","overrides":[{"id":8444,"name":"ERC721","nameLocations":["8027:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":1261,"src":"8027:6:22"},{"id":8445,"name":"ERC721Enumerable","nameLocations":["8035:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":1782,"src":"8035:16:22"},{"id":8446,"name":"ERC2981","nameLocations":["8053:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":2186,"src":"8053:7:22"}],"src":"8018:43:22"},"parameters":{"id":8443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8442,"mutability":"mutable","name":"interfaceId","nameLocation":"7993:11:22","nodeType":"VariableDeclaration","scope":8457,"src":"7986:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8441,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7986:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"7985:20:22"},"returnParameters":{"id":8450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8457,"src":"8071:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8448,"name":"bool","nodeType":"ElementaryTypeName","src":"8071:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8070:6:22"},"scope":8458,"src":"7959:178:22","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":8459,"src":"505:7634:22","usedErrors":[13,18,215,220,229,234,239,246,251,256,1433,1436,1951,1956,1965,1972,2282,3750,3755,3760],"usedEvents":[24,1277,1286,1295,7833,7839,7849,7853,7857,7861,7867]}],"src":"32:8108:22"},"id":22}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"IERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"royaltyAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xafab0e6c71905303c47dd254168cb31efc91f0ae284cde609b0202f97f85469e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://824d05aec56eb82a2a3c28eece530dc0792d3a008b09d01444e57cf4aceb0445\",\"dweb:/ipfs/QmVvqmJ5UobuRU9Q4JMyXxBfzKs2cpjbWXMNpxX4binTX8\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ERC721Enumerable":{"abi":[{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the ERC that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: {ERC721} extensions that implement custom `balanceOf` logic, such as {ERC721Consecutive}, interfere with enumerability and should not be used together with {ERC721Enumerable}.\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xe85bdcbce4b8474872045aafb5ed8e3e0a5bd794ded35f76ee9deef25bdc7446\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60872f2d516e70f06d9684386c6b9c0b9d7ff7f4af257be6087efa2c3bb81937\",\"dweb:/ipfs/QmdWgPbs2e8SFNNXPFwTt2xD5N8hniehgGCMHUnY1JDcCw\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xaa3852717be1903bf8b8a66c7ce323f70ac93227769c450f2b332fdd16bd9198\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09ce2e4a5b1064a392594c0d5efeb3ccd8eacf431e55a85574cafb6bfb72ba69\",\"dweb:/ipfs/QmUbT5UomYpwwMrNMzzuNcGb4sxuMZ4jz8mMPZewX8mEPn\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xaa3852717be1903bf8b8a66c7ce323f70ac93227769c450f2b332fdd16bd9198\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09ce2e4a5b1064a392594c0d5efeb3ccd8eacf431e55a85574cafb6bfb72ba69\",\"dweb:/ipfs/QmUbT5UomYpwwMrNMzzuNcGb4sxuMZ4jz8mMPZewX8mEPn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220162f91a938900f67d62c9c64f40c044c95d964965c1f6c6d7a10d1acfd1be75e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0x2F SWAP2 0xA9 CODESIZE SWAP1 0xF PUSH8 0xD62C9C64F40C044C SWAP6 0xD9 PUSH5 0x965C1F6C6D PUSH27 0x10D1ACFD1BE75E64736F6C63430008140033000000000000000000 ","sourceMap":"431:1490:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220162f91a938900f67d62c9c64f40c044c95d964965c1f6c6d7a10d1acfd1be75e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0x2F SWAP2 0xA9 CODESIZE SWAP1 0xF PUSH8 0xD62C9C64F40C044C SWAP6 0xD9 PUSH5 0x965C1F6C6D PUSH27 0x10D1ACFD1BE75E64736F6C63430008140033000000000000000000 ","sourceMap":"431:1490:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/common/ERC2981.sol":{"ERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidDefaultRoyalty","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidDefaultRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidTokenRoyalty","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidTokenRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\",\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}]},\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/common/ERC2981.sol\":\"ERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xafab0e6c71905303c47dd254168cb31efc91f0ae284cde609b0202f97f85469e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://824d05aec56eb82a2a3c28eece530dc0792d3a008b09d01444e57cf4aceb0445\",\"dweb:/ipfs/QmVvqmJ5UobuRU9Q4JMyXxBfzKs2cpjbWXMNpxX4binTX8\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0xa33062c6e0675a74a27b06a4ae4c6ad4d3b7219e27d9c146a4ac57295096d393\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://777543d88013fdd0ee7f47ac619fb13a1993bb667675d8816fde024f73cfbf2d\",\"dweb:/ipfs/QmfDS9uL1XZ2oUe1PH8eRCRyu3Hf98cK8ksGf4Ww7kg5zv\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cdfc0f4896bddb25e6dbaa67bf1eb0e65a8304d29a2184c6bb257d077c9490e664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xFC 0xF BASEFEE SWAP7 0xBD 0xDB 0x25 0xE6 0xDB 0xAA PUSH8 0xBF1EB0E65A8304D2 SWAP11 0x21 DUP5 0xC6 0xBB 0x25 PUSH30 0x77C9490E664736F6C634300081400330000000000000000000000000000 ","sourceMap":"297:18982:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cdfc0f4896bddb25e6dbaa67bf1eb0e65a8304d29a2184c6bb257d077c9490e664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xFC 0xF BASEFEE SWAP7 0xBD 0xDB 0x25 0xE6 0xDB 0xAA PUSH8 0xBF1EB0E65A8304D2 SWAP11 0x21 DUP5 0xC6 0xBB 0x25 PUSH30 0x77C9490E664736F6C634300081400330000000000000000000000000000 ","sourceMap":"297:18982:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026c48870ae02959cbf0acbe21bcfca73b8ad9bf6c86e24aa9d844ab7355d9d6564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xC4 DUP9 PUSH17 0xAE02959CBF0ACBE21BCFCA73B8AD9BF6C8 PUSH15 0x24AA9D844AB7355D9D6564736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026c48870ae02959cbf0acbe21bcfca73b8ad9bf6c86e24aa9d844ab7355d9d6564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xC4 DUP9 PUSH17 0xAE02959CBF0ACBE21BCFCA73B8AD9BF6C8 PUSH15 0x24AA9D844AB7355D9D6564736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/NeutralHeart.sol":{"NeutralHeart":{"abi":[{"inputs":[{"internalType":"uint256","name":"maxPublicSupply_","type":"uint256"},{"internalType":"uint256","name":"priceWei_","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidDefaultRoyalty","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidDefaultRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidTokenRoyalty","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidTokenRoyaltyReceiver","type":"error"},{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"base","type":"string"}],"name":"BaseURISet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"contractURI","type":"string"}],"name":"ContractURISet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"PublicMint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"SubscriberClaim","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"uint256","name":"burnedId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"newId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"variant","type":"uint8"}],"name":"Transform","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"}],"name":"TrustedSignerSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"claimForSubscriber","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"contractURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"hasClaimedOnChain","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxPublicSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceWei","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"qty","type":"uint256"}],"name":"publicMint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"publicMinted","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"b","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"uri","type":"string"}],"name":"setContractURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint96","name":"feeNumerator","type":"uint96"}],"name":"setDefaultRoyalty","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newPriceWei","type":"uint256"}],"name":"setPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"s","type":"address"}],"name":"setTrustedSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenVariant","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"tokensOfOwner","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint8","name":"variant","type":"uint8"}],"name":"transform","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trustedSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2290":{"entryPoint":null,"id":2290,"parameterSlots":0,"returnSlots":0},"@_374":{"entryPoint":null,"id":374,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7895":{"entryPoint":null,"id":7895,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":375,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_uint256_fromMemory":{"entryPoint":614,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256_fromMemory":{"entryPoint":637,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1615,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1632,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":866,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":708,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1177,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1595,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1563,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":578,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1138,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1012,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1332,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":887,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":813,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1302,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1002,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1270,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":766,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":719,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1052,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":573,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":903,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1257,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1110,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":916,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1062,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":588,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1105,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6934:23","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:23","statements":[{"nodeType":"YulAssignment","src":"57:19:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:23"},"nodeType":"YulFunctionCall","src":"67:9:23"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:23"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:23","type":""}],"src":"7:75:23"},{"body":{"nodeType":"YulBlock","src":"177:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:23"},"nodeType":"YulFunctionCall","src":"187:12:23"},"nodeType":"YulExpressionStatement","src":"187:12:23"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:23"},{"body":{"nodeType":"YulBlock","src":"300:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:23"},"nodeType":"YulFunctionCall","src":"310:12:23"},"nodeType":"YulExpressionStatement","src":"310:12:23"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:23"},{"body":{"nodeType":"YulBlock","src":"379:32:23","statements":[{"nodeType":"YulAssignment","src":"389:16:23","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:23"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:23","type":""}],"src":"334:77:23"},{"body":{"nodeType":"YulBlock","src":"460:79:23","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:23"},"nodeType":"YulFunctionCall","src":"519:12:23"},"nodeType":"YulExpressionStatement","src":"519:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:23"},"nodeType":"YulFunctionCall","src":"490:24:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:23"},"nodeType":"YulFunctionCall","src":"480:35:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:23"},"nodeType":"YulFunctionCall","src":"473:43:23"},"nodeType":"YulIf","src":"470:63:23"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:23","type":""}],"src":"417:122:23"},{"body":{"nodeType":"YulBlock","src":"608:80:23","statements":[{"nodeType":"YulAssignment","src":"618:22:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"633:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"627:5:23"},"nodeType":"YulFunctionCall","src":"627:13:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"618:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:23"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"649:26:23"},"nodeType":"YulFunctionCall","src":"649:33:23"},"nodeType":"YulExpressionStatement","src":"649:33:23"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"586:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"594:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"602:5:23","type":""}],"src":"545:143:23"},{"body":{"nodeType":"YulBlock","src":"788:413:23","statements":[{"body":{"nodeType":"YulBlock","src":"834:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"836:77:23"},"nodeType":"YulFunctionCall","src":"836:79:23"},"nodeType":"YulExpressionStatement","src":"836:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"809:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"818:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"805:3:23"},"nodeType":"YulFunctionCall","src":"805:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"830:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"801:3:23"},"nodeType":"YulFunctionCall","src":"801:32:23"},"nodeType":"YulIf","src":"798:119:23"},{"nodeType":"YulBlock","src":"927:128:23","statements":[{"nodeType":"YulVariableDeclaration","src":"942:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"956:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"946:6:23","type":""}]},{"nodeType":"YulAssignment","src":"971:74:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1017:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"1028:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1013:3:23"},"nodeType":"YulFunctionCall","src":"1013:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1037:7:23"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"981:31:23"},"nodeType":"YulFunctionCall","src":"981:64:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"971:6:23"}]}]},{"nodeType":"YulBlock","src":"1065:129:23","statements":[{"nodeType":"YulVariableDeclaration","src":"1080:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"1094:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1084:6:23","type":""}]},{"nodeType":"YulAssignment","src":"1110:74:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1156:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"1167:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1152:3:23"},"nodeType":"YulFunctionCall","src":"1152:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1176:7:23"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1120:31:23"},"nodeType":"YulFunctionCall","src":"1120:64:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1110:6:23"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"750:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"761:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"773:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"781:6:23","type":""}],"src":"694:507:23"},{"body":{"nodeType":"YulBlock","src":"1266:40:23","statements":[{"nodeType":"YulAssignment","src":"1277:22:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1293:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1287:5:23"},"nodeType":"YulFunctionCall","src":"1287:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1277:6:23"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1249:5:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1259:6:23","type":""}],"src":"1207:99:23"},{"body":{"nodeType":"YulBlock","src":"1340:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1357:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1360:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1350:6:23"},"nodeType":"YulFunctionCall","src":"1350:88:23"},"nodeType":"YulExpressionStatement","src":"1350:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1454:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1457:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1447:6:23"},"nodeType":"YulFunctionCall","src":"1447:15:23"},"nodeType":"YulExpressionStatement","src":"1447:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1481:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1471:6:23"},"nodeType":"YulFunctionCall","src":"1471:15:23"},"nodeType":"YulExpressionStatement","src":"1471:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1312:180:23"},{"body":{"nodeType":"YulBlock","src":"1526:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1543:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1546:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1536:6:23"},"nodeType":"YulFunctionCall","src":"1536:88:23"},"nodeType":"YulExpressionStatement","src":"1536:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1640:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1643:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1633:6:23"},"nodeType":"YulFunctionCall","src":"1633:15:23"},"nodeType":"YulExpressionStatement","src":"1633:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1664:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1667:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1657:6:23"},"nodeType":"YulFunctionCall","src":"1657:15:23"},"nodeType":"YulExpressionStatement","src":"1657:15:23"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1498:180:23"},{"body":{"nodeType":"YulBlock","src":"1735:269:23","statements":[{"nodeType":"YulAssignment","src":"1745:22:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1759:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"1765:1:23","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1755:3:23"},"nodeType":"YulFunctionCall","src":"1755:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1745:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"1776:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1806:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"1812:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1802:3:23"},"nodeType":"YulFunctionCall","src":"1802:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1780:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"1853:51:23","statements":[{"nodeType":"YulAssignment","src":"1867:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1881:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1877:3:23"},"nodeType":"YulFunctionCall","src":"1877:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1867:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1833:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1826:6:23"},"nodeType":"YulFunctionCall","src":"1826:26:23"},"nodeType":"YulIf","src":"1823:81:23"},{"body":{"nodeType":"YulBlock","src":"1956:42:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"1970:16:23"},"nodeType":"YulFunctionCall","src":"1970:18:23"},"nodeType":"YulExpressionStatement","src":"1970:18:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1920:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1943:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"1951:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1940:2:23"},"nodeType":"YulFunctionCall","src":"1940:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1917:2:23"},"nodeType":"YulFunctionCall","src":"1917:38:23"},"nodeType":"YulIf","src":"1914:84:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1719:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1728:6:23","type":""}],"src":"1684:320:23"},{"body":{"nodeType":"YulBlock","src":"2064:87:23","statements":[{"nodeType":"YulAssignment","src":"2074:11:23","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2082:3:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2074:4:23"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2102:1:23","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2105:3:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2095:6:23"},"nodeType":"YulFunctionCall","src":"2095:14:23"},"nodeType":"YulExpressionStatement","src":"2095:14:23"},{"nodeType":"YulAssignment","src":"2118:26:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2136:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2139:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2126:9:23"},"nodeType":"YulFunctionCall","src":"2126:18:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2118:4:23"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2051:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2059:4:23","type":""}],"src":"2010:141:23"},{"body":{"nodeType":"YulBlock","src":"2201:49:23","statements":[{"nodeType":"YulAssignment","src":"2211:33:23","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2229:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"2236:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2225:3:23"},"nodeType":"YulFunctionCall","src":"2225:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"2241:2:23","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2221:3:23"},"nodeType":"YulFunctionCall","src":"2221:23:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2211:6:23"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2184:5:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2194:6:23","type":""}],"src":"2157:93:23"},{"body":{"nodeType":"YulBlock","src":"2309:54:23","statements":[{"nodeType":"YulAssignment","src":"2319:37:23","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2344:4:23"},{"name":"value","nodeType":"YulIdentifier","src":"2350:5:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2340:3:23"},"nodeType":"YulFunctionCall","src":"2340:16:23"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2319:8:23"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2284:4:23","type":""},{"name":"value","nodeType":"YulTypedName","src":"2290:5:23","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2300:8:23","type":""}],"src":"2256:107:23"},{"body":{"nodeType":"YulBlock","src":"2445:317:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2455:35:23","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2476:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:23","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2472:3:23"},"nodeType":"YulFunctionCall","src":"2472:18:23"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2459:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2499:109:23","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2530:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"2541:66:23","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2511:18:23"},"nodeType":"YulFunctionCall","src":"2511:97:23"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2503:4:23","type":""}]},{"nodeType":"YulAssignment","src":"2617:51:23","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2648:9:23"},{"name":"toInsert","nodeType":"YulIdentifier","src":"2659:8:23"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2629:18:23"},"nodeType":"YulFunctionCall","src":"2629:39:23"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2617:8:23"}]},{"nodeType":"YulAssignment","src":"2677:30:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2690:5:23"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2701:4:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2697:3:23"},"nodeType":"YulFunctionCall","src":"2697:9:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2686:3:23"},"nodeType":"YulFunctionCall","src":"2686:21:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2677:5:23"}]},{"nodeType":"YulAssignment","src":"2716:40:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2729:5:23"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2740:8:23"},{"name":"mask","nodeType":"YulIdentifier","src":"2750:4:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2736:3:23"},"nodeType":"YulFunctionCall","src":"2736:19:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2726:2:23"},"nodeType":"YulFunctionCall","src":"2726:30:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2716:6:23"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2406:5:23","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2413:10:23","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2425:8:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2438:6:23","type":""}],"src":"2369:393:23"},{"body":{"nodeType":"YulBlock","src":"2800:28:23","statements":[{"nodeType":"YulAssignment","src":"2810:12:23","value":{"name":"value","nodeType":"YulIdentifier","src":"2817:5:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2810:3:23"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2786:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2796:3:23","type":""}],"src":"2768:60:23"},{"body":{"nodeType":"YulBlock","src":"2894:82:23","statements":[{"nodeType":"YulAssignment","src":"2904:66:23","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2962:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2944:17:23"},"nodeType":"YulFunctionCall","src":"2944:24:23"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"2935:8:23"},"nodeType":"YulFunctionCall","src":"2935:34:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2917:17:23"},"nodeType":"YulFunctionCall","src":"2917:53:23"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2904:9:23"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2874:5:23","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2884:9:23","type":""}],"src":"2834:142:23"},{"body":{"nodeType":"YulBlock","src":"3029:28:23","statements":[{"nodeType":"YulAssignment","src":"3039:12:23","value":{"name":"value","nodeType":"YulIdentifier","src":"3046:5:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3039:3:23"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3015:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3025:3:23","type":""}],"src":"2982:75:23"},{"body":{"nodeType":"YulBlock","src":"3139:193:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3149:63:23","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3204:7:23"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3173:30:23"},"nodeType":"YulFunctionCall","src":"3173:39:23"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3153:16:23","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3228:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3268:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3262:5:23"},"nodeType":"YulFunctionCall","src":"3262:11:23"},{"name":"offset","nodeType":"YulIdentifier","src":"3275:6:23"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3307:16:23"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3283:23:23"},"nodeType":"YulFunctionCall","src":"3283:41:23"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3234:27:23"},"nodeType":"YulFunctionCall","src":"3234:91:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3221:6:23"},"nodeType":"YulFunctionCall","src":"3221:105:23"},"nodeType":"YulExpressionStatement","src":"3221:105:23"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3116:4:23","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3122:6:23","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3130:7:23","type":""}],"src":"3063:269:23"},{"body":{"nodeType":"YulBlock","src":"3387:24:23","statements":[{"nodeType":"YulAssignment","src":"3397:8:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3404:1:23","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3397:3:23"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3383:3:23","type":""}],"src":"3338:73:23"},{"body":{"nodeType":"YulBlock","src":"3470:136:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3480:46:23","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3494:30:23"},"nodeType":"YulFunctionCall","src":"3494:32:23"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3484:6:23","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3579:4:23"},{"name":"offset","nodeType":"YulIdentifier","src":"3585:6:23"},{"name":"zero_0","nodeType":"YulIdentifier","src":"3593:6:23"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3535:43:23"},"nodeType":"YulFunctionCall","src":"3535:65:23"},"nodeType":"YulExpressionStatement","src":"3535:65:23"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3456:4:23","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3462:6:23","type":""}],"src":"3417:189:23"},{"body":{"nodeType":"YulBlock","src":"3662:136:23","statements":[{"body":{"nodeType":"YulBlock","src":"3729:63:23","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3773:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"3780:1:23","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"3743:29:23"},"nodeType":"YulFunctionCall","src":"3743:39:23"},"nodeType":"YulExpressionStatement","src":"3743:39:23"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3682:5:23"},{"name":"end","nodeType":"YulIdentifier","src":"3689:3:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3679:2:23"},"nodeType":"YulFunctionCall","src":"3679:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3694:26:23","statements":[{"nodeType":"YulAssignment","src":"3696:22:23","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3709:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"3716:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3705:3:23"},"nodeType":"YulFunctionCall","src":"3705:13:23"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3696:5:23"}]}]},"pre":{"nodeType":"YulBlock","src":"3676:2:23","statements":[]},"src":"3672:120:23"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3650:5:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"3657:3:23","type":""}],"src":"3612:186:23"},{"body":{"nodeType":"YulBlock","src":"3883:464:23","statements":[{"body":{"nodeType":"YulBlock","src":"3909:431:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3923:54:23","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3971:5:23"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"3939:31:23"},"nodeType":"YulFunctionCall","src":"3939:38:23"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"3927:8:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3990:63:23","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4013:8:23"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4041:10:23"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4023:17:23"},"nodeType":"YulFunctionCall","src":"4023:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4009:3:23"},"nodeType":"YulFunctionCall","src":"4009:44:23"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"3994:11:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"4210:27:23","statements":[{"nodeType":"YulAssignment","src":"4212:23:23","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4227:8:23"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4212:11:23"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4194:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"4206:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4191:2:23"},"nodeType":"YulFunctionCall","src":"4191:18:23"},"nodeType":"YulIf","src":"4188:49:23"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4279:11:23"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4296:8:23"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4324:3:23"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4306:17:23"},"nodeType":"YulFunctionCall","src":"4306:22:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4292:3:23"},"nodeType":"YulFunctionCall","src":"4292:37:23"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4250:28:23"},"nodeType":"YulFunctionCall","src":"4250:80:23"},"nodeType":"YulExpressionStatement","src":"4250:80:23"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3900:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"3905:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3897:2:23"},"nodeType":"YulFunctionCall","src":"3897:11:23"},"nodeType":"YulIf","src":"3894:446:23"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3859:5:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"3866:3:23","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"3871:10:23","type":""}],"src":"3804:543:23"},{"body":{"nodeType":"YulBlock","src":"4416:54:23","statements":[{"nodeType":"YulAssignment","src":"4426:37:23","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4451:4:23"},{"name":"value","nodeType":"YulIdentifier","src":"4457:5:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4447:3:23"},"nodeType":"YulFunctionCall","src":"4447:16:23"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4426:8:23"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4391:4:23","type":""},{"name":"value","nodeType":"YulTypedName","src":"4397:5:23","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4407:8:23","type":""}],"src":"4353:117:23"},{"body":{"nodeType":"YulBlock","src":"4527:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"4537:68:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4586:1:23","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"4589:5:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4582:3:23"},"nodeType":"YulFunctionCall","src":"4582:13:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4601:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4597:3:23"},"nodeType":"YulFunctionCall","src":"4597:6:23"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4553:28:23"},"nodeType":"YulFunctionCall","src":"4553:51:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4549:3:23"},"nodeType":"YulFunctionCall","src":"4549:56:23"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4541:4:23","type":""}]},{"nodeType":"YulAssignment","src":"4614:25:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4628:4:23"},{"name":"mask","nodeType":"YulIdentifier","src":"4634:4:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4624:3:23"},"nodeType":"YulFunctionCall","src":"4624:15:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4614:6:23"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4504:4:23","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4510:5:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4520:6:23","type":""}],"src":"4476:169:23"},{"body":{"nodeType":"YulBlock","src":"4731:214:23","statements":[{"nodeType":"YulAssignment","src":"4864:37:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4891:4:23"},{"name":"len","nodeType":"YulIdentifier","src":"4897:3:23"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4872:18:23"},"nodeType":"YulFunctionCall","src":"4872:29:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4864:4:23"}]},{"nodeType":"YulAssignment","src":"4910:29:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4921:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4931:1:23","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"4934:3:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4927:3:23"},"nodeType":"YulFunctionCall","src":"4927:11:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4918:2:23"},"nodeType":"YulFunctionCall","src":"4918:21:23"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"4910:4:23"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4712:4:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"4718:3:23","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4726:4:23","type":""}],"src":"4650:295:23"},{"body":{"nodeType":"YulBlock","src":"5042:1303:23","statements":[{"nodeType":"YulVariableDeclaration","src":"5053:51:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5100:3:23"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5067:32:23"},"nodeType":"YulFunctionCall","src":"5067:37:23"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5057:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"5189:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5191:16:23"},"nodeType":"YulFunctionCall","src":"5191:18:23"},"nodeType":"YulExpressionStatement","src":"5191:18:23"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5161:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"5169:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5158:2:23"},"nodeType":"YulFunctionCall","src":"5158:30:23"},"nodeType":"YulIf","src":"5155:56:23"},{"nodeType":"YulVariableDeclaration","src":"5221:52:23","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5267:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5261:5:23"},"nodeType":"YulFunctionCall","src":"5261:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5235:25:23"},"nodeType":"YulFunctionCall","src":"5235:38:23"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5225:6:23","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5366:4:23"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5372:6:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"5380:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5320:45:23"},"nodeType":"YulFunctionCall","src":"5320:67:23"},"nodeType":"YulExpressionStatement","src":"5320:67:23"},{"nodeType":"YulVariableDeclaration","src":"5397:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5414:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5401:9:23","type":""}]},{"nodeType":"YulAssignment","src":"5425:17:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5438:4:23","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5425:9:23"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5489:611:23","statements":[{"nodeType":"YulVariableDeclaration","src":"5503:37:23","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5522:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5534:4:23","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5530:3:23"},"nodeType":"YulFunctionCall","src":"5530:9:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5518:3:23"},"nodeType":"YulFunctionCall","src":"5518:22:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5507:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5554:51:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5600:4:23"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5568:31:23"},"nodeType":"YulFunctionCall","src":"5568:37:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5558:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5618:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5627:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5622:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"5686:163:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5711:6:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5729:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5734:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5725:3:23"},"nodeType":"YulFunctionCall","src":"5725:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5719:5:23"},"nodeType":"YulFunctionCall","src":"5719:26:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5704:6:23"},"nodeType":"YulFunctionCall","src":"5704:42:23"},"nodeType":"YulExpressionStatement","src":"5704:42:23"},{"nodeType":"YulAssignment","src":"5763:24:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5777:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"5785:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5773:3:23"},"nodeType":"YulFunctionCall","src":"5773:14:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5763:6:23"}]},{"nodeType":"YulAssignment","src":"5804:31:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5821:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5832:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5817:3:23"},"nodeType":"YulFunctionCall","src":"5817:18:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5804:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5652:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5655:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5649:2:23"},"nodeType":"YulFunctionCall","src":"5649:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5664:21:23","statements":[{"nodeType":"YulAssignment","src":"5666:17:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5675:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"5678:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5671:3:23"},"nodeType":"YulFunctionCall","src":"5671:12:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5666:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"5645:3:23","statements":[]},"src":"5641:208:23"},{"body":{"nodeType":"YulBlock","src":"5885:156:23","statements":[{"nodeType":"YulVariableDeclaration","src":"5903:43:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5930:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5935:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5926:3:23"},"nodeType":"YulFunctionCall","src":"5926:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5920:5:23"},"nodeType":"YulFunctionCall","src":"5920:26:23"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"5907:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5970:6:23"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"5997:9:23"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6012:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"6020:4:23","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6008:3:23"},"nodeType":"YulFunctionCall","src":"6008:17:23"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5978:18:23"},"nodeType":"YulFunctionCall","src":"5978:48:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5963:6:23"},"nodeType":"YulFunctionCall","src":"5963:64:23"},"nodeType":"YulExpressionStatement","src":"5963:64:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"5868:7:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"5877:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5865:2:23"},"nodeType":"YulFunctionCall","src":"5865:19:23"},"nodeType":"YulIf","src":"5862:179:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6061:4:23"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6075:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"6083:1:23","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6071:3:23"},"nodeType":"YulFunctionCall","src":"6071:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"6087:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6067:3:23"},"nodeType":"YulFunctionCall","src":"6067:22:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6054:6:23"},"nodeType":"YulFunctionCall","src":"6054:36:23"},"nodeType":"YulExpressionStatement","src":"6054:36:23"}]},"nodeType":"YulCase","src":"5482:618:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5487:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6117:222:23","statements":[{"nodeType":"YulVariableDeclaration","src":"6131:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"6144:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6135:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"6168:67:23","statements":[{"nodeType":"YulAssignment","src":"6186:35:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6205:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6210:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6201:3:23"},"nodeType":"YulFunctionCall","src":"6201:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6195:5:23"},"nodeType":"YulFunctionCall","src":"6195:26:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6186:5:23"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6161:6:23"},"nodeType":"YulIf","src":"6158:77:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6255:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6314:5:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"6321:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6261:52:23"},"nodeType":"YulFunctionCall","src":"6261:67:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6248:6:23"},"nodeType":"YulFunctionCall","src":"6248:81:23"},"nodeType":"YulExpressionStatement","src":"6248:81:23"}]},"nodeType":"YulCase","src":"6109:230:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5462:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"5470:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5459:2:23"},"nodeType":"YulFunctionCall","src":"5459:14:23"},"nodeType":"YulSwitch","src":"5452:887:23"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5031:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"5037:3:23","type":""}],"src":"4950:1395:23"},{"body":{"nodeType":"YulBlock","src":"6396:81:23","statements":[{"nodeType":"YulAssignment","src":"6406:65:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6421:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"6428:42:23","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6417:3:23"},"nodeType":"YulFunctionCall","src":"6417:54:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6406:7:23"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6378:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6388:7:23","type":""}],"src":"6351:126:23"},{"body":{"nodeType":"YulBlock","src":"6528:51:23","statements":[{"nodeType":"YulAssignment","src":"6538:35:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6567:5:23"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6549:17:23"},"nodeType":"YulFunctionCall","src":"6549:24:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6538:7:23"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6510:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6520:7:23","type":""}],"src":"6483:96:23"},{"body":{"nodeType":"YulBlock","src":"6650:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6667:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6690:5:23"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6672:17:23"},"nodeType":"YulFunctionCall","src":"6672:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6660:6:23"},"nodeType":"YulFunctionCall","src":"6660:37:23"},"nodeType":"YulExpressionStatement","src":"6660:37:23"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6638:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6645:3:23","type":""}],"src":"6585:118:23"},{"body":{"nodeType":"YulBlock","src":"6807:124:23","statements":[{"nodeType":"YulAssignment","src":"6817:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6829:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6840:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6825:3:23"},"nodeType":"YulFunctionCall","src":"6825:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6817:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6897:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6910:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6921:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6906:3:23"},"nodeType":"YulFunctionCall","src":"6906:17:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6853:43:23"},"nodeType":"YulFunctionCall","src":"6853:71:23"},"nodeType":"YulExpressionStatement","src":"6853:71:23"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6779:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6791:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6802:4:23","type":""}],"src":"6709:222:23"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":23,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x560B CODESIZE SUB DUP1 PUSH3 0x560B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x27D JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E65757472616C4865617274204E465420283230323529000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E48525432350000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0xB5 SWAP2 SWAP1 PUSH3 0x534 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC7 SWAP2 SWAP1 PUSH3 0x534 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x136 SWAP2 SWAP1 PUSH3 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x150 DUP2 PUSH3 0x177 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xB DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xF DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x11 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xE DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x67D JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x257 DUP2 PUSH3 0x242 JUMP JUMPDEST DUP2 EQ PUSH3 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x277 DUP2 PUSH3 0x24C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x297 JUMPI PUSH3 0x296 PUSH3 0x23D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2A7 DUP6 DUP3 DUP7 ADD PUSH3 0x266 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x2BA DUP6 DUP3 DUP7 ADD PUSH3 0x266 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x346 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x35C JUMPI PUSH3 0x35B PUSH3 0x2FE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x3C6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x387 JUMP JUMPDEST PUSH3 0x3D2 DUP7 DUP4 PUSH3 0x387 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x415 PUSH3 0x40F PUSH3 0x409 DUP5 PUSH3 0x242 JUMP JUMPDEST PUSH3 0x3EA JUMP JUMPDEST PUSH3 0x242 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x431 DUP4 PUSH3 0x3F4 JUMP JUMPDEST PUSH3 0x449 PUSH3 0x440 DUP3 PUSH3 0x41C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x394 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x460 PUSH3 0x451 JUMP JUMPDEST PUSH3 0x46D DUP2 DUP5 DUP5 PUSH3 0x426 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x495 JUMPI PUSH3 0x489 PUSH1 0x0 DUP3 PUSH3 0x456 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x473 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4E4 JUMPI PUSH3 0x4AE DUP2 PUSH3 0x362 JUMP JUMPDEST PUSH3 0x4B9 DUP5 PUSH3 0x377 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4C9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x4E1 PUSH3 0x4D8 DUP6 PUSH3 0x377 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x472 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x509 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x4E9 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x524 DUP4 DUP4 PUSH3 0x4F6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x53F DUP3 PUSH3 0x2C4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x55B JUMPI PUSH3 0x55A PUSH3 0x2CF JUMP JUMPDEST JUMPDEST PUSH3 0x567 DUP3 SLOAD PUSH3 0x32D JUMP JUMPDEST PUSH3 0x574 DUP3 DUP3 DUP6 PUSH3 0x499 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5AC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x597 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5A3 DUP6 DUP3 PUSH3 0x516 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x613 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x5BC DUP7 PUSH3 0x362 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5E6 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5BF JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x606 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x602 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4F6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x648 DUP3 PUSH3 0x61B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x65A DUP2 PUSH3 0x63B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x677 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x64F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4F7E DUP1 PUSH3 0x68D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x225 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xE8A3D485 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x841 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x86C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8A9 JUMPI DUP1 PUSH4 0xF74D5480 EQ PUSH2 0x8D2 JUMPI DUP1 PUSH4 0xF78F647C EQ PUSH2 0x8FD JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x74A JUMPI DUP1 PUSH4 0xBCEA0FEC EQ PUSH2 0x773 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x79C JUMPI DUP1 PUSH4 0xDD46EDB8 EQ PUSH2 0x7D9 JUMPI DUP1 PUSH4 0xE00DD161 EQ PUSH2 0x816 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x938E3D7B GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x677 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x6CB JUMPI DUP1 PUSH4 0xA4F4F8AF EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0xB7EC2086 EQ PUSH2 0x71F JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0x8462151C EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x64E JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x2A55205A GT PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x51CFF8D9 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x56A1C701 EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x592 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x2A55205A EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x2DB11544 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x49D JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x1A02B69E EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x26A74D8E EQ PUSH2 0x3B2 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x4634D8D EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x379B JUMP JUMPDEST PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x37E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x38A0 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x94E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x39C8 JUMP JUMPDEST PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x3A1F JUMP JUMPDEST PUSH2 0x9FC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x3A89 JUMP JUMPDEST PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x37E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x3AB6 JUMP JUMPDEST PUSH2 0xA3F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH2 0xB41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x404 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x3B09 JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x412 SWAP3 SWAP2 SWAP1 PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x435 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x39C8 JUMP JUMPDEST PUSH2 0xC77 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x3A1F JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x3AB6 JUMP JUMPDEST PUSH2 0xEE6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x39C8 JUMP JUMPDEST PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x501 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FC SWAP2 SWAP1 PUSH2 0x3BB0 JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x525 SWAP2 SWAP1 PUSH2 0x3D12 JUMP JUMPDEST PUSH2 0x114A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x553 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x3A89 JUMP JUMPDEST PUSH2 0x119C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x39C8 JUMP JUMPDEST PUSH2 0x122B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0x3A89 JUMP JUMPDEST PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E4 PUSH2 0x12F7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x3A89 JUMP JUMPDEST PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x3E19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x638 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x645 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x675 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x670 SWAP2 SWAP1 PUSH2 0x39C8 JUMP JUMPDEST PUSH2 0x13E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x69E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x699 SWAP2 SWAP1 PUSH2 0x3D12 JUMP JUMPDEST PUSH2 0x13F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B5 PUSH2 0x1447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6ED SWAP2 SWAP1 PUSH2 0x3E67 JUMP JUMPDEST PUSH2 0x14D9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x709 PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x734 PUSH2 0x14F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x771 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76C SWAP2 SWAP1 PUSH2 0x3F48 JUMP JUMPDEST PUSH2 0x14FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x795 SWAP2 SWAP1 PUSH2 0x402B JUMP JUMPDEST PUSH2 0x1520 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x39C8 JUMP JUMPDEST PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x800 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0x39C8 JUMP JUMPDEST PUSH2 0x1A96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80D SWAP2 SWAP1 PUSH2 0x4094 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82B PUSH2 0x1AB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x838 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x856 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x893 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x88E SWAP2 SWAP1 PUSH2 0x40AF JUMP JUMPDEST PUSH2 0x1B4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8A0 SWAP2 SWAP1 PUSH2 0x37E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0x3A89 JUMP JUMPDEST PUSH2 0x1BE2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E7 PUSH2 0x1C68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x924 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x91F SWAP2 SWAP1 PUSH2 0x411B JUMP JUMPDEST PUSH2 0x1C8E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x931 DUP3 PUSH2 0x1E7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x940 PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x94A DUP3 DUP3 PUSH2 0x1F7E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x95D SWAP1 PUSH2 0x418A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x989 SWAP1 PUSH2 0x418A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9EB DUP3 PUSH2 0x2120 JUMP JUMPDEST POP PUSH2 0x9F5 DUP3 PUSH2 0x21A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA0E DUP3 DUP3 PUSH2 0xA09 PUSH2 0x21E5 JUMP JUMPDEST PUSH2 0x21ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAB1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAC5 DUP4 DUP4 PUSH2 0xAC0 PUSH2 0x21E5 JUMP JUMPDEST PUSH2 0x21FF JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB3B JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB32 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC28 JUMPI PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xC32 PUSH2 0x2272 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH2 0xC5A SWAP2 SWAP1 PUSH2 0x4221 JUMP JUMPDEST PUSH2 0xC64 SWAP2 SWAP1 PUSH2 0x4292 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SWAP6 POP SWAP6 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC7F PUSH2 0x227C JUMP JUMPDEST PUSH1 0x1 DUP2 EQ PUSH2 0xCC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB9 SWAP1 PUSH2 0x430F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SLOAD DUP2 PUSH1 0x10 SLOAD PUSH2 0xCD3 SWAP2 SWAP1 PUSH2 0x432F JUMP JUMPDEST GT ISZERO PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP1 PUSH2 0x43AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x11 SLOAD PUSH2 0xD22 SWAP2 SWAP1 PUSH2 0x4221 JUMP JUMPDEST CALLVALUE EQ PUSH2 0xD63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5A SWAP1 PUSH2 0x441B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE18 JUMPI PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD83 SWAP1 PUSH2 0x443B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0xD93 CALLER DUP3 PUSH2 0x22C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x748A2986091C2034D6E93B6F44F771A79F0E1D6ACD8A60C68C17D4E1E2FEAED2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP1 DUP1 PUSH2 0xE10 SWAP1 PUSH2 0x443B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD66 JUMP JUMPDEST POP DUP1 PUSH1 0x10 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE2B SWAP2 SWAP1 PUSH2 0x432F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE3A PUSH2 0x22E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE48 DUP4 PUSH2 0x123D JUMP JUMPDEST DUP3 LT PUSH2 0xE8D JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE84 SWAP3 SWAP2 SWAP1 PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF01 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x14FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF10 PUSH2 0xA12 JUMP JUMPDEST DUP3 LT PUSH2 0xF56 JUMPI PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4D SWAP3 SWAP2 SWAP1 PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF6A JUMPI PUSH2 0xF69 PUSH2 0x4483 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF84 PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xF8C PUSH2 0x227C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF2 SWAP1 PUSH2 0x44FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1043 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103A SWAP1 PUSH2 0x456A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1069 SWAP1 PUSH2 0x45BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10A6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10AB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x10EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E6 SWAP1 PUSH2 0x461C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1135 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x1147 PUSH2 0x22E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1152 PUSH2 0x1EF7 JUMP JUMPDEST DUP1 PUSH1 0x15 SWAP1 DUP2 PUSH2 0x1161 SWAP2 SWAP1 PUSH2 0x47E8 JUMP JUMPDEST POP PUSH32 0xF9C7803E94E0D3C02900D8A90893A6D5E90DD04D32A4CFE825520F82BF9F32F6 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1191 SWAP2 SWAP1 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x11A4 PUSH2 0x1EF7 JUMP JUMPDEST DUP1 PUSH1 0x12 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x65B80EFDB610BE9FC8E0CC1AB30C9F0B98B538C1392F298EC6FF69AE0768B74E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1236 DUP3 PUSH2 0x2120 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12B0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A7 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12FF PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x1309 PUSH1 0x0 PUSH2 0x22EA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1318 DUP4 PUSH2 0x123D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1336 JUMPI PUSH2 0x1335 PUSH2 0x3BE7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1364 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13AE JUMPI PUSH2 0x137C DUP6 DUP3 PUSH2 0xE3D JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x138F JUMPI PUSH2 0x138E PUSH2 0x4483 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x13A6 SWAP1 PUSH2 0x443B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x136A JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13EB PUSH2 0x1EF7 JUMP JUMPDEST DUP1 PUSH1 0x11 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x13FD PUSH2 0x1EF7 JUMP JUMPDEST DUP1 PUSH1 0x16 SWAP1 DUP2 PUSH2 0x140C SWAP2 SWAP1 PUSH2 0x47E8 JUMP JUMPDEST POP PUSH32 0xAF497693A87DB12CA89131A31EDBB3DB4BB5702DFB284E8AE7427D185F09112D DUP2 PUSH1 0x40 MLOAD PUSH2 0x143C SWAP2 SWAP1 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1456 SWAP1 PUSH2 0x418A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1482 SWAP1 PUSH2 0x418A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14EB PUSH2 0x14E4 PUSH2 0x21E5 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x23B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1506 DUP5 DUP5 DUP5 PUSH2 0xA3F JUMP JUMPDEST PUSH2 0x151A PUSH2 0x1511 PUSH2 0x21E5 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x251F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1528 PUSH2 0x227C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x12 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B0 SWAP1 PUSH2 0x4906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x13 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1646 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163D SWAP1 PUSH2 0x4972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ADDRESS CHAINID CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x165D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1680 DUP3 PUSH2 0x26D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16D2 DUP3 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x2706 JUMP JUMPDEST SWAP1 POP PUSH1 0x12 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1764 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175B SWAP1 PUSH2 0x4A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x13 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x17D1 SWAP1 PUSH2 0x443B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x17E1 CALLER DUP3 PUSH2 0x22C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE9A10C23EA49D40011E019F115185F0BC29740208A504D35F951DCA74BA37EAC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH2 0x185E PUSH2 0x22E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x186D DUP3 PUSH2 0x2120 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1878 PUSH2 0x2732 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E65757472616C2E6A736F6E0000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x1 DUP3 PUSH1 0xFF AND SUB PUSH2 0x1921 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x616E67656C2E6A736F6E00000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0xFF AND SUB PUSH2 0x1965 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646576696C2E6A736F6E00000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x199F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1985 SWAP2 SWAP1 PUSH2 0x4AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP5 POP POP POP POP POP PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0x19B0 SWAP2 SWAP1 PUSH2 0x4AF7 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x19C1 JUMPI PUSH2 0x19C0 PUSH2 0x4483 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL SWAP1 POP PUSH32 0x2F00000000000000000000000000000000000000000000000000000000000000 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x1A67 JUMPI DUP5 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A4C SWAP3 SWAP2 SWAP1 PUSH2 0x4B2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP6 POP POP POP POP POP POP PUSH2 0x1A91 JUMP JUMPDEST DUP5 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A7A SWAP3 SWAP2 SWAP1 PUSH2 0x4B9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP6 POP POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x16 DUP1 SLOAD PUSH2 0x1ACB SWAP1 PUSH2 0x418A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1AF7 SWAP1 PUSH2 0x418A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B44 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B27 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BEA PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C5C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C53 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C65 DUP2 PUSH2 0x22EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x12 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1C96 PUSH2 0x227C JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xFF AND EQ DUP1 PUSH2 0x1CAB JUMPI POP PUSH1 0x2 DUP2 PUSH1 0xFF AND EQ JUMPDEST PUSH2 0x1CEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE1 SWAP1 PUSH2 0x4C16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D0A DUP4 PUSH2 0x122B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D57 SWAP1 PUSH2 0x4C82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x1DC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DBD SWAP1 PUSH2 0x4D14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DCF DUP3 PUSH2 0x27C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1DE4 SWAP1 PUSH2 0x443B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x1DF4 CALLER DUP3 PUSH2 0x22C2 JUMP JUMPDEST DUP2 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x598067BC48EF38B7785EDA047C375B2D45F2B845404B58DCDFCCF40E7F38D869 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1E68 SWAP2 SWAP1 PUSH2 0x4094 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0x1E79 PUSH2 0x22E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1EF0 JUMPI POP PUSH2 0x1EEF DUP3 PUSH2 0x284A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EFF PUSH2 0x21E5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F1D PUSH2 0x13B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F7C JUMPI PUSH2 0x1F40 PUSH2 0x21E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F73 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F88 PUSH2 0x2272 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1FED JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x6F483D0900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FE4 SWAP3 SWAP2 SWAP1 PUSH2 0x4D65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x205F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xB6D9900A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2056 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x212C DUP4 PUSH2 0x28C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x219F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2196 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x21FA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2901 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x220D DUP6 DUP6 DUP6 PUSH2 0x2AC6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2267 JUMPI PUSH1 0x14 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD SUB PUSH2 0x22B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x22DC DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2BE3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2421 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2418 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2512 SWAP2 SWAP1 PUSH2 0x37E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x26C9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x257E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4DE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x25BA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25B7 SWAP2 SWAP1 PUSH2 0x4E44 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x263E JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x25EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2636 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262D SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x26C7 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26BE SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2716 DUP7 DUP7 PUSH2 0x2C07 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2726 DUP3 DUP3 PUSH2 0x2C63 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x15 DUP1 SLOAD PUSH2 0x2741 SWAP1 PUSH2 0x418A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x276D SWAP1 PUSH2 0x418A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27BA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x278F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27BA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x279D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27D3 PUSH1 0x0 DUP4 PUSH1 0x0 PUSH2 0x21FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2846 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x283D SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x28BD JUMPI POP PUSH2 0x28BC DUP3 PUSH2 0x2DC7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x293A JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2A6E JUMPI PUSH1 0x0 PUSH2 0x294A DUP5 PUSH2 0x2120 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x29B5 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x29C8 JUMPI POP PUSH2 0x29C6 DUP2 DUP5 PUSH2 0x1B4E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2A0A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A01 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2A6C JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2AD4 DUP6 DUP6 DUP6 PUSH2 0x2EA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B18 JUMPI PUSH2 0x2B13 DUP5 PUSH2 0x30C3 JUMP JUMPDEST PUSH2 0x2B57 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B56 JUMPI PUSH2 0x2B55 DUP2 DUP6 PUSH2 0x310C JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B99 JUMPI PUSH2 0x2B94 DUP5 PUSH2 0x31F7 JUMP JUMPDEST PUSH2 0x2BD8 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2BD7 JUMPI PUSH2 0x2BD6 DUP6 DUP6 PUSH2 0x32C8 JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2BED DUP4 DUP4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x2C02 PUSH2 0x2BF8 PUSH2 0x21E5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x251F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x2C4C JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x2C3E DUP9 DUP3 DUP6 DUP6 PUSH2 0x344C JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x2C5C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C77 JUMPI PUSH2 0x2C76 PUSH2 0x4E71 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C8A JUMPI PUSH2 0x2C89 PUSH2 0x4E71 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x2DC3 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2CA4 JUMPI PUSH2 0x2CA3 PUSH2 0x4E71 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2CB7 JUMPI PUSH2 0x2CB6 PUSH2 0x4E71 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2CEE JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2D02 JUMPI PUSH2 0x2D01 PUSH2 0x4E71 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2D15 JUMPI PUSH2 0x2D14 PUSH2 0x4E71 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2D5A JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D51 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2D6D JUMPI PUSH2 0x2D6C PUSH2 0x4E71 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2D80 JUMPI PUSH2 0x2D7F PUSH2 0x4E71 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2DC2 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DB9 SWAP2 SWAP1 PUSH2 0x4EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2E92 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x2EA2 JUMPI POP PUSH2 0x2EA1 DUP3 PUSH2 0x3540 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EB5 DUP5 PUSH2 0x28C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EF7 JUMPI PUSH2 0x2EF6 DUP2 DUP5 DUP7 PUSH2 0x35AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F88 JUMPI PUSH2 0x2F39 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x2901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x300B JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3117 DUP4 PUSH2 0x123D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP3 EQ PUSH2 0x31C3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x320B SWAP2 SWAP1 PUSH2 0x4AF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x323B JUMPI PUSH2 0x323A PUSH2 0x4483 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x325D JUMPI PUSH2 0x325C PUSH2 0x4483 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x32AC JUMPI PUSH2 0x32AB PUSH2 0x4ED4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x32D5 DUP5 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x32DF SWAP2 SWAP1 PUSH2 0x4AF7 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x33C5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33BC SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33D3 DUP4 DUP4 PUSH1 0x0 PUSH2 0x21FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3447 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x343E SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x348C JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x3536 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x34B1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4F03 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3527 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x3536 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35B5 DUP4 DUP4 DUP4 PUSH2 0x366E JUMP JUMPDEST PUSH2 0x3669 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x362A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3621 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3660 SWAP3 SWAP2 SWAP1 PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3726 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x36E7 JUMPI POP PUSH2 0x36E6 DUP5 DUP5 PUSH2 0x1B4E JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x3725 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x370D DUP4 PUSH2 0x21A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3778 DUP2 PUSH2 0x3743 JUMP JUMPDEST DUP2 EQ PUSH2 0x3783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3795 DUP2 PUSH2 0x376F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37B1 JUMPI PUSH2 0x37B0 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37BF DUP5 DUP3 DUP6 ADD PUSH2 0x3786 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37DD DUP2 PUSH2 0x37C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x37F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3829 DUP3 PUSH2 0x37FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3839 DUP2 PUSH2 0x381E JUMP JUMPDEST DUP2 EQ PUSH2 0x3844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3856 DUP2 PUSH2 0x3830 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x387D DUP2 PUSH2 0x385C JUMP JUMPDEST DUP2 EQ PUSH2 0x3888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x389A DUP2 PUSH2 0x3874 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x38B7 JUMPI PUSH2 0x38B6 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38C5 DUP6 DUP3 DUP7 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x38D6 DUP6 DUP3 DUP7 ADD PUSH2 0x388B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x391A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38FF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3942 DUP3 PUSH2 0x38E0 JUMP JUMPDEST PUSH2 0x394C DUP2 DUP6 PUSH2 0x38EB JUMP JUMPDEST SWAP4 POP PUSH2 0x395C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x38FC JUMP JUMPDEST PUSH2 0x3965 DUP2 PUSH2 0x3926 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x398A DUP2 DUP5 PUSH2 0x3937 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39A5 DUP2 PUSH2 0x3992 JUMP JUMPDEST DUP2 EQ PUSH2 0x39B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x39C2 DUP2 PUSH2 0x399C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39DE JUMPI PUSH2 0x39DD PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39EC DUP5 DUP3 DUP6 ADD PUSH2 0x39B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x39FE DUP2 PUSH2 0x381E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A19 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x39F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A36 JUMPI PUSH2 0x3A35 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A44 DUP6 DUP3 DUP7 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3A55 DUP6 DUP3 DUP7 ADD PUSH2 0x39B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A68 DUP2 PUSH2 0x3992 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A83 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A9F JUMPI PUSH2 0x3A9E PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AAD DUP5 DUP3 DUP6 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3ACF JUMPI PUSH2 0x3ACE PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3ADD DUP7 DUP3 DUP8 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3AEE DUP7 DUP3 DUP8 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3AFF DUP7 DUP3 DUP8 ADD PUSH2 0x39B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B20 JUMPI PUSH2 0x3B1F PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B2E DUP6 DUP3 DUP7 ADD PUSH2 0x39B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3B3F DUP6 DUP3 DUP7 ADD PUSH2 0x39B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B5E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x39F5 JUMP JUMPDEST PUSH2 0x3B6B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B7D DUP3 PUSH2 0x37FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B8D DUP2 PUSH2 0x3B72 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3BAA DUP2 PUSH2 0x3B84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BC6 JUMPI PUSH2 0x3BC5 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BD4 DUP5 DUP3 DUP6 ADD PUSH2 0x3B9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3C1F DUP3 PUSH2 0x3926 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3C3E JUMPI PUSH2 0x3C3D PUSH2 0x3BE7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C51 PUSH2 0x372F JUMP JUMPDEST SWAP1 POP PUSH2 0x3C5D DUP3 DUP3 PUSH2 0x3C16 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3C7D JUMPI PUSH2 0x3C7C PUSH2 0x3BE7 JUMP JUMPDEST JUMPDEST PUSH2 0x3C86 DUP3 PUSH2 0x3926 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CB5 PUSH2 0x3CB0 DUP5 PUSH2 0x3C62 JUMP JUMPDEST PUSH2 0x3C47 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3CD1 JUMPI PUSH2 0x3CD0 PUSH2 0x3BE2 JUMP JUMPDEST JUMPDEST PUSH2 0x3CDC DUP5 DUP3 DUP6 PUSH2 0x3C93 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3CF9 JUMPI PUSH2 0x3CF8 PUSH2 0x3BDD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3D09 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3CA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D28 JUMPI PUSH2 0x3D27 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D46 JUMPI PUSH2 0x3D45 PUSH2 0x373E JUMP JUMPDEST JUMPDEST PUSH2 0x3D52 DUP5 DUP3 DUP6 ADD PUSH2 0x3CE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D90 DUP2 PUSH2 0x3992 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DA2 DUP4 DUP4 PUSH2 0x3D87 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DC6 DUP3 PUSH2 0x3D5B JUMP JUMPDEST PUSH2 0x3DD0 DUP2 DUP6 PUSH2 0x3D66 JUMP JUMPDEST SWAP4 POP PUSH2 0x3DDB DUP4 PUSH2 0x3D77 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3E0C JUMPI DUP2 MLOAD PUSH2 0x3DF3 DUP9 DUP3 PUSH2 0x3D96 JUMP JUMPDEST SWAP8 POP PUSH2 0x3DFE DUP4 PUSH2 0x3DAE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3DDF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E33 DUP2 DUP5 PUSH2 0x3DBB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E44 DUP2 PUSH2 0x37C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x3E4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3E61 DUP2 PUSH2 0x3E3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E7E JUMPI PUSH2 0x3E7D PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E8C DUP6 DUP3 DUP7 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3E9D DUP6 DUP3 DUP7 ADD PUSH2 0x3E52 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3EC2 JUMPI PUSH2 0x3EC1 PUSH2 0x3BE7 JUMP JUMPDEST JUMPDEST PUSH2 0x3ECB DUP3 PUSH2 0x3926 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EEB PUSH2 0x3EE6 DUP5 PUSH2 0x3EA7 JUMP JUMPDEST PUSH2 0x3C47 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3F07 JUMPI PUSH2 0x3F06 PUSH2 0x3BE2 JUMP JUMPDEST JUMPDEST PUSH2 0x3F12 DUP5 DUP3 DUP6 PUSH2 0x3C93 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F2F JUMPI PUSH2 0x3F2E PUSH2 0x3BDD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F3F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3ED8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F62 JUMPI PUSH2 0x3F61 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F70 DUP8 DUP3 DUP9 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3F81 DUP8 DUP3 DUP9 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3F92 DUP8 DUP3 DUP9 ADD PUSH2 0x39B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FB3 JUMPI PUSH2 0x3FB2 PUSH2 0x373E JUMP JUMPDEST JUMPDEST PUSH2 0x3FBF DUP8 DUP3 DUP9 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3FEB JUMPI PUSH2 0x3FEA PUSH2 0x3BDD JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4008 JUMPI PUSH2 0x4007 PUSH2 0x3FCB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4024 JUMPI PUSH2 0x4023 PUSH2 0x3FD0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4042 JUMPI PUSH2 0x4041 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4060 JUMPI PUSH2 0x405F PUSH2 0x373E JUMP JUMPDEST JUMPDEST PUSH2 0x406C DUP6 DUP3 DUP7 ADD PUSH2 0x3FD5 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x408E DUP2 PUSH2 0x4078 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4085 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x40C6 JUMPI PUSH2 0x40C5 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x40D4 DUP6 DUP3 DUP7 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x40E5 DUP6 DUP3 DUP7 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x40F8 DUP2 PUSH2 0x4078 JUMP JUMPDEST DUP2 EQ PUSH2 0x4103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4115 DUP2 PUSH2 0x40EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4132 JUMPI PUSH2 0x4131 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4140 DUP6 DUP3 DUP7 ADD PUSH2 0x39B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4151 DUP6 DUP3 DUP7 ADD PUSH2 0x4106 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x41A2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x41B5 JUMPI PUSH2 0x41B4 PUSH2 0x415B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x41D0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x39F5 JUMP JUMPDEST PUSH2 0x41DD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3A5F JUMP JUMPDEST PUSH2 0x41EA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x39F5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x422C DUP3 PUSH2 0x3992 JUMP JUMPDEST SWAP2 POP PUSH2 0x4237 DUP4 PUSH2 0x3992 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4245 DUP2 PUSH2 0x3992 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x425C JUMPI PUSH2 0x425B PUSH2 0x41F2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x429D DUP3 PUSH2 0x3992 JUMP JUMPDEST SWAP2 POP PUSH2 0x42A8 DUP4 PUSH2 0x3992 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x42B8 JUMPI PUSH2 0x42B7 PUSH2 0x4263 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C79203120746F6B656E2070657220747800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F9 PUSH1 0x13 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x4304 DUP3 PUSH2 0x42C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4328 DUP2 PUSH2 0x42EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433A DUP3 PUSH2 0x3992 JUMP JUMPDEST SWAP2 POP PUSH2 0x4345 DUP4 PUSH2 0x3992 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x435D JUMPI PUSH2 0x435C PUSH2 0x41F2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7075626C696320736F6C64206F75740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4399 PUSH1 0xF DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x43A4 DUP3 PUSH2 0x4363 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x43C8 DUP2 PUSH2 0x438C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E636F7272656374207061796D656E74000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4405 PUSH1 0x11 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x4410 DUP3 PUSH2 0x43CF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4434 DUP2 PUSH2 0x43F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4446 DUP3 PUSH2 0x3992 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4478 JUMPI PUSH2 0x4477 PUSH2 0x41F2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x696E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44E8 PUSH1 0xF DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x44F3 DUP3 PUSH2 0x44B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4517 DUP2 PUSH2 0x44DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F2066756E6473000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4554 PUSH1 0x8 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x455F DUP3 PUSH2 0x451E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4583 DUP2 PUSH2 0x4547 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45A5 PUSH1 0x0 DUP4 PUSH2 0x458A JUMP JUMPDEST SWAP2 POP PUSH2 0x45B0 DUP3 PUSH2 0x4595 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45C6 DUP3 PUSH2 0x4598 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7769746864726177206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4606 PUSH1 0xF DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x4611 DUP3 PUSH2 0x45D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4635 DUP2 PUSH2 0x45F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x469E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4661 JUMP JUMPDEST PUSH2 0x46A8 DUP7 DUP4 PUSH2 0x4661 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46E5 PUSH2 0x46E0 PUSH2 0x46DB DUP5 PUSH2 0x3992 JUMP JUMPDEST PUSH2 0x46C0 JUMP JUMPDEST PUSH2 0x3992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x46FF DUP4 PUSH2 0x46CA JUMP JUMPDEST PUSH2 0x4713 PUSH2 0x470B DUP3 PUSH2 0x46EC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x466E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4728 PUSH2 0x471B JUMP JUMPDEST PUSH2 0x4733 DUP2 DUP5 DUP5 PUSH2 0x46F6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4757 JUMPI PUSH2 0x474C PUSH1 0x0 DUP3 PUSH2 0x4720 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4739 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x479C JUMPI PUSH2 0x476D DUP2 PUSH2 0x463C JUMP JUMPDEST PUSH2 0x4776 DUP5 PUSH2 0x4651 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4785 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4799 PUSH2 0x4791 DUP6 PUSH2 0x4651 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4738 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47BF PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x47A1 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47D8 DUP4 DUP4 PUSH2 0x47AE JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x47F1 DUP3 PUSH2 0x38E0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x480A JUMPI PUSH2 0x4809 PUSH2 0x3BE7 JUMP JUMPDEST JUMPDEST PUSH2 0x4814 DUP3 SLOAD PUSH2 0x418A JUMP JUMPDEST PUSH2 0x481F DUP3 DUP3 DUP6 PUSH2 0x475B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4852 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4840 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x484A DUP6 DUP3 PUSH2 0x47CC JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x48B2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4860 DUP7 PUSH2 0x463C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4888 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4863 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x48A5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x48A1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x47AE JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x74727573746564207369676E6572206E6F742073657400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48F0 PUSH1 0x16 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x48FB DUP3 PUSH2 0x48BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x491F DUP2 PUSH2 0x48E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C726561647920636C61696D6564206F6E2D636861696E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495C PUSH1 0x18 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x4967 DUP3 PUSH2 0x4926 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x498B DUP2 PUSH2 0x494F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49AA DUP3 PUSH2 0x4992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49BC DUP3 PUSH2 0x499F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49D4 PUSH2 0x49CF DUP3 PUSH2 0x381E JUMP JUMPDEST PUSH2 0x49B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49F5 PUSH2 0x49F0 DUP3 PUSH2 0x3992 JUMP JUMPDEST PUSH2 0x49DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A07 DUP3 DUP7 PUSH2 0x49C3 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4A17 DUP3 DUP6 PUSH2 0x49E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x4A27 DUP3 DUP5 PUSH2 0x49C3 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A6E PUSH1 0x11 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x4A79 DUP3 PUSH2 0x4A38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A9D DUP2 PUSH2 0x4A61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4ABA DUP3 PUSH2 0x38E0 JUMP JUMPDEST PUSH2 0x4AC4 DUP2 DUP6 PUSH2 0x4AA4 JUMP JUMPDEST SWAP4 POP PUSH2 0x4AD4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x38FC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AEC DUP3 DUP5 PUSH2 0x4AAF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B02 DUP3 PUSH2 0x3992 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B0D DUP4 PUSH2 0x3992 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4B25 JUMPI PUSH2 0x4B24 PUSH2 0x41F2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B37 DUP3 DUP6 PUSH2 0x4AAF JUMP JUMPDEST SWAP2 POP PUSH2 0x4B43 DUP3 DUP5 PUSH2 0x4AAF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x2F00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B85 PUSH1 0x1 DUP4 PUSH2 0x4AA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B90 DUP3 PUSH2 0x4B4F JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BA7 DUP3 DUP6 PUSH2 0x4AAF JUMP JUMPDEST SWAP2 POP PUSH2 0x4BB2 DUP3 PUSH2 0x4B78 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BBE DUP3 DUP5 PUSH2 0x4AAF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C69642076617269616E740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C00 PUSH1 0xF DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x4C0B DUP3 PUSH2 0x4BCA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C2F DUP2 PUSH2 0x4BF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6C PUSH1 0x9 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x4C77 DUP3 PUSH2 0x4C36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C9B DUP2 PUSH2 0x4C5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6F6E6C79206E65757472616C20746F6B656E732063616E206265207472616E73 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x666F726D65640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CFE PUSH1 0x26 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x4D09 DUP3 PUSH2 0x4CA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D2D DUP2 PUSH2 0x4CF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D4F PUSH2 0x4D4A PUSH2 0x4D45 DUP5 PUSH2 0x385C JUMP JUMPDEST PUSH2 0x46C0 JUMP JUMPDEST PUSH2 0x3992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D5F DUP2 PUSH2 0x4D34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4D7A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4D56 JUMP JUMPDEST PUSH2 0x4D87 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DB5 DUP3 PUSH2 0x4D8E JUMP JUMPDEST PUSH2 0x4DBF DUP2 DUP6 PUSH2 0x4D99 JUMP JUMPDEST SWAP4 POP PUSH2 0x4DCF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x38FC JUMP JUMPDEST PUSH2 0x4DD8 DUP2 PUSH2 0x3926 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4DF8 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x39F5 JUMP JUMPDEST PUSH2 0x4E05 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x39F5 JUMP JUMPDEST PUSH2 0x4E12 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3A5F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4E24 DUP2 DUP5 PUSH2 0x4DAA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4E3E DUP2 PUSH2 0x376F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E5A JUMPI PUSH2 0x4E59 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4E68 DUP5 DUP3 DUP6 ADD PUSH2 0x4E2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EB3 DUP2 PUSH2 0x4EA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4ECE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4EAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4F18 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4EAA JUMP JUMPDEST PUSH2 0x4F25 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4085 JUMP JUMPDEST PUSH2 0x4F32 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4EAA JUMP JUMPDEST PUSH2 0x4F3F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4EAA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0x2F SWAP10 0xC9 CALLDATALOAD 0xDD 0xF9 EXTCODESIZE 0xEE DUP11 0xBE PUSH5 0xA6E30632AB SHL EXTCODECOPY 0xAC PUSH8 0xDD72B76A5A6C0F8A 0xAB MSTORE8 0xC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"505:7634:22:-:0;;;1909:271;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2040:10;1380:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:5;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1857:1:13;2061:7;:21;;;;2080:16:22::2;2062:15;:34;;;;2117:9;2106:8;:20;;;;2148:1;2136:9;:13;;;;1909:271:::0;;505:7634;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:23:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:507::-;773:6;781;830:2;818:9;809:7;805:23;801:32;798:119;;;836:79;;:::i;:::-;798:119;956:1;981:64;1037:7;1028:6;1017:9;1013:22;981:64;:::i;:::-;971:74;;927:128;1094:2;1120:64;1176:7;1167:6;1156:9;1152:22;1120:64;:::i;:::-;1110:74;;1065:129;694:507;;;;;:::o;1207:99::-;1259:6;1293:5;1287:12;1277:22;;1207:99;;;:::o;1312:180::-;1360:77;1357:1;1350:88;1457:4;1454:1;1447:15;1481:4;1478:1;1471:15;1498:180;1546:77;1543:1;1536:88;1643:4;1640:1;1633:15;1667:4;1664:1;1657:15;1684:320;1728:6;1765:1;1759:4;1755:12;1745:22;;1812:1;1806:4;1802:12;1833:18;1823:81;;1889:4;1881:6;1877:17;1867:27;;1823:81;1951:2;1943:6;1940:14;1920:18;1917:38;1914:84;;1970:18;;:::i;:::-;1914:84;1735:269;1684:320;;;:::o;2010:141::-;2059:4;2082:3;2074:11;;2105:3;2102:1;2095:14;2139:4;2136:1;2126:18;2118:26;;2010:141;;;:::o;2157:93::-;2194:6;2241:2;2236;2229:5;2225:14;2221:23;2211:33;;2157:93;;;:::o;2256:107::-;2300:8;2350:5;2344:4;2340:16;2319:37;;2256:107;;;;:::o;2369:393::-;2438:6;2488:1;2476:10;2472:18;2511:97;2541:66;2530:9;2511:97;:::i;:::-;2629:39;2659:8;2648:9;2629:39;:::i;:::-;2617:51;;2701:4;2697:9;2690:5;2686:21;2677:30;;2750:4;2740:8;2736:19;2729:5;2726:30;2716:40;;2445:317;;2369:393;;;;;:::o;2768:60::-;2796:3;2817:5;2810:12;;2768:60;;;:::o;2834:142::-;2884:9;2917:53;2935:34;2944:24;2962:5;2944:24;:::i;:::-;2935:34;:::i;:::-;2917:53;:::i;:::-;2904:66;;2834:142;;;:::o;2982:75::-;3025:3;3046:5;3039:12;;2982:75;;;:::o;3063:269::-;3173:39;3204:7;3173:39;:::i;:::-;3234:91;3283:41;3307:16;3283:41;:::i;:::-;3275:6;3268:4;3262:11;3234:91;:::i;:::-;3228:4;3221:105;3139:193;3063:269;;;:::o;3338:73::-;3383:3;3338:73;:::o;3417:189::-;3494:32;;:::i;:::-;3535:65;3593:6;3585;3579:4;3535:65;:::i;:::-;3470:136;3417:189;;:::o;3612:186::-;3672:120;3689:3;3682:5;3679:14;3672:120;;;3743:39;3780:1;3773:5;3743:39;:::i;:::-;3716:1;3709:5;3705:13;3696:22;;3672:120;;;3612:186;;:::o;3804:543::-;3905:2;3900:3;3897:11;3894:446;;;3939:38;3971:5;3939:38;:::i;:::-;4023:29;4041:10;4023:29;:::i;:::-;4013:8;4009:44;4206:2;4194:10;4191:18;4188:49;;;4227:8;4212:23;;4188:49;4250:80;4306:22;4324:3;4306:22;:::i;:::-;4296:8;4292:37;4279:11;4250:80;:::i;:::-;3909:431;;3894:446;3804:543;;;:::o;4353:117::-;4407:8;4457:5;4451:4;4447:16;4426:37;;4353:117;;;;:::o;4476:169::-;4520:6;4553:51;4601:1;4597:6;4589:5;4586:1;4582:13;4553:51;:::i;:::-;4549:56;4634:4;4628;4624:15;4614:25;;4527:118;4476:169;;;;:::o;4650:295::-;4726:4;4872:29;4897:3;4891:4;4872:29;:::i;:::-;4864:37;;4934:3;4931:1;4927:11;4921:4;4918:21;4910:29;;4650:295;;;;:::o;4950:1395::-;5067:37;5100:3;5067:37;:::i;:::-;5169:18;5161:6;5158:30;5155:56;;;5191:18;;:::i;:::-;5155:56;5235:38;5267:4;5261:11;5235:38;:::i;:::-;5320:67;5380:6;5372;5366:4;5320:67;:::i;:::-;5414:1;5438:4;5425:17;;5470:2;5462:6;5459:14;5487:1;5482:618;;;;6144:1;6161:6;6158:77;;;6210:9;6205:3;6201:19;6195:26;6186:35;;6158:77;6261:67;6321:6;6314:5;6261:67;:::i;:::-;6255:4;6248:81;6117:222;5452:887;;5482:618;5534:4;5530:9;5522:6;5518:22;5568:37;5600:4;5568:37;:::i;:::-;5627:1;5641:208;5655:7;5652:1;5649:14;5641:208;;;5734:9;5729:3;5725:19;5719:26;5711:6;5704:42;5785:1;5777:6;5773:14;5763:24;;5832:2;5821:9;5817:18;5804:31;;5678:4;5675:1;5671:12;5666:17;;5641:208;;;5877:6;5868:7;5865:19;5862:179;;;5935:9;5930:3;5926:19;5920:26;5978:48;6020:4;6012:6;6008:17;5997:9;5978:48;:::i;:::-;5970:6;5963:64;5885:156;5862:179;6087:1;6083;6075:6;6071:14;6067:22;6061:4;6054:36;5489:611;;;5452:887;;5042:1303;;;4950:1395;;:::o;6351:126::-;6388:7;6428:42;6421:5;6417:54;6406:65;;6351:126;;;:::o;6483:96::-;6520:7;6549:24;6567:5;6549:24;:::i;:::-;6538:35;;6483:96;;;:::o;6585:118::-;6672:24;6690:5;6672:24;:::i;:::-;6667:3;6660:37;6585:118;;:::o;6709:222::-;6802:4;6840:2;6829:9;6825:18;6817:26;;6853:71;6921:1;6910:9;6906:17;6897:6;6853:71;:::i;:::-;6709:222;;;;:::o;505:7634:22:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_addTokenToAllTokensEnumeration_1646":{"entryPoint":12483,"id":1646,"parameterSlots":1,"returnSlots":0},"@_addTokenToOwnerEnumeration_1626":{"entryPoint":13000,"id":1626,"parameterSlots":2,"returnSlots":0},"@_approve_1128":{"entryPoint":8685,"id":1128,"parameterSlots":3,"returnSlots":0},"@_approve_1194":{"entryPoint":10497,"id":1194,"parameterSlots":4,"returnSlots":0},"@_baseURI_7962":{"entryPoint":10034,"id":7962,"parameterSlots":0,"returnSlots":1},"@_burn_1002":{"entryPoint":10180,"id":1002,"parameterSlots":1,"returnSlots":0},"@_checkAuthorized_768":{"entryPoint":13738,"id":768,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":7927,"id":84,"parameterSlots":0,"returnSlots":0},"@_feeDenominator_2067":{"entryPoint":8818,"id":2067,"parameterSlots":0,"returnSlots":1},"@_getApproved_695":{"entryPoint":8616,"id":695,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_731":{"entryPoint":13934,"id":731,"parameterSlots":3,"returnSlots":1},"@_mint_924":{"entryPoint":13139,"id":924,"parameterSlots":2,"returnSlots":0},"@_msgSender_2198":{"entryPoint":8677,"id":2198,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_2325":{"entryPoint":8928,"id":2325,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_2317":{"entryPoint":8828,"id":2317,"parameterSlots":0,"returnSlots":0},"@_ownerOf_682":{"entryPoint":10436,"id":682,"parameterSlots":1,"returnSlots":1},"@_removeTokenFromAllTokensEnumeration_1756":{"entryPoint":12791,"id":1756,"parameterSlots":1,"returnSlots":0},"@_removeTokenFromOwnerEnumeration_1708":{"entryPoint":12556,"id":1708,"parameterSlots":2,"returnSlots":0},"@_requireOwned_1260":{"entryPoint":8480,"id":1260,"parameterSlots":1,"returnSlots":1},"@_safeMint_939":{"entryPoint":8898,"id":939,"parameterSlots":2,"returnSlots":0},"@_safeMint_969":{"entryPoint":11235,"id":969,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_1231":{"entryPoint":9136,"id":1231,"parameterSlots":3,"returnSlots":0},"@_setDefaultRoyalty_2113":{"entryPoint":8062,"id":2113,"parameterSlots":2,"returnSlots":0},"@_throwError_4086":{"entryPoint":11363,"id":4086,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":8938,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_1595":{"entryPoint":10950,"id":1595,"parameterSlots":3,"returnSlots":1},"@_update_8440":{"entryPoint":8703,"id":8440,"parameterSlots":3,"returnSlots":1},"@_update_874":{"entryPoint":11945,"id":874,"parameterSlots":3,"returnSlots":1},"@approve_525":{"entryPoint":2556,"id":525,"parameterSlots":2,"returnSlots":0},"@balanceOf_433":{"entryPoint":4669,"id":433,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_1918":{"entryPoint":9503,"id":1918,"parameterSlots":5,"returnSlots":0},"@claimForSubscriber_8245":{"entryPoint":5408,"id":8245,"parameterSlots":2,"returnSlots":0},"@contractURI_7953":{"entryPoint":6844,"id":7953,"parameterSlots":0,"returnSlots":1},"@currentId_7809":{"entryPoint":6838,"id":7809,"parameterSlots":0,"returnSlots":0},"@getApproved_542":{"entryPoint":2528,"id":542,"parameterSlots":1,"returnSlots":1},"@hasClaimedOnChain_7821":{"entryPoint":2591,"id":7821,"parameterSlots":0,"returnSlots":0},"@isApprovedForAll_575":{"entryPoint":6990,"id":575,"parameterSlots":2,"returnSlots":1},"@maxPublicSupply_7811":{"entryPoint":2881,"id":7811,"parameterSlots":0,"returnSlots":0},"@name_455":{"entryPoint":2382,"id":455,"parameterSlots":0,"returnSlots":1},"@ownerOf_446":{"entryPoint":4651,"id":446,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":5049,"id":67,"parameterSlots":0,"returnSlots":1},"@priceWei_7815":{"entryPoint":5365,"id":7815,"parameterSlots":0,"returnSlots":0},"@publicMint_8138":{"entryPoint":3191,"id":8138,"parameterSlots":1,"returnSlots":0},"@publicMinted_7813":{"entryPoint":5359,"id":7813,"parameterSlots":0,"returnSlots":0},"@recover_3843":{"entryPoint":9990,"id":3843,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":4855,"id":98,"parameterSlots":0,"returnSlots":0},"@royaltyInfo_2058":{"entryPoint":2887,"id":2058,"parameterSlots":2,"returnSlots":2},"@safeTransferFrom_639":{"entryPoint":3814,"id":639,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_669":{"entryPoint":5371,"id":669,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_558":{"entryPoint":5337,"id":558,"parameterSlots":2,"returnSlots":0},"@setBaseURI_7927":{"entryPoint":4426,"id":7927,"parameterSlots":1,"returnSlots":0},"@setContractURI_7945":{"entryPoint":5109,"id":7945,"parameterSlots":1,"returnSlots":0},"@setDefaultRoyalty_8383":{"entryPoint":2360,"id":8383,"parameterSlots":2,"returnSlots":0},"@setPrice_8150":{"entryPoint":5091,"id":8150,"parameterSlots":1,"returnSlots":0},"@setTrustedSigner_7911":{"entryPoint":4508,"id":7911,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1460":{"entryPoint":10314,"id":1460,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1996":{"entryPoint":7805,"id":1996,"parameterSlots":1,"returnSlots":1},"@supportsInterface_405":{"entryPoint":11719,"id":405,"parameterSlots":1,"returnSlots":1},"@supportsInterface_4196":{"entryPoint":13632,"id":4196,"parameterSlots":1,"returnSlots":1},"@supportsInterface_8457":{"entryPoint":2342,"id":8457,"parameterSlots":1,"returnSlots":1},"@symbol_464":{"entryPoint":5191,"id":464,"parameterSlots":0,"returnSlots":1},"@toEthSignedMessageHash_4102":{"entryPoint":9936,"id":4102,"parameterSlots":1,"returnSlots":1},"@tokenByIndex_1526":{"entryPoint":3846,"id":1526,"parameterSlots":1,"returnSlots":1},"@tokenOfOwnerByIndex_1489":{"entryPoint":3645,"id":1489,"parameterSlots":2,"returnSlots":1},"@tokenURI_8065":{"entryPoint":6242,"id":8065,"parameterSlots":1,"returnSlots":1},"@tokenVariant_7825":{"entryPoint":6806,"id":7825,"parameterSlots":0,"returnSlots":0},"@tokensOfOwner_7807":{"entryPoint":4875,"id":7807,"parameterSlots":1,"returnSlots":1},"@totalSupply_1499":{"entryPoint":2578,"id":1499,"parameterSlots":0,"returnSlots":1},"@transferFrom_621":{"entryPoint":2623,"id":621,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":7138,"id":126,"parameterSlots":1,"returnSlots":0},"@transform_8314":{"entryPoint":7310,"id":8314,"parameterSlots":2,"returnSlots":0},"@trustedSigner_7817":{"entryPoint":7272,"id":7817,"parameterSlots":0,"returnSlots":0},"@tryRecover_3813":{"entryPoint":11271,"id":3813,"parameterSlots":2,"returnSlots":3},"@tryRecover_4001":{"entryPoint":13388,"id":4001,"parameterSlots":4,"returnSlots":3},"@withdraw_8368":{"entryPoint":3964,"id":8368,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":16088,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":15522,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":14407,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":15259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":15954,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":14214,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":20015,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":16341,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":16154,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":15588,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":14771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":16646,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96":{"entryPoint":14475,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":14985,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":15280,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":16559,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":15030,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":16200,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":15975,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":14879,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint96":{"entryPoint":14496,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":14235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":20036,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":16427,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":15634,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":14792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":15113,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint8":{"entryPoint":16667,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":15766,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":14837,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":18883,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":15803,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":14292,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":20138,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":19882,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":14647,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19119,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877_to_t_string_memory_ptr_fromStack":{"entryPoint":17400,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack":{"entryPoint":19041,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662_to_t_string_memory_ptr_fromStack":{"entryPoint":19443,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920_to_t_string_memory_ptr_fromStack":{"entryPoint":17735,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225_to_t_string_memory_ptr_fromStack":{"entryPoint":17627,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":17816,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1_to_t_string_memory_ptr_fromStack":{"entryPoint":18659,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3_to_t_string_memory_ptr_fromStack":{"entryPoint":18767,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277_to_t_string_memory_ptr_fromStack":{"entryPoint":19697,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ec495453922ae9023946eb51c1406acdd92df8b193b46cc506c2448af3a80c69_to_t_string_memory_ptr_fromStack":{"entryPoint":17132,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d_to_t_string_memory_ptr_fromStack":{"entryPoint":17292,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack":{"entryPoint":19551,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe_to_t_string_memory_ptr_fromStack":{"entryPoint":17913,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19320,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":15751,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":14943,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":18916,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":16517,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":19798,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":18939,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":19168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":19243,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":19355,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":17851,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":14852,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":19939,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":15177,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":16827,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":15897,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":14307,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":20153,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":20227,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14704,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17435,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19076,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19478,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17770,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17662,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18694,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18802,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19732,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ec495453922ae9023946eb51c1406acdd92df8b193b46cc506c2448af3a80c69__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17167,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17327,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19586,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17948,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":14958,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":16532,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":19813,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":15431,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":14127,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":16039,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":15458,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15735,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":17980,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15707,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":19854,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":14560,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15790,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":15718,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":19865,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":17802,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":14571,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19108,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":17199,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":17042,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":16929,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":19191,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":18267,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":14366,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":15218,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":14280,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":20128,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":14147,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":14334,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":14738,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":16504,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":14428,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":18232,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":18122,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":19764,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":18408,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":15507,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":14588,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":18001,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":16778,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":18380,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":15382,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":18112,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":17467,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":18865,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":18847,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":18906,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":18350,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":16882,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":16995,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":20081,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":16731,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":20180,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":17539,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":15335,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":18156,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":16331,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":15325,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":16336,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":15330,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":14142,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":14137,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":14630,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":18834,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":18017,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":18337,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":18208,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877":{"entryPoint":17359,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a":{"entryPoint":19000,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662":{"entryPoint":19402,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920":{"entryPoint":17694,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225":{"entryPoint":17586,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":17813,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1":{"entryPoint":18618,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3":{"entryPoint":18726,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277":{"entryPoint":19618,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ec495453922ae9023946eb51c1406acdd92df8b193b46cc506c2448af3a80c69":{"entryPoint":17091,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d":{"entryPoint":17251,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e":{"entryPoint":19510,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe":{"entryPoint":17872,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527":{"entryPoint":19279,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":18030,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":18166,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":14384,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":15236,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":15931,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":14191,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":14748,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":16623,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":14452,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":18203,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:46500:23","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:23","statements":[{"nodeType":"YulAssignment","src":"57:19:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:23","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:23"},"nodeType":"YulFunctionCall","src":"67:9:23"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:23"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:23","type":""}],"src":"7:75:23"},{"body":{"nodeType":"YulBlock","src":"177:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:23"},"nodeType":"YulFunctionCall","src":"187:12:23"},"nodeType":"YulExpressionStatement","src":"187:12:23"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:23"},{"body":{"nodeType":"YulBlock","src":"300:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:23"},"nodeType":"YulFunctionCall","src":"310:12:23"},"nodeType":"YulExpressionStatement","src":"310:12:23"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:23"},{"body":{"nodeType":"YulBlock","src":"378:105:23","statements":[{"nodeType":"YulAssignment","src":"388:89:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:23","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:23"},"nodeType":"YulFunctionCall","src":"399:78:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:23"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:23","type":""}],"src":"334:149:23"},{"body":{"nodeType":"YulBlock","src":"531:78:23","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:23"},"nodeType":"YulFunctionCall","src":"589:12:23"},"nodeType":"YulExpressionStatement","src":"589:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:23"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:23"},"nodeType":"YulFunctionCall","src":"561:23:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:23"},"nodeType":"YulFunctionCall","src":"551:34:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:23"},"nodeType":"YulFunctionCall","src":"544:42:23"},"nodeType":"YulIf","src":"541:62:23"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:23","type":""}],"src":"489:120:23"},{"body":{"nodeType":"YulBlock","src":"666:86:23","statements":[{"nodeType":"YulAssignment","src":"676:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:23"},"nodeType":"YulFunctionCall","src":"685:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:23"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:23"},"nodeType":"YulFunctionCall","src":"714:32:23"},"nodeType":"YulExpressionStatement","src":"714:32:23"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:23","type":""}],"src":"615:137:23"},{"body":{"nodeType":"YulBlock","src":"823:262:23","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:23"},"nodeType":"YulFunctionCall","src":"871:79:23"},"nodeType":"YulExpressionStatement","src":"871:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:23"},"nodeType":"YulFunctionCall","src":"840:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:23"},"nodeType":"YulFunctionCall","src":"836:32:23"},"nodeType":"YulIf","src":"833:119:23"},{"nodeType":"YulBlock","src":"962:116:23","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:23","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:23"},"nodeType":"YulFunctionCall","src":"1036:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:23"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:23"},"nodeType":"YulFunctionCall","src":"1016:52:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:23"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:23","type":""}],"src":"758:327:23"},{"body":{"nodeType":"YulBlock","src":"1133:48:23","statements":[{"nodeType":"YulAssignment","src":"1143:32:23","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:23"},"nodeType":"YulFunctionCall","src":"1161:13:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:23"},"nodeType":"YulFunctionCall","src":"1154:21:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:23"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:23","type":""}],"src":"1091:90:23"},{"body":{"nodeType":"YulBlock","src":"1246:50:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:23"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:23"},"nodeType":"YulFunctionCall","src":"1268:21:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:23"},"nodeType":"YulFunctionCall","src":"1256:34:23"},"nodeType":"YulExpressionStatement","src":"1256:34:23"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:23","type":""}],"src":"1187:109:23"},{"body":{"nodeType":"YulBlock","src":"1394:118:23","statements":[{"nodeType":"YulAssignment","src":"1404:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:23"},"nodeType":"YulFunctionCall","src":"1412:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:23"},"nodeType":"YulFunctionCall","src":"1487:17:23"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:23"},"nodeType":"YulFunctionCall","src":"1440:65:23"},"nodeType":"YulExpressionStatement","src":"1440:65:23"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:23","type":""}],"src":"1302:210:23"},{"body":{"nodeType":"YulBlock","src":"1563:81:23","statements":[{"nodeType":"YulAssignment","src":"1573:65:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1588:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"1595:42:23","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1584:3:23"},"nodeType":"YulFunctionCall","src":"1584:54:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:23"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:23","type":""}],"src":"1518:126:23"},{"body":{"nodeType":"YulBlock","src":"1695:51:23","statements":[{"nodeType":"YulAssignment","src":"1705:35:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1734:5:23"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1716:17:23"},"nodeType":"YulFunctionCall","src":"1716:24:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1705:7:23"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1677:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1687:7:23","type":""}],"src":"1650:96:23"},{"body":{"nodeType":"YulBlock","src":"1795:79:23","statements":[{"body":{"nodeType":"YulBlock","src":"1852:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1861:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1864:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1854:6:23"},"nodeType":"YulFunctionCall","src":"1854:12:23"},"nodeType":"YulExpressionStatement","src":"1854:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1818:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1843:5:23"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1825:17:23"},"nodeType":"YulFunctionCall","src":"1825:24:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1815:2:23"},"nodeType":"YulFunctionCall","src":"1815:35:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1808:6:23"},"nodeType":"YulFunctionCall","src":"1808:43:23"},"nodeType":"YulIf","src":"1805:63:23"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1788:5:23","type":""}],"src":"1752:122:23"},{"body":{"nodeType":"YulBlock","src":"1932:87:23","statements":[{"nodeType":"YulAssignment","src":"1942:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1964:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1951:12:23"},"nodeType":"YulFunctionCall","src":"1951:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1942:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2007:5:23"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1980:26:23"},"nodeType":"YulFunctionCall","src":"1980:33:23"},"nodeType":"YulExpressionStatement","src":"1980:33:23"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1910:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"1918:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1926:5:23","type":""}],"src":"1880:139:23"},{"body":{"nodeType":"YulBlock","src":"2069:65:23","statements":[{"nodeType":"YulAssignment","src":"2079:49:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2094:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"2101:26:23","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2090:3:23"},"nodeType":"YulFunctionCall","src":"2090:38:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2079:7:23"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2051:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2061:7:23","type":""}],"src":"2025:109:23"},{"body":{"nodeType":"YulBlock","src":"2182:78:23","statements":[{"body":{"nodeType":"YulBlock","src":"2238:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2247:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2250:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2240:6:23"},"nodeType":"YulFunctionCall","src":"2240:12:23"},"nodeType":"YulExpressionStatement","src":"2240:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2205:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2229:5:23"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"2212:16:23"},"nodeType":"YulFunctionCall","src":"2212:23:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2202:2:23"},"nodeType":"YulFunctionCall","src":"2202:34:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2195:6:23"},"nodeType":"YulFunctionCall","src":"2195:42:23"},"nodeType":"YulIf","src":"2192:62:23"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2175:5:23","type":""}],"src":"2140:120:23"},{"body":{"nodeType":"YulBlock","src":"2317:86:23","statements":[{"nodeType":"YulAssignment","src":"2327:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2349:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2336:12:23"},"nodeType":"YulFunctionCall","src":"2336:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2327:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2391:5:23"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"2365:25:23"},"nodeType":"YulFunctionCall","src":"2365:32:23"},"nodeType":"YulExpressionStatement","src":"2365:32:23"}]},"name":"abi_decode_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2295:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"2303:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2311:5:23","type":""}],"src":"2266:137:23"},{"body":{"nodeType":"YulBlock","src":"2491:390:23","statements":[{"body":{"nodeType":"YulBlock","src":"2537:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2539:77:23"},"nodeType":"YulFunctionCall","src":"2539:79:23"},"nodeType":"YulExpressionStatement","src":"2539:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2512:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"2521:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2508:3:23"},"nodeType":"YulFunctionCall","src":"2508:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"2533:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2504:3:23"},"nodeType":"YulFunctionCall","src":"2504:32:23"},"nodeType":"YulIf","src":"2501:119:23"},{"nodeType":"YulBlock","src":"2630:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2645:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2659:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2649:6:23","type":""}]},{"nodeType":"YulAssignment","src":"2674:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2709:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"2720:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2705:3:23"},"nodeType":"YulFunctionCall","src":"2705:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2729:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2684:20:23"},"nodeType":"YulFunctionCall","src":"2684:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2674:6:23"}]}]},{"nodeType":"YulBlock","src":"2757:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2772:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"2786:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2776:6:23","type":""}]},{"nodeType":"YulAssignment","src":"2802:62:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2836:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"2847:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2832:3:23"},"nodeType":"YulFunctionCall","src":"2832:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2856:7:23"}],"functionName":{"name":"abi_decode_t_uint96","nodeType":"YulIdentifier","src":"2812:19:23"},"nodeType":"YulFunctionCall","src":"2812:52:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2802:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2453:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2464:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2476:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2484:6:23","type":""}],"src":"2409:472:23"},{"body":{"nodeType":"YulBlock","src":"2946:40:23","statements":[{"nodeType":"YulAssignment","src":"2957:22:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2973:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2967:5:23"},"nodeType":"YulFunctionCall","src":"2967:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2957:6:23"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2929:5:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2939:6:23","type":""}],"src":"2887:99:23"},{"body":{"nodeType":"YulBlock","src":"3088:73:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3105:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"3110:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3098:6:23"},"nodeType":"YulFunctionCall","src":"3098:19:23"},"nodeType":"YulExpressionStatement","src":"3098:19:23"},{"nodeType":"YulAssignment","src":"3126:29:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3145:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"3150:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3141:3:23"},"nodeType":"YulFunctionCall","src":"3141:14:23"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3126:11:23"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3060:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"3065:6:23","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3076:11:23","type":""}],"src":"2992:169:23"},{"body":{"nodeType":"YulBlock","src":"3229:184:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3239:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"3248:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3243:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"3308:63:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3333:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"3338:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3329:3:23"},"nodeType":"YulFunctionCall","src":"3329:11:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3352:3:23"},{"name":"i","nodeType":"YulIdentifier","src":"3357:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3348:3:23"},"nodeType":"YulFunctionCall","src":"3348:11:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3342:5:23"},"nodeType":"YulFunctionCall","src":"3342:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3322:6:23"},"nodeType":"YulFunctionCall","src":"3322:39:23"},"nodeType":"YulExpressionStatement","src":"3322:39:23"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3269:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"3272:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3266:2:23"},"nodeType":"YulFunctionCall","src":"3266:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3280:19:23","statements":[{"nodeType":"YulAssignment","src":"3282:15:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3291:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"3294:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3287:3:23"},"nodeType":"YulFunctionCall","src":"3287:10:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3282:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"3262:3:23","statements":[]},"src":"3258:113:23"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3391:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"3396:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3387:3:23"},"nodeType":"YulFunctionCall","src":"3387:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"3405:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3380:6:23"},"nodeType":"YulFunctionCall","src":"3380:27:23"},"nodeType":"YulExpressionStatement","src":"3380:27:23"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3211:3:23","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3216:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"3221:6:23","type":""}],"src":"3167:246:23"},{"body":{"nodeType":"YulBlock","src":"3467:54:23","statements":[{"nodeType":"YulAssignment","src":"3477:38:23","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3495:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"3502:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3491:3:23"},"nodeType":"YulFunctionCall","src":"3491:14:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3511:2:23","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3507:3:23"},"nodeType":"YulFunctionCall","src":"3507:7:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3487:3:23"},"nodeType":"YulFunctionCall","src":"3487:28:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3477:6:23"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3450:5:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3460:6:23","type":""}],"src":"3419:102:23"},{"body":{"nodeType":"YulBlock","src":"3619:285:23","statements":[{"nodeType":"YulVariableDeclaration","src":"3629:53:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3676:5:23"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3643:32:23"},"nodeType":"YulFunctionCall","src":"3643:39:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3633:6:23","type":""}]},{"nodeType":"YulAssignment","src":"3691:78:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3757:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"3762:6:23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3698:58:23"},"nodeType":"YulFunctionCall","src":"3698:71:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3691:3:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3817:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"3824:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3813:3:23"},"nodeType":"YulFunctionCall","src":"3813:16:23"},{"name":"pos","nodeType":"YulIdentifier","src":"3831:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"3836:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3778:34:23"},"nodeType":"YulFunctionCall","src":"3778:65:23"},"nodeType":"YulExpressionStatement","src":"3778:65:23"},{"nodeType":"YulAssignment","src":"3852:46:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3863:3:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3890:6:23"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3868:21:23"},"nodeType":"YulFunctionCall","src":"3868:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3859:3:23"},"nodeType":"YulFunctionCall","src":"3859:39:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3852:3:23"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3600:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3607:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3615:3:23","type":""}],"src":"3527:377:23"},{"body":{"nodeType":"YulBlock","src":"4028:195:23","statements":[{"nodeType":"YulAssignment","src":"4038:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4050:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4061:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4046:3:23"},"nodeType":"YulFunctionCall","src":"4046:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4038:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4085:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"4096:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4081:3:23"},"nodeType":"YulFunctionCall","src":"4081:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4104:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4100:3:23"},"nodeType":"YulFunctionCall","src":"4100:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4074:6:23"},"nodeType":"YulFunctionCall","src":"4074:47:23"},"nodeType":"YulExpressionStatement","src":"4074:47:23"},{"nodeType":"YulAssignment","src":"4130:86:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4202:6:23"},{"name":"tail","nodeType":"YulIdentifier","src":"4211:4:23"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4138:63:23"},"nodeType":"YulFunctionCall","src":"4138:78:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4130:4:23"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4000:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4012:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4023:4:23","type":""}],"src":"3910:313:23"},{"body":{"nodeType":"YulBlock","src":"4274:32:23","statements":[{"nodeType":"YulAssignment","src":"4284:16:23","value":{"name":"value","nodeType":"YulIdentifier","src":"4295:5:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4284:7:23"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4256:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4266:7:23","type":""}],"src":"4229:77:23"},{"body":{"nodeType":"YulBlock","src":"4355:79:23","statements":[{"body":{"nodeType":"YulBlock","src":"4412:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4421:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4424:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4414:6:23"},"nodeType":"YulFunctionCall","src":"4414:12:23"},"nodeType":"YulExpressionStatement","src":"4414:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4378:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4403:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4385:17:23"},"nodeType":"YulFunctionCall","src":"4385:24:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4375:2:23"},"nodeType":"YulFunctionCall","src":"4375:35:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4368:6:23"},"nodeType":"YulFunctionCall","src":"4368:43:23"},"nodeType":"YulIf","src":"4365:63:23"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4348:5:23","type":""}],"src":"4312:122:23"},{"body":{"nodeType":"YulBlock","src":"4492:87:23","statements":[{"nodeType":"YulAssignment","src":"4502:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4524:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4511:12:23"},"nodeType":"YulFunctionCall","src":"4511:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4502:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4567:5:23"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"4540:26:23"},"nodeType":"YulFunctionCall","src":"4540:33:23"},"nodeType":"YulExpressionStatement","src":"4540:33:23"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4470:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"4478:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4486:5:23","type":""}],"src":"4440:139:23"},{"body":{"nodeType":"YulBlock","src":"4651:263:23","statements":[{"body":{"nodeType":"YulBlock","src":"4697:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4699:77:23"},"nodeType":"YulFunctionCall","src":"4699:79:23"},"nodeType":"YulExpressionStatement","src":"4699:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4672:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"4681:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4668:3:23"},"nodeType":"YulFunctionCall","src":"4668:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"4693:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4664:3:23"},"nodeType":"YulFunctionCall","src":"4664:32:23"},"nodeType":"YulIf","src":"4661:119:23"},{"nodeType":"YulBlock","src":"4790:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"4805:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"4819:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4809:6:23","type":""}]},{"nodeType":"YulAssignment","src":"4834:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4869:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"4880:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4865:3:23"},"nodeType":"YulFunctionCall","src":"4865:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4889:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4844:20:23"},"nodeType":"YulFunctionCall","src":"4844:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4834:6:23"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4621:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4632:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4644:6:23","type":""}],"src":"4585:329:23"},{"body":{"nodeType":"YulBlock","src":"4985:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5002:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5025:5:23"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5007:17:23"},"nodeType":"YulFunctionCall","src":"5007:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4995:6:23"},"nodeType":"YulFunctionCall","src":"4995:37:23"},"nodeType":"YulExpressionStatement","src":"4995:37:23"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4973:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4980:3:23","type":""}],"src":"4920:118:23"},{"body":{"nodeType":"YulBlock","src":"5142:124:23","statements":[{"nodeType":"YulAssignment","src":"5152:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5164:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5175:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5160:3:23"},"nodeType":"YulFunctionCall","src":"5160:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5152:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5232:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5245:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"5256:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5241:3:23"},"nodeType":"YulFunctionCall","src":"5241:17:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5188:43:23"},"nodeType":"YulFunctionCall","src":"5188:71:23"},"nodeType":"YulExpressionStatement","src":"5188:71:23"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5114:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5126:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5137:4:23","type":""}],"src":"5044:222:23"},{"body":{"nodeType":"YulBlock","src":"5355:391:23","statements":[{"body":{"nodeType":"YulBlock","src":"5401:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5403:77:23"},"nodeType":"YulFunctionCall","src":"5403:79:23"},"nodeType":"YulExpressionStatement","src":"5403:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5376:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"5385:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5372:3:23"},"nodeType":"YulFunctionCall","src":"5372:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"5397:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5368:3:23"},"nodeType":"YulFunctionCall","src":"5368:32:23"},"nodeType":"YulIf","src":"5365:119:23"},{"nodeType":"YulBlock","src":"5494:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"5509:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5523:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5513:6:23","type":""}]},{"nodeType":"YulAssignment","src":"5538:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5573:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"5584:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5569:3:23"},"nodeType":"YulFunctionCall","src":"5569:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5593:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5548:20:23"},"nodeType":"YulFunctionCall","src":"5548:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5538:6:23"}]}]},{"nodeType":"YulBlock","src":"5621:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"5636:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"5650:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5640:6:23","type":""}]},{"nodeType":"YulAssignment","src":"5666:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5701:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"5712:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5697:3:23"},"nodeType":"YulFunctionCall","src":"5697:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5721:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5676:20:23"},"nodeType":"YulFunctionCall","src":"5676:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5666:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5317:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5328:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5340:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5348:6:23","type":""}],"src":"5272:474:23"},{"body":{"nodeType":"YulBlock","src":"5817:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5834:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5857:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5839:17:23"},"nodeType":"YulFunctionCall","src":"5839:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5827:6:23"},"nodeType":"YulFunctionCall","src":"5827:37:23"},"nodeType":"YulExpressionStatement","src":"5827:37:23"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5805:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5812:3:23","type":""}],"src":"5752:118:23"},{"body":{"nodeType":"YulBlock","src":"5974:124:23","statements":[{"nodeType":"YulAssignment","src":"5984:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5996:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6007:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5992:3:23"},"nodeType":"YulFunctionCall","src":"5992:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5984:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6064:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6077:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"6088:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6073:3:23"},"nodeType":"YulFunctionCall","src":"6073:17:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6020:43:23"},"nodeType":"YulFunctionCall","src":"6020:71:23"},"nodeType":"YulExpressionStatement","src":"6020:71:23"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5946:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5958:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5969:4:23","type":""}],"src":"5876:222:23"},{"body":{"nodeType":"YulBlock","src":"6170:263:23","statements":[{"body":{"nodeType":"YulBlock","src":"6216:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6218:77:23"},"nodeType":"YulFunctionCall","src":"6218:79:23"},"nodeType":"YulExpressionStatement","src":"6218:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6191:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"6200:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6187:3:23"},"nodeType":"YulFunctionCall","src":"6187:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"6212:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6183:3:23"},"nodeType":"YulFunctionCall","src":"6183:32:23"},"nodeType":"YulIf","src":"6180:119:23"},{"nodeType":"YulBlock","src":"6309:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"6324:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"6338:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6328:6:23","type":""}]},{"nodeType":"YulAssignment","src":"6353:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6388:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"6399:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6384:3:23"},"nodeType":"YulFunctionCall","src":"6384:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6408:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6363:20:23"},"nodeType":"YulFunctionCall","src":"6363:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6353:6:23"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6140:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6151:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6163:6:23","type":""}],"src":"6104:329:23"},{"body":{"nodeType":"YulBlock","src":"6539:519:23","statements":[{"body":{"nodeType":"YulBlock","src":"6585:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6587:77:23"},"nodeType":"YulFunctionCall","src":"6587:79:23"},"nodeType":"YulExpressionStatement","src":"6587:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6560:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"6569:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6556:3:23"},"nodeType":"YulFunctionCall","src":"6556:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"6581:2:23","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6552:3:23"},"nodeType":"YulFunctionCall","src":"6552:32:23"},"nodeType":"YulIf","src":"6549:119:23"},{"nodeType":"YulBlock","src":"6678:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"6693:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"6707:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6697:6:23","type":""}]},{"nodeType":"YulAssignment","src":"6722:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6757:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"6768:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6753:3:23"},"nodeType":"YulFunctionCall","src":"6753:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6777:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6732:20:23"},"nodeType":"YulFunctionCall","src":"6732:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6722:6:23"}]}]},{"nodeType":"YulBlock","src":"6805:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"6820:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"6834:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6824:6:23","type":""}]},{"nodeType":"YulAssignment","src":"6850:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6885:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"6896:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6881:3:23"},"nodeType":"YulFunctionCall","src":"6881:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6905:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6860:20:23"},"nodeType":"YulFunctionCall","src":"6860:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6850:6:23"}]}]},{"nodeType":"YulBlock","src":"6933:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"6948:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"6962:2:23","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6952:6:23","type":""}]},{"nodeType":"YulAssignment","src":"6978:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7013:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"7024:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7009:3:23"},"nodeType":"YulFunctionCall","src":"7009:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7033:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6988:20:23"},"nodeType":"YulFunctionCall","src":"6988:53:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6978:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6493:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6504:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6516:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6524:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6532:6:23","type":""}],"src":"6439:619:23"},{"body":{"nodeType":"YulBlock","src":"7147:391:23","statements":[{"body":{"nodeType":"YulBlock","src":"7193:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7195:77:23"},"nodeType":"YulFunctionCall","src":"7195:79:23"},"nodeType":"YulExpressionStatement","src":"7195:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7168:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"7177:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7164:3:23"},"nodeType":"YulFunctionCall","src":"7164:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"7189:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7160:3:23"},"nodeType":"YulFunctionCall","src":"7160:32:23"},"nodeType":"YulIf","src":"7157:119:23"},{"nodeType":"YulBlock","src":"7286:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"7301:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"7315:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7305:6:23","type":""}]},{"nodeType":"YulAssignment","src":"7330:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7365:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"7376:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7361:3:23"},"nodeType":"YulFunctionCall","src":"7361:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7385:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7340:20:23"},"nodeType":"YulFunctionCall","src":"7340:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7330:6:23"}]}]},{"nodeType":"YulBlock","src":"7413:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"7428:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"7442:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7432:6:23","type":""}]},{"nodeType":"YulAssignment","src":"7458:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7493:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"7504:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7489:3:23"},"nodeType":"YulFunctionCall","src":"7489:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7513:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7468:20:23"},"nodeType":"YulFunctionCall","src":"7468:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7458:6:23"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7109:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7120:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7132:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7140:6:23","type":""}],"src":"7064:474:23"},{"body":{"nodeType":"YulBlock","src":"7670:206:23","statements":[{"nodeType":"YulAssignment","src":"7680:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7692:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7703:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7688:3:23"},"nodeType":"YulFunctionCall","src":"7688:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7680:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7760:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7773:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7784:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7769:3:23"},"nodeType":"YulFunctionCall","src":"7769:17:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7716:43:23"},"nodeType":"YulFunctionCall","src":"7716:71:23"},"nodeType":"YulExpressionStatement","src":"7716:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7841:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7854:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"7865:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7850:3:23"},"nodeType":"YulFunctionCall","src":"7850:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7797:43:23"},"nodeType":"YulFunctionCall","src":"7797:72:23"},"nodeType":"YulExpressionStatement","src":"7797:72:23"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7634:9:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7646:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7654:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7665:4:23","type":""}],"src":"7544:332:23"},{"body":{"nodeType":"YulBlock","src":"7935:51:23","statements":[{"nodeType":"YulAssignment","src":"7945:35:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7974:5:23"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7956:17:23"},"nodeType":"YulFunctionCall","src":"7956:24:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7945:7:23"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7917:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7927:7:23","type":""}],"src":"7882:104:23"},{"body":{"nodeType":"YulBlock","src":"8043:87:23","statements":[{"body":{"nodeType":"YulBlock","src":"8108:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8117:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8120:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8110:6:23"},"nodeType":"YulFunctionCall","src":"8110:12:23"},"nodeType":"YulExpressionStatement","src":"8110:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8066:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8099:5:23"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"8073:25:23"},"nodeType":"YulFunctionCall","src":"8073:32:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8063:2:23"},"nodeType":"YulFunctionCall","src":"8063:43:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8056:6:23"},"nodeType":"YulFunctionCall","src":"8056:51:23"},"nodeType":"YulIf","src":"8053:71:23"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8036:5:23","type":""}],"src":"7992:138:23"},{"body":{"nodeType":"YulBlock","src":"8196:95:23","statements":[{"nodeType":"YulAssignment","src":"8206:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8228:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8215:12:23"},"nodeType":"YulFunctionCall","src":"8215:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8206:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8279:5:23"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"8244:34:23"},"nodeType":"YulFunctionCall","src":"8244:41:23"},"nodeType":"YulExpressionStatement","src":"8244:41:23"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8174:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"8182:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8190:5:23","type":""}],"src":"8136:155:23"},{"body":{"nodeType":"YulBlock","src":"8371:271:23","statements":[{"body":{"nodeType":"YulBlock","src":"8417:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8419:77:23"},"nodeType":"YulFunctionCall","src":"8419:79:23"},"nodeType":"YulExpressionStatement","src":"8419:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8392:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"8401:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8388:3:23"},"nodeType":"YulFunctionCall","src":"8388:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"8413:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8384:3:23"},"nodeType":"YulFunctionCall","src":"8384:32:23"},"nodeType":"YulIf","src":"8381:119:23"},{"nodeType":"YulBlock","src":"8510:125:23","statements":[{"nodeType":"YulVariableDeclaration","src":"8525:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"8539:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8529:6:23","type":""}]},{"nodeType":"YulAssignment","src":"8554:71:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8597:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"8608:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8593:3:23"},"nodeType":"YulFunctionCall","src":"8593:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8617:7:23"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"8564:28:23"},"nodeType":"YulFunctionCall","src":"8564:61:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8554:6:23"}]}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8341:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8352:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8364:6:23","type":""}],"src":"8297:345:23"},{"body":{"nodeType":"YulBlock","src":"8737:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8754:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8757:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8747:6:23"},"nodeType":"YulFunctionCall","src":"8747:12:23"},"nodeType":"YulExpressionStatement","src":"8747:12:23"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"8648:117:23"},{"body":{"nodeType":"YulBlock","src":"8860:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8877:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8880:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8870:6:23"},"nodeType":"YulFunctionCall","src":"8870:12:23"},"nodeType":"YulExpressionStatement","src":"8870:12:23"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"8771:117:23"},{"body":{"nodeType":"YulBlock","src":"8922:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8939:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8942:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8932:6:23"},"nodeType":"YulFunctionCall","src":"8932:88:23"},"nodeType":"YulExpressionStatement","src":"8932:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9036:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9039:4:23","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9029:6:23"},"nodeType":"YulFunctionCall","src":"9029:15:23"},"nodeType":"YulExpressionStatement","src":"9029:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9060:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9063:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9053:6:23"},"nodeType":"YulFunctionCall","src":"9053:15:23"},"nodeType":"YulExpressionStatement","src":"9053:15:23"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"8894:180:23"},{"body":{"nodeType":"YulBlock","src":"9123:238:23","statements":[{"nodeType":"YulVariableDeclaration","src":"9133:58:23","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9155:6:23"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9185:4:23"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9163:21:23"},"nodeType":"YulFunctionCall","src":"9163:27:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9151:3:23"},"nodeType":"YulFunctionCall","src":"9151:40:23"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"9137:10:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"9302:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9304:16:23"},"nodeType":"YulFunctionCall","src":"9304:18:23"},"nodeType":"YulExpressionStatement","src":"9304:18:23"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9245:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"9257:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9242:2:23"},"nodeType":"YulFunctionCall","src":"9242:34:23"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9281:10:23"},{"name":"memPtr","nodeType":"YulIdentifier","src":"9293:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9278:2:23"},"nodeType":"YulFunctionCall","src":"9278:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9239:2:23"},"nodeType":"YulFunctionCall","src":"9239:62:23"},"nodeType":"YulIf","src":"9236:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9340:2:23","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9344:10:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9333:6:23"},"nodeType":"YulFunctionCall","src":"9333:22:23"},"nodeType":"YulExpressionStatement","src":"9333:22:23"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9109:6:23","type":""},{"name":"size","nodeType":"YulTypedName","src":"9117:4:23","type":""}],"src":"9080:281:23"},{"body":{"nodeType":"YulBlock","src":"9408:88:23","statements":[{"nodeType":"YulAssignment","src":"9418:30:23","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"9428:18:23"},"nodeType":"YulFunctionCall","src":"9428:20:23"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9418:6:23"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9477:6:23"},{"name":"size","nodeType":"YulIdentifier","src":"9485:4:23"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"9457:19:23"},"nodeType":"YulFunctionCall","src":"9457:33:23"},"nodeType":"YulExpressionStatement","src":"9457:33:23"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"9392:4:23","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"9401:6:23","type":""}],"src":"9367:129:23"},{"body":{"nodeType":"YulBlock","src":"9569:241:23","statements":[{"body":{"nodeType":"YulBlock","src":"9674:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9676:16:23"},"nodeType":"YulFunctionCall","src":"9676:18:23"},"nodeType":"YulExpressionStatement","src":"9676:18:23"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9646:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"9654:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9643:2:23"},"nodeType":"YulFunctionCall","src":"9643:30:23"},"nodeType":"YulIf","src":"9640:56:23"},{"nodeType":"YulAssignment","src":"9706:37:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9736:6:23"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9714:21:23"},"nodeType":"YulFunctionCall","src":"9714:29:23"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9706:4:23"}]},{"nodeType":"YulAssignment","src":"9780:23:23","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9792:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"9798:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9788:3:23"},"nodeType":"YulFunctionCall","src":"9788:15:23"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9780:4:23"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"9553:6:23","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"9564:4:23","type":""}],"src":"9502:308:23"},{"body":{"nodeType":"YulBlock","src":"9880:82:23","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9903:3:23"},{"name":"src","nodeType":"YulIdentifier","src":"9908:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"9913:6:23"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"9890:12:23"},"nodeType":"YulFunctionCall","src":"9890:30:23"},"nodeType":"YulExpressionStatement","src":"9890:30:23"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9940:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"9945:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9936:3:23"},"nodeType":"YulFunctionCall","src":"9936:16:23"},{"kind":"number","nodeType":"YulLiteral","src":"9954:1:23","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9929:6:23"},"nodeType":"YulFunctionCall","src":"9929:27:23"},"nodeType":"YulExpressionStatement","src":"9929:27:23"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9862:3:23","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9867:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"9872:6:23","type":""}],"src":"9816:146:23"},{"body":{"nodeType":"YulBlock","src":"10052:341:23","statements":[{"nodeType":"YulAssignment","src":"10062:75:23","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10129:6:23"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10087:41:23"},"nodeType":"YulFunctionCall","src":"10087:49:23"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10071:15:23"},"nodeType":"YulFunctionCall","src":"10071:66:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10062:5:23"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10153:5:23"},{"name":"length","nodeType":"YulIdentifier","src":"10160:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10146:6:23"},"nodeType":"YulFunctionCall","src":"10146:21:23"},"nodeType":"YulExpressionStatement","src":"10146:21:23"},{"nodeType":"YulVariableDeclaration","src":"10176:27:23","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10191:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"10198:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10187:3:23"},"nodeType":"YulFunctionCall","src":"10187:16:23"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"10180:3:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"10241:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"10243:77:23"},"nodeType":"YulFunctionCall","src":"10243:79:23"},"nodeType":"YulExpressionStatement","src":"10243:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10222:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"10227:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10218:3:23"},"nodeType":"YulFunctionCall","src":"10218:16:23"},{"name":"end","nodeType":"YulIdentifier","src":"10236:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10215:2:23"},"nodeType":"YulFunctionCall","src":"10215:25:23"},"nodeType":"YulIf","src":"10212:112:23"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10370:3:23"},{"name":"dst","nodeType":"YulIdentifier","src":"10375:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"10380:6:23"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10333:36:23"},"nodeType":"YulFunctionCall","src":"10333:54:23"},"nodeType":"YulExpressionStatement","src":"10333:54:23"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10025:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"10030:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"10038:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10046:5:23","type":""}],"src":"9968:425:23"},{"body":{"nodeType":"YulBlock","src":"10475:278:23","statements":[{"body":{"nodeType":"YulBlock","src":"10524:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"10526:77:23"},"nodeType":"YulFunctionCall","src":"10526:79:23"},"nodeType":"YulExpressionStatement","src":"10526:79:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10503:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"10511:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10499:3:23"},"nodeType":"YulFunctionCall","src":"10499:17:23"},{"name":"end","nodeType":"YulIdentifier","src":"10518:3:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10495:3:23"},"nodeType":"YulFunctionCall","src":"10495:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10488:6:23"},"nodeType":"YulFunctionCall","src":"10488:35:23"},"nodeType":"YulIf","src":"10485:122:23"},{"nodeType":"YulVariableDeclaration","src":"10616:34:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10643:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10630:12:23"},"nodeType":"YulFunctionCall","src":"10630:20:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10620:6:23","type":""}]},{"nodeType":"YulAssignment","src":"10659:88:23","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10720:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"10728:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10716:3:23"},"nodeType":"YulFunctionCall","src":"10716:17:23"},{"name":"length","nodeType":"YulIdentifier","src":"10735:6:23"},{"name":"end","nodeType":"YulIdentifier","src":"10743:3:23"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10668:47:23"},"nodeType":"YulFunctionCall","src":"10668:79:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10659:5:23"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10453:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"10461:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10469:5:23","type":""}],"src":"10413:340:23"},{"body":{"nodeType":"YulBlock","src":"10835:433:23","statements":[{"body":{"nodeType":"YulBlock","src":"10881:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10883:77:23"},"nodeType":"YulFunctionCall","src":"10883:79:23"},"nodeType":"YulExpressionStatement","src":"10883:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10856:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"10865:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10852:3:23"},"nodeType":"YulFunctionCall","src":"10852:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"10877:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10848:3:23"},"nodeType":"YulFunctionCall","src":"10848:32:23"},"nodeType":"YulIf","src":"10845:119:23"},{"nodeType":"YulBlock","src":"10974:287:23","statements":[{"nodeType":"YulVariableDeclaration","src":"10989:45:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11020:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"11031:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11016:3:23"},"nodeType":"YulFunctionCall","src":"11016:17:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11003:12:23"},"nodeType":"YulFunctionCall","src":"11003:31:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10993:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"11081:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11083:77:23"},"nodeType":"YulFunctionCall","src":"11083:79:23"},"nodeType":"YulExpressionStatement","src":"11083:79:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11053:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"11061:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11050:2:23"},"nodeType":"YulFunctionCall","src":"11050:30:23"},"nodeType":"YulIf","src":"11047:117:23"},{"nodeType":"YulAssignment","src":"11178:73:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11223:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"11234:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11219:3:23"},"nodeType":"YulFunctionCall","src":"11219:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11243:7:23"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11188:30:23"},"nodeType":"YulFunctionCall","src":"11188:63:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11178:6:23"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10805:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10816:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10828:6:23","type":""}],"src":"10759:509:23"},{"body":{"nodeType":"YulBlock","src":"11348:40:23","statements":[{"nodeType":"YulAssignment","src":"11359:22:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11375:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11369:5:23"},"nodeType":"YulFunctionCall","src":"11369:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11359:6:23"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11331:5:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11341:6:23","type":""}],"src":"11274:114:23"},{"body":{"nodeType":"YulBlock","src":"11505:73:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11522:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"11527:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11515:6:23"},"nodeType":"YulFunctionCall","src":"11515:19:23"},"nodeType":"YulExpressionStatement","src":"11515:19:23"},{"nodeType":"YulAssignment","src":"11543:29:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11562:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"11567:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11558:3:23"},"nodeType":"YulFunctionCall","src":"11558:14:23"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11543:11:23"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11477:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"11482:6:23","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11493:11:23","type":""}],"src":"11394:184:23"},{"body":{"nodeType":"YulBlock","src":"11656:60:23","statements":[{"nodeType":"YulAssignment","src":"11666:11:23","value":{"name":"ptr","nodeType":"YulIdentifier","src":"11674:3:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11666:4:23"}]},{"nodeType":"YulAssignment","src":"11687:22:23","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"11699:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"11704:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11695:3:23"},"nodeType":"YulFunctionCall","src":"11695:14:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11687:4:23"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11643:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"11651:4:23","type":""}],"src":"11584:132:23"},{"body":{"nodeType":"YulBlock","src":"11777:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11794:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11817:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11799:17:23"},"nodeType":"YulFunctionCall","src":"11799:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11787:6:23"},"nodeType":"YulFunctionCall","src":"11787:37:23"},"nodeType":"YulExpressionStatement","src":"11787:37:23"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11765:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11772:3:23","type":""}],"src":"11722:108:23"},{"body":{"nodeType":"YulBlock","src":"11916:99:23","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11960:6:23"},{"name":"pos","nodeType":"YulIdentifier","src":"11968:3:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11926:33:23"},"nodeType":"YulFunctionCall","src":"11926:46:23"},"nodeType":"YulExpressionStatement","src":"11926:46:23"},{"nodeType":"YulAssignment","src":"11981:28:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11999:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"12004:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11995:3:23"},"nodeType":"YulFunctionCall","src":"11995:14:23"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"11981:10:23"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"11889:6:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11897:3:23","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"11905:10:23","type":""}],"src":"11836:179:23"},{"body":{"nodeType":"YulBlock","src":"12096:38:23","statements":[{"nodeType":"YulAssignment","src":"12106:22:23","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12118:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"12123:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12114:3:23"},"nodeType":"YulFunctionCall","src":"12114:14:23"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"12106:4:23"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12083:3:23","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"12091:4:23","type":""}],"src":"12021:113:23"},{"body":{"nodeType":"YulBlock","src":"12294:608:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12304:68:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12366:5:23"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12318:47:23"},"nodeType":"YulFunctionCall","src":"12318:54:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12308:6:23","type":""}]},{"nodeType":"YulAssignment","src":"12381:93:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12462:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"12467:6:23"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12388:73:23"},"nodeType":"YulFunctionCall","src":"12388:86:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12381:3:23"}]},{"nodeType":"YulVariableDeclaration","src":"12483:71:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12548:5:23"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12498:49:23"},"nodeType":"YulFunctionCall","src":"12498:56:23"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"12487:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12563:21:23","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"12577:7:23"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"12567:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"12653:224:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12667:34:23","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12694:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12688:5:23"},"nodeType":"YulFunctionCall","src":"12688:13:23"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"12671:13:23","type":""}]},{"nodeType":"YulAssignment","src":"12714:70:23","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"12765:13:23"},{"name":"pos","nodeType":"YulIdentifier","src":"12780:3:23"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12721:43:23"},"nodeType":"YulFunctionCall","src":"12721:63:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12714:3:23"}]},{"nodeType":"YulAssignment","src":"12797:70:23","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12860:6:23"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12807:52:23"},"nodeType":"YulFunctionCall","src":"12807:60:23"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12797:6:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12615:1:23"},{"name":"length","nodeType":"YulIdentifier","src":"12618:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12612:2:23"},"nodeType":"YulFunctionCall","src":"12612:13:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12626:18:23","statements":[{"nodeType":"YulAssignment","src":"12628:14:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12637:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"12640:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12633:3:23"},"nodeType":"YulFunctionCall","src":"12633:9:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12628:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"12597:14:23","statements":[{"nodeType":"YulVariableDeclaration","src":"12599:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"12608:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12603:1:23","type":""}]}]},"src":"12593:284:23"},{"nodeType":"YulAssignment","src":"12886:10:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"12893:3:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12886:3:23"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12273:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12280:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12289:3:23","type":""}],"src":"12170:732:23"},{"body":{"nodeType":"YulBlock","src":"13056:225:23","statements":[{"nodeType":"YulAssignment","src":"13066:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13078:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13089:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13074:3:23"},"nodeType":"YulFunctionCall","src":"13074:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13066:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13113:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"13124:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13109:3:23"},"nodeType":"YulFunctionCall","src":"13109:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13132:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"13138:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13128:3:23"},"nodeType":"YulFunctionCall","src":"13128:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13102:6:23"},"nodeType":"YulFunctionCall","src":"13102:47:23"},"nodeType":"YulExpressionStatement","src":"13102:47:23"},{"nodeType":"YulAssignment","src":"13158:116:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13260:6:23"},{"name":"tail","nodeType":"YulIdentifier","src":"13269:4:23"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13166:93:23"},"nodeType":"YulFunctionCall","src":"13166:108:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13158:4:23"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13028:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13040:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13051:4:23","type":""}],"src":"12908:373:23"},{"body":{"nodeType":"YulBlock","src":"13327:76:23","statements":[{"body":{"nodeType":"YulBlock","src":"13381:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13390:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13393:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13383:6:23"},"nodeType":"YulFunctionCall","src":"13383:12:23"},"nodeType":"YulExpressionStatement","src":"13383:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13350:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13372:5:23"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"13357:14:23"},"nodeType":"YulFunctionCall","src":"13357:21:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13347:2:23"},"nodeType":"YulFunctionCall","src":"13347:32:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13340:6:23"},"nodeType":"YulFunctionCall","src":"13340:40:23"},"nodeType":"YulIf","src":"13337:60:23"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13320:5:23","type":""}],"src":"13287:116:23"},{"body":{"nodeType":"YulBlock","src":"13458:84:23","statements":[{"nodeType":"YulAssignment","src":"13468:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13490:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13477:12:23"},"nodeType":"YulFunctionCall","src":"13477:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13468:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13530:5:23"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"13506:23:23"},"nodeType":"YulFunctionCall","src":"13506:30:23"},"nodeType":"YulExpressionStatement","src":"13506:30:23"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13436:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"13444:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13452:5:23","type":""}],"src":"13409:133:23"},{"body":{"nodeType":"YulBlock","src":"13628:388:23","statements":[{"body":{"nodeType":"YulBlock","src":"13674:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13676:77:23"},"nodeType":"YulFunctionCall","src":"13676:79:23"},"nodeType":"YulExpressionStatement","src":"13676:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13649:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"13658:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13645:3:23"},"nodeType":"YulFunctionCall","src":"13645:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"13670:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13641:3:23"},"nodeType":"YulFunctionCall","src":"13641:32:23"},"nodeType":"YulIf","src":"13638:119:23"},{"nodeType":"YulBlock","src":"13767:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"13782:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"13796:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13786:6:23","type":""}]},{"nodeType":"YulAssignment","src":"13811:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13846:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"13857:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13842:3:23"},"nodeType":"YulFunctionCall","src":"13842:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13866:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13821:20:23"},"nodeType":"YulFunctionCall","src":"13821:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13811:6:23"}]}]},{"nodeType":"YulBlock","src":"13894:115:23","statements":[{"nodeType":"YulVariableDeclaration","src":"13909:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"13923:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13913:6:23","type":""}]},{"nodeType":"YulAssignment","src":"13939:60:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13971:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"13982:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13967:3:23"},"nodeType":"YulFunctionCall","src":"13967:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13991:7:23"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"13949:17:23"},"nodeType":"YulFunctionCall","src":"13949:50:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13939:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13590:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13601:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13613:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13621:6:23","type":""}],"src":"13548:468:23"},{"body":{"nodeType":"YulBlock","src":"14088:241:23","statements":[{"body":{"nodeType":"YulBlock","src":"14193:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14195:16:23"},"nodeType":"YulFunctionCall","src":"14195:18:23"},"nodeType":"YulExpressionStatement","src":"14195:18:23"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14165:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"14173:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14162:2:23"},"nodeType":"YulFunctionCall","src":"14162:30:23"},"nodeType":"YulIf","src":"14159:56:23"},{"nodeType":"YulAssignment","src":"14225:37:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14255:6:23"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14233:21:23"},"nodeType":"YulFunctionCall","src":"14233:29:23"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14225:4:23"}]},{"nodeType":"YulAssignment","src":"14299:23:23","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"14311:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"14317:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14307:3:23"},"nodeType":"YulFunctionCall","src":"14307:15:23"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14299:4:23"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"14072:6:23","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"14083:4:23","type":""}],"src":"14022:307:23"},{"body":{"nodeType":"YulBlock","src":"14418:340:23","statements":[{"nodeType":"YulAssignment","src":"14428:74:23","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14494:6:23"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14453:40:23"},"nodeType":"YulFunctionCall","src":"14453:48:23"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"14437:15:23"},"nodeType":"YulFunctionCall","src":"14437:65:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14428:5:23"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"14518:5:23"},{"name":"length","nodeType":"YulIdentifier","src":"14525:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14511:6:23"},"nodeType":"YulFunctionCall","src":"14511:21:23"},"nodeType":"YulExpressionStatement","src":"14511:21:23"},{"nodeType":"YulVariableDeclaration","src":"14541:27:23","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"14556:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"14563:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14552:3:23"},"nodeType":"YulFunctionCall","src":"14552:16:23"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"14545:3:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"14606:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"14608:77:23"},"nodeType":"YulFunctionCall","src":"14608:79:23"},"nodeType":"YulExpressionStatement","src":"14608:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14587:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"14592:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14583:3:23"},"nodeType":"YulFunctionCall","src":"14583:16:23"},{"name":"end","nodeType":"YulIdentifier","src":"14601:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14580:2:23"},"nodeType":"YulFunctionCall","src":"14580:25:23"},"nodeType":"YulIf","src":"14577:112:23"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14735:3:23"},{"name":"dst","nodeType":"YulIdentifier","src":"14740:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"14745:6:23"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14698:36:23"},"nodeType":"YulFunctionCall","src":"14698:54:23"},"nodeType":"YulExpressionStatement","src":"14698:54:23"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"14391:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"14396:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"14404:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"14412:5:23","type":""}],"src":"14335:423:23"},{"body":{"nodeType":"YulBlock","src":"14838:277:23","statements":[{"body":{"nodeType":"YulBlock","src":"14887:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"14889:77:23"},"nodeType":"YulFunctionCall","src":"14889:79:23"},"nodeType":"YulExpressionStatement","src":"14889:79:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14866:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"14874:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14862:3:23"},"nodeType":"YulFunctionCall","src":"14862:17:23"},{"name":"end","nodeType":"YulIdentifier","src":"14881:3:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14858:3:23"},"nodeType":"YulFunctionCall","src":"14858:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14851:6:23"},"nodeType":"YulFunctionCall","src":"14851:35:23"},"nodeType":"YulIf","src":"14848:122:23"},{"nodeType":"YulVariableDeclaration","src":"14979:34:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15006:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14993:12:23"},"nodeType":"YulFunctionCall","src":"14993:20:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14983:6:23","type":""}]},{"nodeType":"YulAssignment","src":"15022:87:23","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15082:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"15090:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15078:3:23"},"nodeType":"YulFunctionCall","src":"15078:17:23"},{"name":"length","nodeType":"YulIdentifier","src":"15097:6:23"},{"name":"end","nodeType":"YulIdentifier","src":"15105:3:23"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"15031:46:23"},"nodeType":"YulFunctionCall","src":"15031:78:23"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"15022:5:23"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14816:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"14824:3:23","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"14832:5:23","type":""}],"src":"14777:338:23"},{"body":{"nodeType":"YulBlock","src":"15247:817:23","statements":[{"body":{"nodeType":"YulBlock","src":"15294:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15296:77:23"},"nodeType":"YulFunctionCall","src":"15296:79:23"},"nodeType":"YulExpressionStatement","src":"15296:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15268:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"15277:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15264:3:23"},"nodeType":"YulFunctionCall","src":"15264:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"15289:3:23","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15260:3:23"},"nodeType":"YulFunctionCall","src":"15260:33:23"},"nodeType":"YulIf","src":"15257:120:23"},{"nodeType":"YulBlock","src":"15387:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"15402:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"15416:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15406:6:23","type":""}]},{"nodeType":"YulAssignment","src":"15431:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15466:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"15477:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15462:3:23"},"nodeType":"YulFunctionCall","src":"15462:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15486:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15441:20:23"},"nodeType":"YulFunctionCall","src":"15441:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15431:6:23"}]}]},{"nodeType":"YulBlock","src":"15514:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"15529:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"15543:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15533:6:23","type":""}]},{"nodeType":"YulAssignment","src":"15559:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15594:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"15605:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15590:3:23"},"nodeType":"YulFunctionCall","src":"15590:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15614:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15569:20:23"},"nodeType":"YulFunctionCall","src":"15569:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15559:6:23"}]}]},{"nodeType":"YulBlock","src":"15642:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"15657:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"15671:2:23","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15661:6:23","type":""}]},{"nodeType":"YulAssignment","src":"15687:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15722:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"15733:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15718:3:23"},"nodeType":"YulFunctionCall","src":"15718:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15742:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15697:20:23"},"nodeType":"YulFunctionCall","src":"15697:53:23"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15687:6:23"}]}]},{"nodeType":"YulBlock","src":"15770:287:23","statements":[{"nodeType":"YulVariableDeclaration","src":"15785:46:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15816:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"15827:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15812:3:23"},"nodeType":"YulFunctionCall","src":"15812:18:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15799:12:23"},"nodeType":"YulFunctionCall","src":"15799:32:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15789:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"15878:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15880:77:23"},"nodeType":"YulFunctionCall","src":"15880:79:23"},"nodeType":"YulExpressionStatement","src":"15880:79:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15850:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"15858:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15847:2:23"},"nodeType":"YulFunctionCall","src":"15847:30:23"},"nodeType":"YulIf","src":"15844:117:23"},{"nodeType":"YulAssignment","src":"15975:72:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16019:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"16030:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16015:3:23"},"nodeType":"YulFunctionCall","src":"16015:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16039:7:23"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"15985:29:23"},"nodeType":"YulFunctionCall","src":"15985:62:23"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"15975:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15193:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15204:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15216:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15224:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15232:6:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15240:6:23","type":""}],"src":"15121:943:23"},{"body":{"nodeType":"YulBlock","src":"16159:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16176:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16179:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16169:6:23"},"nodeType":"YulFunctionCall","src":"16169:12:23"},"nodeType":"YulExpressionStatement","src":"16169:12:23"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"16070:117:23"},{"body":{"nodeType":"YulBlock","src":"16282:28:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16299:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16302:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16292:6:23"},"nodeType":"YulFunctionCall","src":"16292:12:23"},"nodeType":"YulExpressionStatement","src":"16292:12:23"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"16193:117:23"},{"body":{"nodeType":"YulBlock","src":"16403:478:23","statements":[{"body":{"nodeType":"YulBlock","src":"16452:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"16454:77:23"},"nodeType":"YulFunctionCall","src":"16454:79:23"},"nodeType":"YulExpressionStatement","src":"16454:79:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16431:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"16439:4:23","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16427:3:23"},"nodeType":"YulFunctionCall","src":"16427:17:23"},{"name":"end","nodeType":"YulIdentifier","src":"16446:3:23"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16423:3:23"},"nodeType":"YulFunctionCall","src":"16423:27:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16416:6:23"},"nodeType":"YulFunctionCall","src":"16416:35:23"},"nodeType":"YulIf","src":"16413:122:23"},{"nodeType":"YulAssignment","src":"16544:30:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16567:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16554:12:23"},"nodeType":"YulFunctionCall","src":"16554:20:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16544:6:23"}]},{"body":{"nodeType":"YulBlock","src":"16617:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"16619:77:23"},"nodeType":"YulFunctionCall","src":"16619:79:23"},"nodeType":"YulExpressionStatement","src":"16619:79:23"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16589:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"16597:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16586:2:23"},"nodeType":"YulFunctionCall","src":"16586:30:23"},"nodeType":"YulIf","src":"16583:117:23"},{"nodeType":"YulAssignment","src":"16709:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16725:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"16733:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16721:3:23"},"nodeType":"YulFunctionCall","src":"16721:17:23"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"16709:8:23"}]},{"body":{"nodeType":"YulBlock","src":"16792:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"16794:77:23"},"nodeType":"YulFunctionCall","src":"16794:79:23"},"nodeType":"YulExpressionStatement","src":"16794:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"16757:8:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16771:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"16779:4:23","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16767:3:23"},"nodeType":"YulFunctionCall","src":"16767:17:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16753:3:23"},"nodeType":"YulFunctionCall","src":"16753:32:23"},{"name":"end","nodeType":"YulIdentifier","src":"16787:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16750:2:23"},"nodeType":"YulFunctionCall","src":"16750:41:23"},"nodeType":"YulIf","src":"16747:128:23"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16370:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"16378:3:23","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"16386:8:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"16396:6:23","type":""}],"src":"16329:552:23"},{"body":{"nodeType":"YulBlock","src":"16972:442:23","statements":[{"body":{"nodeType":"YulBlock","src":"17018:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17020:77:23"},"nodeType":"YulFunctionCall","src":"17020:79:23"},"nodeType":"YulExpressionStatement","src":"17020:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16993:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"17002:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16989:3:23"},"nodeType":"YulFunctionCall","src":"16989:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"17014:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16985:3:23"},"nodeType":"YulFunctionCall","src":"16985:32:23"},"nodeType":"YulIf","src":"16982:119:23"},{"nodeType":"YulBlock","src":"17111:296:23","statements":[{"nodeType":"YulVariableDeclaration","src":"17126:45:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17157:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17168:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17153:3:23"},"nodeType":"YulFunctionCall","src":"17153:17:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17140:12:23"},"nodeType":"YulFunctionCall","src":"17140:31:23"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17130:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"17218:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"17220:77:23"},"nodeType":"YulFunctionCall","src":"17220:79:23"},"nodeType":"YulExpressionStatement","src":"17220:79:23"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17190:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"17198:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17187:2:23"},"nodeType":"YulFunctionCall","src":"17187:30:23"},"nodeType":"YulIf","src":"17184:117:23"},{"nodeType":"YulAssignment","src":"17315:82:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17369:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"17380:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17365:3:23"},"nodeType":"YulFunctionCall","src":"17365:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17389:7:23"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"17333:31:23"},"nodeType":"YulFunctionCall","src":"17333:64:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17315:6:23"},{"name":"value1","nodeType":"YulIdentifier","src":"17323:6:23"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16934:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16945:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16957:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16965:6:23","type":""}],"src":"16887:527:23"},{"body":{"nodeType":"YulBlock","src":"17463:43:23","statements":[{"nodeType":"YulAssignment","src":"17473:27:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17488:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"17495:4:23","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17484:3:23"},"nodeType":"YulFunctionCall","src":"17484:16:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17473:7:23"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17445:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17455:7:23","type":""}],"src":"17420:86:23"},{"body":{"nodeType":"YulBlock","src":"17573:51:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17590:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17611:5:23"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"17595:15:23"},"nodeType":"YulFunctionCall","src":"17595:22:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17583:6:23"},"nodeType":"YulFunctionCall","src":"17583:35:23"},"nodeType":"YulExpressionStatement","src":"17583:35:23"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17561:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17568:3:23","type":""}],"src":"17512:112:23"},{"body":{"nodeType":"YulBlock","src":"17724:120:23","statements":[{"nodeType":"YulAssignment","src":"17734:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17746:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17757:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17742:3:23"},"nodeType":"YulFunctionCall","src":"17742:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17734:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17810:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17823:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"17834:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17819:3:23"},"nodeType":"YulFunctionCall","src":"17819:17:23"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"17770:39:23"},"nodeType":"YulFunctionCall","src":"17770:67:23"},"nodeType":"YulExpressionStatement","src":"17770:67:23"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17696:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17708:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17719:4:23","type":""}],"src":"17630:214:23"},{"body":{"nodeType":"YulBlock","src":"17933:391:23","statements":[{"body":{"nodeType":"YulBlock","src":"17979:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17981:77:23"},"nodeType":"YulFunctionCall","src":"17981:79:23"},"nodeType":"YulExpressionStatement","src":"17981:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17954:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"17963:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17950:3:23"},"nodeType":"YulFunctionCall","src":"17950:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"17975:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17946:3:23"},"nodeType":"YulFunctionCall","src":"17946:32:23"},"nodeType":"YulIf","src":"17943:119:23"},{"nodeType":"YulBlock","src":"18072:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"18087:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"18101:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18091:6:23","type":""}]},{"nodeType":"YulAssignment","src":"18116:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18151:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"18162:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18147:3:23"},"nodeType":"YulFunctionCall","src":"18147:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18171:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18126:20:23"},"nodeType":"YulFunctionCall","src":"18126:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18116:6:23"}]}]},{"nodeType":"YulBlock","src":"18199:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"18214:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"18228:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18218:6:23","type":""}]},{"nodeType":"YulAssignment","src":"18244:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18279:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"18290:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18275:3:23"},"nodeType":"YulFunctionCall","src":"18275:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18299:7:23"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18254:20:23"},"nodeType":"YulFunctionCall","src":"18254:53:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18244:6:23"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17895:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17906:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17918:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17926:6:23","type":""}],"src":"17850:474:23"},{"body":{"nodeType":"YulBlock","src":"18371:77:23","statements":[{"body":{"nodeType":"YulBlock","src":"18426:16:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18435:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18438:1:23","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18428:6:23"},"nodeType":"YulFunctionCall","src":"18428:12:23"},"nodeType":"YulExpressionStatement","src":"18428:12:23"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18394:5:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18417:5:23"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"18401:15:23"},"nodeType":"YulFunctionCall","src":"18401:22:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18391:2:23"},"nodeType":"YulFunctionCall","src":"18391:33:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18384:6:23"},"nodeType":"YulFunctionCall","src":"18384:41:23"},"nodeType":"YulIf","src":"18381:61:23"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18364:5:23","type":""}],"src":"18330:118:23"},{"body":{"nodeType":"YulBlock","src":"18504:85:23","statements":[{"nodeType":"YulAssignment","src":"18514:29:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18536:6:23"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18523:12:23"},"nodeType":"YulFunctionCall","src":"18523:20:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18514:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18577:5:23"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"18552:24:23"},"nodeType":"YulFunctionCall","src":"18552:31:23"},"nodeType":"YulExpressionStatement","src":"18552:31:23"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18482:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"18490:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"18498:5:23","type":""}],"src":"18454:135:23"},{"body":{"nodeType":"YulBlock","src":"18676:389:23","statements":[{"body":{"nodeType":"YulBlock","src":"18722:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18724:77:23"},"nodeType":"YulFunctionCall","src":"18724:79:23"},"nodeType":"YulExpressionStatement","src":"18724:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18697:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"18706:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18693:3:23"},"nodeType":"YulFunctionCall","src":"18693:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"18718:2:23","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18689:3:23"},"nodeType":"YulFunctionCall","src":"18689:32:23"},"nodeType":"YulIf","src":"18686:119:23"},{"nodeType":"YulBlock","src":"18815:117:23","statements":[{"nodeType":"YulVariableDeclaration","src":"18830:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"18844:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18834:6:23","type":""}]},{"nodeType":"YulAssignment","src":"18859:63:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18894:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"18905:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18890:3:23"},"nodeType":"YulFunctionCall","src":"18890:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18914:7:23"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18869:20:23"},"nodeType":"YulFunctionCall","src":"18869:53:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18859:6:23"}]}]},{"nodeType":"YulBlock","src":"18942:116:23","statements":[{"nodeType":"YulVariableDeclaration","src":"18957:16:23","value":{"kind":"number","nodeType":"YulLiteral","src":"18971:2:23","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18961:6:23","type":""}]},{"nodeType":"YulAssignment","src":"18987:61:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19020:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"19031:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19016:3:23"},"nodeType":"YulFunctionCall","src":"19016:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19040:7:23"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"18997:18:23"},"nodeType":"YulFunctionCall","src":"18997:51:23"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18987:6:23"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18638:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18649:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18661:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18669:6:23","type":""}],"src":"18595:470:23"},{"body":{"nodeType":"YulBlock","src":"19099:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19116:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19119:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19109:6:23"},"nodeType":"YulFunctionCall","src":"19109:88:23"},"nodeType":"YulExpressionStatement","src":"19109:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19213:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19216:4:23","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19206:6:23"},"nodeType":"YulFunctionCall","src":"19206:15:23"},"nodeType":"YulExpressionStatement","src":"19206:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19237:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19240:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19230:6:23"},"nodeType":"YulFunctionCall","src":"19230:15:23"},"nodeType":"YulExpressionStatement","src":"19230:15:23"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"19071:180:23"},{"body":{"nodeType":"YulBlock","src":"19308:269:23","statements":[{"nodeType":"YulAssignment","src":"19318:22:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19332:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"19338:1:23","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"19328:3:23"},"nodeType":"YulFunctionCall","src":"19328:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19318:6:23"}]},{"nodeType":"YulVariableDeclaration","src":"19349:38:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19379:4:23"},{"kind":"number","nodeType":"YulLiteral","src":"19385:1:23","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19375:3:23"},"nodeType":"YulFunctionCall","src":"19375:12:23"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"19353:18:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"19426:51:23","statements":[{"nodeType":"YulAssignment","src":"19440:27:23","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19454:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"19462:4:23","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19450:3:23"},"nodeType":"YulFunctionCall","src":"19450:17:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19440:6:23"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19406:18:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19399:6:23"},"nodeType":"YulFunctionCall","src":"19399:26:23"},"nodeType":"YulIf","src":"19396:81:23"},{"body":{"nodeType":"YulBlock","src":"19529:42:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"19543:16:23"},"nodeType":"YulFunctionCall","src":"19543:18:23"},"nodeType":"YulExpressionStatement","src":"19543:18:23"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19493:18:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19516:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"19524:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19513:2:23"},"nodeType":"YulFunctionCall","src":"19513:14:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19490:2:23"},"nodeType":"YulFunctionCall","src":"19490:38:23"},"nodeType":"YulIf","src":"19487:84:23"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19292:4:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"19301:6:23","type":""}],"src":"19257:320:23"},{"body":{"nodeType":"YulBlock","src":"19737:288:23","statements":[{"nodeType":"YulAssignment","src":"19747:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19759:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19770:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19755:3:23"},"nodeType":"YulFunctionCall","src":"19755:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19747:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19827:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19840:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19851:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19836:3:23"},"nodeType":"YulFunctionCall","src":"19836:17:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19783:43:23"},"nodeType":"YulFunctionCall","src":"19783:71:23"},"nodeType":"YulExpressionStatement","src":"19783:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19908:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19921:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"19932:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19917:3:23"},"nodeType":"YulFunctionCall","src":"19917:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19864:43:23"},"nodeType":"YulFunctionCall","src":"19864:72:23"},"nodeType":"YulExpressionStatement","src":"19864:72:23"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19990:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20003:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"20014:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19999:3:23"},"nodeType":"YulFunctionCall","src":"19999:18:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19946:43:23"},"nodeType":"YulFunctionCall","src":"19946:72:23"},"nodeType":"YulExpressionStatement","src":"19946:72:23"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19693:9:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19705:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19713:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19721:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19732:4:23","type":""}],"src":"19583:442:23"},{"body":{"nodeType":"YulBlock","src":"20059:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20076:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20079:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20069:6:23"},"nodeType":"YulFunctionCall","src":"20069:88:23"},"nodeType":"YulExpressionStatement","src":"20069:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20173:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20176:4:23","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20166:6:23"},"nodeType":"YulFunctionCall","src":"20166:15:23"},"nodeType":"YulExpressionStatement","src":"20166:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20197:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20200:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20190:6:23"},"nodeType":"YulFunctionCall","src":"20190:15:23"},"nodeType":"YulExpressionStatement","src":"20190:15:23"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"20031:180:23"},{"body":{"nodeType":"YulBlock","src":"20265:362:23","statements":[{"nodeType":"YulAssignment","src":"20275:25:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20298:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20280:17:23"},"nodeType":"YulFunctionCall","src":"20280:20:23"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20275:1:23"}]},{"nodeType":"YulAssignment","src":"20309:25:23","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20332:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20314:17:23"},"nodeType":"YulFunctionCall","src":"20314:20:23"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20309:1:23"}]},{"nodeType":"YulVariableDeclaration","src":"20343:28:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20366:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"20369:1:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20362:3:23"},"nodeType":"YulFunctionCall","src":"20362:9:23"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"20347:11:23","type":""}]},{"nodeType":"YulAssignment","src":"20380:41:23","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"20409:11:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20391:17:23"},"nodeType":"YulFunctionCall","src":"20391:30:23"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"20380:7:23"}]},{"body":{"nodeType":"YulBlock","src":"20598:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20600:16:23"},"nodeType":"YulFunctionCall","src":"20600:18:23"},"nodeType":"YulExpressionStatement","src":"20600:18:23"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20531:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20524:6:23"},"nodeType":"YulFunctionCall","src":"20524:9:23"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20554:1:23"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"20561:7:23"},{"name":"x","nodeType":"YulIdentifier","src":"20570:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"20557:3:23"},"nodeType":"YulFunctionCall","src":"20557:15:23"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20551:2:23"},"nodeType":"YulFunctionCall","src":"20551:22:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"20504:2:23"},"nodeType":"YulFunctionCall","src":"20504:83:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20484:6:23"},"nodeType":"YulFunctionCall","src":"20484:113:23"},"nodeType":"YulIf","src":"20481:139:23"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20248:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"20251:1:23","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"20257:7:23","type":""}],"src":"20217:410:23"},{"body":{"nodeType":"YulBlock","src":"20661:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20678:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20681:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20671:6:23"},"nodeType":"YulFunctionCall","src":"20671:88:23"},"nodeType":"YulExpressionStatement","src":"20671:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20775:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20778:4:23","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20768:6:23"},"nodeType":"YulFunctionCall","src":"20768:15:23"},"nodeType":"YulExpressionStatement","src":"20768:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20799:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20802:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20792:6:23"},"nodeType":"YulFunctionCall","src":"20792:15:23"},"nodeType":"YulExpressionStatement","src":"20792:15:23"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"20633:180:23"},{"body":{"nodeType":"YulBlock","src":"20861:143:23","statements":[{"nodeType":"YulAssignment","src":"20871:25:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20894:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20876:17:23"},"nodeType":"YulFunctionCall","src":"20876:20:23"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20871:1:23"}]},{"nodeType":"YulAssignment","src":"20905:25:23","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20928:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20910:17:23"},"nodeType":"YulFunctionCall","src":"20910:20:23"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20905:1:23"}]},{"body":{"nodeType":"YulBlock","src":"20952:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"20954:16:23"},"nodeType":"YulFunctionCall","src":"20954:18:23"},"nodeType":"YulExpressionStatement","src":"20954:18:23"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20949:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20942:6:23"},"nodeType":"YulFunctionCall","src":"20942:9:23"},"nodeType":"YulIf","src":"20939:35:23"},{"nodeType":"YulAssignment","src":"20984:14:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20993:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"20996:1:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"20989:3:23"},"nodeType":"YulFunctionCall","src":"20989:9:23"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"20984:1:23"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20850:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"20853:1:23","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"20859:1:23","type":""}],"src":"20819:185:23"},{"body":{"nodeType":"YulBlock","src":"21116:63:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21138:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"21146:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21134:3:23"},"nodeType":"YulFunctionCall","src":"21134:14:23"},{"hexValue":"6f6e6c79203120746f6b656e20706572207478","kind":"string","nodeType":"YulLiteral","src":"21150:21:23","type":"","value":"only 1 token per tx"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21127:6:23"},"nodeType":"YulFunctionCall","src":"21127:45:23"},"nodeType":"YulExpressionStatement","src":"21127:45:23"}]},"name":"store_literal_in_memory_ec495453922ae9023946eb51c1406acdd92df8b193b46cc506c2448af3a80c69","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21108:6:23","type":""}],"src":"21010:169:23"},{"body":{"nodeType":"YulBlock","src":"21331:220:23","statements":[{"nodeType":"YulAssignment","src":"21341:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21407:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"21412:2:23","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21348:58:23"},"nodeType":"YulFunctionCall","src":"21348:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21341:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21513:3:23"}],"functionName":{"name":"store_literal_in_memory_ec495453922ae9023946eb51c1406acdd92df8b193b46cc506c2448af3a80c69","nodeType":"YulIdentifier","src":"21424:88:23"},"nodeType":"YulFunctionCall","src":"21424:93:23"},"nodeType":"YulExpressionStatement","src":"21424:93:23"},{"nodeType":"YulAssignment","src":"21526:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21537:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"21542:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21533:3:23"},"nodeType":"YulFunctionCall","src":"21533:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21526:3:23"}]}]},"name":"abi_encode_t_stringliteral_ec495453922ae9023946eb51c1406acdd92df8b193b46cc506c2448af3a80c69_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21319:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21327:3:23","type":""}],"src":"21185:366:23"},{"body":{"nodeType":"YulBlock","src":"21728:248:23","statements":[{"nodeType":"YulAssignment","src":"21738:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21750:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21761:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21746:3:23"},"nodeType":"YulFunctionCall","src":"21746:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21738:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21785:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"21796:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21781:3:23"},"nodeType":"YulFunctionCall","src":"21781:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21804:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"21810:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21800:3:23"},"nodeType":"YulFunctionCall","src":"21800:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21774:6:23"},"nodeType":"YulFunctionCall","src":"21774:47:23"},"nodeType":"YulExpressionStatement","src":"21774:47:23"},{"nodeType":"YulAssignment","src":"21830:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21964:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_ec495453922ae9023946eb51c1406acdd92df8b193b46cc506c2448af3a80c69_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21838:124:23"},"nodeType":"YulFunctionCall","src":"21838:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21830:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_ec495453922ae9023946eb51c1406acdd92df8b193b46cc506c2448af3a80c69__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21708:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21723:4:23","type":""}],"src":"21557:419:23"},{"body":{"nodeType":"YulBlock","src":"22026:147:23","statements":[{"nodeType":"YulAssignment","src":"22036:25:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22059:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22041:17:23"},"nodeType":"YulFunctionCall","src":"22041:20:23"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22036:1:23"}]},{"nodeType":"YulAssignment","src":"22070:25:23","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22093:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22075:17:23"},"nodeType":"YulFunctionCall","src":"22075:20:23"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22070:1:23"}]},{"nodeType":"YulAssignment","src":"22104:16:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22115:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"22118:1:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22111:3:23"},"nodeType":"YulFunctionCall","src":"22111:9:23"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"22104:3:23"}]},{"body":{"nodeType":"YulBlock","src":"22144:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22146:16:23"},"nodeType":"YulFunctionCall","src":"22146:18:23"},"nodeType":"YulExpressionStatement","src":"22146:18:23"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22136:1:23"},{"name":"sum","nodeType":"YulIdentifier","src":"22139:3:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22133:2:23"},"nodeType":"YulFunctionCall","src":"22133:10:23"},"nodeType":"YulIf","src":"22130:36:23"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22013:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"22016:1:23","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"22022:3:23","type":""}],"src":"21982:191:23"},{"body":{"nodeType":"YulBlock","src":"22285:59:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22307:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"22315:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22303:3:23"},"nodeType":"YulFunctionCall","src":"22303:14:23"},{"hexValue":"7075626c696320736f6c64206f7574","kind":"string","nodeType":"YulLiteral","src":"22319:17:23","type":"","value":"public sold out"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22296:6:23"},"nodeType":"YulFunctionCall","src":"22296:41:23"},"nodeType":"YulExpressionStatement","src":"22296:41:23"}]},"name":"store_literal_in_memory_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22277:6:23","type":""}],"src":"22179:165:23"},{"body":{"nodeType":"YulBlock","src":"22496:220:23","statements":[{"nodeType":"YulAssignment","src":"22506:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22572:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"22577:2:23","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22513:58:23"},"nodeType":"YulFunctionCall","src":"22513:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22506:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22678:3:23"}],"functionName":{"name":"store_literal_in_memory_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d","nodeType":"YulIdentifier","src":"22589:88:23"},"nodeType":"YulFunctionCall","src":"22589:93:23"},"nodeType":"YulExpressionStatement","src":"22589:93:23"},{"nodeType":"YulAssignment","src":"22691:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22702:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"22707:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22698:3:23"},"nodeType":"YulFunctionCall","src":"22698:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22691:3:23"}]}]},"name":"abi_encode_t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22484:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22492:3:23","type":""}],"src":"22350:366:23"},{"body":{"nodeType":"YulBlock","src":"22893:248:23","statements":[{"nodeType":"YulAssignment","src":"22903:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22915:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22926:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22911:3:23"},"nodeType":"YulFunctionCall","src":"22911:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22903:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22950:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"22961:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22946:3:23"},"nodeType":"YulFunctionCall","src":"22946:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22969:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"22975:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22965:3:23"},"nodeType":"YulFunctionCall","src":"22965:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22939:6:23"},"nodeType":"YulFunctionCall","src":"22939:47:23"},"nodeType":"YulExpressionStatement","src":"22939:47:23"},{"nodeType":"YulAssignment","src":"22995:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23129:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23003:124:23"},"nodeType":"YulFunctionCall","src":"23003:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22995:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22873:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22888:4:23","type":""}],"src":"22722:419:23"},{"body":{"nodeType":"YulBlock","src":"23253:61:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23275:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"23283:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23271:3:23"},"nodeType":"YulFunctionCall","src":"23271:14:23"},{"hexValue":"696e636f7272656374207061796d656e74","kind":"string","nodeType":"YulLiteral","src":"23287:19:23","type":"","value":"incorrect payment"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23264:6:23"},"nodeType":"YulFunctionCall","src":"23264:43:23"},"nodeType":"YulExpressionStatement","src":"23264:43:23"}]},"name":"store_literal_in_memory_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23245:6:23","type":""}],"src":"23147:167:23"},{"body":{"nodeType":"YulBlock","src":"23466:220:23","statements":[{"nodeType":"YulAssignment","src":"23476:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23542:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"23547:2:23","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23483:58:23"},"nodeType":"YulFunctionCall","src":"23483:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23476:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23648:3:23"}],"functionName":{"name":"store_literal_in_memory_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877","nodeType":"YulIdentifier","src":"23559:88:23"},"nodeType":"YulFunctionCall","src":"23559:93:23"},"nodeType":"YulExpressionStatement","src":"23559:93:23"},{"nodeType":"YulAssignment","src":"23661:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23672:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"23677:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23668:3:23"},"nodeType":"YulFunctionCall","src":"23668:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23661:3:23"}]}]},"name":"abi_encode_t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23454:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23462:3:23","type":""}],"src":"23320:366:23"},{"body":{"nodeType":"YulBlock","src":"23863:248:23","statements":[{"nodeType":"YulAssignment","src":"23873:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23885:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23896:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23881:3:23"},"nodeType":"YulFunctionCall","src":"23881:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23873:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23920:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"23931:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23916:3:23"},"nodeType":"YulFunctionCall","src":"23916:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23939:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"23945:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23935:3:23"},"nodeType":"YulFunctionCall","src":"23935:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23909:6:23"},"nodeType":"YulFunctionCall","src":"23909:47:23"},"nodeType":"YulExpressionStatement","src":"23909:47:23"},{"nodeType":"YulAssignment","src":"23965:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24099:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23973:124:23"},"nodeType":"YulFunctionCall","src":"23973:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23965:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23843:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23858:4:23","type":""}],"src":"23692:419:23"},{"body":{"nodeType":"YulBlock","src":"24160:190:23","statements":[{"nodeType":"YulAssignment","src":"24170:33:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24197:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24179:17:23"},"nodeType":"YulFunctionCall","src":"24179:24:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"24170:5:23"}]},{"body":{"nodeType":"YulBlock","src":"24293:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24295:16:23"},"nodeType":"YulFunctionCall","src":"24295:18:23"},"nodeType":"YulExpressionStatement","src":"24295:18:23"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24218:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"24225:66:23","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24215:2:23"},"nodeType":"YulFunctionCall","src":"24215:77:23"},"nodeType":"YulIf","src":"24212:103:23"},{"nodeType":"YulAssignment","src":"24324:20:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24335:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"24342:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24331:3:23"},"nodeType":"YulFunctionCall","src":"24331:13:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24324:3:23"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24146:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"24156:3:23","type":""}],"src":"24117:233:23"},{"body":{"nodeType":"YulBlock","src":"24384:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24401:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24404:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24394:6:23"},"nodeType":"YulFunctionCall","src":"24394:88:23"},"nodeType":"YulExpressionStatement","src":"24394:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24498:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24501:4:23","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24491:6:23"},"nodeType":"YulFunctionCall","src":"24491:15:23"},"nodeType":"YulExpressionStatement","src":"24491:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24522:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24525:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24515:6:23"},"nodeType":"YulFunctionCall","src":"24515:15:23"},"nodeType":"YulExpressionStatement","src":"24515:15:23"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"24356:180:23"},{"body":{"nodeType":"YulBlock","src":"24648:59:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24670:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"24678:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24666:3:23"},"nodeType":"YulFunctionCall","src":"24666:14:23"},{"hexValue":"696e76616c69642061646472657373","kind":"string","nodeType":"YulLiteral","src":"24682:17:23","type":"","value":"invalid address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24659:6:23"},"nodeType":"YulFunctionCall","src":"24659:41:23"},"nodeType":"YulExpressionStatement","src":"24659:41:23"}]},"name":"store_literal_in_memory_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24640:6:23","type":""}],"src":"24542:165:23"},{"body":{"nodeType":"YulBlock","src":"24859:220:23","statements":[{"nodeType":"YulAssignment","src":"24869:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24935:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"24940:2:23","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24876:58:23"},"nodeType":"YulFunctionCall","src":"24876:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24869:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25041:3:23"}],"functionName":{"name":"store_literal_in_memory_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225","nodeType":"YulIdentifier","src":"24952:88:23"},"nodeType":"YulFunctionCall","src":"24952:93:23"},"nodeType":"YulExpressionStatement","src":"24952:93:23"},{"nodeType":"YulAssignment","src":"25054:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25065:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"25070:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25061:3:23"},"nodeType":"YulFunctionCall","src":"25061:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25054:3:23"}]}]},"name":"abi_encode_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24847:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24855:3:23","type":""}],"src":"24713:366:23"},{"body":{"nodeType":"YulBlock","src":"25256:248:23","statements":[{"nodeType":"YulAssignment","src":"25266:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25278:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25289:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25274:3:23"},"nodeType":"YulFunctionCall","src":"25274:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25266:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25313:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"25324:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25309:3:23"},"nodeType":"YulFunctionCall","src":"25309:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25332:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"25338:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25328:3:23"},"nodeType":"YulFunctionCall","src":"25328:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25302:6:23"},"nodeType":"YulFunctionCall","src":"25302:47:23"},"nodeType":"YulExpressionStatement","src":"25302:47:23"},{"nodeType":"YulAssignment","src":"25358:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25492:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25366:124:23"},"nodeType":"YulFunctionCall","src":"25366:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25358:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25236:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25251:4:23","type":""}],"src":"25085:419:23"},{"body":{"nodeType":"YulBlock","src":"25616:52:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25638:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"25646:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25634:3:23"},"nodeType":"YulFunctionCall","src":"25634:14:23"},{"hexValue":"6e6f2066756e6473","kind":"string","nodeType":"YulLiteral","src":"25650:10:23","type":"","value":"no funds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25627:6:23"},"nodeType":"YulFunctionCall","src":"25627:34:23"},"nodeType":"YulExpressionStatement","src":"25627:34:23"}]},"name":"store_literal_in_memory_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25608:6:23","type":""}],"src":"25510:158:23"},{"body":{"nodeType":"YulBlock","src":"25820:219:23","statements":[{"nodeType":"YulAssignment","src":"25830:73:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25896:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"25901:1:23","type":"","value":"8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25837:58:23"},"nodeType":"YulFunctionCall","src":"25837:66:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25830:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26001:3:23"}],"functionName":{"name":"store_literal_in_memory_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920","nodeType":"YulIdentifier","src":"25912:88:23"},"nodeType":"YulFunctionCall","src":"25912:93:23"},"nodeType":"YulExpressionStatement","src":"25912:93:23"},{"nodeType":"YulAssignment","src":"26014:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26025:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"26030:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26021:3:23"},"nodeType":"YulFunctionCall","src":"26021:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26014:3:23"}]}]},"name":"abi_encode_t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25808:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25816:3:23","type":""}],"src":"25674:365:23"},{"body":{"nodeType":"YulBlock","src":"26216:248:23","statements":[{"nodeType":"YulAssignment","src":"26226:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26238:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26249:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26234:3:23"},"nodeType":"YulFunctionCall","src":"26234:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26226:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26273:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"26284:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26269:3:23"},"nodeType":"YulFunctionCall","src":"26269:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26292:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"26298:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26288:3:23"},"nodeType":"YulFunctionCall","src":"26288:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26262:6:23"},"nodeType":"YulFunctionCall","src":"26262:47:23"},"nodeType":"YulExpressionStatement","src":"26262:47:23"},{"nodeType":"YulAssignment","src":"26318:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26452:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26326:124:23"},"nodeType":"YulFunctionCall","src":"26326:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26318:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26196:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26211:4:23","type":""}],"src":"26045:419:23"},{"body":{"nodeType":"YulBlock","src":"26583:34:23","statements":[{"nodeType":"YulAssignment","src":"26593:18:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"26608:3:23"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"26593:11:23"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26555:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"26560:6:23","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"26571:11:23","type":""}],"src":"26470:147:23"},{"body":{"nodeType":"YulBlock","src":"26729:8:23","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26721:6:23","type":""}],"src":"26623:114:23"},{"body":{"nodeType":"YulBlock","src":"26906:235:23","statements":[{"nodeType":"YulAssignment","src":"26916:90:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26999:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"27004:1:23","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26923:75:23"},"nodeType":"YulFunctionCall","src":"26923:83:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26916:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27104:3:23"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"27015:88:23"},"nodeType":"YulFunctionCall","src":"27015:93:23"},"nodeType":"YulExpressionStatement","src":"27015:93:23"},{"nodeType":"YulAssignment","src":"27117:18:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27128:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"27133:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27124:3:23"},"nodeType":"YulFunctionCall","src":"27124:11:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27117:3:23"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26894:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26902:3:23","type":""}],"src":"26743:398:23"},{"body":{"nodeType":"YulBlock","src":"27335:191:23","statements":[{"nodeType":"YulAssignment","src":"27346:154:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27496:3:23"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27353:141:23"},"nodeType":"YulFunctionCall","src":"27353:147:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27346:3:23"}]},{"nodeType":"YulAssignment","src":"27510:10:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"27517:3:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27510:3:23"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27322:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27331:3:23","type":""}],"src":"27147:379:23"},{"body":{"nodeType":"YulBlock","src":"27638:59:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27660:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"27668:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27656:3:23"},"nodeType":"YulFunctionCall","src":"27656:14:23"},{"hexValue":"7769746864726177206661696c6564","kind":"string","nodeType":"YulLiteral","src":"27672:17:23","type":"","value":"withdraw failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27649:6:23"},"nodeType":"YulFunctionCall","src":"27649:41:23"},"nodeType":"YulExpressionStatement","src":"27649:41:23"}]},"name":"store_literal_in_memory_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27630:6:23","type":""}],"src":"27532:165:23"},{"body":{"nodeType":"YulBlock","src":"27849:220:23","statements":[{"nodeType":"YulAssignment","src":"27859:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27925:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"27930:2:23","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27866:58:23"},"nodeType":"YulFunctionCall","src":"27866:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27859:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28031:3:23"}],"functionName":{"name":"store_literal_in_memory_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe","nodeType":"YulIdentifier","src":"27942:88:23"},"nodeType":"YulFunctionCall","src":"27942:93:23"},"nodeType":"YulExpressionStatement","src":"27942:93:23"},{"nodeType":"YulAssignment","src":"28044:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28055:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"28060:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28051:3:23"},"nodeType":"YulFunctionCall","src":"28051:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28044:3:23"}]}]},"name":"abi_encode_t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27837:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27845:3:23","type":""}],"src":"27703:366:23"},{"body":{"nodeType":"YulBlock","src":"28246:248:23","statements":[{"nodeType":"YulAssignment","src":"28256:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28268:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28279:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28264:3:23"},"nodeType":"YulFunctionCall","src":"28264:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28256:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28303:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"28314:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28299:3:23"},"nodeType":"YulFunctionCall","src":"28299:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28322:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"28328:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28318:3:23"},"nodeType":"YulFunctionCall","src":"28318:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28292:6:23"},"nodeType":"YulFunctionCall","src":"28292:47:23"},"nodeType":"YulExpressionStatement","src":"28292:47:23"},{"nodeType":"YulAssignment","src":"28348:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28482:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28356:124:23"},"nodeType":"YulFunctionCall","src":"28356:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28348:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28226:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28241:4:23","type":""}],"src":"28075:419:23"},{"body":{"nodeType":"YulBlock","src":"28554:87:23","statements":[{"nodeType":"YulAssignment","src":"28564:11:23","value":{"name":"ptr","nodeType":"YulIdentifier","src":"28572:3:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"28564:4:23"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28592:1:23","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"28595:3:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28585:6:23"},"nodeType":"YulFunctionCall","src":"28585:14:23"},"nodeType":"YulExpressionStatement","src":"28585:14:23"},{"nodeType":"YulAssignment","src":"28608:26:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28626:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28629:4:23","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"28616:9:23"},"nodeType":"YulFunctionCall","src":"28616:18:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"28608:4:23"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"28541:3:23","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"28549:4:23","type":""}],"src":"28500:141:23"},{"body":{"nodeType":"YulBlock","src":"28691:49:23","statements":[{"nodeType":"YulAssignment","src":"28701:33:23","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28719:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"28726:2:23","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28715:3:23"},"nodeType":"YulFunctionCall","src":"28715:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"28731:2:23","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"28711:3:23"},"nodeType":"YulFunctionCall","src":"28711:23:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"28701:6:23"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28674:5:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"28684:6:23","type":""}],"src":"28647:93:23"},{"body":{"nodeType":"YulBlock","src":"28799:54:23","statements":[{"nodeType":"YulAssignment","src":"28809:37:23","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"28834:4:23"},{"name":"value","nodeType":"YulIdentifier","src":"28840:5:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28830:3:23"},"nodeType":"YulFunctionCall","src":"28830:16:23"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"28809:8:23"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"28774:4:23","type":""},{"name":"value","nodeType":"YulTypedName","src":"28780:5:23","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"28790:8:23","type":""}],"src":"28746:107:23"},{"body":{"nodeType":"YulBlock","src":"28935:317:23","statements":[{"nodeType":"YulVariableDeclaration","src":"28945:35:23","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"28966:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"28978:1:23","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"28962:3:23"},"nodeType":"YulFunctionCall","src":"28962:18:23"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"28949:9:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28989:109:23","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"29020:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"29031:66:23","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"29001:18:23"},"nodeType":"YulFunctionCall","src":"29001:97:23"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"28993:4:23","type":""}]},{"nodeType":"YulAssignment","src":"29107:51:23","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"29138:9:23"},{"name":"toInsert","nodeType":"YulIdentifier","src":"29149:8:23"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"29119:18:23"},"nodeType":"YulFunctionCall","src":"29119:39:23"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"29107:8:23"}]},{"nodeType":"YulAssignment","src":"29167:30:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29180:5:23"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"29191:4:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"29187:3:23"},"nodeType":"YulFunctionCall","src":"29187:9:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29176:3:23"},"nodeType":"YulFunctionCall","src":"29176:21:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"29167:5:23"}]},{"nodeType":"YulAssignment","src":"29206:40:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29219:5:23"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"29230:8:23"},{"name":"mask","nodeType":"YulIdentifier","src":"29240:4:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29226:3:23"},"nodeType":"YulFunctionCall","src":"29226:19:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"29216:2:23"},"nodeType":"YulFunctionCall","src":"29216:30:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"29206:6:23"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28896:5:23","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"28903:10:23","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"28915:8:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"28928:6:23","type":""}],"src":"28859:393:23"},{"body":{"nodeType":"YulBlock","src":"29290:28:23","statements":[{"nodeType":"YulAssignment","src":"29300:12:23","value":{"name":"value","nodeType":"YulIdentifier","src":"29307:5:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"29300:3:23"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29276:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"29286:3:23","type":""}],"src":"29258:60:23"},{"body":{"nodeType":"YulBlock","src":"29384:82:23","statements":[{"nodeType":"YulAssignment","src":"29394:66:23","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29452:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29434:17:23"},"nodeType":"YulFunctionCall","src":"29434:24:23"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"29425:8:23"},"nodeType":"YulFunctionCall","src":"29425:34:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29407:17:23"},"nodeType":"YulFunctionCall","src":"29407:53:23"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"29394:9:23"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29364:5:23","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"29374:9:23","type":""}],"src":"29324:142:23"},{"body":{"nodeType":"YulBlock","src":"29519:28:23","statements":[{"nodeType":"YulAssignment","src":"29529:12:23","value":{"name":"value","nodeType":"YulIdentifier","src":"29536:5:23"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"29529:3:23"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29505:5:23","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"29515:3:23","type":""}],"src":"29472:75:23"},{"body":{"nodeType":"YulBlock","src":"29629:193:23","statements":[{"nodeType":"YulVariableDeclaration","src":"29639:63:23","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"29694:7:23"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"29663:30:23"},"nodeType":"YulFunctionCall","src":"29663:39:23"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"29643:16:23","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29718:4:23"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29758:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"29752:5:23"},"nodeType":"YulFunctionCall","src":"29752:11:23"},{"name":"offset","nodeType":"YulIdentifier","src":"29765:6:23"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"29797:16:23"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"29773:23:23"},"nodeType":"YulFunctionCall","src":"29773:41:23"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"29724:27:23"},"nodeType":"YulFunctionCall","src":"29724:91:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"29711:6:23"},"nodeType":"YulFunctionCall","src":"29711:105:23"},"nodeType":"YulExpressionStatement","src":"29711:105:23"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"29606:4:23","type":""},{"name":"offset","nodeType":"YulTypedName","src":"29612:6:23","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"29620:7:23","type":""}],"src":"29553:269:23"},{"body":{"nodeType":"YulBlock","src":"29877:24:23","statements":[{"nodeType":"YulAssignment","src":"29887:8:23","value":{"kind":"number","nodeType":"YulLiteral","src":"29894:1:23","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"29887:3:23"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"29873:3:23","type":""}],"src":"29828:73:23"},{"body":{"nodeType":"YulBlock","src":"29960:136:23","statements":[{"nodeType":"YulVariableDeclaration","src":"29970:46:23","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"29984:30:23"},"nodeType":"YulFunctionCall","src":"29984:32:23"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"29974:6:23","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30069:4:23"},{"name":"offset","nodeType":"YulIdentifier","src":"30075:6:23"},{"name":"zero_0","nodeType":"YulIdentifier","src":"30083:6:23"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"30025:43:23"},"nodeType":"YulFunctionCall","src":"30025:65:23"},"nodeType":"YulExpressionStatement","src":"30025:65:23"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"29946:4:23","type":""},{"name":"offset","nodeType":"YulTypedName","src":"29952:6:23","type":""}],"src":"29907:189:23"},{"body":{"nodeType":"YulBlock","src":"30152:136:23","statements":[{"body":{"nodeType":"YulBlock","src":"30219:63:23","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"30263:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"30270:1:23","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"30233:29:23"},"nodeType":"YulFunctionCall","src":"30233:39:23"},"nodeType":"YulExpressionStatement","src":"30233:39:23"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"30172:5:23"},{"name":"end","nodeType":"YulIdentifier","src":"30179:3:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30169:2:23"},"nodeType":"YulFunctionCall","src":"30169:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"30184:26:23","statements":[{"nodeType":"YulAssignment","src":"30186:22:23","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"30199:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"30206:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30195:3:23"},"nodeType":"YulFunctionCall","src":"30195:13:23"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"30186:5:23"}]}]},"pre":{"nodeType":"YulBlock","src":"30166:2:23","statements":[]},"src":"30162:120:23"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"30140:5:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"30147:3:23","type":""}],"src":"30102:186:23"},{"body":{"nodeType":"YulBlock","src":"30373:464:23","statements":[{"body":{"nodeType":"YulBlock","src":"30399:431:23","statements":[{"nodeType":"YulVariableDeclaration","src":"30413:54:23","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"30461:5:23"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"30429:31:23"},"nodeType":"YulFunctionCall","src":"30429:38:23"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"30417:8:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"30480:63:23","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"30503:8:23"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"30531:10:23"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"30513:17:23"},"nodeType":"YulFunctionCall","src":"30513:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30499:3:23"},"nodeType":"YulFunctionCall","src":"30499:44:23"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"30484:11:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"30700:27:23","statements":[{"nodeType":"YulAssignment","src":"30702:23:23","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"30717:8:23"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"30702:11:23"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"30684:10:23"},{"kind":"number","nodeType":"YulLiteral","src":"30696:2:23","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30681:2:23"},"nodeType":"YulFunctionCall","src":"30681:18:23"},"nodeType":"YulIf","src":"30678:49:23"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"30769:11:23"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"30786:8:23"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"30814:3:23"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"30796:17:23"},"nodeType":"YulFunctionCall","src":"30796:22:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30782:3:23"},"nodeType":"YulFunctionCall","src":"30782:37:23"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"30740:28:23"},"nodeType":"YulFunctionCall","src":"30740:80:23"},"nodeType":"YulExpressionStatement","src":"30740:80:23"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"30390:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"30395:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30387:2:23"},"nodeType":"YulFunctionCall","src":"30387:11:23"},"nodeType":"YulIf","src":"30384:446:23"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"30349:5:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"30356:3:23","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"30361:10:23","type":""}],"src":"30294:543:23"},{"body":{"nodeType":"YulBlock","src":"30906:54:23","statements":[{"nodeType":"YulAssignment","src":"30916:37:23","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"30941:4:23"},{"name":"value","nodeType":"YulIdentifier","src":"30947:5:23"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"30937:3:23"},"nodeType":"YulFunctionCall","src":"30937:16:23"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"30916:8:23"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"30881:4:23","type":""},{"name":"value","nodeType":"YulTypedName","src":"30887:5:23","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"30897:8:23","type":""}],"src":"30843:117:23"},{"body":{"nodeType":"YulBlock","src":"31017:118:23","statements":[{"nodeType":"YulVariableDeclaration","src":"31027:68:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31076:1:23","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"31079:5:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"31072:3:23"},"nodeType":"YulFunctionCall","src":"31072:13:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31091:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"31087:3:23"},"nodeType":"YulFunctionCall","src":"31087:6:23"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"31043:28:23"},"nodeType":"YulFunctionCall","src":"31043:51:23"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"31039:3:23"},"nodeType":"YulFunctionCall","src":"31039:56:23"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"31031:4:23","type":""}]},{"nodeType":"YulAssignment","src":"31104:25:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"31118:4:23"},{"name":"mask","nodeType":"YulIdentifier","src":"31124:4:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31114:3:23"},"nodeType":"YulFunctionCall","src":"31114:15:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"31104:6:23"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"30994:4:23","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"31000:5:23","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"31010:6:23","type":""}],"src":"30966:169:23"},{"body":{"nodeType":"YulBlock","src":"31221:214:23","statements":[{"nodeType":"YulAssignment","src":"31354:37:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"31381:4:23"},{"name":"len","nodeType":"YulIdentifier","src":"31387:3:23"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"31362:18:23"},"nodeType":"YulFunctionCall","src":"31362:29:23"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"31354:4:23"}]},{"nodeType":"YulAssignment","src":"31400:29:23","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"31411:4:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31421:1:23","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"31424:3:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"31417:3:23"},"nodeType":"YulFunctionCall","src":"31417:11:23"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"31408:2:23"},"nodeType":"YulFunctionCall","src":"31408:21:23"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"31400:4:23"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"31202:4:23","type":""},{"name":"len","nodeType":"YulTypedName","src":"31208:3:23","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"31216:4:23","type":""}],"src":"31140:295:23"},{"body":{"nodeType":"YulBlock","src":"31532:1303:23","statements":[{"nodeType":"YulVariableDeclaration","src":"31543:51:23","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"31590:3:23"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"31557:32:23"},"nodeType":"YulFunctionCall","src":"31557:37:23"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"31547:6:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"31679:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"31681:16:23"},"nodeType":"YulFunctionCall","src":"31681:18:23"},"nodeType":"YulExpressionStatement","src":"31681:18:23"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"31651:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"31659:18:23","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31648:2:23"},"nodeType":"YulFunctionCall","src":"31648:30:23"},"nodeType":"YulIf","src":"31645:56:23"},{"nodeType":"YulVariableDeclaration","src":"31711:52:23","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31757:4:23"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"31751:5:23"},"nodeType":"YulFunctionCall","src":"31751:11:23"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"31725:25:23"},"nodeType":"YulFunctionCall","src":"31725:38:23"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"31715:6:23","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31856:4:23"},{"name":"oldLen","nodeType":"YulIdentifier","src":"31862:6:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"31870:6:23"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"31810:45:23"},"nodeType":"YulFunctionCall","src":"31810:67:23"},"nodeType":"YulExpressionStatement","src":"31810:67:23"},{"nodeType":"YulVariableDeclaration","src":"31887:18:23","value":{"kind":"number","nodeType":"YulLiteral","src":"31904:1:23","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"31891:9:23","type":""}]},{"nodeType":"YulAssignment","src":"31915:17:23","value":{"kind":"number","nodeType":"YulLiteral","src":"31928:4:23","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"31915:9:23"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"31979:611:23","statements":[{"nodeType":"YulVariableDeclaration","src":"31993:37:23","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"32012:6:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32024:4:23","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"32020:3:23"},"nodeType":"YulFunctionCall","src":"32020:9:23"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32008:3:23"},"nodeType":"YulFunctionCall","src":"32008:22:23"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"31997:7:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"32044:51:23","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32090:4:23"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"32058:31:23"},"nodeType":"YulFunctionCall","src":"32058:37:23"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"32048:6:23","type":""}]},{"nodeType":"YulVariableDeclaration","src":"32108:10:23","value":{"kind":"number","nodeType":"YulLiteral","src":"32117:1:23","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"32112:1:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"32176:163:23","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"32201:6:23"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"32219:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"32224:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32215:3:23"},"nodeType":"YulFunctionCall","src":"32215:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32209:5:23"},"nodeType":"YulFunctionCall","src":"32209:26:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32194:6:23"},"nodeType":"YulFunctionCall","src":"32194:42:23"},"nodeType":"YulExpressionStatement","src":"32194:42:23"},{"nodeType":"YulAssignment","src":"32253:24:23","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"32267:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"32275:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32263:3:23"},"nodeType":"YulFunctionCall","src":"32263:14:23"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"32253:6:23"}]},{"nodeType":"YulAssignment","src":"32294:31:23","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"32311:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"32322:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32307:3:23"},"nodeType":"YulFunctionCall","src":"32307:18:23"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"32294:9:23"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"32142:1:23"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"32145:7:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32139:2:23"},"nodeType":"YulFunctionCall","src":"32139:14:23"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"32154:21:23","statements":[{"nodeType":"YulAssignment","src":"32156:17:23","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"32165:1:23"},{"kind":"number","nodeType":"YulLiteral","src":"32168:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32161:3:23"},"nodeType":"YulFunctionCall","src":"32161:12:23"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"32156:1:23"}]}]},"pre":{"nodeType":"YulBlock","src":"32135:3:23","statements":[]},"src":"32131:208:23"},{"body":{"nodeType":"YulBlock","src":"32375:156:23","statements":[{"nodeType":"YulVariableDeclaration","src":"32393:43:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"32420:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"32425:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32416:3:23"},"nodeType":"YulFunctionCall","src":"32416:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32410:5:23"},"nodeType":"YulFunctionCall","src":"32410:26:23"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"32397:9:23","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"32460:6:23"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"32487:9:23"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"32502:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"32510:4:23","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32498:3:23"},"nodeType":"YulFunctionCall","src":"32498:17:23"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"32468:18:23"},"nodeType":"YulFunctionCall","src":"32468:48:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32453:6:23"},"nodeType":"YulFunctionCall","src":"32453:64:23"},"nodeType":"YulExpressionStatement","src":"32453:64:23"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"32358:7:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"32367:6:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32355:2:23"},"nodeType":"YulFunctionCall","src":"32355:19:23"},"nodeType":"YulIf","src":"32352:179:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32551:4:23"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"32565:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"32573:1:23","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"32561:3:23"},"nodeType":"YulFunctionCall","src":"32561:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"32577:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32557:3:23"},"nodeType":"YulFunctionCall","src":"32557:22:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32544:6:23"},"nodeType":"YulFunctionCall","src":"32544:36:23"},"nodeType":"YulExpressionStatement","src":"32544:36:23"}]},"nodeType":"YulCase","src":"31972:618:23","value":{"kind":"number","nodeType":"YulLiteral","src":"31977:1:23","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"32607:222:23","statements":[{"nodeType":"YulVariableDeclaration","src":"32621:14:23","value":{"kind":"number","nodeType":"YulLiteral","src":"32634:1:23","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"32625:5:23","type":""}]},{"body":{"nodeType":"YulBlock","src":"32658:67:23","statements":[{"nodeType":"YulAssignment","src":"32676:35:23","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"32695:3:23"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"32700:9:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32691:3:23"},"nodeType":"YulFunctionCall","src":"32691:19:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32685:5:23"},"nodeType":"YulFunctionCall","src":"32685:26:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32676:5:23"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"32651:6:23"},"nodeType":"YulIf","src":"32648:77:23"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32745:4:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32804:5:23"},{"name":"newLen","nodeType":"YulIdentifier","src":"32811:6:23"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"32751:52:23"},"nodeType":"YulFunctionCall","src":"32751:67:23"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"32738:6:23"},"nodeType":"YulFunctionCall","src":"32738:81:23"},"nodeType":"YulExpressionStatement","src":"32738:81:23"}]},"nodeType":"YulCase","src":"32599:230:23","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"31952:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"31960:2:23","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31949:2:23"},"nodeType":"YulFunctionCall","src":"31949:14:23"},"nodeType":"YulSwitch","src":"31942:887:23"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"31521:4:23","type":""},{"name":"src","nodeType":"YulTypedName","src":"31527:3:23","type":""}],"src":"31440:1395:23"},{"body":{"nodeType":"YulBlock","src":"32947:66:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32969:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"32977:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32965:3:23"},"nodeType":"YulFunctionCall","src":"32965:14:23"},{"hexValue":"74727573746564207369676e6572206e6f7420736574","kind":"string","nodeType":"YulLiteral","src":"32981:24:23","type":"","value":"trusted signer not set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32958:6:23"},"nodeType":"YulFunctionCall","src":"32958:48:23"},"nodeType":"YulExpressionStatement","src":"32958:48:23"}]},"name":"store_literal_in_memory_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32939:6:23","type":""}],"src":"32841:172:23"},{"body":{"nodeType":"YulBlock","src":"33165:220:23","statements":[{"nodeType":"YulAssignment","src":"33175:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33241:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"33246:2:23","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33182:58:23"},"nodeType":"YulFunctionCall","src":"33182:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33175:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33347:3:23"}],"functionName":{"name":"store_literal_in_memory_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1","nodeType":"YulIdentifier","src":"33258:88:23"},"nodeType":"YulFunctionCall","src":"33258:93:23"},"nodeType":"YulExpressionStatement","src":"33258:93:23"},{"nodeType":"YulAssignment","src":"33360:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33371:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"33376:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33367:3:23"},"nodeType":"YulFunctionCall","src":"33367:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33360:3:23"}]}]},"name":"abi_encode_t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33153:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33161:3:23","type":""}],"src":"33019:366:23"},{"body":{"nodeType":"YulBlock","src":"33562:248:23","statements":[{"nodeType":"YulAssignment","src":"33572:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33584:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"33595:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33580:3:23"},"nodeType":"YulFunctionCall","src":"33580:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33572:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33619:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"33630:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33615:3:23"},"nodeType":"YulFunctionCall","src":"33615:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33638:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"33644:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33634:3:23"},"nodeType":"YulFunctionCall","src":"33634:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33608:6:23"},"nodeType":"YulFunctionCall","src":"33608:47:23"},"nodeType":"YulExpressionStatement","src":"33608:47:23"},{"nodeType":"YulAssignment","src":"33664:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33798:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33672:124:23"},"nodeType":"YulFunctionCall","src":"33672:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33664:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33542:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33557:4:23","type":""}],"src":"33391:419:23"},{"body":{"nodeType":"YulBlock","src":"33922:68:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33944:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"33952:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33940:3:23"},"nodeType":"YulFunctionCall","src":"33940:14:23"},{"hexValue":"616c726561647920636c61696d6564206f6e2d636861696e","kind":"string","nodeType":"YulLiteral","src":"33956:26:23","type":"","value":"already claimed on-chain"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33933:6:23"},"nodeType":"YulFunctionCall","src":"33933:50:23"},"nodeType":"YulExpressionStatement","src":"33933:50:23"}]},"name":"store_literal_in_memory_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33914:6:23","type":""}],"src":"33816:174:23"},{"body":{"nodeType":"YulBlock","src":"34142:220:23","statements":[{"nodeType":"YulAssignment","src":"34152:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34218:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"34223:2:23","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34159:58:23"},"nodeType":"YulFunctionCall","src":"34159:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34152:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34324:3:23"}],"functionName":{"name":"store_literal_in_memory_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3","nodeType":"YulIdentifier","src":"34235:88:23"},"nodeType":"YulFunctionCall","src":"34235:93:23"},"nodeType":"YulExpressionStatement","src":"34235:93:23"},{"nodeType":"YulAssignment","src":"34337:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34348:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"34353:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34344:3:23"},"nodeType":"YulFunctionCall","src":"34344:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34337:3:23"}]}]},"name":"abi_encode_t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34130:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34138:3:23","type":""}],"src":"33996:366:23"},{"body":{"nodeType":"YulBlock","src":"34539:248:23","statements":[{"nodeType":"YulAssignment","src":"34549:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34561:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"34572:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34557:3:23"},"nodeType":"YulFunctionCall","src":"34557:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34549:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34596:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"34607:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34592:3:23"},"nodeType":"YulFunctionCall","src":"34592:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34615:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"34621:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34611:3:23"},"nodeType":"YulFunctionCall","src":"34611:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34585:6:23"},"nodeType":"YulFunctionCall","src":"34585:47:23"},"nodeType":"YulExpressionStatement","src":"34585:47:23"},{"nodeType":"YulAssignment","src":"34641:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34775:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34649:124:23"},"nodeType":"YulFunctionCall","src":"34649:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34641:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34519:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34534:4:23","type":""}],"src":"34368:419:23"},{"body":{"nodeType":"YulBlock","src":"34835:52:23","statements":[{"nodeType":"YulAssignment","src":"34845:35:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34870:2:23","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"34874:5:23"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"34866:3:23"},"nodeType":"YulFunctionCall","src":"34866:14:23"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"34845:8:23"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34816:5:23","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"34826:8:23","type":""}],"src":"34793:94:23"},{"body":{"nodeType":"YulBlock","src":"34940:47:23","statements":[{"nodeType":"YulAssignment","src":"34950:31:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34975:5:23"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"34961:13:23"},"nodeType":"YulFunctionCall","src":"34961:20:23"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"34950:7:23"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34922:5:23","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"34932:7:23","type":""}],"src":"34893:94:23"},{"body":{"nodeType":"YulBlock","src":"35040:53:23","statements":[{"nodeType":"YulAssignment","src":"35050:37:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35081:5:23"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"35061:19:23"},"nodeType":"YulFunctionCall","src":"35061:26:23"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"35050:7:23"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35022:5:23","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"35032:7:23","type":""}],"src":"34993:100:23"},{"body":{"nodeType":"YulBlock","src":"35182:74:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35199:3:23"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35242:5:23"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"35224:17:23"},"nodeType":"YulFunctionCall","src":"35224:24:23"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"35204:19:23"},"nodeType":"YulFunctionCall","src":"35204:45:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35192:6:23"},"nodeType":"YulFunctionCall","src":"35192:58:23"},"nodeType":"YulExpressionStatement","src":"35192:58:23"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35170:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35177:3:23","type":""}],"src":"35099:157:23"},{"body":{"nodeType":"YulBlock","src":"35309:32:23","statements":[{"nodeType":"YulAssignment","src":"35319:16:23","value":{"name":"value","nodeType":"YulIdentifier","src":"35330:5:23"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"35319:7:23"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35291:5:23","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"35301:7:23","type":""}],"src":"35262:79:23"},{"body":{"nodeType":"YulBlock","src":"35430:74:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35447:3:23"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35490:5:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35472:17:23"},"nodeType":"YulFunctionCall","src":"35472:24:23"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"35452:19:23"},"nodeType":"YulFunctionCall","src":"35452:45:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35440:6:23"},"nodeType":"YulFunctionCall","src":"35440:58:23"},"nodeType":"YulExpressionStatement","src":"35440:58:23"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35418:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35425:3:23","type":""}],"src":"35347:157:23"},{"body":{"nodeType":"YulBlock","src":"35682:366:23","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35755:6:23"},{"name":"pos","nodeType":"YulIdentifier","src":"35764:3:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35693:61:23"},"nodeType":"YulFunctionCall","src":"35693:75:23"},"nodeType":"YulExpressionStatement","src":"35693:75:23"},{"nodeType":"YulAssignment","src":"35777:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35788:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"35793:2:23","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35784:3:23"},"nodeType":"YulFunctionCall","src":"35784:12:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35777:3:23"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35868:6:23"},{"name":"pos","nodeType":"YulIdentifier","src":"35877:3:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35806:61:23"},"nodeType":"YulFunctionCall","src":"35806:75:23"},"nodeType":"YulExpressionStatement","src":"35806:75:23"},{"nodeType":"YulAssignment","src":"35890:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35901:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"35906:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35897:3:23"},"nodeType":"YulFunctionCall","src":"35897:12:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35890:3:23"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"35981:6:23"},{"name":"pos","nodeType":"YulIdentifier","src":"35990:3:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35919:61:23"},"nodeType":"YulFunctionCall","src":"35919:75:23"},"nodeType":"YulExpressionStatement","src":"35919:75:23"},{"nodeType":"YulAssignment","src":"36003:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36014:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"36019:2:23","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36010:3:23"},"nodeType":"YulFunctionCall","src":"36010:12:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36003:3:23"}]},{"nodeType":"YulAssignment","src":"36032:10:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"36039:3:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36032:3:23"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35645:3:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35651:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35659:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35667:6:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35678:3:23","type":""}],"src":"35510:538:23"},{"body":{"nodeType":"YulBlock","src":"36160:61:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36182:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"36190:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36178:3:23"},"nodeType":"YulFunctionCall","src":"36178:14:23"},{"hexValue":"696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"36194:19:23","type":"","value":"invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36171:6:23"},"nodeType":"YulFunctionCall","src":"36171:43:23"},"nodeType":"YulExpressionStatement","src":"36171:43:23"}]},"name":"store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36152:6:23","type":""}],"src":"36054:167:23"},{"body":{"nodeType":"YulBlock","src":"36373:220:23","statements":[{"nodeType":"YulAssignment","src":"36383:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36449:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"36454:2:23","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36390:58:23"},"nodeType":"YulFunctionCall","src":"36390:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36383:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36555:3:23"}],"functionName":{"name":"store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a","nodeType":"YulIdentifier","src":"36466:88:23"},"nodeType":"YulFunctionCall","src":"36466:93:23"},"nodeType":"YulExpressionStatement","src":"36466:93:23"},{"nodeType":"YulAssignment","src":"36568:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36579:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"36584:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36575:3:23"},"nodeType":"YulFunctionCall","src":"36575:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36568:3:23"}]}]},"name":"abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36361:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36369:3:23","type":""}],"src":"36227:366:23"},{"body":{"nodeType":"YulBlock","src":"36770:248:23","statements":[{"nodeType":"YulAssignment","src":"36780:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36792:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"36803:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36788:3:23"},"nodeType":"YulFunctionCall","src":"36788:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36780:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36827:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"36838:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36823:3:23"},"nodeType":"YulFunctionCall","src":"36823:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36846:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"36852:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36842:3:23"},"nodeType":"YulFunctionCall","src":"36842:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36816:6:23"},"nodeType":"YulFunctionCall","src":"36816:47:23"},"nodeType":"YulExpressionStatement","src":"36816:47:23"},{"nodeType":"YulAssignment","src":"36872:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37006:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36880:124:23"},"nodeType":"YulFunctionCall","src":"36880:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36872:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36750:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36765:4:23","type":""}],"src":"36599:419:23"},{"body":{"nodeType":"YulBlock","src":"37138:34:23","statements":[{"nodeType":"YulAssignment","src":"37148:18:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"37163:3:23"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"37148:11:23"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37110:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"37115:6:23","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"37126:11:23","type":""}],"src":"37024:148:23"},{"body":{"nodeType":"YulBlock","src":"37288:280:23","statements":[{"nodeType":"YulVariableDeclaration","src":"37298:53:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37345:5:23"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"37312:32:23"},"nodeType":"YulFunctionCall","src":"37312:39:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"37302:6:23","type":""}]},{"nodeType":"YulAssignment","src":"37360:96:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37444:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"37449:6:23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37367:76:23"},"nodeType":"YulFunctionCall","src":"37367:89:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37360:3:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37504:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"37511:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37500:3:23"},"nodeType":"YulFunctionCall","src":"37500:16:23"},{"name":"pos","nodeType":"YulIdentifier","src":"37518:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"37523:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"37465:34:23"},"nodeType":"YulFunctionCall","src":"37465:65:23"},"nodeType":"YulExpressionStatement","src":"37465:65:23"},{"nodeType":"YulAssignment","src":"37539:23:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37550:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"37555:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37546:3:23"},"nodeType":"YulFunctionCall","src":"37546:16:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37539:3:23"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37269:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"37276:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37284:3:23","type":""}],"src":"37178:390:23"},{"body":{"nodeType":"YulBlock","src":"37710:139:23","statements":[{"nodeType":"YulAssignment","src":"37721:102:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37810:6:23"},{"name":"pos","nodeType":"YulIdentifier","src":"37819:3:23"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37728:81:23"},"nodeType":"YulFunctionCall","src":"37728:95:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37721:3:23"}]},{"nodeType":"YulAssignment","src":"37833:10:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"37840:3:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37833:3:23"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37689:3:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37695:6:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37706:3:23","type":""}],"src":"37574:275:23"},{"body":{"nodeType":"YulBlock","src":"37900:149:23","statements":[{"nodeType":"YulAssignment","src":"37910:25:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37933:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37915:17:23"},"nodeType":"YulFunctionCall","src":"37915:20:23"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"37910:1:23"}]},{"nodeType":"YulAssignment","src":"37944:25:23","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"37967:1:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37949:17:23"},"nodeType":"YulFunctionCall","src":"37949:20:23"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"37944:1:23"}]},{"nodeType":"YulAssignment","src":"37978:17:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37990:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"37993:1:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37986:3:23"},"nodeType":"YulFunctionCall","src":"37986:9:23"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"37978:4:23"}]},{"body":{"nodeType":"YulBlock","src":"38020:22:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"38022:16:23"},"nodeType":"YulFunctionCall","src":"38022:18:23"},"nodeType":"YulExpressionStatement","src":"38022:18:23"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"38011:4:23"},{"name":"x","nodeType":"YulIdentifier","src":"38017:1:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"38008:2:23"},"nodeType":"YulFunctionCall","src":"38008:11:23"},"nodeType":"YulIf","src":"38005:37:23"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"37886:1:23","type":""},{"name":"y","nodeType":"YulTypedName","src":"37889:1:23","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"37895:4:23","type":""}],"src":"37855:194:23"},{"body":{"nodeType":"YulBlock","src":"38239:251:23","statements":[{"nodeType":"YulAssignment","src":"38250:102:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38339:6:23"},{"name":"pos","nodeType":"YulIdentifier","src":"38348:3:23"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38257:81:23"},"nodeType":"YulFunctionCall","src":"38257:95:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38250:3:23"}]},{"nodeType":"YulAssignment","src":"38362:102:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"38451:6:23"},{"name":"pos","nodeType":"YulIdentifier","src":"38460:3:23"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38369:81:23"},"nodeType":"YulFunctionCall","src":"38369:95:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38362:3:23"}]},{"nodeType":"YulAssignment","src":"38474:10:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"38481:3:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38474:3:23"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38210:3:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"38216:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38224:6:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38235:3:23","type":""}],"src":"38055:435:23"},{"body":{"nodeType":"YulBlock","src":"38602:45:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38624:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"38632:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38620:3:23"},"nodeType":"YulFunctionCall","src":"38620:14:23"},{"hexValue":"2f","kind":"string","nodeType":"YulLiteral","src":"38636:3:23","type":"","value":"/"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38613:6:23"},"nodeType":"YulFunctionCall","src":"38613:27:23"},"nodeType":"YulExpressionStatement","src":"38613:27:23"}]},"name":"store_literal_in_memory_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38594:6:23","type":""}],"src":"38496:151:23"},{"body":{"nodeType":"YulBlock","src":"38817:236:23","statements":[{"nodeType":"YulAssignment","src":"38827:91:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38911:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"38916:1:23","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38834:76:23"},"nodeType":"YulFunctionCall","src":"38834:84:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38827:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39016:3:23"}],"functionName":{"name":"store_literal_in_memory_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","nodeType":"YulIdentifier","src":"38927:88:23"},"nodeType":"YulFunctionCall","src":"38927:93:23"},"nodeType":"YulExpressionStatement","src":"38927:93:23"},{"nodeType":"YulAssignment","src":"39029:18:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39040:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"39045:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39036:3:23"},"nodeType":"YulFunctionCall","src":"39036:11:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39029:3:23"}]}]},"name":"abi_encode_t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38805:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38813:3:23","type":""}],"src":"38653:400:23"},{"body":{"nodeType":"YulBlock","src":"39344:416:23","statements":[{"nodeType":"YulAssignment","src":"39355:102:23","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39444:6:23"},{"name":"pos","nodeType":"YulIdentifier","src":"39453:3:23"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39362:81:23"},"nodeType":"YulFunctionCall","src":"39362:95:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39355:3:23"}]},{"nodeType":"YulAssignment","src":"39467:155:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39618:3:23"}],"functionName":{"name":"abi_encode_t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39474:142:23"},"nodeType":"YulFunctionCall","src":"39474:148:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39467:3:23"}]},{"nodeType":"YulAssignment","src":"39632:102:23","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"39721:6:23"},{"name":"pos","nodeType":"YulIdentifier","src":"39730:3:23"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39639:81:23"},"nodeType":"YulFunctionCall","src":"39639:95:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39632:3:23"}]},{"nodeType":"YulAssignment","src":"39744:10:23","value":{"name":"pos","nodeType":"YulIdentifier","src":"39751:3:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39744:3:23"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39315:3:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39321:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39329:6:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39340:3:23","type":""}],"src":"39059:701:23"},{"body":{"nodeType":"YulBlock","src":"39872:59:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39894:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"39902:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39890:3:23"},"nodeType":"YulFunctionCall","src":"39890:14:23"},{"hexValue":"696e76616c69642076617269616e74","kind":"string","nodeType":"YulLiteral","src":"39906:17:23","type":"","value":"invalid variant"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39883:6:23"},"nodeType":"YulFunctionCall","src":"39883:41:23"},"nodeType":"YulExpressionStatement","src":"39883:41:23"}]},"name":"store_literal_in_memory_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39864:6:23","type":""}],"src":"39766:165:23"},{"body":{"nodeType":"YulBlock","src":"40083:220:23","statements":[{"nodeType":"YulAssignment","src":"40093:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40159:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"40164:2:23","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40100:58:23"},"nodeType":"YulFunctionCall","src":"40100:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40093:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40265:3:23"}],"functionName":{"name":"store_literal_in_memory_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662","nodeType":"YulIdentifier","src":"40176:88:23"},"nodeType":"YulFunctionCall","src":"40176:93:23"},"nodeType":"YulExpressionStatement","src":"40176:93:23"},{"nodeType":"YulAssignment","src":"40278:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40289:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"40294:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40285:3:23"},"nodeType":"YulFunctionCall","src":"40285:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40278:3:23"}]}]},"name":"abi_encode_t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40071:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40079:3:23","type":""}],"src":"39937:366:23"},{"body":{"nodeType":"YulBlock","src":"40480:248:23","statements":[{"nodeType":"YulAssignment","src":"40490:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40502:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"40513:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40498:3:23"},"nodeType":"YulFunctionCall","src":"40498:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40490:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40537:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"40548:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40533:3:23"},"nodeType":"YulFunctionCall","src":"40533:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40556:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"40562:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40552:3:23"},"nodeType":"YulFunctionCall","src":"40552:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40526:6:23"},"nodeType":"YulFunctionCall","src":"40526:47:23"},"nodeType":"YulExpressionStatement","src":"40526:47:23"},{"nodeType":"YulAssignment","src":"40582:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40716:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40590:124:23"},"nodeType":"YulFunctionCall","src":"40590:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40582:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40460:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40475:4:23","type":""}],"src":"40309:419:23"},{"body":{"nodeType":"YulBlock","src":"40840:53:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40862:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"40870:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40858:3:23"},"nodeType":"YulFunctionCall","src":"40858:14:23"},{"hexValue":"6e6f74206f776e6572","kind":"string","nodeType":"YulLiteral","src":"40874:11:23","type":"","value":"not owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40851:6:23"},"nodeType":"YulFunctionCall","src":"40851:35:23"},"nodeType":"YulExpressionStatement","src":"40851:35:23"}]},"name":"store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40832:6:23","type":""}],"src":"40734:159:23"},{"body":{"nodeType":"YulBlock","src":"41045:219:23","statements":[{"nodeType":"YulAssignment","src":"41055:73:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41121:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"41126:1:23","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41062:58:23"},"nodeType":"YulFunctionCall","src":"41062:66:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41055:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41226:3:23"}],"functionName":{"name":"store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e","nodeType":"YulIdentifier","src":"41137:88:23"},"nodeType":"YulFunctionCall","src":"41137:93:23"},"nodeType":"YulExpressionStatement","src":"41137:93:23"},{"nodeType":"YulAssignment","src":"41239:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41250:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"41255:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41246:3:23"},"nodeType":"YulFunctionCall","src":"41246:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41239:3:23"}]}]},"name":"abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41033:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41041:3:23","type":""}],"src":"40899:365:23"},{"body":{"nodeType":"YulBlock","src":"41441:248:23","statements":[{"nodeType":"YulAssignment","src":"41451:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41463:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"41474:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41459:3:23"},"nodeType":"YulFunctionCall","src":"41459:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41451:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41498:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"41509:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41494:3:23"},"nodeType":"YulFunctionCall","src":"41494:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41517:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"41523:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41513:3:23"},"nodeType":"YulFunctionCall","src":"41513:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41487:6:23"},"nodeType":"YulFunctionCall","src":"41487:47:23"},"nodeType":"YulExpressionStatement","src":"41487:47:23"},{"nodeType":"YulAssignment","src":"41543:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41677:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41551:124:23"},"nodeType":"YulFunctionCall","src":"41551:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41543:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41421:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41436:4:23","type":""}],"src":"41270:419:23"},{"body":{"nodeType":"YulBlock","src":"41801:119:23","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41823:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"41831:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41819:3:23"},"nodeType":"YulFunctionCall","src":"41819:14:23"},{"hexValue":"6f6e6c79206e65757472616c20746f6b656e732063616e206265207472616e73","kind":"string","nodeType":"YulLiteral","src":"41835:34:23","type":"","value":"only neutral tokens can be trans"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41812:6:23"},"nodeType":"YulFunctionCall","src":"41812:58:23"},"nodeType":"YulExpressionStatement","src":"41812:58:23"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41891:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"41899:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41887:3:23"},"nodeType":"YulFunctionCall","src":"41887:15:23"},{"hexValue":"666f726d6564","kind":"string","nodeType":"YulLiteral","src":"41904:8:23","type":"","value":"formed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41880:6:23"},"nodeType":"YulFunctionCall","src":"41880:33:23"},"nodeType":"YulExpressionStatement","src":"41880:33:23"}]},"name":"store_literal_in_memory_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41793:6:23","type":""}],"src":"41695:225:23"},{"body":{"nodeType":"YulBlock","src":"42072:220:23","statements":[{"nodeType":"YulAssignment","src":"42082:74:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42148:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"42153:2:23","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42089:58:23"},"nodeType":"YulFunctionCall","src":"42089:67:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42082:3:23"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42254:3:23"}],"functionName":{"name":"store_literal_in_memory_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277","nodeType":"YulIdentifier","src":"42165:88:23"},"nodeType":"YulFunctionCall","src":"42165:93:23"},"nodeType":"YulExpressionStatement","src":"42165:93:23"},{"nodeType":"YulAssignment","src":"42267:19:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42278:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"42283:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42274:3:23"},"nodeType":"YulFunctionCall","src":"42274:12:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42267:3:23"}]}]},"name":"abi_encode_t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42060:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42068:3:23","type":""}],"src":"41926:366:23"},{"body":{"nodeType":"YulBlock","src":"42469:248:23","statements":[{"nodeType":"YulAssignment","src":"42479:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42491:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"42502:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42487:3:23"},"nodeType":"YulFunctionCall","src":"42487:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42479:4:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42526:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"42537:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42522:3:23"},"nodeType":"YulFunctionCall","src":"42522:17:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42545:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"42551:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42541:3:23"},"nodeType":"YulFunctionCall","src":"42541:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42515:6:23"},"nodeType":"YulFunctionCall","src":"42515:47:23"},"nodeType":"YulExpressionStatement","src":"42515:47:23"},{"nodeType":"YulAssignment","src":"42571:139:23","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42705:4:23"}],"functionName":{"name":"abi_encode_t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42579:124:23"},"nodeType":"YulFunctionCall","src":"42579:131:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42571:4:23"}]}]},"name":"abi_encode_tuple_t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42449:9:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42464:4:23","type":""}],"src":"42298:419:23"},{"body":{"nodeType":"YulBlock","src":"42782:81:23","statements":[{"nodeType":"YulAssignment","src":"42792:65:23","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42849:5:23"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"42832:16:23"},"nodeType":"YulFunctionCall","src":"42832:23:23"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"42823:8:23"},"nodeType":"YulFunctionCall","src":"42823:33:23"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"42805:17:23"},"nodeType":"YulFunctionCall","src":"42805:52:23"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"42792:9:23"}]}]},"name":"convert_t_uint96_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42762:5:23","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"42772:9:23","type":""}],"src":"42723:140:23"},{"body":{"nodeType":"YulBlock","src":"42933:65:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42950:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42985:5:23"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nodeType":"YulIdentifier","src":"42955:29:23"},"nodeType":"YulFunctionCall","src":"42955:36:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42943:6:23"},"nodeType":"YulFunctionCall","src":"42943:49:23"},"nodeType":"YulExpressionStatement","src":"42943:49:23"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42921:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"42928:3:23","type":""}],"src":"42869:129:23"},{"body":{"nodeType":"YulBlock","src":"43129:205:23","statements":[{"nodeType":"YulAssignment","src":"43139:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43151:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"43162:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43147:3:23"},"nodeType":"YulFunctionCall","src":"43147:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43139:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43218:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43231:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"43242:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43227:3:23"},"nodeType":"YulFunctionCall","src":"43227:17:23"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"43175:42:23"},"nodeType":"YulFunctionCall","src":"43175:70:23"},"nodeType":"YulExpressionStatement","src":"43175:70:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"43299:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43312:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"43323:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43308:3:23"},"nodeType":"YulFunctionCall","src":"43308:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"43255:43:23"},"nodeType":"YulFunctionCall","src":"43255:72:23"},"nodeType":"YulExpressionStatement","src":"43255:72:23"}]},"name":"abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43093:9:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"43105:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"43113:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43124:4:23","type":""}],"src":"43004:330:23"},{"body":{"nodeType":"YulBlock","src":"43398:40:23","statements":[{"nodeType":"YulAssignment","src":"43409:22:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43425:5:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43419:5:23"},"nodeType":"YulFunctionCall","src":"43419:12:23"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"43409:6:23"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43381:5:23","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"43391:6:23","type":""}],"src":"43340:98:23"},{"body":{"nodeType":"YulBlock","src":"43539:73:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43556:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"43561:6:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43549:6:23"},"nodeType":"YulFunctionCall","src":"43549:19:23"},"nodeType":"YulExpressionStatement","src":"43549:19:23"},{"nodeType":"YulAssignment","src":"43577:29:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43596:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"43601:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43592:3:23"},"nodeType":"YulFunctionCall","src":"43592:14:23"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"43577:11:23"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43511:3:23","type":""},{"name":"length","nodeType":"YulTypedName","src":"43516:6:23","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"43527:11:23","type":""}],"src":"43444:168:23"},{"body":{"nodeType":"YulBlock","src":"43708:283:23","statements":[{"nodeType":"YulVariableDeclaration","src":"43718:52:23","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43764:5:23"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"43732:31:23"},"nodeType":"YulFunctionCall","src":"43732:38:23"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"43722:6:23","type":""}]},{"nodeType":"YulAssignment","src":"43779:77:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43844:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"43849:6:23"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43786:57:23"},"nodeType":"YulFunctionCall","src":"43786:70:23"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43779:3:23"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43904:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"43911:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43900:3:23"},"nodeType":"YulFunctionCall","src":"43900:16:23"},{"name":"pos","nodeType":"YulIdentifier","src":"43918:3:23"},{"name":"length","nodeType":"YulIdentifier","src":"43923:6:23"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"43865:34:23"},"nodeType":"YulFunctionCall","src":"43865:65:23"},"nodeType":"YulExpressionStatement","src":"43865:65:23"},{"nodeType":"YulAssignment","src":"43939:46:23","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43950:3:23"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"43977:6:23"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"43955:21:23"},"nodeType":"YulFunctionCall","src":"43955:29:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43946:3:23"},"nodeType":"YulFunctionCall","src":"43946:39:23"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43939:3:23"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43689:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"43696:3:23","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43704:3:23","type":""}],"src":"43618:373:23"},{"body":{"nodeType":"YulBlock","src":"44197:440:23","statements":[{"nodeType":"YulAssignment","src":"44207:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44219:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"44230:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44215:3:23"},"nodeType":"YulFunctionCall","src":"44215:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44207:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"44288:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44301:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"44312:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44297:3:23"},"nodeType":"YulFunctionCall","src":"44297:17:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"44244:43:23"},"nodeType":"YulFunctionCall","src":"44244:71:23"},"nodeType":"YulExpressionStatement","src":"44244:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"44369:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44382:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"44393:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44378:3:23"},"nodeType":"YulFunctionCall","src":"44378:18:23"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"44325:43:23"},"nodeType":"YulFunctionCall","src":"44325:72:23"},"nodeType":"YulExpressionStatement","src":"44325:72:23"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"44451:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44464:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"44475:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44460:3:23"},"nodeType":"YulFunctionCall","src":"44460:18:23"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"44407:43:23"},"nodeType":"YulFunctionCall","src":"44407:72:23"},"nodeType":"YulExpressionStatement","src":"44407:72:23"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44500:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"44511:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44496:3:23"},"nodeType":"YulFunctionCall","src":"44496:18:23"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44520:4:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"44526:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44516:3:23"},"nodeType":"YulFunctionCall","src":"44516:20:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44489:6:23"},"nodeType":"YulFunctionCall","src":"44489:48:23"},"nodeType":"YulExpressionStatement","src":"44489:48:23"},{"nodeType":"YulAssignment","src":"44546:84:23","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"44616:6:23"},{"name":"tail","nodeType":"YulIdentifier","src":"44625:4:23"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44554:61:23"},"nodeType":"YulFunctionCall","src":"44554:76:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44546:4:23"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44145:9:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"44157:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"44165:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"44173:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"44181:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44192:4:23","type":""}],"src":"43997:640:23"},{"body":{"nodeType":"YulBlock","src":"44705:79:23","statements":[{"nodeType":"YulAssignment","src":"44715:22:23","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"44730:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"44724:5:23"},"nodeType":"YulFunctionCall","src":"44724:13:23"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"44715:5:23"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44772:5:23"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"44746:25:23"},"nodeType":"YulFunctionCall","src":"44746:32:23"},"nodeType":"YulExpressionStatement","src":"44746:32:23"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44683:6:23","type":""},{"name":"end","nodeType":"YulTypedName","src":"44691:3:23","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"44699:5:23","type":""}],"src":"44643:141:23"},{"body":{"nodeType":"YulBlock","src":"44866:273:23","statements":[{"body":{"nodeType":"YulBlock","src":"44912:83:23","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"44914:77:23"},"nodeType":"YulFunctionCall","src":"44914:79:23"},"nodeType":"YulExpressionStatement","src":"44914:79:23"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"44887:7:23"},{"name":"headStart","nodeType":"YulIdentifier","src":"44896:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44883:3:23"},"nodeType":"YulFunctionCall","src":"44883:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"44908:2:23","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"44879:3:23"},"nodeType":"YulFunctionCall","src":"44879:32:23"},"nodeType":"YulIf","src":"44876:119:23"},{"nodeType":"YulBlock","src":"45005:127:23","statements":[{"nodeType":"YulVariableDeclaration","src":"45020:15:23","value":{"kind":"number","nodeType":"YulLiteral","src":"45034:1:23","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"45024:6:23","type":""}]},{"nodeType":"YulAssignment","src":"45049:73:23","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45094:9:23"},{"name":"offset","nodeType":"YulIdentifier","src":"45105:6:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45090:3:23"},"nodeType":"YulFunctionCall","src":"45090:22:23"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"45114:7:23"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"45059:30:23"},"nodeType":"YulFunctionCall","src":"45059:63:23"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"45049:6:23"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44836:9:23","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"44847:7:23","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"44859:6:23","type":""}],"src":"44790:349:23"},{"body":{"nodeType":"YulBlock","src":"45173:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45190:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"45193:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45183:6:23"},"nodeType":"YulFunctionCall","src":"45183:88:23"},"nodeType":"YulExpressionStatement","src":"45183:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45287:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"45290:4:23","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45280:6:23"},"nodeType":"YulFunctionCall","src":"45280:15:23"},"nodeType":"YulExpressionStatement","src":"45280:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45311:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"45314:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"45304:6:23"},"nodeType":"YulFunctionCall","src":"45304:15:23"},"nodeType":"YulExpressionStatement","src":"45304:15:23"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"45145:180:23"},{"body":{"nodeType":"YulBlock","src":"45376:32:23","statements":[{"nodeType":"YulAssignment","src":"45386:16:23","value":{"name":"value","nodeType":"YulIdentifier","src":"45397:5:23"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"45386:7:23"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45358:5:23","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"45368:7:23","type":""}],"src":"45331:77:23"},{"body":{"nodeType":"YulBlock","src":"45479:53:23","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45496:3:23"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45519:5:23"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"45501:17:23"},"nodeType":"YulFunctionCall","src":"45501:24:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45489:6:23"},"nodeType":"YulFunctionCall","src":"45489:37:23"},"nodeType":"YulExpressionStatement","src":"45489:37:23"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45467:5:23","type":""},{"name":"pos","nodeType":"YulTypedName","src":"45474:3:23","type":""}],"src":"45414:118:23"},{"body":{"nodeType":"YulBlock","src":"45636:124:23","statements":[{"nodeType":"YulAssignment","src":"45646:26:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45658:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"45669:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45654:3:23"},"nodeType":"YulFunctionCall","src":"45654:18:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45646:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"45726:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45739:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"45750:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45735:3:23"},"nodeType":"YulFunctionCall","src":"45735:17:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"45682:43:23"},"nodeType":"YulFunctionCall","src":"45682:71:23"},"nodeType":"YulExpressionStatement","src":"45682:71:23"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45608:9:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"45620:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45631:4:23","type":""}],"src":"45538:222:23"},{"body":{"nodeType":"YulBlock","src":"45794:152:23","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45811:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"45814:77:23","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45804:6:23"},"nodeType":"YulFunctionCall","src":"45804:88:23"},"nodeType":"YulExpressionStatement","src":"45804:88:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45908:1:23","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"45911:4:23","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45901:6:23"},"nodeType":"YulFunctionCall","src":"45901:15:23"},"nodeType":"YulExpressionStatement","src":"45901:15:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45932:1:23","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"45935:4:23","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"45925:6:23"},"nodeType":"YulFunctionCall","src":"45925:15:23"},"nodeType":"YulExpressionStatement","src":"45925:15:23"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"45766:180:23"},{"body":{"nodeType":"YulBlock","src":"46130:367:23","statements":[{"nodeType":"YulAssignment","src":"46140:27:23","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46152:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"46163:3:23","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46148:3:23"},"nodeType":"YulFunctionCall","src":"46148:19:23"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46140:4:23"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"46221:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46234:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"46245:1:23","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46230:3:23"},"nodeType":"YulFunctionCall","src":"46230:17:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"46177:43:23"},"nodeType":"YulFunctionCall","src":"46177:71:23"},"nodeType":"YulExpressionStatement","src":"46177:71:23"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"46298:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46311:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"46322:2:23","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46307:3:23"},"nodeType":"YulFunctionCall","src":"46307:18:23"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"46258:39:23"},"nodeType":"YulFunctionCall","src":"46258:68:23"},"nodeType":"YulExpressionStatement","src":"46258:68:23"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"46380:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46393:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"46404:2:23","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46389:3:23"},"nodeType":"YulFunctionCall","src":"46389:18:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"46336:43:23"},"nodeType":"YulFunctionCall","src":"46336:72:23"},"nodeType":"YulExpressionStatement","src":"46336:72:23"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"46462:6:23"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46475:9:23"},{"kind":"number","nodeType":"YulLiteral","src":"46486:2:23","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46471:3:23"},"nodeType":"YulFunctionCall","src":"46471:18:23"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"46418:43:23"},"nodeType":"YulFunctionCall","src":"46418:72:23"},"nodeType":"YulExpressionStatement","src":"46418:72:23"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46078:9:23","type":""},{"name":"value3","nodeType":"YulTypedName","src":"46090:6:23","type":""},{"name":"value2","nodeType":"YulTypedName","src":"46098:6:23","type":""},{"name":"value1","nodeType":"YulTypedName","src":"46106:6:23","type":""},{"name":"value0","nodeType":"YulTypedName","src":"46114:6:23","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46125:4:23","type":""}],"src":"45952:545:23"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint96(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint8(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_ec495453922ae9023946eb51c1406acdd92df8b193b46cc506c2448af3a80c69(memPtr) {\n\n        mstore(add(memPtr, 0), \"only 1 token per tx\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec495453922ae9023946eb51c1406acdd92df8b193b46cc506c2448af3a80c69_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_ec495453922ae9023946eb51c1406acdd92df8b193b46cc506c2448af3a80c69(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec495453922ae9023946eb51c1406acdd92df8b193b46cc506c2448af3a80c69__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec495453922ae9023946eb51c1406acdd92df8b193b46cc506c2448af3a80c69_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d(memPtr) {\n\n        mstore(add(memPtr, 0), \"public sold out\")\n\n    }\n\n    function abi_encode_t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ee57a9a5bd164c78d42924167f3b883fdea1c7bf398d264ae0711ba15fd7f25d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877(memPtr) {\n\n        mstore(add(memPtr, 0), \"incorrect payment\")\n\n    }\n\n    function abi_encode_t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_036644d7a9408885dca694f272e272a5a516b04835d66be847855d70ebcc9877_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920(memPtr) {\n\n        mstore(add(memPtr, 0), \"no funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5ecd61d07dd32e56f162fd1987d09919b199aa83da4f59e657236f691a446920_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1(memPtr) {\n\n        mstore(add(memPtr, 0), \"trusted signer not set\")\n\n    }\n\n    function abi_encode_t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d066d76036cd19a61f7e411f897353efe23e85e338a7f726ec5b7e78aaf416d1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3(memPtr) {\n\n        mstore(add(memPtr, 0), \"already claimed on-chain\")\n\n    }\n\n    function abi_encode_t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d87ebe3692f69270d3af48b6f40a5d5190032ab886bcf8b761994c02bcd0e3e3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527(memPtr) {\n\n        mstore(add(memPtr, 0), \"/\")\n\n    }\n\n    function abi_encode_t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527(pos)\n        end := add(pos, 1)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid variant\")\n\n    }\n\n    function abi_encode_t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2c6ca93105493bd4216c2ef7373252d4ad73fde495a422dc8a2e522618971662_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e(memPtr) {\n\n        mstore(add(memPtr, 0), \"not owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277(memPtr) {\n\n        mstore(add(memPtr, 0), \"only neutral tokens can be trans\")\n\n        mstore(add(memPtr, 32), \"formed\")\n\n    }\n\n    function abi_encode_t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_db284babc7f4b7ee878ec166dedf1f54c5c4bc6c5ad7afb155418822d9454277_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint96(value)))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":23,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106102255760003560e01c8063715018a611610123578063b88d4fde116100ab578063e8a3d4851161006f578063e8a3d48514610841578063e985e9c51461086c578063f2fde38b146108a9578063f74d5480146108d2578063f78f647c146108fd57610225565b8063b88d4fde1461074a578063bcea0fec14610773578063c87b56dd1461079c578063dd46edb8146107d9578063e00dd1611461081657610225565b8063938e3d7b116100f2578063938e3d7b1461067757806395d89b41146106a0578063a22cb465146106cb578063a4f4f8af146106f4578063b7ec20861461071f57610225565b8063715018a6146105cf5780638462151c146105e65780638da5cb5b1461062357806391b7f5ed1461064e57610225565b80632a55205a116101b157806351cff8d91161017557806351cff8d9146104da57806355f804b31461050357806356a1c7011461052c5780636352211e1461055557806370a082311461059257610225565b80632a55205a146103dd5780632db115441461041b5780632f745c591461043757806342842e0e146104745780634f6ccce71461049d57610225565b8063095ea7b3116101f8578063095ea7b3146102f857806318160ddd146103215780631a02b69e1461034c57806323b872dd1461038957806326a74d8e146103b257610225565b806301ffc9a71461022a57806304634d8d1461026757806306fdde0314610290578063081812fc146102bb575b600080fd5b34801561023657600080fd5b50610251600480360381019061024c919061379b565b610926565b60405161025e91906137e3565b60405180910390f35b34801561027357600080fd5b5061028e600480360381019061028991906138a0565b610938565b005b34801561029c57600080fd5b506102a561094e565b6040516102b29190613970565b60405180910390f35b3480156102c757600080fd5b506102e260048036038101906102dd91906139c8565b6109e0565b6040516102ef9190613a04565b60405180910390f35b34801561030457600080fd5b5061031f600480360381019061031a9190613a1f565b6109fc565b005b34801561032d57600080fd5b50610336610a12565b6040516103439190613a6e565b60405180910390f35b34801561035857600080fd5b50610373600480360381019061036e9190613a89565b610a1f565b60405161038091906137e3565b60405180910390f35b34801561039557600080fd5b506103b060048036038101906103ab9190613ab6565b610a3f565b005b3480156103be57600080fd5b506103c7610b41565b6040516103d49190613a6e565b60405180910390f35b3480156103e957600080fd5b5061040460048036038101906103ff9190613b09565b610b47565b604051610412929190613b49565b60405180910390f35b610435600480360381019061043091906139c8565b610c77565b005b34801561044357600080fd5b5061045e60048036038101906104599190613a1f565b610e3d565b60405161046b9190613a6e565b60405180910390f35b34801561048057600080fd5b5061049b60048036038101906104969190613ab6565b610ee6565b005b3480156104a957600080fd5b506104c460048036038101906104bf91906139c8565b610f06565b6040516104d19190613a6e565b60405180910390f35b3480156104e657600080fd5b5061050160048036038101906104fc9190613bb0565b610f7c565b005b34801561050f57600080fd5b5061052a60048036038101906105259190613d12565b61114a565b005b34801561053857600080fd5b50610553600480360381019061054e9190613a89565b61119c565b005b34801561056157600080fd5b5061057c600480360381019061057791906139c8565b61122b565b6040516105899190613a04565b60405180910390f35b34801561059e57600080fd5b506105b960048036038101906105b49190613a89565b61123d565b6040516105c69190613a6e565b60405180910390f35b3480156105db57600080fd5b506105e46112f7565b005b3480156105f257600080fd5b5061060d60048036038101906106089190613a89565b61130b565b60405161061a9190613e19565b60405180910390f35b34801561062f57600080fd5b506106386113b9565b6040516106459190613a04565b60405180910390f35b34801561065a57600080fd5b50610675600480360381019061067091906139c8565b6113e3565b005b34801561068357600080fd5b5061069e60048036038101906106999190613d12565b6113f5565b005b3480156106ac57600080fd5b506106b5611447565b6040516106c29190613970565b60405180910390f35b3480156106d757600080fd5b506106f260048036038101906106ed9190613e67565b6114d9565b005b34801561070057600080fd5b506107096114ef565b6040516107169190613a6e565b60405180910390f35b34801561072b57600080fd5b506107346114f5565b6040516107419190613a6e565b60405180910390f35b34801561075657600080fd5b50610771600480360381019061076c9190613f48565b6114fb565b005b34801561077f57600080fd5b5061079a6004803603810190610795919061402b565b611520565b005b3480156107a857600080fd5b506107c360048036038101906107be91906139c8565b611862565b6040516107d09190613970565b60405180910390f35b3480156107e557600080fd5b5061080060048036038101906107fb91906139c8565b611a96565b60405161080d9190614094565b60405180910390f35b34801561082257600080fd5b5061082b611ab6565b6040516108389190613a6e565b60405180910390f35b34801561084d57600080fd5b50610856611abc565b6040516108639190613970565b60405180910390f35b34801561087857600080fd5b50610893600480360381019061088e91906140af565b611b4e565b6040516108a091906137e3565b60405180910390f35b3480156108b557600080fd5b506108d060048036038101906108cb9190613a89565b611be2565b005b3480156108de57600080fd5b506108e7611c68565b6040516108f49190613a04565b60405180910390f35b34801561090957600080fd5b50610924600480360381019061091f919061411b565b611c8e565b005b600061093182611e7d565b9050919050565b610940611ef7565b61094a8282611f7e565b5050565b60606000805461095d9061418a565b80601f01602080910402602001604051908101604052809291908181526020018280546109899061418a565b80156109d65780601f106109ab576101008083540402835291602001916109d6565b820191906000526020600020905b8154815290600101906020018083116109b957829003601f168201915b5050505050905090565b60006109eb82612120565b506109f5826121a8565b9050919050565b610a0e8282610a096121e5565b6121ed565b5050565b6000600880549050905090565b60136020528060005260406000206000915054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ab15760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610aa89190613a04565b60405180910390fd5b6000610ac58383610ac06121e5565b6121ff565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b3b578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610b32939291906141bb565b60405180910390fd5b50505050565b600f5481565b6000806000600d6000868152602001908152602001600020905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008260000160149054906101000a90046bffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c2857600c60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150600c60000160149054906101000a90046bffffffffffffffffffffffff1690505b6000610c32612272565b6bffffffffffffffffffffffff16826bffffffffffffffffffffffff1688610c5a9190614221565b610c649190614292565b9050828195509550505050509250929050565b610c7f61227c565b60018114610cc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb99061430f565b60405180910390fd5b600f5481601054610cd3919061432f565b1115610d14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0b906143af565b60405180910390fd5b80601154610d229190614221565b3414610d63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5a9061441b565b60405180910390fd5b60005b81811015610e18576000600e6000815480929190610d839061443b565b919050559050610d9333826122c2565b60006014600083815260200190815260200160002060006101000a81548160ff021916908360ff160217905550803373ffffffffffffffffffffffffffffffffffffffff167f748a2986091c2034d6e93b6f44f771a79f0e1d6acd8a60c68c17d4e1e2feaed260405160405180910390a3508080610e109061443b565b915050610d66565b508060106000828254610e2b919061432f565b92505081905550610e3a6122e0565b50565b6000610e488361123d565b8210610e8d5782826040517fa57d13dc000000000000000000000000000000000000000000000000000000008152600401610e84929190613b49565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b610f01838383604051806020016040528060008152506114fb565b505050565b6000610f10610a12565b8210610f56576000826040517fa57d13dc000000000000000000000000000000000000000000000000000000008152600401610f4d929190613b49565b60405180910390fd5b60088281548110610f6a57610f69614483565b5b90600052602060002001549050919050565b610f84611ef7565b610f8c61227c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ffb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff2906144fe565b60405180910390fd5b600047905060008111611043576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103a9061456a565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051611069906145bb565b60006040518083038185875af1925050503d80600081146110a6576040519150601f19603f3d011682016040523d82523d6000602084013e6110ab565b606091505b50509050806110ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e69061461c565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364836040516111359190613a6e565b60405180910390a250506111476122e0565b50565b611152611ef7565b806015908161116191906147e8565b507ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6816040516111919190613970565b60405180910390a150565b6111a4611ef7565b80601260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f65b80efdb610be9fc8e0cc1ab30c9f0b98b538c1392f298ec6ff69ae0768b74e60405160405180910390a250565b600061123682612120565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112b05760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016112a79190613a04565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6112ff611ef7565b61130960006122ea565b565b606060006113188361123d565b905060008167ffffffffffffffff81111561133657611335613be7565b5b6040519080825280602002602001820160405280156113645781602001602082028036833780820191505090505b50905060005b828110156113ae5761137c8582610e3d565b82828151811061138f5761138e614483565b5b60200260200101818152505080806113a69061443b565b91505061136a565b508092505050919050565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6113eb611ef7565b8060118190555050565b6113fd611ef7565b806016908161140c91906147e8565b507faf497693a87db12ca89131a31edbb3db4bb5702dfb284e8ae7427d185f09112d8160405161143c9190613970565b60405180910390a150565b6060600180546114569061418a565b80601f01602080910402602001604051908101604052809291908181526020018280546114829061418a565b80156114cf5780601f106114a4576101008083540402835291602001916114cf565b820191906000526020600020905b8154815290600101906020018083116114b257829003601f168201915b5050505050905090565b6114eb6114e46121e5565b83836123b0565b5050565b60105481565b60115481565b611506848484610a3f565b61151a6115116121e5565b8585858561251f565b50505050565b61152861227c565b600073ffffffffffffffffffffffffffffffffffffffff16601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036115b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b090614906565b60405180910390fd5b601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163d90614972565b60405180910390fd5b600030463360405160200161165d939291906149fb565b6040516020818303038152906040528051906020012090506000611680826126d0565b905060006116d28286868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050612706565b9050601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175b90614a84565b60405180910390fd5b6001601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600e60008154809291906117d19061443b565b9190505590506117e133826122c2565b60006014600083815260200190815260200160002060006101000a81548160ff021916908360ff160217905550803373ffffffffffffffffffffffffffffffffffffffff167fe9a10c23ea49d40011e019f115185f0bc29740208a504d35f951dca74ba37eac60405160405180910390a35050505061185e6122e0565b5050565b606061186d82612120565b506000611878612732565b905060006014600085815260200190815260200160002060009054906101000a900460ff16905060006040518060400160405280600c81526020017f6e65757472616c2e6a736f6e0000000000000000000000000000000000000000815250905060018260ff1603611921576040518060400160405280600a81526020017f616e67656c2e6a736f6e000000000000000000000000000000000000000000008152509050611966565b60028260ff1603611965576040518060400160405280600a81526020017f646576696c2e6a736f6e0000000000000000000000000000000000000000000081525090505b5b6000839050600081510361199f57816040516020016119859190614ae0565b604051602081830303815290604052945050505050611a91565b600081600183516119b09190614af7565b815181106119c1576119c0614483565b5b602001015160f81c60f81b90507f2f000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603611a67578483604051602001611a4c929190614b2b565b60405160208183030381529060405295505050505050611a91565b8483604051602001611a7a929190614b9b565b604051602081830303815290604052955050505050505b919050565b60146020528060005260406000206000915054906101000a900460ff1681565b600e5481565b606060168054611acb9061418a565b80601f0160208091040260200160405190810160405280929190818152602001828054611af79061418a565b8015611b445780601f10611b1957610100808354040283529160200191611b44565b820191906000526020600020905b815481529060010190602001808311611b2757829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611bea611ef7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611c5c5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611c539190613a04565b60405180910390fd5b611c65816122ea565b50565b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611c9661227c565b60018160ff161480611cab575060028160ff16145b611cea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ce190614c16565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16611d0a8361122b565b73ffffffffffffffffffffffffffffffffffffffff1614611d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5790614c82565b60405180910390fd5b60006014600084815260200190815260200160002060009054906101000a900460ff1660ff1614611dc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dbd90614d14565b60405180910390fd5b611dcf826127c4565b6000600e6000815480929190611de49061443b565b919050559050611df433826122c2565b816014600083815260200190815260200160002060006101000a81548160ff021916908360ff16021790555080833373ffffffffffffffffffffffffffffffffffffffff167f598067bc48ef38b7785eda047c375b2d45f2b845404b58dcdfccf40e7f38d86985604051611e689190614094565b60405180910390a450611e796122e0565b5050565b60007f2a55205a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611ef05750611eef8261284a565b5b9050919050565b611eff6121e5565b73ffffffffffffffffffffffffffffffffffffffff16611f1d6113b9565b73ffffffffffffffffffffffffffffffffffffffff1614611f7c57611f406121e5565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611f739190613a04565b60405180910390fd5b565b6000611f88612272565b6bffffffffffffffffffffffff16905080826bffffffffffffffffffffffff161115611fed5781816040517f6f483d09000000000000000000000000000000000000000000000000000000008152600401611fe4929190614d65565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361205f5760006040517fb6d9900a0000000000000000000000000000000000000000000000000000000081526004016120569190613a04565b60405180910390fd5b60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001836bffffffffffffffffffffffff16815250600c60008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550905050505050565b60008061212c836128c4565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361219f57826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016121969190613a6e565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b6121fa8383836001612901565b505050565b60008061220d858585612ac6565b9050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603612267576014600085815260200190815260200160002060006101000a81549060ff02191690555b809150509392505050565b6000612710905090565b6002600b54036122b8576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600b81905550565b6122dc828260405180602001604052806000815250612be3565b5050565b6001600b81905550565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361242157816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016124189190613a04565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161251291906137e3565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156126c9578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b815260040161257e9493929190614de3565b6020604051808303816000875af19250505080156125ba57506040513d601f19601f820116820180604052508101906125b79190614e44565b60015b61263e573d80600081146125ea576040519150601f19603f3d011682016040523d82523d6000602084013e6125ef565b606091505b50600081510361263657836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161262d9190613a04565b60405180910390fd5b805160208201fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146126c757836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016126be9190613a04565b60405180910390fd5b505b5050505050565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b6000806000806127168686612c07565b9250925092506127268282612c63565b82935050505092915050565b6060601580546127419061418a565b80601f016020809104026020016040519081016040528092919081815260200182805461276d9061418a565b80156127ba5780601f1061278f576101008083540402835291602001916127ba565b820191906000526020600020905b81548152906001019060200180831161279d57829003601f168201915b5050505050905090565b60006127d360008360006121ff565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361284657816040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161283d9190613a6e565b60405180910390fd5b5050565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806128bd57506128bc82612dc7565b5b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061293a5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15612a6e57600061294a84612120565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156129b557508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156129c857506129c68184611b4e565b155b15612a0a57826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401612a019190613a04565b60405180910390fd5b8115612a6c57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b600080612ad4858585612ea9565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612b1857612b13846130c3565b612b57565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612b5657612b55818561310c565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603612b9957612b94846131f7565b612bd8565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612bd757612bd685856132c8565b5b5b809150509392505050565b612bed8383613353565b612c02612bf86121e5565b600085858561251f565b505050565b60008060006041845103612c4c5760008060006020870151925060408701519150606087015160001a9050612c3e8882858561344c565b955095509550505050612c5c565b60006002855160001b9250925092505b9250925092565b60006003811115612c7757612c76614e71565b5b826003811115612c8a57612c89614e71565b5b0315612dc35760016003811115612ca457612ca3614e71565b5b826003811115612cb757612cb6614e71565b5b03612cee576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115612d0257612d01614e71565b5b826003811115612d1557612d14614e71565b5b03612d5a578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401612d519190613a6e565b60405180910390fd5b600380811115612d6d57612d6c614e71565b5b826003811115612d8057612d7f614e71565b5b03612dc257806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401612db99190614eb9565b60405180910390fd5b5b5050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612e9257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80612ea25750612ea182613540565b5b9050919050565b600080612eb5846128c4565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612ef757612ef68184866135aa565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612f8857612f39600085600080612901565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461300b576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006131178361123d565b90506000600760008481526020019081526020016000205490506000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508282146131c35760008160008581526020019081526020016000205490508082600085815260200190815260200160002081905550826007600083815260200190815260200160002081905550505b6007600085815260200190815260200160002060009055806000848152602001908152602001600020600090555050505050565b6000600160088054905061320b9190614af7565b905060006009600084815260200190815260200160002054905060006008838154811061323b5761323a614483565b5b90600052602060002001549050806008838154811061325d5761325c614483565b5b9060005260206000200181905550816009600083815260200190815260200160002081905550600960008581526020019081526020016000206000905560088054806132ac576132ab614ed4565b5b6001900381819060005260206000200160009055905550505050565b600060016132d58461123d565b6132df9190614af7565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036133c55760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016133bc9190613a04565b60405180910390fd5b60006133d3838360006121ff565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146134475760006040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161343e9190613a04565b60405180910390fd5b505050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c111561348c576000600385925092509250613536565b6000600188888888604051600081526020016040526040516134b19493929190614f03565b6020604051602081039080840390855afa1580156134d3573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361352757600060016000801b93509350935050613536565b8060008060001b935093509350505b9450945094915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6135b583838361366e565b61366957600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361362a57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016136219190613a6e565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401613660929190613b49565b60405180910390fd5b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561372657508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806136e757506136e68484611b4e565b5b8061372557508273ffffffffffffffffffffffffffffffffffffffff1661370d836121a8565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61377881613743565b811461378357600080fd5b50565b6000813590506137958161376f565b92915050565b6000602082840312156137b1576137b0613739565b5b60006137bf84828501613786565b91505092915050565b60008115159050919050565b6137dd816137c8565b82525050565b60006020820190506137f860008301846137d4565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613829826137fe565b9050919050565b6138398161381e565b811461384457600080fd5b50565b60008135905061385681613830565b92915050565b60006bffffffffffffffffffffffff82169050919050565b61387d8161385c565b811461388857600080fd5b50565b60008135905061389a81613874565b92915050565b600080604083850312156138b7576138b6613739565b5b60006138c585828601613847565b92505060206138d68582860161388b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561391a5780820151818401526020810190506138ff565b60008484015250505050565b6000601f19601f8301169050919050565b6000613942826138e0565b61394c81856138eb565b935061395c8185602086016138fc565b61396581613926565b840191505092915050565b6000602082019050818103600083015261398a8184613937565b905092915050565b6000819050919050565b6139a581613992565b81146139b057600080fd5b50565b6000813590506139c28161399c565b92915050565b6000602082840312156139de576139dd613739565b5b60006139ec848285016139b3565b91505092915050565b6139fe8161381e565b82525050565b6000602082019050613a1960008301846139f5565b92915050565b60008060408385031215613a3657613a35613739565b5b6000613a4485828601613847565b9250506020613a55858286016139b3565b9150509250929050565b613a6881613992565b82525050565b6000602082019050613a836000830184613a5f565b92915050565b600060208284031215613a9f57613a9e613739565b5b6000613aad84828501613847565b91505092915050565b600080600060608486031215613acf57613ace613739565b5b6000613add86828701613847565b9350506020613aee86828701613847565b9250506040613aff868287016139b3565b9150509250925092565b60008060408385031215613b2057613b1f613739565b5b6000613b2e858286016139b3565b9250506020613b3f858286016139b3565b9150509250929050565b6000604082019050613b5e60008301856139f5565b613b6b6020830184613a5f565b9392505050565b6000613b7d826137fe565b9050919050565b613b8d81613b72565b8114613b9857600080fd5b50565b600081359050613baa81613b84565b92915050565b600060208284031215613bc657613bc5613739565b5b6000613bd484828501613b9b565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613c1f82613926565b810181811067ffffffffffffffff82111715613c3e57613c3d613be7565b5b80604052505050565b6000613c5161372f565b9050613c5d8282613c16565b919050565b600067ffffffffffffffff821115613c7d57613c7c613be7565b5b613c8682613926565b9050602081019050919050565b82818337600083830152505050565b6000613cb5613cb084613c62565b613c47565b905082815260208101848484011115613cd157613cd0613be2565b5b613cdc848285613c93565b509392505050565b600082601f830112613cf957613cf8613bdd565b5b8135613d09848260208601613ca2565b91505092915050565b600060208284031215613d2857613d27613739565b5b600082013567ffffffffffffffff811115613d4657613d4561373e565b5b613d5284828501613ce4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613d9081613992565b82525050565b6000613da28383613d87565b60208301905092915050565b6000602082019050919050565b6000613dc682613d5b565b613dd08185613d66565b9350613ddb83613d77565b8060005b83811015613e0c578151613df38882613d96565b9750613dfe83613dae565b925050600181019050613ddf565b5085935050505092915050565b60006020820190508181036000830152613e338184613dbb565b905092915050565b613e44816137c8565b8114613e4f57600080fd5b50565b600081359050613e6181613e3b565b92915050565b60008060408385031215613e7e57613e7d613739565b5b6000613e8c85828601613847565b9250506020613e9d85828601613e52565b9150509250929050565b600067ffffffffffffffff821115613ec257613ec1613be7565b5b613ecb82613926565b9050602081019050919050565b6000613eeb613ee684613ea7565b613c47565b905082815260208101848484011115613f0757613f06613be2565b5b613f12848285613c93565b509392505050565b600082601f830112613f2f57613f2e613bdd565b5b8135613f3f848260208601613ed8565b91505092915050565b60008060008060808587031215613f6257613f61613739565b5b6000613f7087828801613847565b9450506020613f8187828801613847565b9350506040613f92878288016139b3565b925050606085013567ffffffffffffffff811115613fb357613fb261373e565b5b613fbf87828801613f1a565b91505092959194509250565b600080fd5b600080fd5b60008083601f840112613feb57613fea613bdd565b5b8235905067ffffffffffffffff81111561400857614007613fcb565b5b60208301915083600182028301111561402457614023613fd0565b5b9250929050565b6000806020838503121561404257614041613739565b5b600083013567ffffffffffffffff8111156140605761405f61373e565b5b61406c85828601613fd5565b92509250509250929050565b600060ff82169050919050565b61408e81614078565b82525050565b60006020820190506140a96000830184614085565b92915050565b600080604083850312156140c6576140c5613739565b5b60006140d485828601613847565b92505060206140e585828601613847565b9150509250929050565b6140f881614078565b811461410357600080fd5b50565b600081359050614115816140ef565b92915050565b6000806040838503121561413257614131613739565b5b6000614140858286016139b3565b925050602061415185828601614106565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806141a257607f821691505b6020821081036141b5576141b461415b565b5b50919050565b60006060820190506141d060008301866139f5565b6141dd6020830185613a5f565b6141ea60408301846139f5565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061422c82613992565b915061423783613992565b925082820261424581613992565b9150828204841483151761425c5761425b6141f2565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061429d82613992565b91506142a883613992565b9250826142b8576142b7614263565b5b828204905092915050565b7f6f6e6c79203120746f6b656e2070657220747800000000000000000000000000600082015250565b60006142f96013836138eb565b9150614304826142c3565b602082019050919050565b60006020820190508181036000830152614328816142ec565b9050919050565b600061433a82613992565b915061434583613992565b925082820190508082111561435d5761435c6141f2565b5b92915050565b7f7075626c696320736f6c64206f75740000000000000000000000000000000000600082015250565b6000614399600f836138eb565b91506143a482614363565b602082019050919050565b600060208201905081810360008301526143c88161438c565b9050919050565b7f696e636f7272656374207061796d656e74000000000000000000000000000000600082015250565b60006144056011836138eb565b9150614410826143cf565b602082019050919050565b60006020820190508181036000830152614434816143f8565b9050919050565b600061444682613992565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614478576144776141f2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f696e76616c696420616464726573730000000000000000000000000000000000600082015250565b60006144e8600f836138eb565b91506144f3826144b2565b602082019050919050565b60006020820190508181036000830152614517816144db565b9050919050565b7f6e6f2066756e6473000000000000000000000000000000000000000000000000600082015250565b60006145546008836138eb565b915061455f8261451e565b602082019050919050565b6000602082019050818103600083015261458381614547565b9050919050565b600081905092915050565b50565b60006145a560008361458a565b91506145b082614595565b600082019050919050565b60006145c682614598565b9150819050919050565b7f7769746864726177206661696c65640000000000000000000000000000000000600082015250565b6000614606600f836138eb565b9150614611826145d0565b602082019050919050565b60006020820190508181036000830152614635816145f9565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261469e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614661565b6146a88683614661565b95508019841693508086168417925050509392505050565b6000819050919050565b60006146e56146e06146db84613992565b6146c0565b613992565b9050919050565b6000819050919050565b6146ff836146ca565b61471361470b826146ec565b84845461466e565b825550505050565b600090565b61472861471b565b6147338184846146f6565b505050565b5b818110156147575761474c600082614720565b600181019050614739565b5050565b601f82111561479c5761476d8161463c565b61477684614651565b81016020851015614785578190505b61479961479185614651565b830182614738565b50505b505050565b600082821c905092915050565b60006147bf600019846008026147a1565b1980831691505092915050565b60006147d883836147ae565b9150826002028217905092915050565b6147f1826138e0565b67ffffffffffffffff81111561480a57614809613be7565b5b614814825461418a565b61481f82828561475b565b600060209050601f8311600181146148525760008415614840578287015190505b61484a85826147cc565b8655506148b2565b601f1984166148608661463c565b60005b8281101561488857848901518255600182019150602085019450602081019050614863565b868310156148a557848901516148a1601f8916826147ae565b8355505b6001600288020188555050505b505050505050565b7f74727573746564207369676e6572206e6f742073657400000000000000000000600082015250565b60006148f06016836138eb565b91506148fb826148ba565b602082019050919050565b6000602082019050818103600083015261491f816148e3565b9050919050565b7f616c726561647920636c61696d6564206f6e2d636861696e0000000000000000600082015250565b600061495c6018836138eb565b915061496782614926565b602082019050919050565b6000602082019050818103600083015261498b8161494f565b9050919050565b60008160601b9050919050565b60006149aa82614992565b9050919050565b60006149bc8261499f565b9050919050565b6149d46149cf8261381e565b6149b1565b82525050565b6000819050919050565b6149f56149f082613992565b6149da565b82525050565b6000614a0782866149c3565b601482019150614a1782856149e4565b602082019150614a2782846149c3565b601482019150819050949350505050565b7f696e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b6000614a6e6011836138eb565b9150614a7982614a38565b602082019050919050565b60006020820190508181036000830152614a9d81614a61565b9050919050565b600081905092915050565b6000614aba826138e0565b614ac48185614aa4565b9350614ad48185602086016138fc565b80840191505092915050565b6000614aec8284614aaf565b915081905092915050565b6000614b0282613992565b9150614b0d83613992565b9250828203905081811115614b2557614b246141f2565b5b92915050565b6000614b378285614aaf565b9150614b438284614aaf565b91508190509392505050565b7f2f00000000000000000000000000000000000000000000000000000000000000600082015250565b6000614b85600183614aa4565b9150614b9082614b4f565b600182019050919050565b6000614ba78285614aaf565b9150614bb282614b78565b9150614bbe8284614aaf565b91508190509392505050565b7f696e76616c69642076617269616e740000000000000000000000000000000000600082015250565b6000614c00600f836138eb565b9150614c0b82614bca565b602082019050919050565b60006020820190508181036000830152614c2f81614bf3565b9050919050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b6000614c6c6009836138eb565b9150614c7782614c36565b602082019050919050565b60006020820190508181036000830152614c9b81614c5f565b9050919050565b7f6f6e6c79206e65757472616c20746f6b656e732063616e206265207472616e7360008201527f666f726d65640000000000000000000000000000000000000000000000000000602082015250565b6000614cfe6026836138eb565b9150614d0982614ca2565b604082019050919050565b60006020820190508181036000830152614d2d81614cf1565b9050919050565b6000614d4f614d4a614d458461385c565b6146c0565b613992565b9050919050565b614d5f81614d34565b82525050565b6000604082019050614d7a6000830185614d56565b614d876020830184613a5f565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000614db582614d8e565b614dbf8185614d99565b9350614dcf8185602086016138fc565b614dd881613926565b840191505092915050565b6000608082019050614df860008301876139f5565b614e0560208301866139f5565b614e126040830185613a5f565b8181036060830152614e248184614daa565b905095945050505050565b600081519050614e3e8161376f565b92915050565b600060208284031215614e5a57614e59613739565b5b6000614e6884828501614e2f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000819050919050565b614eb381614ea0565b82525050565b6000602082019050614ece6000830184614eaa565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000608082019050614f186000830187614eaa565b614f256020830186614085565b614f326040830185614eaa565b614f3f6060830184614eaa565b9594505050505056fea2646970667358221220cd2f99c935ddf93bee8abe64a6e30632ab1b3cac67dd72b76a5a6c0f8aab530c64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x225 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xE8A3D485 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x841 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x86C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8A9 JUMPI DUP1 PUSH4 0xF74D5480 EQ PUSH2 0x8D2 JUMPI DUP1 PUSH4 0xF78F647C EQ PUSH2 0x8FD JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x74A JUMPI DUP1 PUSH4 0xBCEA0FEC EQ PUSH2 0x773 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x79C JUMPI DUP1 PUSH4 0xDD46EDB8 EQ PUSH2 0x7D9 JUMPI DUP1 PUSH4 0xE00DD161 EQ PUSH2 0x816 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x938E3D7B GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x677 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x6CB JUMPI DUP1 PUSH4 0xA4F4F8AF EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0xB7EC2086 EQ PUSH2 0x71F JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0x8462151C EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x64E JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x2A55205A GT PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x51CFF8D9 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x56A1C701 EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x592 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x2A55205A EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x2DB11544 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x49D JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x1A02B69E EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x26A74D8E EQ PUSH2 0x3B2 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x4634D8D EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x379B JUMP JUMPDEST PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x37E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x38A0 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH2 0x94E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x39C8 JUMP JUMPDEST PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x3A1F JUMP JUMPDEST PUSH2 0x9FC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x336 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x3A89 JUMP JUMPDEST PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x37E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x3AB6 JUMP JUMPDEST PUSH2 0xA3F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH2 0xB41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x404 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x3B09 JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x412 SWAP3 SWAP2 SWAP1 PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x435 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x39C8 JUMP JUMPDEST PUSH2 0xC77 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x3A1F JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x3AB6 JUMP JUMPDEST PUSH2 0xEE6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x39C8 JUMP JUMPDEST PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x501 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FC SWAP2 SWAP1 PUSH2 0x3BB0 JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x525 SWAP2 SWAP1 PUSH2 0x3D12 JUMP JUMPDEST PUSH2 0x114A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x553 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x3A89 JUMP JUMPDEST PUSH2 0x119C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x39C8 JUMP JUMPDEST PUSH2 0x122B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0x3A89 JUMP JUMPDEST PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E4 PUSH2 0x12F7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x3A89 JUMP JUMPDEST PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x3E19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x638 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x645 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x675 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x670 SWAP2 SWAP1 PUSH2 0x39C8 JUMP JUMPDEST PUSH2 0x13E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x69E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x699 SWAP2 SWAP1 PUSH2 0x3D12 JUMP JUMPDEST PUSH2 0x13F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B5 PUSH2 0x1447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6ED SWAP2 SWAP1 PUSH2 0x3E67 JUMP JUMPDEST PUSH2 0x14D9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x709 PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x734 PUSH2 0x14F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x771 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76C SWAP2 SWAP1 PUSH2 0x3F48 JUMP JUMPDEST PUSH2 0x14FB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x79A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x795 SWAP2 SWAP1 PUSH2 0x402B JUMP JUMPDEST PUSH2 0x1520 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x39C8 JUMP JUMPDEST PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x800 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0x39C8 JUMP JUMPDEST PUSH2 0x1A96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80D SWAP2 SWAP1 PUSH2 0x4094 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82B PUSH2 0x1AB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x838 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x856 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x893 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x88E SWAP2 SWAP1 PUSH2 0x40AF JUMP JUMPDEST PUSH2 0x1B4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8A0 SWAP2 SWAP1 PUSH2 0x37E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0x3A89 JUMP JUMPDEST PUSH2 0x1BE2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E7 PUSH2 0x1C68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x924 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x91F SWAP2 SWAP1 PUSH2 0x411B JUMP JUMPDEST PUSH2 0x1C8E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x931 DUP3 PUSH2 0x1E7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x940 PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x94A DUP3 DUP3 PUSH2 0x1F7E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x95D SWAP1 PUSH2 0x418A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x989 SWAP1 PUSH2 0x418A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9EB DUP3 PUSH2 0x2120 JUMP JUMPDEST POP PUSH2 0x9F5 DUP3 PUSH2 0x21A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA0E DUP3 DUP3 PUSH2 0xA09 PUSH2 0x21E5 JUMP JUMPDEST PUSH2 0x21ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAB1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAC5 DUP4 DUP4 PUSH2 0xAC0 PUSH2 0x21E5 JUMP JUMPDEST PUSH2 0x21FF JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB3B JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB32 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC28 JUMPI PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xC32 PUSH2 0x2272 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH2 0xC5A SWAP2 SWAP1 PUSH2 0x4221 JUMP JUMPDEST PUSH2 0xC64 SWAP2 SWAP1 PUSH2 0x4292 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SWAP6 POP SWAP6 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC7F PUSH2 0x227C JUMP JUMPDEST PUSH1 0x1 DUP2 EQ PUSH2 0xCC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB9 SWAP1 PUSH2 0x430F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SLOAD DUP2 PUSH1 0x10 SLOAD PUSH2 0xCD3 SWAP2 SWAP1 PUSH2 0x432F JUMP JUMPDEST GT ISZERO PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0B SWAP1 PUSH2 0x43AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x11 SLOAD PUSH2 0xD22 SWAP2 SWAP1 PUSH2 0x4221 JUMP JUMPDEST CALLVALUE EQ PUSH2 0xD63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5A SWAP1 PUSH2 0x441B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE18 JUMPI PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD83 SWAP1 PUSH2 0x443B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0xD93 CALLER DUP3 PUSH2 0x22C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x748A2986091C2034D6E93B6F44F771A79F0E1D6ACD8A60C68C17D4E1E2FEAED2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP1 DUP1 PUSH2 0xE10 SWAP1 PUSH2 0x443B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD66 JUMP JUMPDEST POP DUP1 PUSH1 0x10 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE2B SWAP2 SWAP1 PUSH2 0x432F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE3A PUSH2 0x22E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE48 DUP4 PUSH2 0x123D JUMP JUMPDEST DUP3 LT PUSH2 0xE8D JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE84 SWAP3 SWAP2 SWAP1 PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF01 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x14FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF10 PUSH2 0xA12 JUMP JUMPDEST DUP3 LT PUSH2 0xF56 JUMPI PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4D SWAP3 SWAP2 SWAP1 PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF6A JUMPI PUSH2 0xF69 PUSH2 0x4483 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF84 PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0xF8C PUSH2 0x227C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF2 SWAP1 PUSH2 0x44FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1043 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103A SWAP1 PUSH2 0x456A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1069 SWAP1 PUSH2 0x45BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10A6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10AB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x10EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E6 SWAP1 PUSH2 0x461C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1135 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x1147 PUSH2 0x22E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1152 PUSH2 0x1EF7 JUMP JUMPDEST DUP1 PUSH1 0x15 SWAP1 DUP2 PUSH2 0x1161 SWAP2 SWAP1 PUSH2 0x47E8 JUMP JUMPDEST POP PUSH32 0xF9C7803E94E0D3C02900D8A90893A6D5E90DD04D32A4CFE825520F82BF9F32F6 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1191 SWAP2 SWAP1 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x11A4 PUSH2 0x1EF7 JUMP JUMPDEST DUP1 PUSH1 0x12 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x65B80EFDB610BE9FC8E0CC1AB30C9F0B98B538C1392F298EC6FF69AE0768B74E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1236 DUP3 PUSH2 0x2120 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12B0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A7 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12FF PUSH2 0x1EF7 JUMP JUMPDEST PUSH2 0x1309 PUSH1 0x0 PUSH2 0x22EA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1318 DUP4 PUSH2 0x123D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1336 JUMPI PUSH2 0x1335 PUSH2 0x3BE7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1364 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13AE JUMPI PUSH2 0x137C DUP6 DUP3 PUSH2 0xE3D JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x138F JUMPI PUSH2 0x138E PUSH2 0x4483 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x13A6 SWAP1 PUSH2 0x443B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x136A JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13EB PUSH2 0x1EF7 JUMP JUMPDEST DUP1 PUSH1 0x11 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x13FD PUSH2 0x1EF7 JUMP JUMPDEST DUP1 PUSH1 0x16 SWAP1 DUP2 PUSH2 0x140C SWAP2 SWAP1 PUSH2 0x47E8 JUMP JUMPDEST POP PUSH32 0xAF497693A87DB12CA89131A31EDBB3DB4BB5702DFB284E8AE7427D185F09112D DUP2 PUSH1 0x40 MLOAD PUSH2 0x143C SWAP2 SWAP1 PUSH2 0x3970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1456 SWAP1 PUSH2 0x418A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1482 SWAP1 PUSH2 0x418A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14EB PUSH2 0x14E4 PUSH2 0x21E5 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x23B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1506 DUP5 DUP5 DUP5 PUSH2 0xA3F JUMP JUMPDEST PUSH2 0x151A PUSH2 0x1511 PUSH2 0x21E5 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x251F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1528 PUSH2 0x227C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x12 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B0 SWAP1 PUSH2 0x4906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x13 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1646 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163D SWAP1 PUSH2 0x4972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ADDRESS CHAINID CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x165D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1680 DUP3 PUSH2 0x26D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16D2 DUP3 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x2706 JUMP JUMPDEST SWAP1 POP PUSH1 0x12 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1764 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175B SWAP1 PUSH2 0x4A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x13 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x17D1 SWAP1 PUSH2 0x443B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x17E1 CALLER DUP3 PUSH2 0x22C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE9A10C23EA49D40011E019F115185F0BC29740208A504D35F951DCA74BA37EAC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH2 0x185E PUSH2 0x22E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x186D DUP3 PUSH2 0x2120 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1878 PUSH2 0x2732 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E65757472616C2E6A736F6E0000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x1 DUP3 PUSH1 0xFF AND SUB PUSH2 0x1921 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x616E67656C2E6A736F6E00000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0xFF AND SUB PUSH2 0x1965 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646576696C2E6A736F6E00000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x199F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1985 SWAP2 SWAP1 PUSH2 0x4AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP5 POP POP POP POP POP PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0x19B0 SWAP2 SWAP1 PUSH2 0x4AF7 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x19C1 JUMPI PUSH2 0x19C0 PUSH2 0x4483 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL SWAP1 POP PUSH32 0x2F00000000000000000000000000000000000000000000000000000000000000 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x1A67 JUMPI DUP5 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A4C SWAP3 SWAP2 SWAP1 PUSH2 0x4B2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP6 POP POP POP POP POP POP PUSH2 0x1A91 JUMP JUMPDEST DUP5 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A7A SWAP3 SWAP2 SWAP1 PUSH2 0x4B9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP6 POP POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x16 DUP1 SLOAD PUSH2 0x1ACB SWAP1 PUSH2 0x418A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1AF7 SWAP1 PUSH2 0x418A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B44 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B27 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BEA PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C5C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C53 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C65 DUP2 PUSH2 0x22EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x12 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1C96 PUSH2 0x227C JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xFF AND EQ DUP1 PUSH2 0x1CAB JUMPI POP PUSH1 0x2 DUP2 PUSH1 0xFF AND EQ JUMPDEST PUSH2 0x1CEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE1 SWAP1 PUSH2 0x4C16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D0A DUP4 PUSH2 0x122B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D57 SWAP1 PUSH2 0x4C82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x1DC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DBD SWAP1 PUSH2 0x4D14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DCF DUP3 PUSH2 0x27C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1DE4 SWAP1 PUSH2 0x443B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x1DF4 CALLER DUP3 PUSH2 0x22C2 JUMP JUMPDEST DUP2 PUSH1 0x14 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x598067BC48EF38B7785EDA047C375B2D45F2B845404B58DCDFCCF40E7F38D869 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1E68 SWAP2 SWAP1 PUSH2 0x4094 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0x1E79 PUSH2 0x22E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1EF0 JUMPI POP PUSH2 0x1EEF DUP3 PUSH2 0x284A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EFF PUSH2 0x21E5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F1D PUSH2 0x13B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F7C JUMPI PUSH2 0x1F40 PUSH2 0x21E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F73 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F88 PUSH2 0x2272 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1FED JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x6F483D0900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FE4 SWAP3 SWAP2 SWAP1 PUSH2 0x4D65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x205F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xB6D9900A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2056 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x212C DUP4 PUSH2 0x28C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x219F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2196 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x21FA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2901 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x220D DUP6 DUP6 DUP6 PUSH2 0x2AC6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2267 JUMPI PUSH1 0x14 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB SLOAD SUB PUSH2 0x22B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x22DC DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2BE3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2421 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2418 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2512 SWAP2 SWAP1 PUSH2 0x37E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x26C9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x257E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4DE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x25BA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25B7 SWAP2 SWAP1 PUSH2 0x4E44 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x263E JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x25EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2636 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262D SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x26C7 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26BE SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2716 DUP7 DUP7 PUSH2 0x2C07 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x2726 DUP3 DUP3 PUSH2 0x2C63 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x15 DUP1 SLOAD PUSH2 0x2741 SWAP1 PUSH2 0x418A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x276D SWAP1 PUSH2 0x418A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x27BA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x278F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x27BA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x279D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27D3 PUSH1 0x0 DUP4 PUSH1 0x0 PUSH2 0x21FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2846 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x283D SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x28BD JUMPI POP PUSH2 0x28BC DUP3 PUSH2 0x2DC7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x293A JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2A6E JUMPI PUSH1 0x0 PUSH2 0x294A DUP5 PUSH2 0x2120 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x29B5 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x29C8 JUMPI POP PUSH2 0x29C6 DUP2 DUP5 PUSH2 0x1B4E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2A0A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A01 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2A6C JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2AD4 DUP6 DUP6 DUP6 PUSH2 0x2EA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B18 JUMPI PUSH2 0x2B13 DUP5 PUSH2 0x30C3 JUMP JUMPDEST PUSH2 0x2B57 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B56 JUMPI PUSH2 0x2B55 DUP2 DUP6 PUSH2 0x310C JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B99 JUMPI PUSH2 0x2B94 DUP5 PUSH2 0x31F7 JUMP JUMPDEST PUSH2 0x2BD8 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2BD7 JUMPI PUSH2 0x2BD6 DUP6 DUP6 PUSH2 0x32C8 JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2BED DUP4 DUP4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x2C02 PUSH2 0x2BF8 PUSH2 0x21E5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x251F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x2C4C JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x2C3E DUP9 DUP3 DUP6 DUP6 PUSH2 0x344C JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x2C5C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C77 JUMPI PUSH2 0x2C76 PUSH2 0x4E71 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C8A JUMPI PUSH2 0x2C89 PUSH2 0x4E71 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x2DC3 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2CA4 JUMPI PUSH2 0x2CA3 PUSH2 0x4E71 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2CB7 JUMPI PUSH2 0x2CB6 PUSH2 0x4E71 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2CEE JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2D02 JUMPI PUSH2 0x2D01 PUSH2 0x4E71 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2D15 JUMPI PUSH2 0x2D14 PUSH2 0x4E71 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2D5A JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D51 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2D6D JUMPI PUSH2 0x2D6C PUSH2 0x4E71 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2D80 JUMPI PUSH2 0x2D7F PUSH2 0x4E71 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2DC2 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DB9 SWAP2 SWAP1 PUSH2 0x4EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2E92 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x2EA2 JUMPI POP PUSH2 0x2EA1 DUP3 PUSH2 0x3540 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EB5 DUP5 PUSH2 0x28C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EF7 JUMPI PUSH2 0x2EF6 DUP2 DUP5 DUP7 PUSH2 0x35AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F88 JUMPI PUSH2 0x2F39 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x2901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x300B JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3117 DUP4 PUSH2 0x123D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP3 EQ PUSH2 0x31C3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x320B SWAP2 SWAP1 PUSH2 0x4AF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x323B JUMPI PUSH2 0x323A PUSH2 0x4483 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x325D JUMPI PUSH2 0x325C PUSH2 0x4483 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x32AC JUMPI PUSH2 0x32AB PUSH2 0x4ED4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x32D5 DUP5 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x32DF SWAP2 SWAP1 PUSH2 0x4AF7 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x33C5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33BC SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33D3 DUP4 DUP4 PUSH1 0x0 PUSH2 0x21FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3447 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x343E SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x348C JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x3536 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x34B1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4F03 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3527 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x3536 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35B5 DUP4 DUP4 DUP4 PUSH2 0x366E JUMP JUMPDEST PUSH2 0x3669 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x362A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3621 SWAP2 SWAP1 PUSH2 0x3A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3660 SWAP3 SWAP2 SWAP1 PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3726 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x36E7 JUMPI POP PUSH2 0x36E6 DUP5 DUP5 PUSH2 0x1B4E JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x3725 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x370D DUP4 PUSH2 0x21A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3778 DUP2 PUSH2 0x3743 JUMP JUMPDEST DUP2 EQ PUSH2 0x3783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3795 DUP2 PUSH2 0x376F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37B1 JUMPI PUSH2 0x37B0 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37BF DUP5 DUP3 DUP6 ADD PUSH2 0x3786 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37DD DUP2 PUSH2 0x37C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x37F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3829 DUP3 PUSH2 0x37FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3839 DUP2 PUSH2 0x381E JUMP JUMPDEST DUP2 EQ PUSH2 0x3844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3856 DUP2 PUSH2 0x3830 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x387D DUP2 PUSH2 0x385C JUMP JUMPDEST DUP2 EQ PUSH2 0x3888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x389A DUP2 PUSH2 0x3874 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x38B7 JUMPI PUSH2 0x38B6 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38C5 DUP6 DUP3 DUP7 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x38D6 DUP6 DUP3 DUP7 ADD PUSH2 0x388B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x391A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38FF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3942 DUP3 PUSH2 0x38E0 JUMP JUMPDEST PUSH2 0x394C DUP2 DUP6 PUSH2 0x38EB JUMP JUMPDEST SWAP4 POP PUSH2 0x395C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x38FC JUMP JUMPDEST PUSH2 0x3965 DUP2 PUSH2 0x3926 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x398A DUP2 DUP5 PUSH2 0x3937 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39A5 DUP2 PUSH2 0x3992 JUMP JUMPDEST DUP2 EQ PUSH2 0x39B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x39C2 DUP2 PUSH2 0x399C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39DE JUMPI PUSH2 0x39DD PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39EC DUP5 DUP3 DUP6 ADD PUSH2 0x39B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x39FE DUP2 PUSH2 0x381E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A19 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x39F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A36 JUMPI PUSH2 0x3A35 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A44 DUP6 DUP3 DUP7 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3A55 DUP6 DUP3 DUP7 ADD PUSH2 0x39B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A68 DUP2 PUSH2 0x3992 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A83 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A9F JUMPI PUSH2 0x3A9E PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AAD DUP5 DUP3 DUP6 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3ACF JUMPI PUSH2 0x3ACE PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3ADD DUP7 DUP3 DUP8 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3AEE DUP7 DUP3 DUP8 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3AFF DUP7 DUP3 DUP8 ADD PUSH2 0x39B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B20 JUMPI PUSH2 0x3B1F PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B2E DUP6 DUP3 DUP7 ADD PUSH2 0x39B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3B3F DUP6 DUP3 DUP7 ADD PUSH2 0x39B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B5E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x39F5 JUMP JUMPDEST PUSH2 0x3B6B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B7D DUP3 PUSH2 0x37FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B8D DUP2 PUSH2 0x3B72 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3BAA DUP2 PUSH2 0x3B84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BC6 JUMPI PUSH2 0x3BC5 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BD4 DUP5 DUP3 DUP6 ADD PUSH2 0x3B9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3C1F DUP3 PUSH2 0x3926 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3C3E JUMPI PUSH2 0x3C3D PUSH2 0x3BE7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C51 PUSH2 0x372F JUMP JUMPDEST SWAP1 POP PUSH2 0x3C5D DUP3 DUP3 PUSH2 0x3C16 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3C7D JUMPI PUSH2 0x3C7C PUSH2 0x3BE7 JUMP JUMPDEST JUMPDEST PUSH2 0x3C86 DUP3 PUSH2 0x3926 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CB5 PUSH2 0x3CB0 DUP5 PUSH2 0x3C62 JUMP JUMPDEST PUSH2 0x3C47 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3CD1 JUMPI PUSH2 0x3CD0 PUSH2 0x3BE2 JUMP JUMPDEST JUMPDEST PUSH2 0x3CDC DUP5 DUP3 DUP6 PUSH2 0x3C93 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3CF9 JUMPI PUSH2 0x3CF8 PUSH2 0x3BDD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3D09 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3CA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D28 JUMPI PUSH2 0x3D27 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D46 JUMPI PUSH2 0x3D45 PUSH2 0x373E JUMP JUMPDEST JUMPDEST PUSH2 0x3D52 DUP5 DUP3 DUP6 ADD PUSH2 0x3CE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D90 DUP2 PUSH2 0x3992 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DA2 DUP4 DUP4 PUSH2 0x3D87 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DC6 DUP3 PUSH2 0x3D5B JUMP JUMPDEST PUSH2 0x3DD0 DUP2 DUP6 PUSH2 0x3D66 JUMP JUMPDEST SWAP4 POP PUSH2 0x3DDB DUP4 PUSH2 0x3D77 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3E0C JUMPI DUP2 MLOAD PUSH2 0x3DF3 DUP9 DUP3 PUSH2 0x3D96 JUMP JUMPDEST SWAP8 POP PUSH2 0x3DFE DUP4 PUSH2 0x3DAE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3DDF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E33 DUP2 DUP5 PUSH2 0x3DBB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E44 DUP2 PUSH2 0x37C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x3E4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3E61 DUP2 PUSH2 0x3E3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E7E JUMPI PUSH2 0x3E7D PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E8C DUP6 DUP3 DUP7 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3E9D DUP6 DUP3 DUP7 ADD PUSH2 0x3E52 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3EC2 JUMPI PUSH2 0x3EC1 PUSH2 0x3BE7 JUMP JUMPDEST JUMPDEST PUSH2 0x3ECB DUP3 PUSH2 0x3926 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EEB PUSH2 0x3EE6 DUP5 PUSH2 0x3EA7 JUMP JUMPDEST PUSH2 0x3C47 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3F07 JUMPI PUSH2 0x3F06 PUSH2 0x3BE2 JUMP JUMPDEST JUMPDEST PUSH2 0x3F12 DUP5 DUP3 DUP6 PUSH2 0x3C93 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F2F JUMPI PUSH2 0x3F2E PUSH2 0x3BDD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F3F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3ED8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F62 JUMPI PUSH2 0x3F61 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F70 DUP8 DUP3 DUP9 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3F81 DUP8 DUP3 DUP9 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3F92 DUP8 DUP3 DUP9 ADD PUSH2 0x39B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FB3 JUMPI PUSH2 0x3FB2 PUSH2 0x373E JUMP JUMPDEST JUMPDEST PUSH2 0x3FBF DUP8 DUP3 DUP9 ADD PUSH2 0x3F1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3FEB JUMPI PUSH2 0x3FEA PUSH2 0x3BDD JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4008 JUMPI PUSH2 0x4007 PUSH2 0x3FCB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4024 JUMPI PUSH2 0x4023 PUSH2 0x3FD0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4042 JUMPI PUSH2 0x4041 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4060 JUMPI PUSH2 0x405F PUSH2 0x373E JUMP JUMPDEST JUMPDEST PUSH2 0x406C DUP6 DUP3 DUP7 ADD PUSH2 0x3FD5 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x408E DUP2 PUSH2 0x4078 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4085 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x40C6 JUMPI PUSH2 0x40C5 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x40D4 DUP6 DUP3 DUP7 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x40E5 DUP6 DUP3 DUP7 ADD PUSH2 0x3847 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x40F8 DUP2 PUSH2 0x4078 JUMP JUMPDEST DUP2 EQ PUSH2 0x4103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4115 DUP2 PUSH2 0x40EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4132 JUMPI PUSH2 0x4131 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4140 DUP6 DUP3 DUP7 ADD PUSH2 0x39B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4151 DUP6 DUP3 DUP7 ADD PUSH2 0x4106 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x41A2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x41B5 JUMPI PUSH2 0x41B4 PUSH2 0x415B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x41D0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x39F5 JUMP JUMPDEST PUSH2 0x41DD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3A5F JUMP JUMPDEST PUSH2 0x41EA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x39F5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x422C DUP3 PUSH2 0x3992 JUMP JUMPDEST SWAP2 POP PUSH2 0x4237 DUP4 PUSH2 0x3992 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4245 DUP2 PUSH2 0x3992 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x425C JUMPI PUSH2 0x425B PUSH2 0x41F2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x429D DUP3 PUSH2 0x3992 JUMP JUMPDEST SWAP2 POP PUSH2 0x42A8 DUP4 PUSH2 0x3992 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x42B8 JUMPI PUSH2 0x42B7 PUSH2 0x4263 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C79203120746F6B656E2070657220747800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F9 PUSH1 0x13 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x4304 DUP3 PUSH2 0x42C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4328 DUP2 PUSH2 0x42EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433A DUP3 PUSH2 0x3992 JUMP JUMPDEST SWAP2 POP PUSH2 0x4345 DUP4 PUSH2 0x3992 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x435D JUMPI PUSH2 0x435C PUSH2 0x41F2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7075626C696320736F6C64206F75740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4399 PUSH1 0xF DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x43A4 DUP3 PUSH2 0x4363 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x43C8 DUP2 PUSH2 0x438C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E636F7272656374207061796D656E74000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4405 PUSH1 0x11 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x4410 DUP3 PUSH2 0x43CF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4434 DUP2 PUSH2 0x43F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4446 DUP3 PUSH2 0x3992 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4478 JUMPI PUSH2 0x4477 PUSH2 0x41F2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x696E76616C696420616464726573730000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44E8 PUSH1 0xF DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x44F3 DUP3 PUSH2 0x44B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4517 DUP2 PUSH2 0x44DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F2066756E6473000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4554 PUSH1 0x8 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x455F DUP3 PUSH2 0x451E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4583 DUP2 PUSH2 0x4547 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45A5 PUSH1 0x0 DUP4 PUSH2 0x458A JUMP JUMPDEST SWAP2 POP PUSH2 0x45B0 DUP3 PUSH2 0x4595 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45C6 DUP3 PUSH2 0x4598 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7769746864726177206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4606 PUSH1 0xF DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x4611 DUP3 PUSH2 0x45D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4635 DUP2 PUSH2 0x45F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x469E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4661 JUMP JUMPDEST PUSH2 0x46A8 DUP7 DUP4 PUSH2 0x4661 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46E5 PUSH2 0x46E0 PUSH2 0x46DB DUP5 PUSH2 0x3992 JUMP JUMPDEST PUSH2 0x46C0 JUMP JUMPDEST PUSH2 0x3992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x46FF DUP4 PUSH2 0x46CA JUMP JUMPDEST PUSH2 0x4713 PUSH2 0x470B DUP3 PUSH2 0x46EC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x466E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4728 PUSH2 0x471B JUMP JUMPDEST PUSH2 0x4733 DUP2 DUP5 DUP5 PUSH2 0x46F6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4757 JUMPI PUSH2 0x474C PUSH1 0x0 DUP3 PUSH2 0x4720 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4739 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x479C JUMPI PUSH2 0x476D DUP2 PUSH2 0x463C JUMP JUMPDEST PUSH2 0x4776 DUP5 PUSH2 0x4651 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4785 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4799 PUSH2 0x4791 DUP6 PUSH2 0x4651 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4738 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47BF PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x47A1 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47D8 DUP4 DUP4 PUSH2 0x47AE JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x47F1 DUP3 PUSH2 0x38E0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x480A JUMPI PUSH2 0x4809 PUSH2 0x3BE7 JUMP JUMPDEST JUMPDEST PUSH2 0x4814 DUP3 SLOAD PUSH2 0x418A JUMP JUMPDEST PUSH2 0x481F DUP3 DUP3 DUP6 PUSH2 0x475B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4852 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4840 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x484A DUP6 DUP3 PUSH2 0x47CC JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x48B2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4860 DUP7 PUSH2 0x463C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4888 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4863 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x48A5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x48A1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x47AE JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x74727573746564207369676E6572206E6F742073657400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48F0 PUSH1 0x16 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x48FB DUP3 PUSH2 0x48BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x491F DUP2 PUSH2 0x48E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C726561647920636C61696D6564206F6E2D636861696E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495C PUSH1 0x18 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x4967 DUP3 PUSH2 0x4926 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x498B DUP2 PUSH2 0x494F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49AA DUP3 PUSH2 0x4992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49BC DUP3 PUSH2 0x499F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49D4 PUSH2 0x49CF DUP3 PUSH2 0x381E JUMP JUMPDEST PUSH2 0x49B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49F5 PUSH2 0x49F0 DUP3 PUSH2 0x3992 JUMP JUMPDEST PUSH2 0x49DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A07 DUP3 DUP7 PUSH2 0x49C3 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x4A17 DUP3 DUP6 PUSH2 0x49E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x4A27 DUP3 DUP5 PUSH2 0x49C3 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C6964207369676E6174757265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A6E PUSH1 0x11 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x4A79 DUP3 PUSH2 0x4A38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A9D DUP2 PUSH2 0x4A61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4ABA DUP3 PUSH2 0x38E0 JUMP JUMPDEST PUSH2 0x4AC4 DUP2 DUP6 PUSH2 0x4AA4 JUMP JUMPDEST SWAP4 POP PUSH2 0x4AD4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x38FC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AEC DUP3 DUP5 PUSH2 0x4AAF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B02 DUP3 PUSH2 0x3992 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B0D DUP4 PUSH2 0x3992 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4B25 JUMPI PUSH2 0x4B24 PUSH2 0x41F2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B37 DUP3 DUP6 PUSH2 0x4AAF JUMP JUMPDEST SWAP2 POP PUSH2 0x4B43 DUP3 DUP5 PUSH2 0x4AAF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x2F00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B85 PUSH1 0x1 DUP4 PUSH2 0x4AA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B90 DUP3 PUSH2 0x4B4F JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BA7 DUP3 DUP6 PUSH2 0x4AAF JUMP JUMPDEST SWAP2 POP PUSH2 0x4BB2 DUP3 PUSH2 0x4B78 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BBE DUP3 DUP5 PUSH2 0x4AAF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C69642076617269616E740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C00 PUSH1 0xF DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x4C0B DUP3 PUSH2 0x4BCA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C2F DUP2 PUSH2 0x4BF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6C PUSH1 0x9 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x4C77 DUP3 PUSH2 0x4C36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C9B DUP2 PUSH2 0x4C5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6F6E6C79206E65757472616C20746F6B656E732063616E206265207472616E73 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x666F726D65640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CFE PUSH1 0x26 DUP4 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP PUSH2 0x4D09 DUP3 PUSH2 0x4CA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D2D DUP2 PUSH2 0x4CF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D4F PUSH2 0x4D4A PUSH2 0x4D45 DUP5 PUSH2 0x385C JUMP JUMPDEST PUSH2 0x46C0 JUMP JUMPDEST PUSH2 0x3992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D5F DUP2 PUSH2 0x4D34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4D7A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4D56 JUMP JUMPDEST PUSH2 0x4D87 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3A5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DB5 DUP3 PUSH2 0x4D8E JUMP JUMPDEST PUSH2 0x4DBF DUP2 DUP6 PUSH2 0x4D99 JUMP JUMPDEST SWAP4 POP PUSH2 0x4DCF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x38FC JUMP JUMPDEST PUSH2 0x4DD8 DUP2 PUSH2 0x3926 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4DF8 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x39F5 JUMP JUMPDEST PUSH2 0x4E05 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x39F5 JUMP JUMPDEST PUSH2 0x4E12 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3A5F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x4E24 DUP2 DUP5 PUSH2 0x4DAA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4E3E DUP2 PUSH2 0x376F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E5A JUMPI PUSH2 0x4E59 PUSH2 0x3739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4E68 DUP5 DUP3 DUP6 ADD PUSH2 0x4E2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4EB3 DUP2 PUSH2 0x4EA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4ECE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4EAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4F18 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4EAA JUMP JUMPDEST PUSH2 0x4F25 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4085 JUMP JUMPDEST PUSH2 0x4F32 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4EAA JUMP JUMPDEST PUSH2 0x4F3F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4EAA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0x2F SWAP10 0xC9 CALLDATALOAD 0xDD 0xF9 EXTCODESIZE 0xEE DUP11 0xBE PUSH5 0xA6E30632AB SHL EXTCODECOPY 0xAC PUSH8 0xDD72B76A5A6C0F8A 0xAB MSTORE8 0xC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"505:7634:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7959:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6904:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2263:89:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3152:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1967:102:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1273:49:22;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3852:578:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1028:30:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2330:657:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3919::22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:255:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4464:132:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2113:226:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6525:335:22;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2362:118;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2199:124;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2103:118:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1861:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;668:324:22;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:97:22;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2583:131;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2394:93:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3487:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1064:27:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1097:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4630:233:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4850:832:22;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3037:850;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1385:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;998:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2720:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3665:153:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1193:28:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5834:636;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7959:178;8071:4;8094:36;8118:11;8094:23;:36::i;:::-;8087:43;;7959:178;;;:::o;6904:144::-;1531:13:0;:11;:13::i;:::-;6999:42:22::1;7018:8;7028:12;6999:18;:42::i;:::-;6904:144:::0;;:::o;2263:89:3:-;2308:13;2340:5;2333:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2263:89;:::o;3299:154::-;3366:7;3385:22;3399:7;3385:13;:22::i;:::-;;3425:21;3438:7;3425:12;:21::i;:::-;3418:28;;3299:154;;;:::o;3152:113::-;3223:35;3232:2;3236:7;3245:12;:10;:12::i;:::-;3223:8;:35::i;:::-;3152:113;;:::o;1967:102:6:-;2019:7;2045:10;:17;;;;2038:24;;1967:102;:::o;1273:49:22:-;;;;;;;;;;;;;;;;;;;;;;:::o;3852:578:3:-;3960:1;3946:16;;:2;:16;;;3942:87;;4015:1;3985:33;;;;;;;;;;;:::i;:::-;;;;;;;;3942:87;4247:21;4271:34;4279:2;4283:7;4292:12;:10;:12::i;:::-;4271:7;:34::i;:::-;4247:58;;4336:4;4319:21;;:13;:21;;;4315:109;;4384:4;4390:7;4399:13;4363:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4315:109;3932:498;3852:578;;;:::o;1028:30:22:-;;;;:::o;2330:657:10:-;2438:16;2456:14;2482:32;2517:17;:26;2535:7;2517:26;;;;;;;;;;;2482:61;;2553:23;2579:12;:21;;;;;;;;;;;;2553:47;;2610:22;2635:12;:28;;;;;;;;;;;;2610:53;;2705:1;2678:29;;:15;:29;;;2674:173;;2741:19;:28;;;;;;;;;;;;2723:46;;2801:19;:35;;;;;;;;;;;;2783:53;;2674:173;2857:21;2913:17;:15;:17::i;:::-;2881:49;;2894:15;2882:27;;:9;:27;;;;:::i;:::-;2881:49;;;;:::i;:::-;2857:73;;2949:15;2966:13;2941:39;;;;;;;;2330:657;;;;;:::o;3919::22:-;2500:21:13;:19;:21::i;:::-;4100:1:22::1;4093:3;:8;4085:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;4165:15;;4158:3;4143:12;;:18;;;;:::i;:::-;:37;;4135:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;4242:3;4231:8;;:14;;;;:::i;:::-;4218:9;:27;4210:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4283:9;4278:263;4302:3;4298:1;:7;4278:263;;;4326:15;4344:9;;:11;;;;;;;;;:::i;:::-;;;;;4326:29;;4369:30;4379:10;4391:7;4369:9;:30::i;:::-;4479:1;4455:12;:21;4468:7;4455:21;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;4522:7;4510:10;4499:31;;;;;;;;;;;;4312:229;4307:3;;;;;:::i;:::-;;;;4278:263;;;;4566:3;4550:12;;:19;;;;;;;:::i;:::-;;;;;;;;2542:20:13::0;:18;:20::i;:::-;3919:657:22;:::o;1668:255:6:-;1756:7;1788:16;1798:5;1788:9;:16::i;:::-;1779:5;:25;1775:99;;1850:5;1857;1827:36;;;;;;;;;;;;:::i;:::-;;;;;;;;1775:99;1890:12;:19;1903:5;1890:19;;;;;;;;;;;;;;;:26;1910:5;1890:26;;;;;;;;;;;;1883:33;;1668:255;;;;:::o;4464:132:3:-;4550:39;4567:4;4573:2;4577:7;4550:39;;;;;;;;;;;;:16;:39::i;:::-;4464:132;;;:::o;2113:226:6:-;2179:7;2211:13;:11;:13::i;:::-;2202:5;:22;2198:101;;2278:1;2282:5;2247:41;;;;;;;;;;;;:::i;:::-;;;;;;;;2198:101;2315:10;2326:5;2315:17;;;;;;;;:::i;:::-;;;;;;;;;;2308:24;;2113:226;;;:::o;6525:335:22:-;1531:13:0;:11;:13::i;:::-;2500:21:13::1;:19;:21::i;:::-;6627:1:22::2;6613:16;;:2;:16;;::::0;6605:44:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;6659:11;6673:21;6659:35;;6718:1;6712:3;:7;6704:28;;;;;;;;;;;;:::i;:::-;;;;;;;;;6743:7;6756:2;:7;;6772:3;6756:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6742:39;;;6799:2;6791:30;;;;;;;;;;;;:::i;:::-;;;;;;;;;6845:2;6836:17;;;6849:3;6836:17;;;;;;:::i;:::-;;;;;;;;6595:265;;2542:20:13::1;:18;:20::i;:::-;6525:335:22::0;:::o;2362:118::-;1531:13:0;:11;:13::i;:::-;2444:1:22::1;2428:13;:17;;;;;;:::i;:::-;;2460:13;2471:1;2460:13;;;;;;:::i;:::-;;;;;;;;2362:118:::0;:::o;2199:124::-;1531:13:0;:11;:13::i;:::-;2281:1:22::1;2265:13;;:17;;;;;;;;;;;;;;;;;;2314:1;2297:19;;;;;;;;;;;;2199:124:::0;:::o;2103:118:3:-;2166:7;2192:22;2206:7;2192:13;:22::i;:::-;2185:29;;2103:118;;;:::o;1861:208::-;1924:7;1964:1;1947:19;;:5;:19;;;1943:87;;2016:1;1989:30;;;;;;;;;;;:::i;:::-;;;;;;;;1943:87;2046:9;:16;2056:5;2046:16;;;;;;;;;;;;;;;;2039:23;;1861:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;668:324:22:-;729:16;757:15;775:16;785:5;775:9;:16::i;:::-;757:34;;801:23;841:7;827:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;801:48;;864:9;859:104;883:7;879:1;:11;859:104;;;923:29;943:5;950:1;923:19;:29::i;:::-;911:6;918:1;911:9;;;;;;;;:::i;:::-;;;;;;;:41;;;;;892:3;;;;;:::i;:::-;;;;859:104;;;;979:6;972:13;;;;668:324;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;4618:97:22:-;1531:13:0;:11;:13::i;:::-;4697:11:22::1;4686:8;:22;;;;4618:97:::0;:::o;2583:131::-;1531:13:0;:11;:13::i;:::-;2670:3:22::1;2655:12;:18;;;;;;:::i;:::-;;2688:19;2703:3;2688:19;;;;;;:::i;:::-;;;;;;;;2583:131:::0;:::o;2394:93:3:-;2441:13;2473:7;2466:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2394:93;:::o;3487:144::-;3572:52;3591:12;:10;:12::i;:::-;3605:8;3615;3572:18;:52::i;:::-;3487:144;;:::o;1064:27:22:-;;;;:::o;1097:23::-;;;;:::o;4630:233:3:-;4743:31;4756:4;4762:2;4766:7;4743:12;:31::i;:::-;4784:72;4818:12;:10;:12::i;:::-;4832:4;4838:2;4842:7;4851:4;4784:33;:72::i;:::-;4630:233;;;;:::o;4850:832:22:-;2500:21:13;:19;:21::i;:::-;4969:1:22::1;4944:27;;:13;;;;;;;;;;;:27;;::::0;4936:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;5017:17;:29;5035:10;5017:29;;;;;;;;;;;;;;;;;;;;;;;;;5016:30;5008:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;5082:14;5134:4;5141:13;5156:10;5109:58;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5099:69;;;;;;5082:86;;5247:16;5266:47;5306:6;5266:39;:47::i;:::-;5247:66;;5319:14;5336:34;5350:8;5360:9;;5336:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:34::i;:::-;5319:51;;5398:13;;;;;;;;;;;5388:23;;:6;:23;;;5380:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;5476:4;5444:17;:29;5462:10;5444:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;5490:15;5508:9;;:11;;;;;;;;;:::i;:::-;;;;;5490:29;;5529:30;5539:10;5551:7;5529:9;:30::i;:::-;5623:1;5599:12;:21;5612:7;5599:21;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;5667:7;5655:10;5639:36;;;;;;;;;;;;4926:756;;;;2542:20:13::0;:18;:20::i;:::-;4850:832:22;;:::o;3037:850::-;3102:13;3186:22;3200:7;3186:13;:22::i;:::-;;3218:18;3239:10;:8;:10::i;:::-;3218:31;;3259:7;3269:12;:21;3282:7;3269:21;;;;;;;;;;;;;;;;;;;;;3259:31;;3300:22;:39;;;;;;;;;;;;;;;;;;;3358:1;3353;:6;;;3349:126;;3375:23;;;;;;;;;;;;;;;;;;;3349:126;;;3424:1;3419;:6;;;3415:60;;3441:23;;;;;;;;;;;;;;;;;;;3415:60;3349:126;3551:14;3574:4;3551:28;;3605:1;3593;:8;:13;3589:85;;3653:8;3636:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;3622:41;;;;;;;;3589:85;3683:11;3697:1;3710;3699;:8;:12;;;;:::i;:::-;3697:15;;;;;;;;:::i;:::-;;;;;;;;;;3683:29;;3734:11;3726:19;;;:4;:19;;;;3722:97;;3792:4;3798:8;3775:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3761:47;;;;;;;;;3722:97;3859:4;3870:8;3842:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3828:52;;;;;;;3037:850;;;;:::o;1385:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;998:24::-;;;;:::o;2720:97::-;2766:13;2798:12;2791:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2720:97;:::o;3665:153:3:-;3753:4;3776:18;:25;3795:5;3776:25;;;;;;;;;;;;;;;:35;3802:8;3776:35;;;;;;;;;;;;;;;;;;;;;;;;;3769:42;;3665:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1193:28:22:-;;;;;;;;;;;;;:::o;5834:636::-;2500:21:13;:19;:21::i;:::-;5936:1:22::1;5925:7;:12;;;:28;;;;5952:1;5941:7;:12;;;5925:28;5917:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;6011:10;5991:30;;:16;5999:7;5991;:16::i;:::-;:30;;;5983:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;6078:1;6053:12;:21;6066:7;6053:21;;;;;;;;;;;;;;;;;;;;;:26;;;6045:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;6230:14;6236:7;6230:5;:14::i;:::-;6297:13;6313:9;;:11;;;;;;;;;:::i;:::-;;;;;6297:27;;6334:28;6344:10;6356:5;6334:9;:28::i;:::-;6394:7;6372:12;:19;6385:5;6372:19;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6448:5;6439:7;6427:10;6417:46;;;6455:7;6417:46;;;;;;:::i;:::-;;;;;;;;5907:563;2542:20:13::0;:18;:20::i;:::-;5834:636:22;;:::o;2082:213:10:-;2184:4;2222:26;2207:41;;;:11;:41;;;;:81;;;;2252:36;2276:11;2252:23;:36::i;:::-;2207:81;2200:88;;2082:213;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;3618:507:10:-;3712:19;3734:17;:15;:17::i;:::-;3712:39;;;;3780:11;3765:12;:26;;;3761:173;;;3897:12;3911:11;3868:55;;;;;;;;;;;;:::i;:::-;;;;;;;;3761:173;3967:1;3947:22;;:8;:22;;;3943:108;;4037:1;3992:48;;;;;;;;;;;:::i;:::-;;;;;;;;3943:108;4083:35;;;;;;;;4095:8;4083:35;;;;;;4105:12;4083:35;;;;;4061:19;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3702:423;3618:507;;:::o;15858:241:3:-;15921:7;15940:13;15956:17;15965:7;15956:8;:17::i;:::-;15940:33;;16004:1;15987:19;;:5;:19;;;15983:88;;16052:7;16029:31;;;;;;;;;;;:::i;:::-;;;;;;;;15983:88;16087:5;16080:12;;;15858:241;;;:::o;5609:127::-;5679:7;5705:15;:24;5721:7;5705:24;;;;;;;;;;;;;;;;;;;;;5698:31;;5609:127;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;14138:120:3:-;14218:33;14227:2;14231:7;14240:4;14246;14218:8;:33::i;:::-;14138:120;;;:::o;7582:371:22:-;7703:7;7722:21;7746:32;7760:2;7764:7;7773:4;7746:13;:32::i;:::-;7722:56;;7806:1;7792:16;;:2;:16;;;7788:129;;7885:12;:21;7898:7;7885:21;;;;;;;;;;;;7878:28;;;;;;;;;;;7788:129;7933:13;7926:20;;;7582:371;;;;;:::o;3262:95:10:-;3320:6;3345:5;3338:12;;3262:95;:::o;2575:307:13:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;10302:100:3:-;10369:26;10379:2;10383:7;10369:26;;;;;;;;;;;;:9;:26::i;:::-;10302:100;;:::o;2888:208:13:-;1857:1;3068:7;:21;;;;2888:208::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15311:312:3:-;15438:1;15418:22;;:8;:22;;;15414:91;;15485:8;15463:31;;;;;;;;;;;:::i;:::-;;;;;;;;15414:91;15552:8;15514:18;:25;15533:5;15514:25;;;;;;;;;;;;;;;:35;15540:8;15514:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15597:8;15575:41;;15590:5;15575:41;;;15607:8;15575:41;;;;;;:::i;:::-;;;;;;;;15311:312;;;:::o;993:926:9:-;1190:1;1173:2;:14;;;:18;1169:744;;;1227:2;1211:36;;;1248:8;1258:4;1264:7;1273:4;1211:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1207:696;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:1;1568:6;:13;:18;1564:325;;1708:2;1672:39;;;;;;;;;;;:::i;:::-;;;;;;;;1564:325;1841:6;1835:13;1828:4;1820:6;1816:17;1809:40;1207:696;1335:41;;;1325:51;;;:6;:51;;;;1321:182;;1481:2;1445:39;;;;;;;;;;;:::i;:::-;;;;;;;;1321:182;1279:238;1169:744;993:926;;;;;:::o;1247:433:16:-;1323:14;1401:34;1395:4;1388:48;1503:11;1497:4;1490:25;1595:4;1589;1579:21;1569:31;;1247:433;;;:::o;3714:255:15:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;3953:9;3946:16;;;;;3714:255;;;;:::o;2823:104:22:-;2875:13;2907;2900:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2823:104;:::o;11156:227:3:-;11207:21;11231:40;11247:1;11251:7;11268:1;11231:7;:40::i;:::-;11207:64;;11310:1;11285:27;;:13;:27;;;11281:96;;11358:7;11335:31;;;;;;;;;;;:::i;:::-;;;;;;;;11281:96;11197:186;11156:227;:::o;1402:222:6:-;1504:4;1542:35;1527:50;;;:11;:50;;;;:90;;;;1581:36;1605:11;1581:23;:36::i;:::-;1527:90;1520:97;;1402:222;;;:::o;5378:115:3:-;5444:7;5470;:16;5478:7;5470:16;;;;;;;;;;;;;;;;;;;;;5463:23;;5378:115;;;:::o;14440:662::-;14600:9;:31;;;;14629:1;14613:18;;:4;:18;;;;14600:31;14596:460;;;14647:13;14663:22;14677:7;14663:13;:22::i;:::-;14647:38;;14829:1;14813:18;;:4;:18;;;;:35;;;;;14844:4;14835:13;;:5;:13;;;;14813:35;:69;;;;;14853:29;14870:5;14877:4;14853:16;:29::i;:::-;14852:30;14813:69;14809:142;;;14931:4;14909:27;;;;;;;;;;;:::i;:::-;;;;;;;;14809:142;14969:9;14965:81;;;15023:7;15019:2;15003:28;;15012:5;15003:28;;;;;;;;;;;;14965:81;14633:423;14596:460;15093:2;15066:15;:24;15082:7;15066:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14440:662;;;;:::o;2372:625:6:-;2467:7;2486:21;2510:32;2524:2;2528:7;2537:4;2510:13;:32::i;:::-;2486:56;;2582:1;2557:27;;:13;:27;;;2553:210;;2600:40;2632:7;2600:31;:40::i;:::-;2553:210;;;2678:2;2661:19;;:13;:19;;;2657:106;;2696:56;2729:13;2744:7;2696:32;:56::i;:::-;2657:106;2553:210;2790:1;2776:16;;:2;:16;;;2772:188;;2808:45;2845:7;2808:36;:45::i;:::-;2772:188;;;2891:2;2874:19;;:13;:19;;;2870:90;;2909:40;2937:2;2941:7;2909:27;:40::i;:::-;2870:90;2772:188;2977:13;2970:20;;;2372:625;;;;;:::o;10623:207:3:-;10717:18;10723:2;10727:7;10717:5;:18::i;:::-;10745:78;10779:12;:10;:12::i;:::-;10801:1;10805:2;10809:7;10818:4;10745:33;:78::i;:::-;10623:207;;;:::o;2129:778:15:-;2232:17;2251:16;2269:14;2319:2;2299:9;:16;:22;2295:606;;2337:9;2360;2383:7;2604:4;2593:9;2589:20;2583:27;2578:32;;2653:4;2642:9;2638:20;2632:27;2627:32;;2710:4;2699:9;2695:20;2689:27;2686:1;2681:36;2676:41;;2751:25;2762:4;2768:1;2771;2774;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;2823:1;2827:35;2872:9;:16;2864:25;;2807:83;;;;;;2129:778;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;1527:300:3:-;1629:4;1679:25;1664:40;;;:11;:40;;;;:104;;;;1735:33;1720:48;;;:11;:48;;;;1664:104;:156;;;;1784:36;1808:11;1784:23;:36::i;:::-;1664:156;1645:175;;1527:300;;;:::o;8507:795::-;8593:7;8612:12;8627:17;8636:7;8627:8;:17::i;:::-;8612:32;;8720:1;8704:18;;:4;:18;;;8700:86;;8738:37;8755:4;8761;8767:7;8738:16;:37::i;:::-;8700:86;8846:1;8830:18;;:4;:18;;;8826:256;;8946:48;8963:1;8967:7;8984:1;8988:5;8946:8;:48::i;:::-;9056:1;9037:9;:15;9047:4;9037:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;8826:256;9110:1;9096:16;;:2;:16;;;9092:107;;9173:1;9156:9;:13;9166:2;9156:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9092:107;9228:2;9209:7;:16;9217:7;9209:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9265:7;9261:2;9246:27;;9255:4;9246:27;;;;;;;;;;;;9291:4;9284:11;;;8507:795;;;;;:::o;3700:161:6:-;3803:10;:17;;;;3776:15;:24;3792:7;3776:24;;;;;;;;;;;:44;;;;3830:10;3846:7;3830:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3700:161;:::o;4478:1055::-;4740:22;4765:15;4775:4;4765:9;:15::i;:::-;4740:40;;4790:18;4811:17;:26;4829:7;4811:26;;;;;;;;;;;;4790:47;;4848:61;4912:12;:18;4925:4;4912:18;;;;;;;;;;;;;;;4848:82;;5048:14;5034:10;:28;5030:325;;5078:19;5100;:35;5120:14;5100:35;;;;;;;;;;;;5078:57;;5184:11;5150:19;:31;5170:10;5150:31;;;;;;;;;;;:45;;;;5300:10;5267:17;:30;5285:11;5267:30;;;;;;;;;;;:43;;;;5064:291;5030:325;5448:17;:26;5466:7;5448:26;;;;;;;;;;;5441:33;;;5491:19;:35;5511:14;5491:35;;;;;;;;;;;5484:42;;;4559:974;;;4478:1055;;:::o;5821:1061::-;6070:22;6115:1;6095:10;:17;;;;:21;;;;:::i;:::-;6070:46;;6126:18;6147:15;:24;6163:7;6147:24;;;;;;;;;;;;6126:45;;6493:19;6515:10;6526:14;6515:26;;;;;;;;:::i;:::-;;;;;;;;;;6493:48;;6577:11;6552:10;6563;6552:22;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;6687:10;6656:15;:28;6672:11;6656:28;;;;;;;;;;;:41;;;;6825:15;:24;6841:7;6825:24;;;;;;;;;;;6818:31;;;6859:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5892:990;;;5821:1061;:::o;3291:214::-;3375:14;3408:1;3392:13;3402:2;3392:9;:13::i;:::-;:17;;;;:::i;:::-;3375:34;;3446:7;3419:12;:16;3432:2;3419:16;;;;;;;;;;;;;;;:24;3436:6;3419:24;;;;;;;;;;;:34;;;;3492:6;3463:17;:26;3481:7;3463:26;;;;;;;;;;;:35;;;;3365:140;3291:214;;:::o;9624:327:3:-;9705:1;9691:16;;:2;:16;;;9687:87;;9760:1;9730:33;;;;;;;;;;;:::i;:::-;;;;;;;;9687:87;9783:21;9807:32;9815:2;9819:7;9836:1;9807:7;:32::i;:::-;9783:56;;9878:1;9853:27;;:13;:27;;;9849:96;;9931:1;9903:31;;;;;;;;;;;:::i;:::-;;;;;;;;9849:96;9677:274;9624:327;;:::o;5203:1551:15:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;730:146:17:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;6751:368:3:-;6863:38;6877:5;6884:7;6893;6863:13;:38::i;:::-;6858:255;;6938:1;6921:19;;:5;:19;;;6917:186;;6990:7;6967:31;;;;;;;;;;;:::i;:::-;;;;;;;;6917:186;7071:7;7080;7044:44;;;;;;;;;;;;:::i;:::-;;;;;;;;6858:255;6751:368;;;:::o;6047:272::-;6150:4;6204:1;6185:21;;:7;:21;;;;:127;;;;;6232:7;6223:16;;:5;:16;;;:52;;;;6243:32;6260:5;6267:7;6243:16;:32::i;:::-;6223:52;:88;;;;6304:7;6279:32;;:21;6292:7;6279:12;:21::i;:::-;:32;;;6223:88;6185:127;6166:146;;6047:272;;;;;:::o;7:75:23:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:109::-;2061:7;2101:26;2094:5;2090:38;2079:49;;2025:109;;;:::o;2140:120::-;2212:23;2229:5;2212:23;:::i;:::-;2205:5;2202:34;2192:62;;2250:1;2247;2240:12;2192:62;2140:120;:::o;2266:137::-;2311:5;2349:6;2336:20;2327:29;;2365:32;2391:5;2365:32;:::i;:::-;2266:137;;;;:::o;2409:472::-;2476:6;2484;2533:2;2521:9;2512:7;2508:23;2504:32;2501:119;;;2539:79;;:::i;:::-;2501:119;2659:1;2684:53;2729:7;2720:6;2709:9;2705:22;2684:53;:::i;:::-;2674:63;;2630:117;2786:2;2812:52;2856:7;2847:6;2836:9;2832:22;2812:52;:::i;:::-;2802:62;;2757:117;2409:472;;;;;:::o;2887:99::-;2939:6;2973:5;2967:12;2957:22;;2887:99;;;:::o;2992:169::-;3076:11;3110:6;3105:3;3098:19;3150:4;3145:3;3141:14;3126:29;;2992:169;;;;:::o;3167:246::-;3248:1;3258:113;3272:6;3269:1;3266:13;3258:113;;;3357:1;3352:3;3348:11;3342:18;3338:1;3333:3;3329:11;3322:39;3294:2;3291:1;3287:10;3282:15;;3258:113;;;3405:1;3396:6;3391:3;3387:16;3380:27;3229:184;3167:246;;;:::o;3419:102::-;3460:6;3511:2;3507:7;3502:2;3495:5;3491:14;3487:28;3477:38;;3419:102;;;:::o;3527:377::-;3615:3;3643:39;3676:5;3643:39;:::i;:::-;3698:71;3762:6;3757:3;3698:71;:::i;:::-;3691:78;;3778:65;3836:6;3831:3;3824:4;3817:5;3813:16;3778:65;:::i;:::-;3868:29;3890:6;3868:29;:::i;:::-;3863:3;3859:39;3852:46;;3619:285;3527:377;;;;:::o;3910:313::-;4023:4;4061:2;4050:9;4046:18;4038:26;;4110:9;4104:4;4100:20;4096:1;4085:9;4081:17;4074:47;4138:78;4211:4;4202:6;4138:78;:::i;:::-;4130:86;;3910:313;;;;:::o;4229:77::-;4266:7;4295:5;4284:16;;4229:77;;;:::o;4312:122::-;4385:24;4403:5;4385:24;:::i;:::-;4378:5;4375:35;4365:63;;4424:1;4421;4414:12;4365:63;4312:122;:::o;4440:139::-;4486:5;4524:6;4511:20;4502:29;;4540:33;4567:5;4540:33;:::i;:::-;4440:139;;;;:::o;4585:329::-;4644:6;4693:2;4681:9;4672:7;4668:23;4664:32;4661:119;;;4699:79;;:::i;:::-;4661:119;4819:1;4844:53;4889:7;4880:6;4869:9;4865:22;4844:53;:::i;:::-;4834:63;;4790:117;4585:329;;;;:::o;4920:118::-;5007:24;5025:5;5007:24;:::i;:::-;5002:3;4995:37;4920:118;;:::o;5044:222::-;5137:4;5175:2;5164:9;5160:18;5152:26;;5188:71;5256:1;5245:9;5241:17;5232:6;5188:71;:::i;:::-;5044:222;;;;:::o;5272:474::-;5340:6;5348;5397:2;5385:9;5376:7;5372:23;5368:32;5365:119;;;5403:79;;:::i;:::-;5365:119;5523:1;5548:53;5593:7;5584:6;5573:9;5569:22;5548:53;:::i;:::-;5538:63;;5494:117;5650:2;5676:53;5721:7;5712:6;5701:9;5697:22;5676:53;:::i;:::-;5666:63;;5621:118;5272:474;;;;;:::o;5752:118::-;5839:24;5857:5;5839:24;:::i;:::-;5834:3;5827:37;5752:118;;:::o;5876:222::-;5969:4;6007:2;5996:9;5992:18;5984:26;;6020:71;6088:1;6077:9;6073:17;6064:6;6020:71;:::i;:::-;5876:222;;;;:::o;6104:329::-;6163:6;6212:2;6200:9;6191:7;6187:23;6183:32;6180:119;;;6218:79;;:::i;:::-;6180:119;6338:1;6363:53;6408:7;6399:6;6388:9;6384:22;6363:53;:::i;:::-;6353:63;;6309:117;6104:329;;;;:::o;6439:619::-;6516:6;6524;6532;6581:2;6569:9;6560:7;6556:23;6552:32;6549:119;;;6587:79;;:::i;:::-;6549:119;6707:1;6732:53;6777:7;6768:6;6757:9;6753:22;6732:53;:::i;:::-;6722:63;;6678:117;6834:2;6860:53;6905:7;6896:6;6885:9;6881:22;6860:53;:::i;:::-;6850:63;;6805:118;6962:2;6988:53;7033:7;7024:6;7013:9;7009:22;6988:53;:::i;:::-;6978:63;;6933:118;6439:619;;;;;:::o;7064:474::-;7132:6;7140;7189:2;7177:9;7168:7;7164:23;7160:32;7157:119;;;7195:79;;:::i;:::-;7157:119;7315:1;7340:53;7385:7;7376:6;7365:9;7361:22;7340:53;:::i;:::-;7330:63;;7286:117;7442:2;7468:53;7513:7;7504:6;7493:9;7489:22;7468:53;:::i;:::-;7458:63;;7413:118;7064:474;;;;;:::o;7544:332::-;7665:4;7703:2;7692:9;7688:18;7680:26;;7716:71;7784:1;7773:9;7769:17;7760:6;7716:71;:::i;:::-;7797:72;7865:2;7854:9;7850:18;7841:6;7797:72;:::i;:::-;7544:332;;;;;:::o;7882:104::-;7927:7;7956:24;7974:5;7956:24;:::i;:::-;7945:35;;7882:104;;;:::o;7992:138::-;8073:32;8099:5;8073:32;:::i;:::-;8066:5;8063:43;8053:71;;8120:1;8117;8110:12;8053:71;7992:138;:::o;8136:155::-;8190:5;8228:6;8215:20;8206:29;;8244:41;8279:5;8244:41;:::i;:::-;8136:155;;;;:::o;8297:345::-;8364:6;8413:2;8401:9;8392:7;8388:23;8384:32;8381:119;;;8419:79;;:::i;:::-;8381:119;8539:1;8564:61;8617:7;8608:6;8597:9;8593:22;8564:61;:::i;:::-;8554:71;;8510:125;8297:345;;;;:::o;8648:117::-;8757:1;8754;8747:12;8771:117;8880:1;8877;8870:12;8894:180;8942:77;8939:1;8932:88;9039:4;9036:1;9029:15;9063:4;9060:1;9053:15;9080:281;9163:27;9185:4;9163:27;:::i;:::-;9155:6;9151:40;9293:6;9281:10;9278:22;9257:18;9245:10;9242:34;9239:62;9236:88;;;9304:18;;:::i;:::-;9236:88;9344:10;9340:2;9333:22;9123:238;9080:281;;:::o;9367:129::-;9401:6;9428:20;;:::i;:::-;9418:30;;9457:33;9485:4;9477:6;9457:33;:::i;:::-;9367:129;;;:::o;9502:308::-;9564:4;9654:18;9646:6;9643:30;9640:56;;;9676:18;;:::i;:::-;9640:56;9714:29;9736:6;9714:29;:::i;:::-;9706:37;;9798:4;9792;9788:15;9780:23;;9502:308;;;:::o;9816:146::-;9913:6;9908:3;9903;9890:30;9954:1;9945:6;9940:3;9936:16;9929:27;9816:146;;;:::o;9968:425::-;10046:5;10071:66;10087:49;10129:6;10087:49;:::i;:::-;10071:66;:::i;:::-;10062:75;;10160:6;10153:5;10146:21;10198:4;10191:5;10187:16;10236:3;10227:6;10222:3;10218:16;10215:25;10212:112;;;10243:79;;:::i;:::-;10212:112;10333:54;10380:6;10375:3;10370;10333:54;:::i;:::-;10052:341;9968:425;;;;;:::o;10413:340::-;10469:5;10518:3;10511:4;10503:6;10499:17;10495:27;10485:122;;10526:79;;:::i;:::-;10485:122;10643:6;10630:20;10668:79;10743:3;10735:6;10728:4;10720:6;10716:17;10668:79;:::i;:::-;10659:88;;10475:278;10413:340;;;;:::o;10759:509::-;10828:6;10877:2;10865:9;10856:7;10852:23;10848:32;10845:119;;;10883:79;;:::i;:::-;10845:119;11031:1;11020:9;11016:17;11003:31;11061:18;11053:6;11050:30;11047:117;;;11083:79;;:::i;:::-;11047:117;11188:63;11243:7;11234:6;11223:9;11219:22;11188:63;:::i;:::-;11178:73;;10974:287;10759:509;;;;:::o;11274:114::-;11341:6;11375:5;11369:12;11359:22;;11274:114;;;:::o;11394:184::-;11493:11;11527:6;11522:3;11515:19;11567:4;11562:3;11558:14;11543:29;;11394:184;;;;:::o;11584:132::-;11651:4;11674:3;11666:11;;11704:4;11699:3;11695:14;11687:22;;11584:132;;;:::o;11722:108::-;11799:24;11817:5;11799:24;:::i;:::-;11794:3;11787:37;11722:108;;:::o;11836:179::-;11905:10;11926:46;11968:3;11960:6;11926:46;:::i;:::-;12004:4;11999:3;11995:14;11981:28;;11836:179;;;;:::o;12021:113::-;12091:4;12123;12118:3;12114:14;12106:22;;12021:113;;;:::o;12170:732::-;12289:3;12318:54;12366:5;12318:54;:::i;:::-;12388:86;12467:6;12462:3;12388:86;:::i;:::-;12381:93;;12498:56;12548:5;12498:56;:::i;:::-;12577:7;12608:1;12593:284;12618:6;12615:1;12612:13;12593:284;;;12694:6;12688:13;12721:63;12780:3;12765:13;12721:63;:::i;:::-;12714:70;;12807:60;12860:6;12807:60;:::i;:::-;12797:70;;12653:224;12640:1;12637;12633:9;12628:14;;12593:284;;;12597:14;12893:3;12886:10;;12294:608;;;12170:732;;;;:::o;12908:373::-;13051:4;13089:2;13078:9;13074:18;13066:26;;13138:9;13132:4;13128:20;13124:1;13113:9;13109:17;13102:47;13166:108;13269:4;13260:6;13166:108;:::i;:::-;13158:116;;12908:373;;;;:::o;13287:116::-;13357:21;13372:5;13357:21;:::i;:::-;13350:5;13347:32;13337:60;;13393:1;13390;13383:12;13337:60;13287:116;:::o;13409:133::-;13452:5;13490:6;13477:20;13468:29;;13506:30;13530:5;13506:30;:::i;:::-;13409:133;;;;:::o;13548:468::-;13613:6;13621;13670:2;13658:9;13649:7;13645:23;13641:32;13638:119;;;13676:79;;:::i;:::-;13638:119;13796:1;13821:53;13866:7;13857:6;13846:9;13842:22;13821:53;:::i;:::-;13811:63;;13767:117;13923:2;13949:50;13991:7;13982:6;13971:9;13967:22;13949:50;:::i;:::-;13939:60;;13894:115;13548:468;;;;;:::o;14022:307::-;14083:4;14173:18;14165:6;14162:30;14159:56;;;14195:18;;:::i;:::-;14159:56;14233:29;14255:6;14233:29;:::i;:::-;14225:37;;14317:4;14311;14307:15;14299:23;;14022:307;;;:::o;14335:423::-;14412:5;14437:65;14453:48;14494:6;14453:48;:::i;:::-;14437:65;:::i;:::-;14428:74;;14525:6;14518:5;14511:21;14563:4;14556:5;14552:16;14601:3;14592:6;14587:3;14583:16;14580:25;14577:112;;;14608:79;;:::i;:::-;14577:112;14698:54;14745:6;14740:3;14735;14698:54;:::i;:::-;14418:340;14335:423;;;;;:::o;14777:338::-;14832:5;14881:3;14874:4;14866:6;14862:17;14858:27;14848:122;;14889:79;;:::i;:::-;14848:122;15006:6;14993:20;15031:78;15105:3;15097:6;15090:4;15082:6;15078:17;15031:78;:::i;:::-;15022:87;;14838:277;14777:338;;;;:::o;15121:943::-;15216:6;15224;15232;15240;15289:3;15277:9;15268:7;15264:23;15260:33;15257:120;;;15296:79;;:::i;:::-;15257:120;15416:1;15441:53;15486:7;15477:6;15466:9;15462:22;15441:53;:::i;:::-;15431:63;;15387:117;15543:2;15569:53;15614:7;15605:6;15594:9;15590:22;15569:53;:::i;:::-;15559:63;;15514:118;15671:2;15697:53;15742:7;15733:6;15722:9;15718:22;15697:53;:::i;:::-;15687:63;;15642:118;15827:2;15816:9;15812:18;15799:32;15858:18;15850:6;15847:30;15844:117;;;15880:79;;:::i;:::-;15844:117;15985:62;16039:7;16030:6;16019:9;16015:22;15985:62;:::i;:::-;15975:72;;15770:287;15121:943;;;;;;;:::o;16070:117::-;16179:1;16176;16169:12;16193:117;16302:1;16299;16292:12;16329:552;16386:8;16396:6;16446:3;16439:4;16431:6;16427:17;16423:27;16413:122;;16454:79;;:::i;:::-;16413:122;16567:6;16554:20;16544:30;;16597:18;16589:6;16586:30;16583:117;;;16619:79;;:::i;:::-;16583:117;16733:4;16725:6;16721:17;16709:29;;16787:3;16779:4;16771:6;16767:17;16757:8;16753:32;16750:41;16747:128;;;16794:79;;:::i;:::-;16747:128;16329:552;;;;;:::o;16887:527::-;16957:6;16965;17014:2;17002:9;16993:7;16989:23;16985:32;16982:119;;;17020:79;;:::i;:::-;16982:119;17168:1;17157:9;17153:17;17140:31;17198:18;17190:6;17187:30;17184:117;;;17220:79;;:::i;:::-;17184:117;17333:64;17389:7;17380:6;17369:9;17365:22;17333:64;:::i;:::-;17315:82;;;;17111:296;16887:527;;;;;:::o;17420:86::-;17455:7;17495:4;17488:5;17484:16;17473:27;;17420:86;;;:::o;17512:112::-;17595:22;17611:5;17595:22;:::i;:::-;17590:3;17583:35;17512:112;;:::o;17630:214::-;17719:4;17757:2;17746:9;17742:18;17734:26;;17770:67;17834:1;17823:9;17819:17;17810:6;17770:67;:::i;:::-;17630:214;;;;:::o;17850:474::-;17918:6;17926;17975:2;17963:9;17954:7;17950:23;17946:32;17943:119;;;17981:79;;:::i;:::-;17943:119;18101:1;18126:53;18171:7;18162:6;18151:9;18147:22;18126:53;:::i;:::-;18116:63;;18072:117;18228:2;18254:53;18299:7;18290:6;18279:9;18275:22;18254:53;:::i;:::-;18244:63;;18199:118;17850:474;;;;;:::o;18330:118::-;18401:22;18417:5;18401:22;:::i;:::-;18394:5;18391:33;18381:61;;18438:1;18435;18428:12;18381:61;18330:118;:::o;18454:135::-;18498:5;18536:6;18523:20;18514:29;;18552:31;18577:5;18552:31;:::i;:::-;18454:135;;;;:::o;18595:470::-;18661:6;18669;18718:2;18706:9;18697:7;18693:23;18689:32;18686:119;;;18724:79;;:::i;:::-;18686:119;18844:1;18869:53;18914:7;18905:6;18894:9;18890:22;18869:53;:::i;:::-;18859:63;;18815:117;18971:2;18997:51;19040:7;19031:6;19020:9;19016:22;18997:51;:::i;:::-;18987:61;;18942:116;18595:470;;;;;:::o;19071:180::-;19119:77;19116:1;19109:88;19216:4;19213:1;19206:15;19240:4;19237:1;19230:15;19257:320;19301:6;19338:1;19332:4;19328:12;19318:22;;19385:1;19379:4;19375:12;19406:18;19396:81;;19462:4;19454:6;19450:17;19440:27;;19396:81;19524:2;19516:6;19513:14;19493:18;19490:38;19487:84;;19543:18;;:::i;:::-;19487:84;19308:269;19257:320;;;:::o;19583:442::-;19732:4;19770:2;19759:9;19755:18;19747:26;;19783:71;19851:1;19840:9;19836:17;19827:6;19783:71;:::i;:::-;19864:72;19932:2;19921:9;19917:18;19908:6;19864:72;:::i;:::-;19946;20014:2;20003:9;19999:18;19990:6;19946:72;:::i;:::-;19583:442;;;;;;:::o;20031:180::-;20079:77;20076:1;20069:88;20176:4;20173:1;20166:15;20200:4;20197:1;20190:15;20217:410;20257:7;20280:20;20298:1;20280:20;:::i;:::-;20275:25;;20314:20;20332:1;20314:20;:::i;:::-;20309:25;;20369:1;20366;20362:9;20391:30;20409:11;20391:30;:::i;:::-;20380:41;;20570:1;20561:7;20557:15;20554:1;20551:22;20531:1;20524:9;20504:83;20481:139;;20600:18;;:::i;:::-;20481:139;20265:362;20217:410;;;;:::o;20633:180::-;20681:77;20678:1;20671:88;20778:4;20775:1;20768:15;20802:4;20799:1;20792:15;20819:185;20859:1;20876:20;20894:1;20876:20;:::i;:::-;20871:25;;20910:20;20928:1;20910:20;:::i;:::-;20905:25;;20949:1;20939:35;;20954:18;;:::i;:::-;20939:35;20996:1;20993;20989:9;20984:14;;20819:185;;;;:::o;21010:169::-;21150:21;21146:1;21138:6;21134:14;21127:45;21010:169;:::o;21185:366::-;21327:3;21348:67;21412:2;21407:3;21348:67;:::i;:::-;21341:74;;21424:93;21513:3;21424:93;:::i;:::-;21542:2;21537:3;21533:12;21526:19;;21185:366;;;:::o;21557:419::-;21723:4;21761:2;21750:9;21746:18;21738:26;;21810:9;21804:4;21800:20;21796:1;21785:9;21781:17;21774:47;21838:131;21964:4;21838:131;:::i;:::-;21830:139;;21557:419;;;:::o;21982:191::-;22022:3;22041:20;22059:1;22041:20;:::i;:::-;22036:25;;22075:20;22093:1;22075:20;:::i;:::-;22070:25;;22118:1;22115;22111:9;22104:16;;22139:3;22136:1;22133:10;22130:36;;;22146:18;;:::i;:::-;22130:36;21982:191;;;;:::o;22179:165::-;22319:17;22315:1;22307:6;22303:14;22296:41;22179:165;:::o;22350:366::-;22492:3;22513:67;22577:2;22572:3;22513:67;:::i;:::-;22506:74;;22589:93;22678:3;22589:93;:::i;:::-;22707:2;22702:3;22698:12;22691:19;;22350:366;;;:::o;22722:419::-;22888:4;22926:2;22915:9;22911:18;22903:26;;22975:9;22969:4;22965:20;22961:1;22950:9;22946:17;22939:47;23003:131;23129:4;23003:131;:::i;:::-;22995:139;;22722:419;;;:::o;23147:167::-;23287:19;23283:1;23275:6;23271:14;23264:43;23147:167;:::o;23320:366::-;23462:3;23483:67;23547:2;23542:3;23483:67;:::i;:::-;23476:74;;23559:93;23648:3;23559:93;:::i;:::-;23677:2;23672:3;23668:12;23661:19;;23320:366;;;:::o;23692:419::-;23858:4;23896:2;23885:9;23881:18;23873:26;;23945:9;23939:4;23935:20;23931:1;23920:9;23916:17;23909:47;23973:131;24099:4;23973:131;:::i;:::-;23965:139;;23692:419;;;:::o;24117:233::-;24156:3;24179:24;24197:5;24179:24;:::i;:::-;24170:33;;24225:66;24218:5;24215:77;24212:103;;24295:18;;:::i;:::-;24212:103;24342:1;24335:5;24331:13;24324:20;;24117:233;;;:::o;24356:180::-;24404:77;24401:1;24394:88;24501:4;24498:1;24491:15;24525:4;24522:1;24515:15;24542:165;24682:17;24678:1;24670:6;24666:14;24659:41;24542:165;:::o;24713:366::-;24855:3;24876:67;24940:2;24935:3;24876:67;:::i;:::-;24869:74;;24952:93;25041:3;24952:93;:::i;:::-;25070:2;25065:3;25061:12;25054:19;;24713:366;;;:::o;25085:419::-;25251:4;25289:2;25278:9;25274:18;25266:26;;25338:9;25332:4;25328:20;25324:1;25313:9;25309:17;25302:47;25366:131;25492:4;25366:131;:::i;:::-;25358:139;;25085:419;;;:::o;25510:158::-;25650:10;25646:1;25638:6;25634:14;25627:34;25510:158;:::o;25674:365::-;25816:3;25837:66;25901:1;25896:3;25837:66;:::i;:::-;25830:73;;25912:93;26001:3;25912:93;:::i;:::-;26030:2;26025:3;26021:12;26014:19;;25674:365;;;:::o;26045:419::-;26211:4;26249:2;26238:9;26234:18;26226:26;;26298:9;26292:4;26288:20;26284:1;26273:9;26269:17;26262:47;26326:131;26452:4;26326:131;:::i;:::-;26318:139;;26045:419;;;:::o;26470:147::-;26571:11;26608:3;26593:18;;26470:147;;;;:::o;26623:114::-;;:::o;26743:398::-;26902:3;26923:83;27004:1;26999:3;26923:83;:::i;:::-;26916:90;;27015:93;27104:3;27015:93;:::i;:::-;27133:1;27128:3;27124:11;27117:18;;26743:398;;;:::o;27147:379::-;27331:3;27353:147;27496:3;27353:147;:::i;:::-;27346:154;;27517:3;27510:10;;27147:379;;;:::o;27532:165::-;27672:17;27668:1;27660:6;27656:14;27649:41;27532:165;:::o;27703:366::-;27845:3;27866:67;27930:2;27925:3;27866:67;:::i;:::-;27859:74;;27942:93;28031:3;27942:93;:::i;:::-;28060:2;28055:3;28051:12;28044:19;;27703:366;;;:::o;28075:419::-;28241:4;28279:2;28268:9;28264:18;28256:26;;28328:9;28322:4;28318:20;28314:1;28303:9;28299:17;28292:47;28356:131;28482:4;28356:131;:::i;:::-;28348:139;;28075:419;;;:::o;28500:141::-;28549:4;28572:3;28564:11;;28595:3;28592:1;28585:14;28629:4;28626:1;28616:18;28608:26;;28500:141;;;:::o;28647:93::-;28684:6;28731:2;28726;28719:5;28715:14;28711:23;28701:33;;28647:93;;;:::o;28746:107::-;28790:8;28840:5;28834:4;28830:16;28809:37;;28746:107;;;;:::o;28859:393::-;28928:6;28978:1;28966:10;28962:18;29001:97;29031:66;29020:9;29001:97;:::i;:::-;29119:39;29149:8;29138:9;29119:39;:::i;:::-;29107:51;;29191:4;29187:9;29180:5;29176:21;29167:30;;29240:4;29230:8;29226:19;29219:5;29216:30;29206:40;;28935:317;;28859:393;;;;;:::o;29258:60::-;29286:3;29307:5;29300:12;;29258:60;;;:::o;29324:142::-;29374:9;29407:53;29425:34;29434:24;29452:5;29434:24;:::i;:::-;29425:34;:::i;:::-;29407:53;:::i;:::-;29394:66;;29324:142;;;:::o;29472:75::-;29515:3;29536:5;29529:12;;29472:75;;;:::o;29553:269::-;29663:39;29694:7;29663:39;:::i;:::-;29724:91;29773:41;29797:16;29773:41;:::i;:::-;29765:6;29758:4;29752:11;29724:91;:::i;:::-;29718:4;29711:105;29629:193;29553:269;;;:::o;29828:73::-;29873:3;29828:73;:::o;29907:189::-;29984:32;;:::i;:::-;30025:65;30083:6;30075;30069:4;30025:65;:::i;:::-;29960:136;29907:189;;:::o;30102:186::-;30162:120;30179:3;30172:5;30169:14;30162:120;;;30233:39;30270:1;30263:5;30233:39;:::i;:::-;30206:1;30199:5;30195:13;30186:22;;30162:120;;;30102:186;;:::o;30294:543::-;30395:2;30390:3;30387:11;30384:446;;;30429:38;30461:5;30429:38;:::i;:::-;30513:29;30531:10;30513:29;:::i;:::-;30503:8;30499:44;30696:2;30684:10;30681:18;30678:49;;;30717:8;30702:23;;30678:49;30740:80;30796:22;30814:3;30796:22;:::i;:::-;30786:8;30782:37;30769:11;30740:80;:::i;:::-;30399:431;;30384:446;30294:543;;;:::o;30843:117::-;30897:8;30947:5;30941:4;30937:16;30916:37;;30843:117;;;;:::o;30966:169::-;31010:6;31043:51;31091:1;31087:6;31079:5;31076:1;31072:13;31043:51;:::i;:::-;31039:56;31124:4;31118;31114:15;31104:25;;31017:118;30966:169;;;;:::o;31140:295::-;31216:4;31362:29;31387:3;31381:4;31362:29;:::i;:::-;31354:37;;31424:3;31421:1;31417:11;31411:4;31408:21;31400:29;;31140:295;;;;:::o;31440:1395::-;31557:37;31590:3;31557:37;:::i;:::-;31659:18;31651:6;31648:30;31645:56;;;31681:18;;:::i;:::-;31645:56;31725:38;31757:4;31751:11;31725:38;:::i;:::-;31810:67;31870:6;31862;31856:4;31810:67;:::i;:::-;31904:1;31928:4;31915:17;;31960:2;31952:6;31949:14;31977:1;31972:618;;;;32634:1;32651:6;32648:77;;;32700:9;32695:3;32691:19;32685:26;32676:35;;32648:77;32751:67;32811:6;32804:5;32751:67;:::i;:::-;32745:4;32738:81;32607:222;31942:887;;31972:618;32024:4;32020:9;32012:6;32008:22;32058:37;32090:4;32058:37;:::i;:::-;32117:1;32131:208;32145:7;32142:1;32139:14;32131:208;;;32224:9;32219:3;32215:19;32209:26;32201:6;32194:42;32275:1;32267:6;32263:14;32253:24;;32322:2;32311:9;32307:18;32294:31;;32168:4;32165:1;32161:12;32156:17;;32131:208;;;32367:6;32358:7;32355:19;32352:179;;;32425:9;32420:3;32416:19;32410:26;32468:48;32510:4;32502:6;32498:17;32487:9;32468:48;:::i;:::-;32460:6;32453:64;32375:156;32352:179;32577:1;32573;32565:6;32561:14;32557:22;32551:4;32544:36;31979:611;;;31942:887;;31532:1303;;;31440:1395;;:::o;32841:172::-;32981:24;32977:1;32969:6;32965:14;32958:48;32841:172;:::o;33019:366::-;33161:3;33182:67;33246:2;33241:3;33182:67;:::i;:::-;33175:74;;33258:93;33347:3;33258:93;:::i;:::-;33376:2;33371:3;33367:12;33360:19;;33019:366;;;:::o;33391:419::-;33557:4;33595:2;33584:9;33580:18;33572:26;;33644:9;33638:4;33634:20;33630:1;33619:9;33615:17;33608:47;33672:131;33798:4;33672:131;:::i;:::-;33664:139;;33391:419;;;:::o;33816:174::-;33956:26;33952:1;33944:6;33940:14;33933:50;33816:174;:::o;33996:366::-;34138:3;34159:67;34223:2;34218:3;34159:67;:::i;:::-;34152:74;;34235:93;34324:3;34235:93;:::i;:::-;34353:2;34348:3;34344:12;34337:19;;33996:366;;;:::o;34368:419::-;34534:4;34572:2;34561:9;34557:18;34549:26;;34621:9;34615:4;34611:20;34607:1;34596:9;34592:17;34585:47;34649:131;34775:4;34649:131;:::i;:::-;34641:139;;34368:419;;;:::o;34793:94::-;34826:8;34874:5;34870:2;34866:14;34845:35;;34793:94;;;:::o;34893:::-;34932:7;34961:20;34975:5;34961:20;:::i;:::-;34950:31;;34893:94;;;:::o;34993:100::-;35032:7;35061:26;35081:5;35061:26;:::i;:::-;35050:37;;34993:100;;;:::o;35099:157::-;35204:45;35224:24;35242:5;35224:24;:::i;:::-;35204:45;:::i;:::-;35199:3;35192:58;35099:157;;:::o;35262:79::-;35301:7;35330:5;35319:16;;35262:79;;;:::o;35347:157::-;35452:45;35472:24;35490:5;35472:24;:::i;:::-;35452:45;:::i;:::-;35447:3;35440:58;35347:157;;:::o;35510:538::-;35678:3;35693:75;35764:3;35755:6;35693:75;:::i;:::-;35793:2;35788:3;35784:12;35777:19;;35806:75;35877:3;35868:6;35806:75;:::i;:::-;35906:2;35901:3;35897:12;35890:19;;35919:75;35990:3;35981:6;35919:75;:::i;:::-;36019:2;36014:3;36010:12;36003:19;;36039:3;36032:10;;35510:538;;;;;;:::o;36054:167::-;36194:19;36190:1;36182:6;36178:14;36171:43;36054:167;:::o;36227:366::-;36369:3;36390:67;36454:2;36449:3;36390:67;:::i;:::-;36383:74;;36466:93;36555:3;36466:93;:::i;:::-;36584:2;36579:3;36575:12;36568:19;;36227:366;;;:::o;36599:419::-;36765:4;36803:2;36792:9;36788:18;36780:26;;36852:9;36846:4;36842:20;36838:1;36827:9;36823:17;36816:47;36880:131;37006:4;36880:131;:::i;:::-;36872:139;;36599:419;;;:::o;37024:148::-;37126:11;37163:3;37148:18;;37024:148;;;;:::o;37178:390::-;37284:3;37312:39;37345:5;37312:39;:::i;:::-;37367:89;37449:6;37444:3;37367:89;:::i;:::-;37360:96;;37465:65;37523:6;37518:3;37511:4;37504:5;37500:16;37465:65;:::i;:::-;37555:6;37550:3;37546:16;37539:23;;37288:280;37178:390;;;;:::o;37574:275::-;37706:3;37728:95;37819:3;37810:6;37728:95;:::i;:::-;37721:102;;37840:3;37833:10;;37574:275;;;;:::o;37855:194::-;37895:4;37915:20;37933:1;37915:20;:::i;:::-;37910:25;;37949:20;37967:1;37949:20;:::i;:::-;37944:25;;37993:1;37990;37986:9;37978:17;;38017:1;38011:4;38008:11;38005:37;;;38022:18;;:::i;:::-;38005:37;37855:194;;;;:::o;38055:435::-;38235:3;38257:95;38348:3;38339:6;38257:95;:::i;:::-;38250:102;;38369:95;38460:3;38451:6;38369:95;:::i;:::-;38362:102;;38481:3;38474:10;;38055:435;;;;;:::o;38496:151::-;38636:3;38632:1;38624:6;38620:14;38613:27;38496:151;:::o;38653:400::-;38813:3;38834:84;38916:1;38911:3;38834:84;:::i;:::-;38827:91;;38927:93;39016:3;38927:93;:::i;:::-;39045:1;39040:3;39036:11;39029:18;;38653:400;;;:::o;39059:701::-;39340:3;39362:95;39453:3;39444:6;39362:95;:::i;:::-;39355:102;;39474:148;39618:3;39474:148;:::i;:::-;39467:155;;39639:95;39730:3;39721:6;39639:95;:::i;:::-;39632:102;;39751:3;39744:10;;39059:701;;;;;:::o;39766:165::-;39906:17;39902:1;39894:6;39890:14;39883:41;39766:165;:::o;39937:366::-;40079:3;40100:67;40164:2;40159:3;40100:67;:::i;:::-;40093:74;;40176:93;40265:3;40176:93;:::i;:::-;40294:2;40289:3;40285:12;40278:19;;39937:366;;;:::o;40309:419::-;40475:4;40513:2;40502:9;40498:18;40490:26;;40562:9;40556:4;40552:20;40548:1;40537:9;40533:17;40526:47;40590:131;40716:4;40590:131;:::i;:::-;40582:139;;40309:419;;;:::o;40734:159::-;40874:11;40870:1;40862:6;40858:14;40851:35;40734:159;:::o;40899:365::-;41041:3;41062:66;41126:1;41121:3;41062:66;:::i;:::-;41055:73;;41137:93;41226:3;41137:93;:::i;:::-;41255:2;41250:3;41246:12;41239:19;;40899:365;;;:::o;41270:419::-;41436:4;41474:2;41463:9;41459:18;41451:26;;41523:9;41517:4;41513:20;41509:1;41498:9;41494:17;41487:47;41551:131;41677:4;41551:131;:::i;:::-;41543:139;;41270:419;;;:::o;41695:225::-;41835:34;41831:1;41823:6;41819:14;41812:58;41904:8;41899:2;41891:6;41887:15;41880:33;41695:225;:::o;41926:366::-;42068:3;42089:67;42153:2;42148:3;42089:67;:::i;:::-;42082:74;;42165:93;42254:3;42165:93;:::i;:::-;42283:2;42278:3;42274:12;42267:19;;41926:366;;;:::o;42298:419::-;42464:4;42502:2;42491:9;42487:18;42479:26;;42551:9;42545:4;42541:20;42537:1;42526:9;42522:17;42515:47;42579:131;42705:4;42579:131;:::i;:::-;42571:139;;42298:419;;;:::o;42723:140::-;42772:9;42805:52;42823:33;42832:23;42849:5;42832:23;:::i;:::-;42823:33;:::i;:::-;42805:52;:::i;:::-;42792:65;;42723:140;;;:::o;42869:129::-;42955:36;42985:5;42955:36;:::i;:::-;42950:3;42943:49;42869:129;;:::o;43004:330::-;43124:4;43162:2;43151:9;43147:18;43139:26;;43175:70;43242:1;43231:9;43227:17;43218:6;43175:70;:::i;:::-;43255:72;43323:2;43312:9;43308:18;43299:6;43255:72;:::i;:::-;43004:330;;;;;:::o;43340:98::-;43391:6;43425:5;43419:12;43409:22;;43340:98;;;:::o;43444:168::-;43527:11;43561:6;43556:3;43549:19;43601:4;43596:3;43592:14;43577:29;;43444:168;;;;:::o;43618:373::-;43704:3;43732:38;43764:5;43732:38;:::i;:::-;43786:70;43849:6;43844:3;43786:70;:::i;:::-;43779:77;;43865:65;43923:6;43918:3;43911:4;43904:5;43900:16;43865:65;:::i;:::-;43955:29;43977:6;43955:29;:::i;:::-;43950:3;43946:39;43939:46;;43708:283;43618:373;;;;:::o;43997:640::-;44192:4;44230:3;44219:9;44215:19;44207:27;;44244:71;44312:1;44301:9;44297:17;44288:6;44244:71;:::i;:::-;44325:72;44393:2;44382:9;44378:18;44369:6;44325:72;:::i;:::-;44407;44475:2;44464:9;44460:18;44451:6;44407:72;:::i;:::-;44526:9;44520:4;44516:20;44511:2;44500:9;44496:18;44489:48;44554:76;44625:4;44616:6;44554:76;:::i;:::-;44546:84;;43997:640;;;;;;;:::o;44643:141::-;44699:5;44730:6;44724:13;44715:22;;44746:32;44772:5;44746:32;:::i;:::-;44643:141;;;;:::o;44790:349::-;44859:6;44908:2;44896:9;44887:7;44883:23;44879:32;44876:119;;;44914:79;;:::i;:::-;44876:119;45034:1;45059:63;45114:7;45105:6;45094:9;45090:22;45059:63;:::i;:::-;45049:73;;45005:127;44790:349;;;;:::o;45145:180::-;45193:77;45190:1;45183:88;45290:4;45287:1;45280:15;45314:4;45311:1;45304:15;45331:77;45368:7;45397:5;45386:16;;45331:77;;;:::o;45414:118::-;45501:24;45519:5;45501:24;:::i;:::-;45496:3;45489:37;45414:118;;:::o;45538:222::-;45631:4;45669:2;45658:9;45654:18;45646:26;;45682:71;45750:1;45739:9;45735:17;45726:6;45682:71;:::i;:::-;45538:222;;;;:::o;45766:180::-;45814:77;45811:1;45804:88;45911:4;45908:1;45901:15;45935:4;45932:1;45925:15;45952:545;46125:4;46163:3;46152:9;46148:19;46140:27;;46177:71;46245:1;46234:9;46230:17;46221:6;46177:71;:::i;:::-;46258:68;46322:2;46311:9;46307:18;46298:6;46258:68;:::i;:::-;46336:72;46404:2;46393:9;46389:18;46380:6;46336:72;:::i;:::-;46418;46486:2;46475:9;46471:18;46462:6;46418:72;:::i;:::-;45952:545;;;;;;;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","claimForSubscriber(bytes)":"bcea0fec","contractURI()":"e8a3d485","currentId()":"e00dd161","getApproved(uint256)":"081812fc","hasClaimedOnChain(address)":"1a02b69e","isApprovedForAll(address,address)":"e985e9c5","maxPublicSupply()":"26a74d8e","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","priceWei()":"b7ec2086","publicMint(uint256)":"2db11544","publicMinted()":"a4f4f8af","renounceOwnership()":"715018a6","royaltyInfo(uint256,uint256)":"2a55205a","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","setContractURI(string)":"938e3d7b","setDefaultRoyalty(address,uint96)":"04634d8d","setPrice(uint256)":"91b7f5ed","setTrustedSigner(address)":"56a1c701","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","tokenVariant(uint256)":"dd46edb8","tokensOfOwner(address)":"8462151c","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","transform(uint256,uint8)":"f78f647c","trustedSigner()":"f74d5480","withdraw(address)":"51cff8d9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxPublicSupply_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceWei_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"base\",\"type\":\"string\"}],\"name\":\"BaseURISet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"}],\"name\":\"ContractURISet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"PublicMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SubscriberClaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"burnedId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"variant\",\"type\":\"uint8\"}],\"name\":\"Transform\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"TrustedSignerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"claimForSubscriber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimedOnChain\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPublicSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"}],\"name\":\"publicMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"b\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setDefaultRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPriceWei\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s\",\"type\":\"address\"}],\"name\":\"setTrustedSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenVariant\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"variant\",\"type\":\"uint8\"}],\"name\":\"transform\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}],\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NeutralHeart.sol\":\"NeutralHeart\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xafab0e6c71905303c47dd254168cb31efc91f0ae284cde609b0202f97f85469e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://824d05aec56eb82a2a3c28eece530dc0792d3a008b09d01444e57cf4aceb0445\",\"dweb:/ipfs/QmVvqmJ5UobuRU9Q4JMyXxBfzKs2cpjbWXMNpxX4binTX8\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xe85bdcbce4b8474872045aafb5ed8e3e0a5bd794ded35f76ee9deef25bdc7446\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60872f2d516e70f06d9684386c6b9c0b9d7ff7f4af257be6087efa2c3bb81937\",\"dweb:/ipfs/QmdWgPbs2e8SFNNXPFwTt2xD5N8hniehgGCMHUnY1JDcCw\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xaa3852717be1903bf8b8a66c7ce323f70ac93227769c450f2b332fdd16bd9198\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09ce2e4a5b1064a392594c0d5efeb3ccd8eacf431e55a85574cafb6bfb72ba69\",\"dweb:/ipfs/QmUbT5UomYpwwMrNMzzuNcGb4sxuMZ4jz8mMPZewX8mEPn\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0xa33062c6e0675a74a27b06a4ae4c6ad4d3b7219e27d9c146a4ac57295096d393\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://777543d88013fdd0ee7f47ac619fb13a1993bb667675d8816fde024f73cfbf2d\",\"dweb:/ipfs/QmfDS9uL1XZ2oUe1PH8eRCRyu3Hf98cK8ksGf4Ww7kg5zv\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/NeutralHeart.sol\":{\"keccak256\":\"0x7b951c8de8a9b297844a12953cea7abffd9fd88bc093b8e4a63641c941e033e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eba8c19a1fa619ada94ddfa1fbf48374826b9309062798ca9c559892645e822c\",\"dweb:/ipfs/QmWonPvupxVQDrsrjAxEi1V1AcHwsLt1XyDgsF2kDnd3pF\"]}},\"version\":1}"}}}}}