'use client';

import Image from 'next/image';
import { useState } from 'react';

export default function SafeImage({ 
  src, 
  alt = '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', 
  width, 
  height, 
  fill, 
  sizes, 
  className = '', 
  priority = false,
  onError: customOnError,
  ...otherProps 
}) {
  const [hasError, setHasError] = useState(false);

  const handleError = () => {
    setHasError(true);
    // –í—ã–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –µ—Å–ª–∏ –µ—Å—Ç—å
    if (customOnError) {
      customOnError();
    }
  };

  // –ï—Å–ª–∏ –Ω–µ—Ç src –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º fallback
  if (!src || hasError) {
    const fallbackContent = (
      <div className="text-center text-gray-400">
        <div className="text-2xl mb-1">üì∑</div>
        <div className="text-xs">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ</div>
      </div>
    );

    if (fill) {
      return (
        <div className="absolute inset-0 bg-gray-100 flex items-center justify-center">
          {fallbackContent}
        </div>
      );
    }

    return (
      <div 
        className={`bg-gray-100 flex items-center justify-center ${className}`}
        style={{ 
          width: width || 'auto', 
          height: height || 'auto',
          minWidth: width ? `${width}px` : '40px',
          minHeight: height ? `${height}px` : '40px'
        }}
      >
        {fallbackContent}
      </div>
    );
  }

  // –†–µ–Ω–¥–µ—Ä–∏–º Next.js Image —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–æ–ø—Å–∞–º–∏
  return (
    <Image
      src={src}
      alt={alt}
      width={width}
      height={height}
      fill={fill}
      sizes={sizes}
      className={className}
      priority={priority}
      onError={handleError}
      {...otherProps}
    />
  );
}