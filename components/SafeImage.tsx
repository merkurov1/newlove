'use client';

import Image from 'next/image';
import { useState, useCallback } from 'react';

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å fallback
 * –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–∑ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –ø—Ä–æ–ø—Å–æ–≤
 */
export default function SafeImage(props) {
  const { 
    src, 
    alt = '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', 
    width, 
    height, 
    fill = false,
    sizes, 
    className = '', 
    priority = false,
    style,
    ...imageProps // –¢–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–µ –ø—Ä–æ–ø—Å—ã Image
  } = props;

  const [imageError, setImageError] = useState(false);

  // –°—Ç–∞–±–∏–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
  const handleImageError = useCallback(() => {
    setImageError(true);
  }, []);

  // Fallback UI
  const renderFallback = () => {
    const fallbackContent = (
      <div className="text-center text-gray-400 p-2">
        <div className="text-xl mb-1">üì∑</div>
        <div className="text-xs">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</div>
      </div>
    );

    if (fill) {
      return (
        <div 
          className={`absolute inset-0 bg-gray-100 flex items-center justify-center ${className}`}
          style={style}
        >
          {fallbackContent}
        </div>
      );
    }

    return (
      <div 
        className={`bg-gray-100 flex items-center justify-center ${className}`}
        style={{ 
          width: width || 'auto', 
          height: height || 'auto',
          minWidth: width ? `${width}px` : '40px',
          minHeight: height ? `${height}px` : '40px',
          ...style
        }}
      >
        {fallbackContent}
      </div>
    );
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º fallback –µ—Å–ª–∏ –Ω–µ—Ç src –∏–ª–∏ –æ—à–∏–±–∫–∞
  if (!src || imageError) {
    return renderFallback();
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–µ—Å–∞–π–∑–∞ –¥–ª—è Supabase Storage
  let safeSrc = src;
  if (typeof safeSrc === 'string' && safeSrc.includes('supabase.co/storage')) {
    // –ù–µ –¥—É–±–ª–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –µ—Å–ª–∏ –æ–Ω–∏ —É–∂–µ –µ—Å—Ç—å
    if (!safeSrc.match(/[?&]width=\d+/)) {
      safeSrc += (safeSrc.includes('?') ? '&' : '?') + 'width=800&quality=75';
    }
  }
  return (
    <Image
      src={safeSrc}
      alt={alt}
      width={width}
      height={height}
      fill={fill}
      sizes={sizes}
      className={className}
      priority={priority}
      style={style}
      onError={handleImageError}
      // –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º ...imageProps —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–Ω–∏—è onError
    />
  );
}