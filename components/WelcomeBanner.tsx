'use client';

import useSupabaseSession from '@/hooks/useSupabaseSession';
import { useState, useEffect, useMemo } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import Link from 'next/link';
import useBannerSettings from '@/hooks/useBannerSettings';

interface WelcomeBannerProps {
  onClose?: () => void;
  variant?: 'public' | 'authenticated' | 'admin';
  forceShow?: boolean;
}

interface BannerConfig {
  id: string;
  title: string;
  description: string;
  style: string;
  icon: string;
  showFrequency: 'always' | 'once' | 'weekly';
  showDuration?: number; // –¥–Ω–∏
}

const BANNER_CONFIGS: Record<string, BannerConfig> = {
  public: {
    id: 'public-welcome',
    title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –º–µ–¥–∏–∞ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
    description: '–ò—Å—Å–ª–µ–¥—É–µ–º –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞, –ª—é–±–≤–∏ –∏ –¥–µ–Ω–µ–≥ –≤ —Ü–∏—Ñ—Ä–æ–≤—É—é —ç–ø–æ—Ö—É. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –∏ –∑–∞–∫—Ä—ã—Ç–æ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É.',
    style: 'bg-gradient-to-r from-pink-50 to-rose-50 border-pink-200',
    icon: 'üåü',
    showFrequency: 'always'
  },
  authenticated: {
    id: 'auth-welcome',
    title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫—Ä—É–≥ –±–ª–∏–∑–∫–∏—Ö!',
    description: '–í–∞–º –æ—Ç–∫—Ä—ã—Ç—ã –≤—Å–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏, –≤–∫–ª—é—á–∞—è –ª–∏—á–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã. –í–ø–µ—Ä–µ–¥–∏ ‚Äî –∑–∞–ø—É—Å–∫ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –∏ –Ω–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã. –û—Å—Ç–∞–µ–º—Å—è –Ω–∞ —Å–≤—è–∑–∏.',
    style: 'bg-gradient-to-r from-rose-50 to-pink-100 border-rose-300',
    icon: 'ü§ó',
    showFrequency: 'weekly'
  },
  admin: {
    id: 'admin-welcome', 
    title: '–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
    description: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫—Ä—É–≥ –±–ª–∏–∑–∫–∏—Ö! –í–∞–º –æ—Ç–∫—Ä—ã—Ç—ã –≤—Å–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏, –≤–∫–ª—é—á–∞—è –ª–∏—á–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã. –í–ø–µ—Ä–µ–¥–∏ ‚Äî –∑–∞–ø—É—Å–∫ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –∏ –Ω–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã.',
    style: 'bg-gradient-to-r from-purple-50 to-indigo-50 border-purple-200',
    icon: 'üëë',
    showFrequency: 'always'
  }
};

/**
 * –°–∏—Å—Ç–µ–º–∞ —É–º–Ω—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
 * 
 * –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã:
 * - –ê–¥–∞–ø—Ç–∏–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * - –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–∫–∞–∑–∞
 * - –ü–ª–∞–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è/–∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
 * - –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞–º–∏ –∏ –∑–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–º–∏ —É–≥–ª–∞–º–∏
 */
export default function WelcomeBanner({ onClose, variant, forceShow = false }: WelcomeBannerProps) {
  const { session, status } = useSupabaseSession();
  const [isVisible, setIsVisible] = useState(false);
  const [bannerConfig, setBannerConfig] = useState<BannerConfig | null>(null);
  const { isLoaded, shouldShowBanner, markBannerShown, dismissBanner } = useBannerSettings();

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç –±–∞–Ω–Ω–µ—Ä–∞ (memoized –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π identity –≤ —ç—Ñ—Ñ–µ–∫—Ç–∞—Ö)
  const currentVariant = useMemo(() => {
    if (variant) return variant;
    if (status === 'loading') return 'public';
    if (session?.user?.role === 'ADMIN') return 'admin';
    if (session?.user) return 'authenticated';
    return 'public';
  }, [variant, session, status]);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–Ω–Ω–µ—Ä–∞
  useEffect(() => {
    if (!isLoaded && !forceShow) return;
    
    const config = BANNER_CONFIGS[currentVariant];
    
    if (config && (forceShow || shouldShowBanner(config.id, config.showFrequency))) {
      setBannerConfig(config);
      setIsVisible(true);
      
      // –û—Ç–º–µ—á–∞–µ–º –ø–æ–∫–∞–∑ —á–µ—Ä–µ–∑ —Ö—É–∫
      if (!forceShow) {
        markBannerShown(config.id);
      }
    }
  }, [currentVariant, forceShow, isLoaded, markBannerShown, shouldShowBanner]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
  const handleClose = (type: 'temporary' | 'week' | 'permanent' = 'temporary') => {
    if (!bannerConfig) return;
    
    setIsVisible(false);
    
    if (type !== 'temporary') {
      const duration = type === 'week' ? 'week' : 'permanent';
      dismissBanner(bannerConfig.id, duration);
    }
    
    onClose?.();
  };

  if (!isVisible || !bannerConfig) return null;

  return (
    <AnimatePresence>
      <motion.div
        initial={{ opacity: 0, y: -20, scale: 0.95 }}
        animate={{ opacity: 1, y: 0, scale: 1 }}
        exit={{ opacity: 0, y: -20, scale: 0.95 }}
        transition={{ duration: 0.3, ease: "easeOut" }}
        className={`
          relative rounded-2xl border-2 p-6 md:p-8 shadow-sm hover:shadow-md 
          transition-all duration-300 mb-8 overflow-hidden
          ${bannerConfig.style}
        `}
      >
        {/* –§–æ–Ω–æ–≤—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω */}
        <div className="absolute inset-0 opacity-5">
          <div className="absolute inset-0 bg-[radial-gradient(circle_at_30%_40%,rgba(120,119,198,0.3),transparent_50%)]" />
          <div className="absolute inset-0 bg-[radial-gradient(circle_at_70%_80%,rgba(255,119,198,0.2),transparent_50%)]" />
        </div>

        <div className="relative flex items-start justify-between">
          <div className="flex-1 pr-6">
            <div className="flex items-center gap-3 mb-4">
              <span className="text-2xl" role="img" aria-label="–ò–∫–æ–Ω–∫–∞">
                {bannerConfig.icon}
              </span>
              <h2 className="text-xl md:text-2xl font-bold text-gray-900 leading-tight">
                {bannerConfig.title}
              </h2>
            </div>
            
            <p className="text-gray-700 leading-relaxed text-base md:text-lg max-w-4xl">
              {bannerConfig.description}
            </p>
            
            {/* Call to Action –¥–ª—è –Ω–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö */}
            {currentVariant === 'public' && (
              <div className="mt-6 flex flex-col sm:flex-row gap-3">
                <button 
                  onClick={() => alert('Use the login button above or wallet login below.')}
                  className="bg-gray-900 text-white px-6 py-3 rounded-lg font-semibold hover:bg-gray-800 transition-colors"
                >
                  –í–æ–π—Ç–∏
                </button>
                <button 
                  onClick={() => handleClose('week')}
                  className="text-gray-600 hover:text-gray-800 px-4 py-2 text-sm transition-colors"
                >
                  –ù–∞–ø–æ–º–Ω–∏—Ç—å —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é
                </button>
              </div>
            )}
            
            {/* Quick actions –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö */}
            {currentVariant === 'authenticated' && (
              <div className="mt-6 flex flex-col sm:flex-row gap-3">
                <Link 
                  href="/profile"
                  className="bg-rose-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-rose-700 transition-colors text-center"
                >
                  –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å
                </Link>
                <Link 
                  href="/articles"
                  className="text-rose-600 hover:text-rose-800 px-4 py-2 text-sm transition-colors border border-rose-200 rounded-lg hover:bg-rose-50 text-center"
                >
                  –ß–∏—Ç–∞—Ç—å —Å—Ç–∞—Ç—å–∏
                </Link>
              </div>
            )}
            
            {/* Quick actions –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ */}
            {currentVariant === 'admin' && (
              <div className="mt-6 flex flex-col sm:flex-row gap-3">
                <Link 
                  href="/admin"
                  className="bg-purple-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-purple-700 transition-colors text-center"
                >
                  –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                </Link>
                <Link 
                  href="/admin/articles/new"
                  className="text-purple-600 hover:text-purple-800 px-4 py-2 text-sm transition-colors border border-purple-200 rounded-lg hover:bg-purple-50 text-center"
                >
                  –ù–∞–ø–∏—Å–∞—Ç—å —Å—Ç–∞—Ç—å—é
                </Link>
              </div>
            )}
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
          <div className="flex flex-col gap-2">
            <button
              onClick={() => handleClose('temporary')}
              className="p-2 rounded-full hover:bg-white/50 transition-colors group"
              title="–ó–∞–∫—Ä—ã—Ç—å"
            >
              <svg 
                className="w-5 h-5 text-gray-500 group-hover:text-gray-700" 
                fill="none" 
                stroke="currentColor" 
                viewBox="0 0 24 24"
              >
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
            
            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
            {currentVariant !== 'public' && (
              <div className="relative group">
                <button 
                  className="p-2 rounded-full hover:bg-white/50 transition-colors"
                  title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞–∑–∞"
                >
                  <svg className="w-4 h-4 text-gray-400" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"/>
                  </svg>
                </button>
                
                {/* –í—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é */}
                <div className="absolute right-0 top-full mt-1 bg-white rounded-lg shadow-lg border border-gray-200 py-1 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-10 whitespace-nowrap">
                  <button 
                    onClick={() => handleClose('week')}
                    className="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-50"
                  >
                    –°–∫—Ä—ã—Ç—å –Ω–∞ –Ω–µ–¥–µ–ª—é
                  </button>
                  <button 
                    onClick={() => handleClose('permanent')}
                    className="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-50"
                  >
                    –ë–æ–ª—å—à–µ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å
                  </button>
                </div>
              </div>
            )}
          </div>
        </div>
      </motion.div>
    </AnimatePresence>
  );
}