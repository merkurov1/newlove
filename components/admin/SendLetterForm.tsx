"use client";

import React from 'react';
import { sendLetter } from '@/app/admin/actions';

interface Letter {
  id: string;
  title: string;
  sentAt?: Date | null;
}

interface SendLetterFormProps {
  letter: Letter;
}

export default function SendLetterForm({ letter }: SendLetterFormProps) {
  const [isLoading, setIsLoading] = React.useState(false);
  const [message, setMessage] = React.useState('');
  const [testEmail, setTestEmail] = React.useState('');

  async function handleSendLetter(formData: FormData) {
    setIsLoading(true);
    setMessage('');
    
    try {
      // append testEmail if set
      if (testEmail) formData.set('testEmail', testEmail);
      const result = await sendLetter(null, formData);
      
      if (result.status === 'success') {
        setMessage(`‚úÖ ${result.message}`);
      } else {
        setMessage(`‚ùå ${result.message}`);
      }
    } catch (error) {
      setMessage('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–∞—Å—Å—ã–ª–∫–∏');
    } finally {
      setIsLoading(false);
    }
  }

  // –ï—Å–ª–∏ –ø–∏—Å—å–º–æ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
  if (letter.sentAt) {
    return (
      <div className="text-green-700">
        ‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞: {new Date(letter.sentAt).toLocaleString('ru-RU')}
      </div>
    );
  }

  return (
    <div>
      <div className="mb-4 p-3 bg-yellow-50 border border-yellow-200 rounded-md">
        <p className="text-yellow-800 text-sm">
          <strong>üìù –ü—É–±–ª–∏–∫–∞—Ü–∏—è ‚â† –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏</strong><br/>
          ‚Ä¢ –ü—É–±–ª–∏–∫–∞—Ü–∏—è = –ø–∏—Å—å–º–æ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –Ω–∞ —Å–∞–π—Ç–µ<br/>
          ‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ = –ø–∏—Å—å–º–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º –Ω–∞ email
        </p>
      </div>
      
      <p className="text-blue-700 mb-4">
        –ü–∏—Å—å–º–æ –≥–æ—Ç–æ–≤–æ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.
      </p>
      
      {message && (
        <div className="mb-4 p-3 bg-white border rounded-md">
          {message}
        </div>
      )}
      
      <form action={handleSendLetter} className="flex gap-3 flex-col md:flex-row">
        <input type="hidden" name="letterId" value={letter.id} />

        <div className="flex gap-2 items-center">
          <input
            type="email"
            name="testEmail"
            value={testEmail}
            onChange={(e: any) => setTestEmail(e.target.value)}
            placeholder="–¢–µ—Å—Ç–æ–≤—ã–π email (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
            className="px-3 py-2 border rounded-md mr-2"
          />
          <button
            type="submit"
            disabled={isLoading}
            className="px-6 py-3 bg-blue-600 text-white rounded-md font-medium hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2"
          >
            {isLoading ? (
              <>
                <div className="animate-spin w-4 h-4 border-2 border-white border-t-transparent rounded-full"></div>
                –û—Ç–ø—Ä–∞–≤–ª—è–µ–º...
              </>
            ) : (
              <>
                üìß {testEmail ? '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É'}
              </>
            )}
          </button>
        </div>
      </form>
      
      <p className="text-sm text-gray-600 mt-2">
        ‚ö†Ô∏è –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –Ω–µ–ª—å–∑—è. –ü–∏—Å—å–º–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º.
      </p>
    </div>
  );
}