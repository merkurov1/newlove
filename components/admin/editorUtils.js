// /components/admin/editorUtils.js
// –û–±—â–∏–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤ —Å —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –≤—Å–µ—Ö —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤
 * @param {File} file - –§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @param {string} componentName - –ò–º—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'TiptapEditor')
 * @param {boolean} useSupabase - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Supabase Storage (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è Vercel)
 * @returns {Promise<{success: boolean, url?: string, error?: string}>}
 */
export async function uploadImage(file, componentName = 'Editor', useSupabase = true) {
  if (process.env.NODE_ENV === 'development') {
    console.log(`üñºÔ∏è ${componentName}: –ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:`, file.name);
    console.log(`üìä ${componentName}: –î–µ—Ç–∞–ª–∏ —Ñ–∞–π–ª–∞:`, {
      name: file.name,
      type: file.type,
      size: file.size,
      lastModified: file.lastModified,
      useSupabase
    });
  }
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π API endpoint
  const endpoint = '/api/media/upload';
  const formData = new FormData();
  formData.append('files', file);
  
  try {
    if (process.env.NODE_ENV === 'development') {
      console.log(`üöÄ ${componentName}: –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –Ω–∞ ${endpoint}`);
    }
    const res = await fetch(endpoint, {
      method: 'POST',
      body: formData,
      // NextAuth –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–¥–∞–µ—Ç cookies —Å —Å–µ—Å—Å–∏–µ–π
    });
    
    if (process.env.NODE_ENV === 'development') {
      console.log(`üì° ${componentName}: –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ —Å—Ç–∞—Ç—É—Å:`, res.status);
      console.log(`üìã ${componentName}: –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:`, Object.fromEntries(res.headers.entries()));
    }
    
    if (!res.ok) {
      const errorText = await res.text();
      if (process.env.NODE_ENV === 'development') {
        console.error(`‚ùå ${componentName}: –û—à–∏–±–∫–∞ HTTP`, res.status, errorText);
      }
      
      // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –∏–∑ –æ—à–∏–±–∫–∏
      try {
        const errorData = JSON.parse(errorText);
        return { 
          success: false, 
          error: errorData.error || `HTTP ${res.status}` 
        };
      } catch {
        return { 
          success: false, 
          error: `HTTP ${res.status}: ${errorText}` 
        };
      }
    }

    const data = await res.json();
    
    if (process.env.NODE_ENV === 'development') {
      console.log(`‚úÖ ${componentName}: –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç:`, data);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –Ω–æ–≤–æ–≥–æ API
    if (data.results && data.results.length > 0) {
      const uploadResult = data.results[0];
      if (uploadResult.success) {
        // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL
        const publicUrl = `${process.env.NEXT_PUBLIC_SUPABASE_URL}/storage/v1/object/public/media/${uploadResult.fileName}`;
        
        if (process.env.NODE_ENV === 'development') {
          console.log(`üéØ ${componentName}: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:`, publicUrl);
        }
        
        return { success: true, url: publicUrl };
      } else {
        return { success: false, error: uploadResult.error || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏' };
      }
    } else {
      return { success: false, error: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞' };
    }
  } catch (error) {
    if (process.env.NODE_ENV === 'development') {
      console.error(`üí• ${componentName}: –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:`, error);
    }
    return { 
      success: false, 
      error: `Network error: ${error.message}` 
    };
  }
}

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Tiptap —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
 */
export const tiptapConfig = {
  extensions: {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    image: {
      inline: false,
      allowBase64: false,
    },
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
    editorProps: {
      attributes: {
        class: 'prose prose-lg min-h-[300px] max-w-none focus:outline-none',
      },
    },
  },
};

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Editor.js
 */
export const editorJsConfig = {
  tools: {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ Editor.js
    image: {
      config: {
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        endpoints: {
          byFile: '/api/upload/editor-image',
        },
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        types: 'image/*',
        field: 'image',
      },
    },
  },
  // –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  autofocus: true,
  placeholder: '–ù–∞—á–Ω–∏—Ç–µ –ø–∏—Å–∞—Ç—å –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç...',
};

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤
 * @param {string} error - –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
 * @param {string} componentName - –ò–º—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @param {boolean} showAlert - –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ alert –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 */
export function handleEditorError(error, componentName = 'Editor', showAlert = true) {
  console.error(`üí• ${componentName}: –û—à–∏–±–∫–∞:`, error);
  
  if (showAlert) {
    // –ë–æ–ª–µ–µ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let userMessage = error;
    
    if (error.includes('401') || error.includes('Unauthorized')) {
      userMessage = '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.';
    } else if (error.includes('413') || error.includes('too large')) {
      userMessage = '–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5MB.';
    } else if (error.includes('400') || error.includes('Invalid file type')) {
      userMessage = '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ JPG, PNG, GIF –∏–ª–∏ WebP.';
    } else if (error.includes('500')) {
      userMessage = '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
    }
    
    alert(`–û—à–∏–±–∫–∞: ${userMessage}`);
  }
  
  return userMessage;
}

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 * @param {File} file - –§–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @returns {{valid: boolean, error?: string}}
 */
export function validateImageFile(file) {
  if (!file) {
    return { valid: false, error: '–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω' };
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
  const allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];
  if (!allowedTypes.includes(file.type)) {
    return { 
      valid: false, 
      error: '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ JPG, PNG, GIF –∏–ª–∏ WebP.' 
    };
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ (5MB)
  const maxSize = 5 * 1024 * 1024;
  if (file.size > maxSize) {
    return { 
      valid: false, 
      error: '–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5MB.' 
    };
  }
  
  return { valid: true };
}