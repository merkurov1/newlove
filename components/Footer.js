'use client';

import { useSession } from 'next-auth/react';
import { useFormState } from 'react-dom';
import { subscribeToNewsletter } from '@/app/admin/actions';
import { useEffect, useRef, useState } from 'react';
import DonateButton from './DonateButton';
import Link from 'next/link';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏
function SubmitButton() {
  // `pending` –±–æ–ª—å—à–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ –≤ `useFormState`, –∏—Å–ø–æ–ª—å–∑—É–µ–º `useFormStatus` –≤ –¥–æ—á–µ—Ä–Ω–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
  // –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è Next.js / React
  // –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ, –º—ã –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∂–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏.
  return (
    <button type="submit" className="flex-shrink-0 rounded-md bg-gray-800 px-4 py-2 text-sm font-semibold text-white transition-colors hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2">
      –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
    </button>
  );
}

export default function Footer({ subscriberCount }) {
  const { data: session } = useSession();
  const [isSubscribed, setIsSubscribed] = useState(false);
  const [checkingSubscription, setCheckingSubscription] = useState(true);
  const formRef = useRef(null);

  // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è useFormState
  const initialState = { message: null, status: null };
  const [state, formAction] = useFormState(subscribeToNewsletter, initialState);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –∑–∞–ª–æ–≥–∏–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  useEffect(() => {
    const checkSubscriptionStatus = async () => {
      if (session?.user?.id) {
        try {
          const response = await fetch('/api/subscription-status');
          if (response.ok) {
            const data = await response.json();
            setIsSubscribed(data.isSubscribed);
          }
        } catch (error) {
          console.error('Error checking subscription status:', error);
        }
      }
      setCheckingSubscription(false);
    };

    checkSubscriptionStatus();
  }, [session]);

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
  useEffect(() => {
    if (state.status === 'success') {
      formRef.current?.reset();
      setIsSubscribed(true); // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    }
  }, [state]);

  return (
    <footer className="border-t border-gray-200 bg-gray-50">
      <div className="container mx-auto px-4 py-10">
        <div className="flex flex-col md:flex-row md:items-start md:justify-center gap-10">
          <div className="flex-1 max-w-md mx-auto md:mx-0 flex flex-col gap-6">
            
            {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏ */}
            {checkingSubscription ? (
              <div className="animate-pulse">
                <div className="h-6 bg-gray-200 rounded mb-2"></div>
                <div className="h-4 bg-gray-200 rounded mb-4"></div>
                <div className="h-10 bg-gray-200 rounded"></div>
              </div>
            ) : isSubscribed ? (
              // –î–ª—è –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
              <div className="bg-green-50 border border-green-200 rounded-lg p-6">
                <div className="flex items-center gap-3 mb-3">
                  <span className="text-2xl">‚úÖ</span>
                  <h3 className="text-lg font-semibold text-green-800">–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É!</h3>
                </div>
                <p className="text-sm text-green-700 mb-4">
                  –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ—Å—Ç–∞–µ—Ç–µ—Å—å —Å –Ω–∞–º–∏. –ù–æ–≤—ã–µ –ø–∏—Å—å–º–∞ –ø—Ä–∏—Ö–æ–¥—è—Ç –ø—Ä—è–º–æ –Ω–∞ –≤–∞—à—É –ø–æ—á—Ç—É.
                </p>
                <div className="flex flex-col sm:flex-row gap-3">
                  <Link 
                    href="/letters"
                    className="inline-flex items-center justify-center gap-2 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors text-sm font-medium"
                  >
                    üìÆ –ß–∏—Ç–∞—Ç—å –∞—Ä—Ö–∏–≤ –ø–∏—Å–µ–º
                  </Link>
                  <Link 
                    href="/letters"
                    className="inline-flex items-center justify-center gap-2 px-4 py-2 border border-green-600 text-green-600 rounded-md hover:bg-green-50 transition-colors text-sm font-medium"
                  >
                    üé® –ó–∞–∫–∞–∑–∞—Ç—å –æ—Ç–∫—Ä—ã—Ç–∫—É
                  </Link>
                </div>
              </div>
            ) : session ? (
              // –î–ª—è –∑–∞–ª–æ–≥–∏–Ω–µ–Ω–Ω—ã—Ö, –Ω–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
              <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
                <div className="flex items-center gap-3 mb-3">
                  <span className="text-2xl">üíå</span>
                  <h3 className="text-lg font-semibold text-blue-800">–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É</h3>
                </div>
                <p className="text-sm text-blue-700 mb-4">
                  –ü–æ–ª—É—á–∞–π—Ç–µ –Ω–æ–≤—ã–µ —Å—Ç–∞—Ç—å–∏ –∏ –∏–Ω—Å–∞–π—Ç—ã –º–µ–¥–∏–∞—Ä—ã–Ω–∫–∞ –ø—Ä—è–º–æ –Ω–∞ –ø–æ—á—Ç—É. –¢–æ–ª—å–∫–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç, –±–µ–∑ —Å–ø–∞–º–∞.
                </p>
                <form ref={formRef} action={formAction} className="space-y-3">
                  <div className="flex items-start gap-2">
                    <input 
                      type="email" 
                      name="email"
                      defaultValue={session.user.email ?? ''}
                      readOnly
                      className="w-full rounded-md border-gray-300 px-4 py-2 text-sm shadow-sm bg-gray-100 text-gray-600 cursor-not-allowed"
                    />
                    <SubmitButton />
                  </div>
                  {state?.message && (
                    <p className={`text-sm ${state.status === 'error' ? 'text-red-600' : 'text-green-600'}`}>
                      {state.message}
                    </p>
                  )}
                </form>
              </div>
            ) : (
              // –î–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
              <div>
                <h3 className="text-lg font-semibold text-gray-900 mb-2">–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Ä–∞—Å—Å—ã–ª–∫–µ</h3>
                <p className="text-sm text-gray-500 mb-4">
                  –ü–æ–ª—É—á–∞–π—Ç–µ –Ω–æ–≤—ã–µ —Å—Ç–∞—Ç—å–∏ –∏ –∏–Ω—Å–∞–π—Ç—ã –º–µ–¥–∏–∞—Ä—ã–Ω–∫–∞ –ø—Ä—è–º–æ –Ω–∞ –ø–æ—á—Ç—É. –ë–µ–∑ —Å–ø–∞–º–∞.
                </p>
                <form ref={formRef} action={formAction} className="space-y-3">
                  <div className="flex items-start gap-2">
                    <input 
                      type="email" 
                      name="email"
                      placeholder="your.email@example.com" 
                      required 
                      className="w-full rounded-md border-gray-300 px-4 py-2 text-sm shadow-sm focus:border-blue-500 focus:ring-blue-500"
                    />
                    <SubmitButton />
                  </div>
                  {state?.message && (
                    <p className={`text-sm ${state.status === 'error' ? 'text-red-600' : 'text-green-600'}`}>
                      {state.message}
                    </p>
                  )}
                </form>
              </div>
            )}
            
            <DonateButton />
          </div>
        </div>
        <div className="mt-10 border-t border-gray-200 pt-6 text-center text-xs text-gray-400">
          <p>&copy; {new Date().getFullYear()} Anton Merkurov. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
          <p className="mt-2 text-xs text-gray-500">Subscribers: <span className="font-semibold">{subscriberCount}</span></p>
        </div>
      </div>
    </footer>
  );
}


