// app/api/generate-post/route.ts
import { createClient } from '@supabase/supabase-js';
import { NextResponse } from 'next/server';
import { GoogleGenerativeAI } from "@google/generative-ai";

// 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.SUPABASE_SERVICE_ROLE_KEY!
);

const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY!);
const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash-latest" });


// 2. –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
function getFormattedDate() {
    const today = new Date();
    const options: Intl.DateTimeFormatOptions = { day: '2-digit', month: 'long', year: 'numeric' };
    return new Intl.DateTimeFormat('ru-RU', options).format(today);
}

export async function POST(request: Request) {
  // 3. –ó–∞—â–∏—Ç–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
  const authHeader = request.headers.get('authorization');
  if (authHeader !== `Bearer ${process.env.CRON_SECRET}`) {
    return new Response('Unauthorized', { status: 401 });
  }

  const currentDate = getFormattedDate();
  const searchDate = new Date().toLocaleDateString('en-CA'); // –§–æ—Ä–º–∞—Ç YYYY-MM-DD –¥–ª—è –ø–æ–∏—Å–∫–∞

  // 4. –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –ü–†–û–ú–¢
  const prompt = `
# –ó–∞–¥–∞—á–∞
–°–æ–∑–¥–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç –∏–∑ 5 –≥–ª–∞–≤–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ –º–∏—Ä–∞ –∏—Å–∫—É—Å—Å—Ç–≤–∞ –∏ –∫—É–ª—å—Ç—É—Ä—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞.
–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω –≤ –≤–∏–¥–µ —á–∏—Å—Ç–æ–≥–æ Markdown, –±–µ–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –≤–≤–æ–¥–Ω—ã—Ö —Å–ª–æ–≤ –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.

# –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø–æ–∏—Å–∫—É
- **–ü–µ—Ä–∏–æ–¥:** –¢–æ–ª—å–∫–æ –Ω–æ–≤–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞ –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã ${searchDate}.
- **–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:** The Art Newspaper, ARTNews, Hyperallergic, Artsy, The Guardian (Culture), The New York Times (Arts).
- **–¢–µ–º—ã –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ:** –ö—Ä—É–ø–Ω—ã–µ –≤—ã—Å—Ç–∞–≤–∫–∏, –∞—Ä—Ç-—Ä—ã–Ω–æ–∫ (—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞—É–∫—Ü–∏–æ–Ω–æ–≤), –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –≤ –º—É–∑–µ—è—Ö, –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã, —Å–∫–∞–Ω–¥–∞–ª—ã –≤ –∞—Ä—Ç-–º–∏—Ä–µ, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤ –∏—Å–∫—É—Å—Å—Ç–≤–µ, –≤–∞–∂–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –≤ –∫–∏–Ω–æ –∏ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–µ.

# –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ —Ñ–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞ (–°–¢–†–û–ì–û –°–õ–ï–î–û–í–ê–¢–¨)
–ò—Å–ø–æ–ª—å–∑—É–π Markdown –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: \`##\` –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞, \`###\` –¥–ª—è –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –Ω–æ–≤–æ—Å—Ç–µ–π, \`**–∂–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç**\` –¥–ª—è –∞–∫—Ü–µ–Ω—Ç–æ–≤ –∏ \`[—Ç–µ–∫—Å—Ç](url)\` –¥–ª—è —Å—Å—ã–ª–æ–∫.

## –ù–æ–≤–æ—Å—Ç–∏ –æ—Ç ${currentDate}

---

### [–≠–º–æ–¥–∑–∏] [–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–æ–≤–æ—Å—Ç–∏]
–†–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –≤ 2-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö, —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–µ–µ —Å—É—Ç—å —Å–æ–±—ã—Ç–∏—è, –µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –∑–Ω–∞—á–µ–Ω–∏–µ. –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º –∏ –µ–º–∫–∏–º.
**–ò—Å—Ç–æ—á–Ω–∏–∫:** [–ù–∞–∑–≤–∞–Ω–∏–µ –∏–∑–¥–∞–Ω–∏—è](–ø—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—å—é)

(–ü–æ–≤—Ç–æ—Ä–∏ —ç—Ç–æ—Ç –±–ª–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–π –∏–∑ 5 –Ω–æ–≤–æ—Å—Ç–µ–π. –ú–µ–∂–¥—É –Ω–æ–≤–æ—Å—Ç—è–º–∏ –≤—Å—Ç–∞–≤–ª—è–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å \`---\`)

## –≠–º–æ–¥–∑–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π:
- üèõÔ∏è –ú—É–∑–µ–∏ –∏ –≥–∞–ª–µ—Ä–µ–∏
- üñºÔ∏è –í—ã—Å—Ç–∞–≤–∫–∏
- üí∞ –ê—Ä—Ç-—Ä—ã–Ω–æ–∫ –∏ –∞—É–∫—Ü–∏–æ–Ω—ã
- üé≠ –¢–µ–∞—Ç—Ä –∏ –∫–∏–Ω–æ
- üìö –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞
- üèóÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
- üíî –ù–µ–∫—Ä–æ–ª–æ–≥–∏
- üí° –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –ò–ò –≤ –∏—Å–∫—É—Å—Å—Ç–≤–µ
`;

  try {
    // 5. –ó–∞–ø—Ä–æ—Å –∫ Gemini API
    const result = await model.generateContent(prompt);
    const response = await result.response;
    const generatedContent = response.text();

    if (!generatedContent || generatedContent.length < 100) {
        throw new Error("AI response is empty or too short.");
    }

    // 6. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Supabase
    const dbTitle = `–ù–æ–≤–æ—Å—Ç–∏ –æ—Ç ${currentDate}`;
    const dbSlug = `digest-${new Date().toISOString().split('T')[0]}`;

    const { data, error } = await supabase
      .from('digests')
      .insert([
        { 
          title: dbTitle, 
          content: generatedContent,
          slug: dbSlug, 
          status: 'draft' 
        }
      ])
      .select();

    if (error) {
      if (error.code === '23505') { 
          console.warn(`Digest for ${dbSlug} already exists.`);
          return NextResponse.json({ success: false, message: 'Digest already exists' }, { status: 200 });
      }
      console.error('Supabase error:', error);
      return NextResponse.json({ error: error.message }, { status: 500 });
    }

    return NextResponse.json({ success: true, digest: data });

  } catch (e) {
    console.error('Full cycle error:', e);
    return NextResponse.json({ error: 'Failed to generate or save digest' }, { status: 500 });
  }
}
