// app/api/generate-post/route.ts
import { createClient } from '@supabase/supabase-js';
import { NextResponse } from 'next/server';
import { GoogleGenerativeAI } from "@google/generative-ai";

// 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.SUPABASE_SERVICE_ROLE_KEY!
);

const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY!);
// –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –º–æ–¥–µ–ª—å, —Å–ø–æ—Å–æ–±–Ω—É—é –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏, –≤–æ–∑–º–æ–∂–Ω–æ, –∏–º–µ—é—â—É—é –¥–æ—Å—Ç—É–ø –∫ —Å–≤–µ–∂–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash-latest" });


// 2. –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
function getFormattedDate() {
    const today = new Date();
    const day = String(today.getDate()).padStart(2, '0');
    const month = String(today.getMonth() + 1).padStart(2, '0');
    const year = today.getFullYear();
    return `${day}.${month}.${year}`;
}

export async function POST(request: Request) {
  // 3. –ó–∞—â–∏—Ç–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
  const authHeader = request.headers.get('authorization');
  if (authHeader !== `Bearer ${process.env.CRON_SECRET}`) {
    return new Response('Unauthorized', { status: 401 });
  }

  const currentDate = getFormattedDate();
  const currentMonth = new Date().toLocaleString('en-US', { month: 'long' });
  const currentYear = new Date().getFullYear();

  // 4. –í–∞—à –ø—Ä–æ–º—Ç, –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤ –∫–æ–¥
  // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –¥–∞—Ç—É
  const prompt = `
    # –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞
    –°–æ–∑–¥–∞–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç –≥–ª–∞–≤–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∏—Å–∫—É—Å—Å—Ç–≤–∞ –∏ –∫—É–ª—å—Ç—É—Ä—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Ç–µ–ª–µ–≥—Ä–∞–º-–ø–æ—Å—Ç–∞.

    # –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø–æ–∏—Å–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π

    ## –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏
    - –ò—â–∏ –Ω–æ–≤–æ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞.
    - –ò—Å–ø–æ–ª—å–∑—É–π —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –≤ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö: ${currentDate}.
    - –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ—Ç–¥–∞–≤–∞–π —Å–æ–±—ã—Ç–∏—è–º –¥–Ω—è –ø–æ–∏—Å–∫–∞.

    ## –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ):
    The Guardian (Culture), The New York Times (Arts), The Art Newspaper, ARTNews, Le Monde (Culture), Le Figaro (Culture), The Washington Post (Arts), Artsy, Hyperallergic.

    ## –ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    –ò—Å–ø–æ–ª—å–∑—É–π –∑–∞–ø—Ä–æ—Å—ã –≤—Ä–æ–¥–µ:
    - "${currentDate}" art culture news today
    - breaking art news today ${currentMonth} ${currentYear}
    - museum exhibition gallery news today
    - art auction culture events today ${currentDate}
    - artist death obituary today ${currentDate}

    # –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ç–±–æ—Ä–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
    –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ —Ç–µ–º—ã: –ú—É–∑–µ–π–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è, –ê—Ä—Ç-—Ä—ã–Ω–æ–∫, –°–º–µ—Ä—Ç–∏ –∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç–µ–π, –°–∫–∞–Ω–¥–∞–ª—ã –∏ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è, –ö—Ä—É–ø–Ω—ã–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è, –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞, –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞, –ö–∏–Ω–æ –∏ —Ç–µ–∞—Ç—Ä, –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤ –∏—Å–∫—É—Å—Å—Ç–≤–µ.
    –ö—Ä–∏—Ç–µ—Ä–∏–∏ –≤–∞–∂–Ω–æ—Å—Ç–∏: –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è –∑–Ω–∞—á–∏–º–æ—Å—Ç—å, —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö, —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∑–Ω–∞—á–∏–º–æ—Å—Ç—å, –∫—É–ª—å—Ç—É—Ä–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ, —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ–∑–æ–Ω–∞–Ω—Å.

    # –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ—Å—Ç–∞
    –í—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Å—Ç—Ä–æ–≥–æ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —ç—Ç–∏–º —Ñ–æ—Ä–º–∞—Ç–æ–º, –±–µ–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–æ –∏–ª–∏ –ø–æ—Å–ª–µ.

    üé® **–ò–°–ö–£–°–°–¢–í–û –ò –ö–£–õ–¨–¢–£–†–ê** | ${currentDate}
    üì∞ **–ì–õ–ê–í–ù–û–ï –ó–ê –î–ï–ù–¨:**

    [—ç–º–æ–¥–∑–∏] **[–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–æ–≤–æ—Å—Ç–∏]**
    [–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ 1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö —Å –∫–ª—é—á–µ–≤—ã–º–∏ –¥–µ—Ç–∞–ª—è–º–∏]
    üìç *[–ò—Å—Ç–æ—á–Ω–∏–∫]*

    (–ü–æ–≤—Ç–æ—Ä–∏ —ç—Ç–æ—Ç –±–ª–æ–∫ –¥–ª—è 5-7 –Ω–æ–≤–æ—Å—Ç–µ–π)

    ## –≠–º–æ–¥–∑–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π:
    - üèõÔ∏è –ú—É–∑–µ–∏ –∏ –≥–∞–ª–µ—Ä–µ–∏
    - üñºÔ∏è –í—ã—Å—Ç–∞–≤–∫–∏ –∏ —ç–∫—Å–ø–æ–∑–∏—Ü–∏–∏
    - üí∞ –ê—Ä—Ç-—Ä—ã–Ω–æ–∫ –∏ –∞—É–∫—Ü–∏–æ–Ω—ã
    - üé≠ –¢–µ–∞—Ç—Ä –∏ –ø–µ—Ä—Ñ–æ—Ä–º–∞–Ω—Å
    - üé¨ –ö–∏–Ω–æ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ —Ñ–∏–ª—å–º—ã
    - üìö –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞
    - üèóÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏ –¥–∏–∑–∞–π–Ω
    - üíî –ù–µ–∫—Ä–æ–ª–æ–≥–∏
    - ‚öñÔ∏è –ü—Ä–∞–≤–æ–≤—ã–µ —Å–ø–æ—Ä—ã
    - üí° –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤ –∏—Å–∫—É—Å—Å—Ç–≤–µ

    # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–æ—Å—Ç–∞
    ---
    üîó –ò—Å—Ç–æ—á–Ω–∏–∫–∏: [—Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤]
    üì≤ *–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –∫—É–ª—å—Ç—É—Ä–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π*

    # –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∫–∞—á–µ—Å—Ç–≤—É
    - –°—Ç–∏–ª—å: –ª–∞–∫–æ–Ω–∏—á–Ω—ã–π, –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π.
    - –§–∞–∫—Ç—ã: —Ü–∏—Ç–∏—Ä—É–π —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏.
    - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π: –æ—Ç 5 –¥–æ 7.
  `;

  try {
    // 5. –ó–∞–ø—Ä–æ—Å –∫ Gemini API
    const result = await model.generateContent(prompt);
    const response = await result.response;
    const generatedContent = response.text();

    if (!generatedContent || generatedContent.length < 100) {
        throw new Error("AI response is empty or too short.");
    }

    // 6. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Supabase
    const dbTitle = `–î–∞–π–¥–∂–µ—Å—Ç –Ω–æ–≤–æ—Å—Ç–µ–π: ${currentDate}`;
    const dbSlug = `digest-${new Date().toISOString().split('T')[0]}`; // slug –≤–∏–¥–∞ "digest-2025-09-25"

    const { data, error } = await supabase
      .from('digests') // <-- –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É 'digests'
      .insert([
        { 
          title: dbTitle, 
          content: generatedContent, // <-- –í–µ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç –∏–¥–µ—Ç —Å—é–¥–∞
          slug: dbSlug, 
          status: 'draft' 
        }
      ])
      .select();

    if (error) {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ–π –æ—à–∏–±–∫–∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è slug (–µ—Å–ª–∏ –∫—Ä–æ–Ω –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –¥–≤–∞–∂–¥—ã –≤ –¥–µ–Ω—å)
      if (error.code === '23505') { 
          console.warn(`Digest for ${dbSlug} already exists.`);
          return NextResponse.json({ success: false, message: 'Digest already exists' }, { status: 200 });
      }
      console.error('Supabase error:', error);
      return NextResponse.json({ error: error.message }, { status: 500 });
    }

    return NextResponse.json({ success: true, digest: data });

  } catch (e) {
    console.error('Full cycle error:', e);
    return NextResponse.json({ error: 'Failed to generate or save digest' }, { status: 500 });
  }
}
