// –í–†–ï–ú–ï–ù–ù–û: —Ç–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è Sentry
if (typeof window !== 'undefined') {
  // @ts-ignore
  myUndefinedFunction();
}
// app/admin/page.tsx


import Link from 'next/link';
import prisma from '@/lib/prisma';

export default async function AdminDashboard() {
  // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  const [userCount, articleCount, projectCount, letterCount, subscriberCount, messageCount] = await Promise.all([
    prisma.user.count(),
    prisma.article.count(),
    prisma.project.count(),
    prisma.letter.count(),
    prisma.subscriber.count(),
    prisma.message.count(),
  ]);

  const quickLinks = [
    { href: '/admin/users', label: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', icon: 'üë§' },
    { href: '/admin/products', label: '–¢–æ–≤–∞—Ä—ã', icon: 'üõçÔ∏è' },
    { href: '/admin/orders', label: '–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤', icon: 'üì¶' },
    { href: '/admin/subscribers', label: '–ü–æ–¥–ø–∏—Å—á–∏–∫–∏', icon: 'üì¨' },
    { href: '/admin/articles', label: '–°—Ç–∞—Ç—å–∏', icon: 'üìù' },
    { href: '/admin/projects', label: '–ü—Ä–æ–µ–∫—Ç—ã', icon: 'üìÅ' },
    { href: '/admin/letters', label: '–†–∞—Å—Å—ã–ª–∫–∏', icon: '‚úâÔ∏è' },
  ];

  return (
    <div>
      <h1 className="text-3xl font-bold text-gray-900">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h1>
      <p className="mt-2 text-gray-600">
        –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é —Å–ª–µ–≤–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∏–∂–µ.
      </p>
      <div className="mt-8 grid grid-cols-2 md:grid-cols-3 gap-6">
        <StatCard label="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏" value={userCount} icon="üë§" />
        <StatCard label="–°—Ç–∞—Ç—å–∏" value={articleCount} icon="üìù" />
        <StatCard label="–ü—Ä–æ–µ–∫—Ç—ã" value={projectCount} icon="üìÅ" />
        <StatCard label="–í—ã–ø—É—Å–∫–∏" value={letterCount} icon="‚úâÔ∏è" />
        <StatCard label="–ü–æ–¥–ø–∏—Å—á–∏–∫–∏" value={subscriberCount} icon="üì¨" />
        <StatCard label="–°–æ–æ–±—â–µ–Ω–∏—è" value={messageCount} icon="üí¨" />
      </div>
      <div className="mt-10">
        <h2 className="text-xl font-semibold mb-4">–ë—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏</h2>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
          {quickLinks.map(link => (
            <Link key={link.href} href={link.href} className="flex items-center gap-2 px-4 py-3 bg-white rounded-lg shadow hover:bg-blue-50 transition">
              <span className="text-2xl">{link.icon}</span>
              <span className="font-medium text-gray-800">{link.label}</span>
            </Link>
          ))}
        </div>
      </div>
    </div>
  );
}

function StatCard({ label, value, icon }: { label: string; value: number; icon: string }) {
  return (
    <div className="bg-white rounded-xl shadow p-6 flex flex-col items-center justify-center">
      <div className="text-3xl mb-2">{icon}</div>
      <div className="text-2xl font-bold text-gray-900">{value}</div>
      <div className="text-gray-500 mt-1 text-sm">{label}</div>
    </div>
  );
}
