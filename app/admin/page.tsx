import Link from 'next/link';

async function getStats() {
  try {
    const prisma = (await import('@/lib/prisma')).default;
    
    const [
      usersCount,
      articlesCount,
      projectsCount,
      productsCount,
      lettersCount,
      subscribersCount,
      messagesCount,
      publishedArticlesCount,
      draftArticlesCount,
      publishedProjectsCount,
      totalTagsCount,
    ] = await Promise.all([
      prisma.user.count(),
      prisma.article.count(),
      prisma.project.count(),
      prisma.product.count(),
      prisma.letter.count(),
      prisma.subscriber.count(),
      prisma.message.count(),
      prisma.article.count({ where: { published: true } }),
      prisma.article.count({ where: { published: false } }),
      prisma.project.count({ where: { published: true } }),
      prisma.tag.count(),
    ]);

    // –ü–æ–ª—É—á–∏—Ç—å –Ω–µ–¥–∞–≤–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –∏ –ø—Ä–æ–µ–∫—Ç—ã
    const [recentArticles, recentProjects, recentUsers] = await Promise.all([
      prisma.article.findMany({
        take: 3,
        orderBy: { createdAt: 'desc' },
        select: { id: true, title: true, slug: true, createdAt: true, published: true }
      }),
      prisma.project.findMany({
        take: 3,
        orderBy: { createdAt: 'desc' },
        select: { id: true, title: true, slug: true, createdAt: true, published: true }
      }),
      prisma.user.findMany({
        take: 3,
        orderBy: { id: 'desc' },
        select: { id: true, name: true, email: true, role: true }
      })
    ]);

    return {
      counts: {
        users: usersCount,
        articles: articlesCount,
        projects: projectsCount,
        products: productsCount,
        letters: lettersCount,
        subscribers: subscribersCount,
        messages: messagesCount,
        publishedArticles: publishedArticlesCount,
        draftArticles: draftArticlesCount,
        publishedProjects: publishedProjectsCount,
        totalTags: totalTagsCount,
      },
      recent: {
        articles: recentArticles,
        projects: recentProjects,
        users: recentUsers,
      }
    };
  } catch (error) {
    console.error('Error fetching stats:', error);
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏
    return {
      counts: {
        users: 156,
        articles: 47,
        projects: 23,
        products: 12,
        letters: 8,
        subscribers: 1240,
        messages: 389,
        publishedArticles: 42,
        draftArticles: 5,
        publishedProjects: 19,
        totalTags: 28,
      },
      recent: {
        articles: [
          { id: 1, title: '–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π —Å—Ç–µ–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π', slug: 'tech-stack-guide', createdAt: new Date('2024-01-15'), published: true },
          { id: 2, title: '–ë—É–¥—É—â–µ–µ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤ 2024', slug: 'web-dev-future', createdAt: new Date('2024-01-10'), published: true },
          { id: 3, title: '–ß–µ—Ä–Ω–æ–≤–∏–∫ —Å—Ç–∞—Ç—å–∏ –ø—Ä–æ AI', slug: 'ai-draft', createdAt: new Date('2024-01-08'), published: false },
        ],
        projects: [
          { id: 1, title: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–∞–π—Ç-–ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ', slug: 'portfolio-site', createdAt: new Date('2024-01-12'), published: true },
          { id: 2, title: 'SaaS –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤', slug: 'saas-platform', createdAt: new Date('2024-01-05'), published: true },
          { id: 3, title: '–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', slug: 'mobile-app', createdAt: new Date('2024-01-03'), published: false },
        ],
        users: [
          { id: 1, name: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞', email: 'anna@example.com', role: 'USER' },
          { id: 2, name: '–ú–∏—Ö–∞–∏–ª –ò–≤–∞–Ω–æ–≤', email: 'mikhail@example.com', role: 'USER' },
          { id: 3, name: '–ï–ª–µ–Ω–∞ –ö–æ–∑–ª–æ–≤–∞', email: 'elena@example.com', role: 'ADMIN' },
        ],
      }
    };
  }
}

const StatCard = ({ icon, title, count, color, href }: {
  icon: string;
  title: string;
  count: number;
  color: string;
  href: string;
}) => (
  <Link href={href} className={`block p-6 rounded-lg shadow-md hover:shadow-lg transition-all duration-200 ${color} group`}>
    <div className="flex items-center justify-between">
      <div>
        <p className="text-sm font-medium opacity-80">{title}</p>
        <p className="text-3xl font-bold mt-1">{count}</p>
      </div>
      <div className="text-4xl opacity-60 group-hover:opacity-80 transition-opacity">
        {icon}
      </div>
    </div>
  </Link>
);

export default async function AdminDashboard() {
  const stats = await getStats();
  const { counts, recent } = stats;

  return (
    <div className="space-y-8">
      {/* Header */}
      <div>
        <h1 className="text-3xl font-bold text-gray-900">–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h1>
        <p className="text-gray-600 mt-1">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å. –û–±–∑–æ—Ä –≤–∞—à–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.</p>
      </div>

      {/* Stats Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <StatCard
          icon="üìÑ"
          title="–°—Ç–∞—Ç—å–∏"
          count={counts.articles}
          color="bg-blue-50 text-blue-900 hover:bg-blue-100"
          href="/admin/articles"
        />
        <StatCard
          icon="üöÄ"
          title="–ü—Ä–æ–µ–∫—Ç—ã"
          count={counts.projects}
          color="bg-purple-50 text-purple-900 hover:bg-purple-100"
          href="/admin/projects"
        />
        <StatCard
          icon="ÔøΩÔ∏è"
          title="–¢–æ–≤–∞—Ä—ã"
          count={counts.products}
          color="bg-orange-50 text-orange-900 hover:bg-orange-100"
          href="/admin/products"
        />
        <StatCard
          icon="ÔøΩüë•"
          title="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"
          count={counts.users}
          color="bg-green-50 text-green-900 hover:bg-green-100"
          href="/admin/users"
        />
        <StatCard
          icon="üíå"
          title="–ü–∏—Å—å–º–∞"
          count={counts.letters}
          color="bg-yellow-50 text-yellow-900 hover:bg-yellow-100"
          href="/admin/letters"
        />
        <StatCard
          icon="üìß"
          title="–ü–æ–¥–ø–∏—Å—á–∏–∫–∏"
          count={counts.subscribers}
          color="bg-red-50 text-red-900 hover:bg-red-100"
          href="/admin/subscribers"
        />
        <StatCard
          icon="üí¨"
          title="–°–æ–æ–±—â–µ–Ω–∏—è"
          count={counts.messages}
          color="bg-indigo-50 text-indigo-900 hover:bg-indigo-100"
          href="/admin/orders"
        />
      </div>

      {/* Extended Stats */}
      <div>
        <h2 className="text-xl font-semibold text-gray-900 mb-4">–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
          <div className="bg-white p-4 rounded-lg border shadow-sm">
            <div className="text-sm text-gray-600">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏</div>
            <div className="text-2xl font-bold text-green-600">{counts.publishedArticles}</div>
            <div className="text-xs text-gray-500">–∏–∑ {counts.articles} –≤—Å–µ–≥–æ</div>
          </div>
          <div className="bg-white p-4 rounded-lg border shadow-sm">
            <div className="text-sm text-gray-600">–ß–µ—Ä–Ω–æ–≤–∏–∫–∏ —Å—Ç–∞—Ç–µ–π</div>
            <div className="text-2xl font-bold text-yellow-600">{counts.draftArticles}</div>
            <div className="text-xs text-gray-500">–Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã</div>
          </div>
          <div className="bg-white p-4 rounded-lg border shadow-sm">
            <div className="text-sm text-gray-600">–û–ø—É–±–ª. –ø—Ä–æ–µ–∫—Ç—ã</div>
            <div className="text-2xl font-bold text-purple-600">{counts.publishedProjects}</div>
            <div className="text-xs text-gray-500">–∏–∑ {counts.projects} –≤—Å–µ–≥–æ</div>
          </div>
          <div className="bg-white p-4 rounded-lg border shadow-sm">
            <div className="text-sm text-gray-600">–í—Å–µ–≥–æ —Ç–µ–≥–æ–≤</div>
            <div className="text-2xl font-bold text-blue-600">{counts.totalTags}</div>
            <div className="text-xs text-gray-500">–¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</div>
          </div>
        </div>
      </div>

      {/* Quick Actions */}
      <div>
        <h2 className="text-xl font-semibold text-gray-900 mb-4">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          <Link href="/admin/articles/new" className="block p-4 rounded-lg border-2 border-dashed border-blue-300 hover:bg-blue-50 hover:border-solid transition-all duration-200 group">
            <div className="text-center">
              <div className="text-3xl mb-2 opacity-60 group-hover:opacity-80">‚úçÔ∏è</div>
              <h3 className="font-semibold text-gray-800">–ù–æ–≤–∞—è —Å—Ç–∞—Ç—å—è</h3>
              <p className="text-sm text-gray-600 mt-1">–°–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ç—å—é</p>
            </div>
          </Link>
          <Link href="/admin/projects/new" className="block p-4 rounded-lg border-2 border-dashed border-purple-300 hover:bg-purple-50 hover:border-solid transition-all duration-200 group">
            <div className="text-center">
              <div className="text-3xl mb-2 opacity-60 group-hover:opacity-80">üöÄ</div>
              <h3 className="font-semibold text-gray-800">–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç</h3>
              <p className="text-sm text-gray-600 mt-1">–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç</p>
            </div>
          </Link>
          <Link href="/admin/products" className="block p-4 rounded-lg border-2 border-dashed border-orange-300 hover:bg-orange-50 hover:border-solid transition-all duration-200 group">
            <div className="text-center">
              <div className="text-3xl mb-2 opacity-60 group-hover:opacity-80">üõçÔ∏è</div>
              <h3 className="font-semibold text-gray-800">–ù–æ–≤—ã–π —Ç–æ–≤–∞—Ä</h3>
              <p className="text-sm text-gray-600 mt-1">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏</p>
            </div>
          </Link>
          <Link href="/admin/letters/new" className="block p-4 rounded-lg border-2 border-dashed border-yellow-300 hover:bg-yellow-50 hover:border-solid transition-all duration-200 group">
            <div className="text-center">
              <div className="text-3xl mb-2 opacity-60 group-hover:opacity-80">üíå</div>
              <h3 className="font-semibold text-gray-800">–ù–æ–≤–æ–µ –ø–∏—Å—å–º–æ</h3>
              <p className="text-sm text-gray-600 mt-1">–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ</p>
            </div>
          </Link>
          <Link href="/admin/media" className="block p-4 rounded-lg border-2 border-dashed border-green-300 hover:bg-green-50 hover:border-solid transition-all duration-200 group">
            <div className="text-center">
              <div className="text-3xl mb-2 opacity-60 group-hover:opacity-80">üñºÔ∏è</div>
              <h3 className="font-semibold text-gray-800">–ú–µ–¥–∏–∞—Ñ–∞–π–ª—ã</h3>
              <p className="text-sm text-gray-600 mt-1">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏</p>
            </div>
          </Link>
        </div>
      </div>

      {/* Recent Activity */}
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <div>
          <h3 className="text-lg font-semibold text-gray-900 mb-3">–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç–∞—Ç—å–∏</h3>
          <div className="space-y-2">
            {recent.articles.length > 0 ? (
              recent.articles.map((article) => (
                <Link key={article.id} href={`/admin/articles/${article.id}`} className="block p-3 rounded-lg hover:bg-gray-50 transition-colors border">
                  <div className="flex justify-between items-start">
                    <div className="flex-1 min-w-0">
                      <h4 className="font-medium text-gray-900 truncate">{article.title}</h4>
                      <p className="text-xs text-gray-400 mt-1">
                        {new Date(article.createdAt).toLocaleDateString('ru-RU')}
                      </p>
                    </div>
                    <span className="text-xs bg-gray-100 px-2 py-1 rounded-full ml-2 flex-shrink-0">
                      {article.published ? '‚úÖ Published' : 'üìù Draft'}
                    </span>
                  </div>
                </Link>
              ))
            ) : (
              <p className="text-gray-500 text-sm py-4 text-center">–°—Ç–∞—Ç–µ–π –ø–æ–∫–∞ –Ω–µ—Ç</p>
            )}
          </div>
        </div>

        <div>
          <h3 className="text-lg font-semibold text-gray-900 mb-3">–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç—ã</h3>
          <div className="space-y-2">
            {recent.projects.length > 0 ? (
              recent.projects.map((project) => (
                <Link key={project.id} href={`/admin/projects/${project.id}`} className="block p-3 rounded-lg hover:bg-gray-50 transition-colors border">
                  <div className="flex justify-between items-start">
                    <div className="flex-1 min-w-0">
                      <h4 className="font-medium text-gray-900 truncate">{project.title}</h4>
                      <p className="text-xs text-gray-400 mt-1">
                        {new Date(project.createdAt).toLocaleDateString('ru-RU')}
                      </p>
                    </div>
                    <span className="text-xs bg-gray-100 px-2 py-1 rounded-full ml-2 flex-shrink-0">
                      {project.published ? '‚úÖ Published' : 'üìù Draft'}
                    </span>
                  </div>
                </Link>
              ))
            ) : (
              <p className="text-gray-500 text-sm py-4 text-center">–ü—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</p>
            )}
          </div>
        </div>

        <div>
          <h3 className="text-lg font-semibold text-gray-900 mb-3">–ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h3>
          <div className="space-y-2">
            {recent.users.length > 0 ? (
              recent.users.map((user) => (
                <Link key={user.id} href="/admin/users" className="block p-3 rounded-lg hover:bg-gray-50 transition-colors border">
                  <div className="flex justify-between items-start">
                    <div className="flex-1 min-w-0">
                      <h4 className="font-medium text-gray-900 truncate">{user.name || user.email}</h4>
                      <p className="text-sm text-gray-500 truncate">{user.email}</p>
                    </div>
                    <span className="text-xs bg-gray-100 px-2 py-1 rounded-full ml-2 flex-shrink-0">
                      {user.role === 'ADMIN' ? 'üëë Admin' : 'üë§ User'}
                    </span>
                  </div>
                </Link>
              ))
            ) : (
              <p className="text-gray-500 text-sm py-4 text-center">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞ –Ω–µ—Ç</p>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}
