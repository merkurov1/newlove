// This block specifies the database connection.
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// This block tells Prisma to generate the Prisma Client.
generator client {
  provider = "prisma-client-js"
}

// --- ENUMS ---
enum Role {
  USER
  ADMIN
}

// --- DATA MODELS ---

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)

  // Связи с другими моделями
  accounts      Account[]
  sessions      Session[]
  messages      Message[]
  articles      Article[]
  projects      Project[]

  // <<< ДОБАВЛЕНО: Обратная связь с моделью Subscriber
  subscription  Subscriber?
}

// ... модели Account, Session, VerificationToken, Message, NewsArticle, Article, Project остаются без изменений ...

model Project {
  id        String   @id @default(cuid())
  title     String
  slug      String   @unique
  content   String   @db.Text
  published   Boolean  @default(false)
  publishedAt DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])

  @@map("projects")
}


// <<< ДОБАВЛЕНА НОВАЯ МОДЕЛЬ ДЛЯ ПОДПИСЧИКОВ >>>
model Subscriber {
  id        String   @id @default(cuid())
  email     String   @unique // Уникальный email, чтобы не было дубликатов
  createdAt DateTime @default(now())

  // Необязательная, но уникальная связь с моделью User.
  // Будет заполнена, если подписывается залогиненный пользователь.
  userId    String?  @unique
  user      User?    @relation(fields: [userId], references: [id])

  @@map("subscribers")
}


