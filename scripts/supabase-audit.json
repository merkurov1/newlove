{
  "generatedAt": "2025-10-13T00:00:00Z",
  "summary": {
    "totalMatches": 200,
    "notes": "List includes dynamic imports of getUserAndSupabaseFromRequest, direct supabase.from(...) calls, and references to SUPABASE_SERVICE_ROLE_KEY in scripts/docs. Review admin/action files for server-key usage."
  },
  "files": [
    {
      "path": "app/admin/actions.js",
      "matches": [
        "many supabase.from(...) calls for article/project/letter/subscribers/letters and mutations",
        "dynamic import of getUserAndSupabaseFromRequest used in file"
      ],
      "recommendation": "Use server service-role client (getServerSupabaseClient) for admin mutations; keep request-bound client for user-specific reads. Add explicit requireAdminFromRequest checks and dry-run safeguards where scripts perform destructive actions."
    },
    {
      "path": "app/api/newsletter-unsubscribe/route.ts",
      "matches": ["subscriber_tokens and subscribers table read/delete"],
      "recommendation": "Deleting subscribers should require server client or admin check. For public unsubscribe links, keep token validation but use server client for destructive delete/update operations."
    },
    {
      "path": "lib/serverAuth.ts",
      "matches": ["getServerSupabaseClient(), requireAdminFromRequest()"],
      "recommendation": "Keeps server client helpers. Ensure it throws clearly when SUPABASE_SERVICE_ROLE_KEY is missing."
    },
    {
      "path": "lib/supabase-server.ts",
      "matches": ["getUserAndSupabaseFromRequest exported default and named"],
      "recommendation": "Keep as request helper; import dynamically in server components to avoid circular imports."
    }
  ]
}
